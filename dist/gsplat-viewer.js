function R8(n, e) {
  for (var t = 0; t < e.length; t++) {
    const r = e[t];
    if (typeof r != "string" && !Array.isArray(r)) {
      for (const i in r)
        if (i !== "default" && !(i in n)) {
          const o = Object.getOwnPropertyDescriptor(r, i);
          o && Object.defineProperty(n, i, o.get ? o : {
            enumerable: !0,
            get: () => r[i]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: "Module" }));
}
function j1(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
var LL = { exports: {} }, $b = {}, OL = { exports: {} }, Gi = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var fN;
function A8() {
  if (fN)
    return Gi;
  fN = 1;
  var n = Symbol.for("react.element"), e = Symbol.for("react.portal"), t = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), o = Symbol.for("react.provider"), l = Symbol.for("react.context"), u = Symbol.for("react.forward_ref"), h = Symbol.for("react.suspense"), p = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), _ = Symbol.iterator;
  function E(X) {
    return X === null || typeof X != "object" ? null : (X = _ && X[_] || X["@@iterator"], typeof X == "function" ? X : null);
  }
  var w = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, R = Object.assign, U = {};
  function L(X, q, ue) {
    this.props = X, this.context = q, this.refs = U, this.updater = ue || w;
  }
  L.prototype.isReactComponent = {}, L.prototype.setState = function(X, q) {
    if (typeof X != "object" && typeof X != "function" && X != null)
      throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, X, q, "setState");
  }, L.prototype.forceUpdate = function(X) {
    this.updater.enqueueForceUpdate(this, X, "forceUpdate");
  };
  function A() {
  }
  A.prototype = L.prototype;
  function k(X, q, ue) {
    this.props = X, this.context = q, this.refs = U, this.updater = ue || w;
  }
  var F = k.prototype = new A();
  F.constructor = k, R(F, L.prototype), F.isPureReactComponent = !0;
  var H = Array.isArray, B = Object.prototype.hasOwnProperty, j = { current: null }, Y = { key: !0, ref: !0, __self: !0, __source: !0 };
  function ee(X, q, ue) {
    var Ce, Ae = {}, De = null, Ne = null;
    if (q != null)
      for (Ce in q.ref !== void 0 && (Ne = q.ref), q.key !== void 0 && (De = "" + q.key), q)
        B.call(q, Ce) && !Y.hasOwnProperty(Ce) && (Ae[Ce] = q[Ce]);
    var Pe = arguments.length - 2;
    if (Pe === 1)
      Ae.children = ue;
    else if (1 < Pe) {
      for (var Fe = Array(Pe), it = 0; it < Pe; it++)
        Fe[it] = arguments[it + 2];
      Ae.children = Fe;
    }
    if (X && X.defaultProps)
      for (Ce in Pe = X.defaultProps, Pe)
        Ae[Ce] === void 0 && (Ae[Ce] = Pe[Ce]);
    return { $$typeof: n, type: X, key: De, ref: Ne, props: Ae, _owner: j.current };
  }
  function Z(X, q) {
    return { $$typeof: n, type: X.type, key: q, ref: X.ref, props: X.props, _owner: X._owner };
  }
  function K(X) {
    return typeof X == "object" && X !== null && X.$$typeof === n;
  }
  function fe(X) {
    var q = { "=": "=0", ":": "=2" };
    return "$" + X.replace(/[=:]/g, function(ue) {
      return q[ue];
    });
  }
  var se = /\/+/g;
  function he(X, q) {
    return typeof X == "object" && X !== null && X.key != null ? fe("" + X.key) : q.toString(36);
  }
  function me(X, q, ue, Ce, Ae) {
    var De = typeof X;
    (De === "undefined" || De === "boolean") && (X = null);
    var Ne = !1;
    if (X === null)
      Ne = !0;
    else
      switch (De) {
        case "string":
        case "number":
          Ne = !0;
          break;
        case "object":
          switch (X.$$typeof) {
            case n:
            case e:
              Ne = !0;
          }
      }
    if (Ne)
      return Ne = X, Ae = Ae(Ne), X = Ce === "" ? "." + he(Ne, 0) : Ce, H(Ae) ? (ue = "", X != null && (ue = X.replace(se, "$&/") + "/"), me(Ae, q, ue, "", function(it) {
        return it;
      })) : Ae != null && (K(Ae) && (Ae = Z(Ae, ue + (!Ae.key || Ne && Ne.key === Ae.key ? "" : ("" + Ae.key).replace(se, "$&/") + "/") + X)), q.push(Ae)), 1;
    if (Ne = 0, Ce = Ce === "" ? "." : Ce + ":", H(X))
      for (var Pe = 0; Pe < X.length; Pe++) {
        De = X[Pe];
        var Fe = Ce + he(De, Pe);
        Ne += me(De, q, ue, Fe, Ae);
      }
    else if (Fe = E(X), typeof Fe == "function")
      for (X = Fe.call(X), Pe = 0; !(De = X.next()).done; )
        De = De.value, Fe = Ce + he(De, Pe++), Ne += me(De, q, ue, Fe, Ae);
    else if (De === "object")
      throw q = String(X), Error("Objects are not valid as a React child (found: " + (q === "[object Object]" ? "object with keys {" + Object.keys(X).join(", ") + "}" : q) + "). If you meant to render a collection of children, use an array instead.");
    return Ne;
  }
  function Ee(X, q, ue) {
    if (X == null)
      return X;
    var Ce = [], Ae = 0;
    return me(X, Ce, "", "", function(De) {
      return q.call(ue, De, Ae++);
    }), Ce;
  }
  function be(X) {
    if (X._status === -1) {
      var q = X._result;
      q = q(), q.then(function(ue) {
        (X._status === 0 || X._status === -1) && (X._status = 1, X._result = ue);
      }, function(ue) {
        (X._status === 0 || X._status === -1) && (X._status = 2, X._result = ue);
      }), X._status === -1 && (X._status = 0, X._result = q);
    }
    if (X._status === 1)
      return X._result.default;
    throw X._result;
  }
  var we = { current: null }, de = { transition: null }, ye = { ReactCurrentDispatcher: we, ReactCurrentBatchConfig: de, ReactCurrentOwner: j };
  return Gi.Children = { map: Ee, forEach: function(X, q, ue) {
    Ee(X, function() {
      q.apply(this, arguments);
    }, ue);
  }, count: function(X) {
    var q = 0;
    return Ee(X, function() {
      q++;
    }), q;
  }, toArray: function(X) {
    return Ee(X, function(q) {
      return q;
    }) || [];
  }, only: function(X) {
    if (!K(X))
      throw Error("React.Children.only expected to receive a single React element child.");
    return X;
  } }, Gi.Component = L, Gi.Fragment = t, Gi.Profiler = i, Gi.PureComponent = k, Gi.StrictMode = r, Gi.Suspense = h, Gi.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ye, Gi.cloneElement = function(X, q, ue) {
    if (X == null)
      throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + X + ".");
    var Ce = R({}, X.props), Ae = X.key, De = X.ref, Ne = X._owner;
    if (q != null) {
      if (q.ref !== void 0 && (De = q.ref, Ne = j.current), q.key !== void 0 && (Ae = "" + q.key), X.type && X.type.defaultProps)
        var Pe = X.type.defaultProps;
      for (Fe in q)
        B.call(q, Fe) && !Y.hasOwnProperty(Fe) && (Ce[Fe] = q[Fe] === void 0 && Pe !== void 0 ? Pe[Fe] : q[Fe]);
    }
    var Fe = arguments.length - 2;
    if (Fe === 1)
      Ce.children = ue;
    else if (1 < Fe) {
      Pe = Array(Fe);
      for (var it = 0; it < Fe; it++)
        Pe[it] = arguments[it + 2];
      Ce.children = Pe;
    }
    return { $$typeof: n, type: X.type, key: Ae, ref: De, props: Ce, _owner: Ne };
  }, Gi.createContext = function(X) {
    return X = { $$typeof: l, _currentValue: X, _currentValue2: X, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, X.Provider = { $$typeof: o, _context: X }, X.Consumer = X;
  }, Gi.createElement = ee, Gi.createFactory = function(X) {
    var q = ee.bind(null, X);
    return q.type = X, q;
  }, Gi.createRef = function() {
    return { current: null };
  }, Gi.forwardRef = function(X) {
    return { $$typeof: u, render: X };
  }, Gi.isValidElement = K, Gi.lazy = function(X) {
    return { $$typeof: y, _payload: { _status: -1, _result: X }, _init: be };
  }, Gi.memo = function(X, q) {
    return { $$typeof: p, type: X, compare: q === void 0 ? null : q };
  }, Gi.startTransition = function(X) {
    var q = de.transition;
    de.transition = {};
    try {
      X();
    } finally {
      de.transition = q;
    }
  }, Gi.unstable_act = function() {
    throw Error("act(...) is not supported in production builds of React.");
  }, Gi.useCallback = function(X, q) {
    return we.current.useCallback(X, q);
  }, Gi.useContext = function(X) {
    return we.current.useContext(X);
  }, Gi.useDebugValue = function() {
  }, Gi.useDeferredValue = function(X) {
    return we.current.useDeferredValue(X);
  }, Gi.useEffect = function(X, q) {
    return we.current.useEffect(X, q);
  }, Gi.useId = function() {
    return we.current.useId();
  }, Gi.useImperativeHandle = function(X, q, ue) {
    return we.current.useImperativeHandle(X, q, ue);
  }, Gi.useInsertionEffect = function(X, q) {
    return we.current.useInsertionEffect(X, q);
  }, Gi.useLayoutEffect = function(X, q) {
    return we.current.useLayoutEffect(X, q);
  }, Gi.useMemo = function(X, q) {
    return we.current.useMemo(X, q);
  }, Gi.useReducer = function(X, q, ue) {
    return we.current.useReducer(X, q, ue);
  }, Gi.useRef = function(X) {
    return we.current.useRef(X);
  }, Gi.useState = function(X) {
    return we.current.useState(X);
  }, Gi.useSyncExternalStore = function(X, q, ue) {
    return we.current.useSyncExternalStore(X, q, ue);
  }, Gi.useTransition = function() {
    return we.current.useTransition();
  }, Gi.version = "18.2.0", Gi;
}
var cT = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
cT.exports;
var dN;
function D8() {
  return dN || (dN = 1, function(n, e) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var t = "18.2.0", r = Symbol.for("react.element"), i = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), l = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), h = Symbol.for("react.provider"), p = Symbol.for("react.context"), y = Symbol.for("react.forward_ref"), _ = Symbol.for("react.suspense"), E = Symbol.for("react.suspense_list"), w = Symbol.for("react.memo"), R = Symbol.for("react.lazy"), U = Symbol.for("react.offscreen"), L = Symbol.iterator, A = "@@iterator";
      function k(ie) {
        if (ie === null || typeof ie != "object")
          return null;
        var Ie = L && ie[L] || ie[A];
        return typeof Ie == "function" ? Ie : null;
      }
      var F = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, H = {
        transition: null
      }, B = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, j = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, Y = {}, ee = null;
      function Z(ie) {
        ee = ie;
      }
      Y.setExtraStackFrame = function(ie) {
        ee = ie;
      }, Y.getCurrentStack = null, Y.getStackAddendum = function() {
        var ie = "";
        ee && (ie += ee);
        var Ie = Y.getCurrentStack;
        return Ie && (ie += Ie() || ""), ie;
      };
      var K = !1, fe = !1, se = !1, he = !1, me = !1, Ee = {
        ReactCurrentDispatcher: F,
        ReactCurrentBatchConfig: H,
        ReactCurrentOwner: j
      };
      Ee.ReactDebugCurrentFrame = Y, Ee.ReactCurrentActQueue = B;
      function be(ie) {
        {
          for (var Ie = arguments.length, ct = new Array(Ie > 1 ? Ie - 1 : 0), Ut = 1; Ut < Ie; Ut++)
            ct[Ut - 1] = arguments[Ut];
          de("warn", ie, ct);
        }
      }
      function we(ie) {
        {
          for (var Ie = arguments.length, ct = new Array(Ie > 1 ? Ie - 1 : 0), Ut = 1; Ut < Ie; Ut++)
            ct[Ut - 1] = arguments[Ut];
          de("error", ie, ct);
        }
      }
      function de(ie, Ie, ct) {
        {
          var Ut = Ee.ReactDebugCurrentFrame, tn = Ut.getStackAddendum();
          tn !== "" && (Ie += "%s", ct = ct.concat([tn]));
          var $n = ct.map(function(yn) {
            return String(yn);
          });
          $n.unshift("Warning: " + Ie), Function.prototype.apply.call(console[ie], console, $n);
        }
      }
      var ye = {};
      function X(ie, Ie) {
        {
          var ct = ie.constructor, Ut = ct && (ct.displayName || ct.name) || "ReactClass", tn = Ut + "." + Ie;
          if (ye[tn])
            return;
          we("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", Ie, Ut), ye[tn] = !0;
        }
      }
      var q = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(ie) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(ie, Ie, ct) {
          X(ie, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(ie, Ie, ct, Ut) {
          X(ie, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(ie, Ie, ct, Ut) {
          X(ie, "setState");
        }
      }, ue = Object.assign, Ce = {};
      Object.freeze(Ce);
      function Ae(ie, Ie, ct) {
        this.props = ie, this.context = Ie, this.refs = Ce, this.updater = ct || q;
      }
      Ae.prototype.isReactComponent = {}, Ae.prototype.setState = function(ie, Ie) {
        if (typeof ie != "object" && typeof ie != "function" && ie != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, ie, Ie, "setState");
      }, Ae.prototype.forceUpdate = function(ie) {
        this.updater.enqueueForceUpdate(this, ie, "forceUpdate");
      };
      {
        var De = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, Ne = function(ie, Ie) {
          Object.defineProperty(Ae.prototype, ie, {
            get: function() {
              be("%s(...) is deprecated in plain JavaScript React classes. %s", Ie[0], Ie[1]);
            }
          });
        };
        for (var Pe in De)
          De.hasOwnProperty(Pe) && Ne(Pe, De[Pe]);
      }
      function Fe() {
      }
      Fe.prototype = Ae.prototype;
      function it(ie, Ie, ct) {
        this.props = ie, this.context = Ie, this.refs = Ce, this.updater = ct || q;
      }
      var Ot = it.prototype = new Fe();
      Ot.constructor = it, ue(Ot, Ae.prototype), Ot.isPureReactComponent = !0;
      function st() {
        var ie = {
          current: null
        };
        return Object.seal(ie), ie;
      }
      var oe = Array.isArray;
      function rt(ie) {
        return oe(ie);
      }
      function qe(ie) {
        {
          var Ie = typeof Symbol == "function" && Symbol.toStringTag, ct = Ie && ie[Symbol.toStringTag] || ie.constructor.name || "Object";
          return ct;
        }
      }
      function $e(ie) {
        try {
          return Ye(ie), !1;
        } catch {
          return !0;
        }
      }
      function Ye(ie) {
        return "" + ie;
      }
      function zt(ie) {
        if ($e(ie))
          return we("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", qe(ie)), Ye(ie);
      }
      function ot(ie, Ie, ct) {
        var Ut = ie.displayName;
        if (Ut)
          return Ut;
        var tn = Ie.displayName || Ie.name || "";
        return tn !== "" ? ct + "(" + tn + ")" : ct;
      }
      function Dt(ie) {
        return ie.displayName || "Context";
      }
      function kt(ie) {
        if (ie == null)
          return null;
        if (typeof ie.tag == "number" && we("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ie == "function")
          return ie.displayName || ie.name || null;
        if (typeof ie == "string")
          return ie;
        switch (ie) {
          case o:
            return "Fragment";
          case i:
            return "Portal";
          case u:
            return "Profiler";
          case l:
            return "StrictMode";
          case _:
            return "Suspense";
          case E:
            return "SuspenseList";
        }
        if (typeof ie == "object")
          switch (ie.$$typeof) {
            case p:
              var Ie = ie;
              return Dt(Ie) + ".Consumer";
            case h:
              var ct = ie;
              return Dt(ct._context) + ".Provider";
            case y:
              return ot(ie, ie.render, "ForwardRef");
            case w:
              var Ut = ie.displayName || null;
              return Ut !== null ? Ut : kt(ie.type) || "Memo";
            case R: {
              var tn = ie, $n = tn._payload, yn = tn._init;
              try {
                return kt(yn($n));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var mt = Object.prototype.hasOwnProperty, rn = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, ae, re, ze;
      ze = {};
      function xt(ie) {
        if (mt.call(ie, "ref")) {
          var Ie = Object.getOwnPropertyDescriptor(ie, "ref").get;
          if (Ie && Ie.isReactWarning)
            return !1;
        }
        return ie.ref !== void 0;
      }
      function ut(ie) {
        if (mt.call(ie, "key")) {
          var Ie = Object.getOwnPropertyDescriptor(ie, "key").get;
          if (Ie && Ie.isReactWarning)
            return !1;
        }
        return ie.key !== void 0;
      }
      function lt(ie, Ie) {
        var ct = function() {
          ae || (ae = !0, we("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ie));
        };
        ct.isReactWarning = !0, Object.defineProperty(ie, "key", {
          get: ct,
          configurable: !0
        });
      }
      function Yt(ie, Ie) {
        var ct = function() {
          re || (re = !0, we("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ie));
        };
        ct.isReactWarning = !0, Object.defineProperty(ie, "ref", {
          get: ct,
          configurable: !0
        });
      }
      function Nt(ie) {
        if (typeof ie.ref == "string" && j.current && ie.__self && j.current.stateNode !== ie.__self) {
          var Ie = kt(j.current.type);
          ze[Ie] || (we('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', Ie, ie.ref), ze[Ie] = !0);
        }
      }
      var xe = function(ie, Ie, ct, Ut, tn, $n, yn) {
        var Zn = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: r,
          // Built-in properties that belong on the element
          type: ie,
          key: Ie,
          ref: ct,
          props: yn,
          // Record the component responsible for creating this element.
          _owner: $n
        };
        return Zn._store = {}, Object.defineProperty(Zn._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(Zn, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: Ut
        }), Object.defineProperty(Zn, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: tn
        }), Object.freeze && (Object.freeze(Zn.props), Object.freeze(Zn)), Zn;
      };
      function We(ie, Ie, ct) {
        var Ut, tn = {}, $n = null, yn = null, Zn = null, Jn = null;
        if (Ie != null) {
          xt(Ie) && (yn = Ie.ref, Nt(Ie)), ut(Ie) && (zt(Ie.key), $n = "" + Ie.key), Zn = Ie.__self === void 0 ? null : Ie.__self, Jn = Ie.__source === void 0 ? null : Ie.__source;
          for (Ut in Ie)
            mt.call(Ie, Ut) && !rn.hasOwnProperty(Ut) && (tn[Ut] = Ie[Ut]);
        }
        var Tr = arguments.length - 2;
        if (Tr === 1)
          tn.children = ct;
        else if (Tr > 1) {
          for (var Mr = Array(Tr), _r = 0; _r < Tr; _r++)
            Mr[_r] = arguments[_r + 2];
          Object.freeze && Object.freeze(Mr), tn.children = Mr;
        }
        if (ie && ie.defaultProps) {
          var Zr = ie.defaultProps;
          for (Ut in Zr)
            tn[Ut] === void 0 && (tn[Ut] = Zr[Ut]);
        }
        if ($n || yn) {
          var vi = typeof ie == "function" ? ie.displayName || ie.name || "Unknown" : ie;
          $n && lt(tn, vi), yn && Yt(tn, vi);
        }
        return xe(ie, $n, yn, Zn, Jn, j.current, tn);
      }
      function ft(ie, Ie) {
        var ct = xe(ie.type, Ie, ie.ref, ie._self, ie._source, ie._owner, ie.props);
        return ct;
      }
      function Et(ie, Ie, ct) {
        if (ie == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + ie + ".");
        var Ut, tn = ue({}, ie.props), $n = ie.key, yn = ie.ref, Zn = ie._self, Jn = ie._source, Tr = ie._owner;
        if (Ie != null) {
          xt(Ie) && (yn = Ie.ref, Tr = j.current), ut(Ie) && (zt(Ie.key), $n = "" + Ie.key);
          var Mr;
          ie.type && ie.type.defaultProps && (Mr = ie.type.defaultProps);
          for (Ut in Ie)
            mt.call(Ie, Ut) && !rn.hasOwnProperty(Ut) && (Ie[Ut] === void 0 && Mr !== void 0 ? tn[Ut] = Mr[Ut] : tn[Ut] = Ie[Ut]);
        }
        var _r = arguments.length - 2;
        if (_r === 1)
          tn.children = ct;
        else if (_r > 1) {
          for (var Zr = Array(_r), vi = 0; vi < _r; vi++)
            Zr[vi] = arguments[vi + 2];
          tn.children = Zr;
        }
        return xe(ie.type, $n, yn, Zn, Jn, Tr, tn);
      }
      function Ze(ie) {
        return typeof ie == "object" && ie !== null && ie.$$typeof === r;
      }
      var Te = ".", tt = ":";
      function pt(ie) {
        var Ie = /[=:]/g, ct = {
          "=": "=0",
          ":": "=2"
        }, Ut = ie.replace(Ie, function(tn) {
          return ct[tn];
        });
        return "$" + Ut;
      }
      var ve = !1, Pt = /\/+/g;
      function He(ie) {
        return ie.replace(Pt, "$&/");
      }
      function dt(ie, Ie) {
        return typeof ie == "object" && ie !== null && ie.key != null ? (zt(ie.key), pt("" + ie.key)) : Ie.toString(36);
      }
      function ln(ie, Ie, ct, Ut, tn) {
        var $n = typeof ie;
        ($n === "undefined" || $n === "boolean") && (ie = null);
        var yn = !1;
        if (ie === null)
          yn = !0;
        else
          switch ($n) {
            case "string":
            case "number":
              yn = !0;
              break;
            case "object":
              switch (ie.$$typeof) {
                case r:
                case i:
                  yn = !0;
              }
          }
        if (yn) {
          var Zn = ie, Jn = tn(Zn), Tr = Ut === "" ? Te + dt(Zn, 0) : Ut;
          if (rt(Jn)) {
            var Mr = "";
            Tr != null && (Mr = He(Tr) + "/"), ln(Jn, Ie, Mr, "", function(vm) {
              return vm;
            });
          } else
            Jn != null && (Ze(Jn) && (Jn.key && (!Zn || Zn.key !== Jn.key) && zt(Jn.key), Jn = ft(
              Jn,
              // Keep both the (mapped) and old keys if they differ, just as
              // traverseAllChildren used to do for objects as children
              ct + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
              (Jn.key && (!Zn || Zn.key !== Jn.key) ? (
                // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                // eslint-disable-next-line react-internal/safe-string-coercion
                He("" + Jn.key) + "/"
              ) : "") + Tr
            )), Ie.push(Jn));
          return 1;
        }
        var _r, Zr, vi = 0, ii = Ut === "" ? Te : Ut + tt;
        if (rt(ie))
          for (var Hl = 0; Hl < ie.length; Hl++)
            _r = ie[Hl], Zr = ii + dt(_r, Hl), vi += ln(_r, Ie, ct, Zr, tn);
        else {
          var gl = k(ie);
          if (typeof gl == "function") {
            var pu = ie;
            gl === pu.entries && (ve || be("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), ve = !0);
            for (var gh = gl.call(pu), mu, Nf = 0; !(mu = gh.next()).done; )
              _r = mu.value, Zr = ii + dt(_r, Nf++), vi += ln(_r, Ie, ct, Zr, tn);
          } else if ($n === "object") {
            var yh = String(ie);
            throw new Error("Objects are not valid as a React child (found: " + (yh === "[object Object]" ? "object with keys {" + Object.keys(ie).join(", ") + "}" : yh) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return vi;
      }
      function Un(ie, Ie, ct) {
        if (ie == null)
          return ie;
        var Ut = [], tn = 0;
        return ln(ie, Ut, "", "", function($n) {
          return Ie.call(ct, $n, tn++);
        }), Ut;
      }
      function jn(ie) {
        var Ie = 0;
        return Un(ie, function() {
          Ie++;
        }), Ie;
      }
      function cr(ie, Ie, ct) {
        Un(ie, function() {
          Ie.apply(this, arguments);
        }, ct);
      }
      function En(ie) {
        return Un(ie, function(Ie) {
          return Ie;
        }) || [];
      }
      function tr(ie) {
        if (!Ze(ie))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return ie;
      }
      function fr(ie) {
        var Ie = {
          $$typeof: p,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: ie,
          _currentValue2: ie,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        Ie.Provider = {
          $$typeof: h,
          _context: Ie
        };
        var ct = !1, Ut = !1, tn = !1;
        {
          var $n = {
            $$typeof: p,
            _context: Ie
          };
          Object.defineProperties($n, {
            Provider: {
              get: function() {
                return Ut || (Ut = !0, we("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), Ie.Provider;
              },
              set: function(yn) {
                Ie.Provider = yn;
              }
            },
            _currentValue: {
              get: function() {
                return Ie._currentValue;
              },
              set: function(yn) {
                Ie._currentValue = yn;
              }
            },
            _currentValue2: {
              get: function() {
                return Ie._currentValue2;
              },
              set: function(yn) {
                Ie._currentValue2 = yn;
              }
            },
            _threadCount: {
              get: function() {
                return Ie._threadCount;
              },
              set: function(yn) {
                Ie._threadCount = yn;
              }
            },
            Consumer: {
              get: function() {
                return ct || (ct = !0, we("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), Ie.Consumer;
              }
            },
            displayName: {
              get: function() {
                return Ie.displayName;
              },
              set: function(yn) {
                tn || (be("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", yn), tn = !0);
              }
            }
          }), Ie.Consumer = $n;
        }
        return Ie._currentRenderer = null, Ie._currentRenderer2 = null, Ie;
      }
      var Hn = -1, mi = 0, Vr = 1, Gr = 2;
      function Or(ie) {
        if (ie._status === Hn) {
          var Ie = ie._result, ct = Ie();
          if (ct.then(function($n) {
            if (ie._status === mi || ie._status === Hn) {
              var yn = ie;
              yn._status = Vr, yn._result = $n;
            }
          }, function($n) {
            if (ie._status === mi || ie._status === Hn) {
              var yn = ie;
              yn._status = Gr, yn._result = $n;
            }
          }), ie._status === Hn) {
            var Ut = ie;
            Ut._status = mi, Ut._result = ct;
          }
        }
        if (ie._status === Vr) {
          var tn = ie._result;
          return tn === void 0 && we(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, tn), "default" in tn || we(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, tn), tn.default;
        } else
          throw ie._result;
      }
      function Ui(ie) {
        var Ie = {
          // We use these fields to store the result.
          _status: Hn,
          _result: ie
        }, ct = {
          $$typeof: R,
          _payload: Ie,
          _init: Or
        };
        {
          var Ut, tn;
          Object.defineProperties(ct, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return Ut;
              },
              set: function($n) {
                we("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), Ut = $n, Object.defineProperty(ct, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return tn;
              },
              set: function($n) {
                we("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), tn = $n, Object.defineProperty(ct, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return ct;
      }
      function fi(ie) {
        ie != null && ie.$$typeof === w ? we("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof ie != "function" ? we("forwardRef requires a render function but was given %s.", ie === null ? "null" : typeof ie) : ie.length !== 0 && ie.length !== 2 && we("forwardRef render functions accept exactly two parameters: props and ref. %s", ie.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), ie != null && (ie.defaultProps != null || ie.propTypes != null) && we("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var Ie = {
          $$typeof: y,
          render: ie
        };
        {
          var ct;
          Object.defineProperty(Ie, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return ct;
            },
            set: function(Ut) {
              ct = Ut, !ie.name && !ie.displayName && (ie.displayName = Ut);
            }
          });
        }
        return Ie;
      }
      var ke;
      ke = Symbol.for("react.module.reference");
      function Ht(ie) {
        return !!(typeof ie == "string" || typeof ie == "function" || ie === o || ie === u || me || ie === l || ie === _ || ie === E || he || ie === U || K || fe || se || typeof ie == "object" && ie !== null && (ie.$$typeof === R || ie.$$typeof === w || ie.$$typeof === h || ie.$$typeof === p || ie.$$typeof === y || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        ie.$$typeof === ke || ie.getModuleId !== void 0));
      }
      function Jt(ie, Ie) {
        Ht(ie) || we("memo: The first argument must be a component. Instead received: %s", ie === null ? "null" : typeof ie);
        var ct = {
          $$typeof: w,
          type: ie,
          compare: Ie === void 0 ? null : Ie
        };
        {
          var Ut;
          Object.defineProperty(ct, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return Ut;
            },
            set: function(tn) {
              Ut = tn, !ie.name && !ie.displayName && (ie.displayName = tn);
            }
          });
        }
        return ct;
      }
      function pn() {
        var ie = F.current;
        return ie === null && we(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), ie;
      }
      function _e(ie) {
        var Ie = pn();
        if (ie._context !== void 0) {
          var ct = ie._context;
          ct.Consumer === ie ? we("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : ct.Provider === ie && we("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return Ie.useContext(ie);
      }
      function Qe(ie) {
        var Ie = pn();
        return Ie.useState(ie);
      }
      function at(ie, Ie, ct) {
        var Ut = pn();
        return Ut.useReducer(ie, Ie, ct);
      }
      function je(ie) {
        var Ie = pn();
        return Ie.useRef(ie);
      }
      function vt(ie, Ie) {
        var ct = pn();
        return ct.useEffect(ie, Ie);
      }
      function sn(ie, Ie) {
        var ct = pn();
        return ct.useInsertionEffect(ie, Ie);
      }
      function vn(ie, Ie) {
        var ct = pn();
        return ct.useLayoutEffect(ie, Ie);
      }
      function Mn(ie, Ie) {
        var ct = pn();
        return ct.useCallback(ie, Ie);
      }
      function zn(ie, Ie) {
        var ct = pn();
        return ct.useMemo(ie, Ie);
      }
      function pr(ie, Ie, ct) {
        var Ut = pn();
        return Ut.useImperativeHandle(ie, Ie, ct);
      }
      function Mt(ie, Ie) {
        {
          var ct = pn();
          return ct.useDebugValue(ie, Ie);
        }
      }
      function dr() {
        var ie = pn();
        return ie.useTransition();
      }
      function Wr(ie) {
        var Ie = pn();
        return Ie.useDeferredValue(ie);
      }
      function Rn() {
        var ie = pn();
        return ie.useId();
      }
      function Ji(ie, Ie, ct) {
        var Ut = pn();
        return Ut.useSyncExternalStore(ie, Ie, ct);
      }
      var Ca = 0, li, qn, br, hr, di, ha, Kr;
      function Co() {
      }
      Co.__reactDisabledLog = !0;
      function Ri() {
        {
          if (Ca === 0) {
            li = console.log, qn = console.info, br = console.warn, hr = console.error, di = console.group, ha = console.groupCollapsed, Kr = console.groupEnd;
            var ie = {
              configurable: !0,
              enumerable: !0,
              value: Co,
              writable: !0
            };
            Object.defineProperties(console, {
              info: ie,
              log: ie,
              warn: ie,
              error: ie,
              group: ie,
              groupCollapsed: ie,
              groupEnd: ie
            });
          }
          Ca++;
        }
      }
      function Ai() {
        {
          if (Ca--, Ca === 0) {
            var ie = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: ue({}, ie, {
                value: li
              }),
              info: ue({}, ie, {
                value: qn
              }),
              warn: ue({}, ie, {
                value: br
              }),
              error: ue({}, ie, {
                value: hr
              }),
              group: ue({}, ie, {
                value: di
              }),
              groupCollapsed: ue({}, ie, {
                value: ha
              }),
              groupEnd: ue({}, ie, {
                value: Kr
              })
            });
          }
          Ca < 0 && we("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var Ea = Ee.ReactCurrentDispatcher, bi;
      function ns(ie, Ie, ct) {
        {
          if (bi === void 0)
            try {
              throw Error();
            } catch (tn) {
              var Ut = tn.stack.trim().match(/\n( *(at )?)/);
              bi = Ut && Ut[1] || "";
            }
          return `
` + bi + ie;
        }
      }
      var Ro = !1, Ra;
      {
        var Ao = typeof WeakMap == "function" ? WeakMap : Map;
        Ra = new Ao();
      }
      function kl(ie, Ie) {
        if (!ie || Ro)
          return "";
        {
          var ct = Ra.get(ie);
          if (ct !== void 0)
            return ct;
        }
        var Ut;
        Ro = !0;
        var tn = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var $n;
        $n = Ea.current, Ea.current = null, Ri();
        try {
          if (Ie) {
            var yn = function() {
              throw Error();
            };
            if (Object.defineProperty(yn.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(yn, []);
              } catch (ii) {
                Ut = ii;
              }
              Reflect.construct(ie, [], yn);
            } else {
              try {
                yn.call();
              } catch (ii) {
                Ut = ii;
              }
              ie.call(yn.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (ii) {
              Ut = ii;
            }
            ie();
          }
        } catch (ii) {
          if (ii && Ut && typeof ii.stack == "string") {
            for (var Zn = ii.stack.split(`
`), Jn = Ut.stack.split(`
`), Tr = Zn.length - 1, Mr = Jn.length - 1; Tr >= 1 && Mr >= 0 && Zn[Tr] !== Jn[Mr]; )
              Mr--;
            for (; Tr >= 1 && Mr >= 0; Tr--, Mr--)
              if (Zn[Tr] !== Jn[Mr]) {
                if (Tr !== 1 || Mr !== 1)
                  do
                    if (Tr--, Mr--, Mr < 0 || Zn[Tr] !== Jn[Mr]) {
                      var _r = `
` + Zn[Tr].replace(" at new ", " at ");
                      return ie.displayName && _r.includes("<anonymous>") && (_r = _r.replace("<anonymous>", ie.displayName)), typeof ie == "function" && Ra.set(ie, _r), _r;
                    }
                  while (Tr >= 1 && Mr >= 0);
                break;
              }
          }
        } finally {
          Ro = !1, Ea.current = $n, Ai(), Error.prepareStackTrace = tn;
        }
        var Zr = ie ? ie.displayName || ie.name : "", vi = Zr ? ns(Zr) : "";
        return typeof ie == "function" && Ra.set(ie, vi), vi;
      }
      function Ts(ie, Ie, ct) {
        return kl(ie, !1);
      }
      function bd(ie) {
        var Ie = ie.prototype;
        return !!(Ie && Ie.isReactComponent);
      }
      function Wo(ie, Ie, ct) {
        if (ie == null)
          return "";
        if (typeof ie == "function")
          return kl(ie, bd(ie));
        if (typeof ie == "string")
          return ns(ie);
        switch (ie) {
          case _:
            return ns("Suspense");
          case E:
            return ns("SuspenseList");
        }
        if (typeof ie == "object")
          switch (ie.$$typeof) {
            case y:
              return Ts(ie.render);
            case w:
              return Wo(ie.type, Ie, ct);
            case R: {
              var Ut = ie, tn = Ut._payload, $n = Ut._init;
              try {
                return Wo($n(tn), Ie, ct);
              } catch {
              }
            }
          }
        return "";
      }
      var Br = {}, rs = Ee.ReactDebugCurrentFrame;
      function Fl(ie) {
        if (ie) {
          var Ie = ie._owner, ct = Wo(ie.type, ie._source, Ie ? Ie.type : null);
          rs.setExtraStackFrame(ct);
        } else
          rs.setExtraStackFrame(null);
      }
      function Do(ie, Ie, ct, Ut, tn) {
        {
          var $n = Function.call.bind(mt);
          for (var yn in ie)
            if ($n(ie, yn)) {
              var Zn = void 0;
              try {
                if (typeof ie[yn] != "function") {
                  var Jn = Error((Ut || "React class") + ": " + ct + " type `" + yn + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ie[yn] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw Jn.name = "Invariant Violation", Jn;
                }
                Zn = ie[yn](Ie, yn, Ut, ct, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Tr) {
                Zn = Tr;
              }
              Zn && !(Zn instanceof Error) && (Fl(tn), we("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", Ut || "React class", ct, yn, typeof Zn), Fl(null)), Zn instanceof Error && !(Zn.message in Br) && (Br[Zn.message] = !0, Fl(tn), we("Failed %s type: %s", ct, Zn.message), Fl(null));
            }
        }
      }
      function Hr(ie) {
        if (ie) {
          var Ie = ie._owner, ct = Wo(ie.type, ie._source, Ie ? Ie.type : null);
          Z(ct);
        } else
          Z(null);
      }
      var pa;
      pa = !1;
      function ku() {
        if (j.current) {
          var ie = kt(j.current.type);
          if (ie)
            return `

Check the render method of \`` + ie + "`.";
        }
        return "";
      }
      function rr(ie) {
        if (ie !== void 0) {
          var Ie = ie.fileName.replace(/^.*[\\\/]/, ""), ct = ie.lineNumber;
          return `

Check your code at ` + Ie + ":" + ct + ".";
        }
        return "";
      }
      function ml(ie) {
        return ie != null ? rr(ie.__source) : "";
      }
      var Ni = {};
      function gr(ie) {
        var Ie = ku();
        if (!Ie) {
          var ct = typeof ie == "string" ? ie : ie.displayName || ie.name;
          ct && (Ie = `

Check the top-level render call using <` + ct + ">.");
        }
        return Ie;
      }
      function Lo(ie, Ie) {
        if (!(!ie._store || ie._store.validated || ie.key != null)) {
          ie._store.validated = !0;
          var ct = gr(Ie);
          if (!Ni[ct]) {
            Ni[ct] = !0;
            var Ut = "";
            ie && ie._owner && ie._owner !== j.current && (Ut = " It was passed a child from " + kt(ie._owner.type) + "."), Hr(ie), we('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', ct, Ut), Hr(null);
          }
        }
      }
      function oo(ie, Ie) {
        if (typeof ie == "object") {
          if (rt(ie))
            for (var ct = 0; ct < ie.length; ct++) {
              var Ut = ie[ct];
              Ze(Ut) && Lo(Ut, Ie);
            }
          else if (Ze(ie))
            ie._store && (ie._store.validated = !0);
          else if (ie) {
            var tn = k(ie);
            if (typeof tn == "function" && tn !== ie.entries)
              for (var $n = tn.call(ie), yn; !(yn = $n.next()).done; )
                Ze(yn.value) && Lo(yn.value, Ie);
          }
        }
      }
      function oa(ie) {
        {
          var Ie = ie.type;
          if (Ie == null || typeof Ie == "string")
            return;
          var ct;
          if (typeof Ie == "function")
            ct = Ie.propTypes;
          else if (typeof Ie == "object" && (Ie.$$typeof === y || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          Ie.$$typeof === w))
            ct = Ie.propTypes;
          else
            return;
          if (ct) {
            var Ut = kt(Ie);
            Do(ct, ie.props, "prop", Ut, ie);
          } else if (Ie.PropTypes !== void 0 && !pa) {
            pa = !0;
            var tn = kt(Ie);
            we("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", tn || "Unknown");
          }
          typeof Ie.getDefaultProps == "function" && !Ie.getDefaultProps.isReactClassApproved && we("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Ti(ie) {
        {
          for (var Ie = Object.keys(ie.props), ct = 0; ct < Ie.length; ct++) {
            var Ut = Ie[ct];
            if (Ut !== "children" && Ut !== "key") {
              Hr(ie), we("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Ut), Hr(null);
              break;
            }
          }
          ie.ref !== null && (Hr(ie), we("Invalid attribute `ref` supplied to `React.Fragment`."), Hr(null));
        }
      }
      function Td(ie, Ie, ct) {
        var Ut = Ht(ie);
        if (!Ut) {
          var tn = "";
          (ie === void 0 || typeof ie == "object" && ie !== null && Object.keys(ie).length === 0) && (tn += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var $n = ml(Ie);
          $n ? tn += $n : tn += ku();
          var yn;
          ie === null ? yn = "null" : rt(ie) ? yn = "array" : ie !== void 0 && ie.$$typeof === r ? (yn = "<" + (kt(ie.type) || "Unknown") + " />", tn = " Did you accidentally export a JSX literal instead of a component?") : yn = typeof ie, we("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", yn, tn);
        }
        var Zn = We.apply(this, arguments);
        if (Zn == null)
          return Zn;
        if (Ut)
          for (var Jn = 2; Jn < arguments.length; Jn++)
            oo(arguments[Jn], ie);
        return ie === o ? Ti(Zn) : oa(Zn), Zn;
      }
      var Qr = !1;
      function Aa(ie) {
        var Ie = Td.bind(null, ie);
        return Ie.type = ie, Qr || (Qr = !0, be("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(Ie, "type", {
          enumerable: !1,
          get: function() {
            return be("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: ie
            }), ie;
          }
        }), Ie;
      }
      function zl(ie, Ie, ct) {
        for (var Ut = Et.apply(this, arguments), tn = 2; tn < arguments.length; tn++)
          oo(arguments[tn], Ut.type);
        return oa(Ut), Ut;
      }
      function jo(ie, Ie) {
        var ct = H.transition;
        H.transition = {};
        var Ut = H.transition;
        H.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          ie();
        } finally {
          if (H.transition = ct, ct === null && Ut._updatedFibers) {
            var tn = Ut._updatedFibers.size;
            tn > 10 && be("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), Ut._updatedFibers.clear();
          }
        }
      }
      var Il = !1, vl = null;
      function ws(ie) {
        if (vl === null)
          try {
            var Ie = ("require" + Math.random()).slice(0, 7), ct = n && n[Ie];
            vl = ct.call(n, "timers").setImmediate;
          } catch {
            vl = function(tn) {
              Il === !1 && (Il = !0, typeof MessageChannel > "u" && we("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var $n = new MessageChannel();
              $n.port1.onmessage = tn, $n.port2.postMessage(void 0);
            };
          }
        return vl(ie);
      }
      var Ms = 0, Fu = !1;
      function vo(ie) {
        {
          var Ie = Ms;
          Ms++, B.current === null && (B.current = []);
          var ct = B.isBatchingLegacy, Ut;
          try {
            if (B.isBatchingLegacy = !0, Ut = ie(), !ct && B.didScheduleLegacyUpdate) {
              var tn = B.current;
              tn !== null && (B.didScheduleLegacyUpdate = !1, Bl(tn));
            }
          } catch (Zr) {
            throw ma(Ie), Zr;
          } finally {
            B.isBatchingLegacy = ct;
          }
          if (Ut !== null && typeof Ut == "object" && typeof Ut.then == "function") {
            var $n = Ut, yn = !1, Zn = {
              then: function(Zr, vi) {
                yn = !0, $n.then(function(ii) {
                  ma(Ie), Ms === 0 ? $s(ii, Zr, vi) : Zr(ii);
                }, function(ii) {
                  ma(Ie), vi(ii);
                });
              }
            };
            return !Fu && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              yn || (Fu = !0, we("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), Zn;
          } else {
            var Jn = Ut;
            if (ma(Ie), Ms === 0) {
              var Tr = B.current;
              Tr !== null && (Bl(Tr), B.current = null);
              var Mr = {
                then: function(Zr, vi) {
                  B.current === null ? (B.current = [], $s(Jn, Zr, vi)) : Zr(Jn);
                }
              };
              return Mr;
            } else {
              var _r = {
                then: function(Zr, vi) {
                  Zr(Jn);
                }
              };
              return _r;
            }
          }
        }
      }
      function ma(ie) {
        ie !== Ms - 1 && we("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), Ms = ie;
      }
      function $s(ie, Ie, ct) {
        {
          var Ut = B.current;
          if (Ut !== null)
            try {
              Bl(Ut), ws(function() {
                Ut.length === 0 ? (B.current = null, Ie(ie)) : $s(ie, Ie, ct);
              });
            } catch (tn) {
              ct(tn);
            }
          else
            Ie(ie);
        }
      }
      var Oo = !1;
      function Bl(ie) {
        if (!Oo) {
          Oo = !0;
          var Ie = 0;
          try {
            for (; Ie < ie.length; Ie++) {
              var ct = ie[Ie];
              do
                ct = ct(!0);
              while (ct !== null);
            }
            ie.length = 0;
          } catch (Ut) {
            throw ie = ie.slice(Ie + 1), Ut;
          } finally {
            Oo = !1;
          }
        }
      }
      var zu = Td, Po = zl, Iu = Aa, is = {
        map: Un,
        forEach: cr,
        count: jn,
        toArray: En,
        only: tr
      };
      e.Children = is, e.Component = Ae, e.Fragment = o, e.Profiler = u, e.PureComponent = it, e.StrictMode = l, e.Suspense = _, e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Ee, e.cloneElement = Po, e.createContext = fr, e.createElement = zu, e.createFactory = Iu, e.createRef = st, e.forwardRef = fi, e.isValidElement = Ze, e.lazy = Ui, e.memo = Jt, e.startTransition = jo, e.unstable_act = vo, e.useCallback = Mn, e.useContext = _e, e.useDebugValue = Mt, e.useDeferredValue = Wr, e.useEffect = vt, e.useId = Rn, e.useImperativeHandle = pr, e.useInsertionEffect = sn, e.useLayoutEffect = vn, e.useMemo = zn, e.useReducer = at, e.useRef = je, e.useState = Qe, e.useSyncExternalStore = Ji, e.useTransition = dr, e.version = t, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(cT, cT.exports)), cT.exports;
}
process.env.NODE_ENV === "production" ? OL.exports = A8() : OL.exports = D8();
var le = OL.exports;
const Be = /* @__PURE__ */ j1(le), L8 = /* @__PURE__ */ R8({
  __proto__: null,
  default: Be
}, [le]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hN;
function O8() {
  if (hN)
    return $b;
  hN = 1;
  var n = le, e = Symbol.for("react.element"), t = Symbol.for("react.fragment"), r = Object.prototype.hasOwnProperty, i = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, o = { key: !0, ref: !0, __self: !0, __source: !0 };
  function l(u, h, p) {
    var y, _ = {}, E = null, w = null;
    p !== void 0 && (E = "" + p), h.key !== void 0 && (E = "" + h.key), h.ref !== void 0 && (w = h.ref);
    for (y in h)
      r.call(h, y) && !o.hasOwnProperty(y) && (_[y] = h[y]);
    if (u && u.defaultProps)
      for (y in h = u.defaultProps, h)
        _[y] === void 0 && (_[y] = h[y]);
    return { $$typeof: e, type: u, key: E, ref: w, props: _, _owner: i.current };
  }
  return $b.Fragment = t, $b.jsx = l, $b.jsxs = l, $b;
}
var Yb = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var pN;
function P8() {
  return pN || (pN = 1, process.env.NODE_ENV !== "production" && function() {
    var n = le, e = Symbol.for("react.element"), t = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), l = Symbol.for("react.provider"), u = Symbol.for("react.context"), h = Symbol.for("react.forward_ref"), p = Symbol.for("react.suspense"), y = Symbol.for("react.suspense_list"), _ = Symbol.for("react.memo"), E = Symbol.for("react.lazy"), w = Symbol.for("react.offscreen"), R = Symbol.iterator, U = "@@iterator";
    function L(ke) {
      if (ke === null || typeof ke != "object")
        return null;
      var Ht = R && ke[R] || ke[U];
      return typeof Ht == "function" ? Ht : null;
    }
    var A = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function k(ke) {
      {
        for (var Ht = arguments.length, Jt = new Array(Ht > 1 ? Ht - 1 : 0), pn = 1; pn < Ht; pn++)
          Jt[pn - 1] = arguments[pn];
        F("error", ke, Jt);
      }
    }
    function F(ke, Ht, Jt) {
      {
        var pn = A.ReactDebugCurrentFrame, _e = pn.getStackAddendum();
        _e !== "" && (Ht += "%s", Jt = Jt.concat([_e]));
        var Qe = Jt.map(function(at) {
          return String(at);
        });
        Qe.unshift("Warning: " + Ht), Function.prototype.apply.call(console[ke], console, Qe);
      }
    }
    var H = !1, B = !1, j = !1, Y = !1, ee = !1, Z;
    Z = Symbol.for("react.module.reference");
    function K(ke) {
      return !!(typeof ke == "string" || typeof ke == "function" || ke === r || ke === o || ee || ke === i || ke === p || ke === y || Y || ke === w || H || B || j || typeof ke == "object" && ke !== null && (ke.$$typeof === E || ke.$$typeof === _ || ke.$$typeof === l || ke.$$typeof === u || ke.$$typeof === h || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ke.$$typeof === Z || ke.getModuleId !== void 0));
    }
    function fe(ke, Ht, Jt) {
      var pn = ke.displayName;
      if (pn)
        return pn;
      var _e = Ht.displayName || Ht.name || "";
      return _e !== "" ? Jt + "(" + _e + ")" : Jt;
    }
    function se(ke) {
      return ke.displayName || "Context";
    }
    function he(ke) {
      if (ke == null)
        return null;
      if (typeof ke.tag == "number" && k("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ke == "function")
        return ke.displayName || ke.name || null;
      if (typeof ke == "string")
        return ke;
      switch (ke) {
        case r:
          return "Fragment";
        case t:
          return "Portal";
        case o:
          return "Profiler";
        case i:
          return "StrictMode";
        case p:
          return "Suspense";
        case y:
          return "SuspenseList";
      }
      if (typeof ke == "object")
        switch (ke.$$typeof) {
          case u:
            var Ht = ke;
            return se(Ht) + ".Consumer";
          case l:
            var Jt = ke;
            return se(Jt._context) + ".Provider";
          case h:
            return fe(ke, ke.render, "ForwardRef");
          case _:
            var pn = ke.displayName || null;
            return pn !== null ? pn : he(ke.type) || "Memo";
          case E: {
            var _e = ke, Qe = _e._payload, at = _e._init;
            try {
              return he(at(Qe));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var me = Object.assign, Ee = 0, be, we, de, ye, X, q, ue;
    function Ce() {
    }
    Ce.__reactDisabledLog = !0;
    function Ae() {
      {
        if (Ee === 0) {
          be = console.log, we = console.info, de = console.warn, ye = console.error, X = console.group, q = console.groupCollapsed, ue = console.groupEnd;
          var ke = {
            configurable: !0,
            enumerable: !0,
            value: Ce,
            writable: !0
          };
          Object.defineProperties(console, {
            info: ke,
            log: ke,
            warn: ke,
            error: ke,
            group: ke,
            groupCollapsed: ke,
            groupEnd: ke
          });
        }
        Ee++;
      }
    }
    function De() {
      {
        if (Ee--, Ee === 0) {
          var ke = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: me({}, ke, {
              value: be
            }),
            info: me({}, ke, {
              value: we
            }),
            warn: me({}, ke, {
              value: de
            }),
            error: me({}, ke, {
              value: ye
            }),
            group: me({}, ke, {
              value: X
            }),
            groupCollapsed: me({}, ke, {
              value: q
            }),
            groupEnd: me({}, ke, {
              value: ue
            })
          });
        }
        Ee < 0 && k("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Ne = A.ReactCurrentDispatcher, Pe;
    function Fe(ke, Ht, Jt) {
      {
        if (Pe === void 0)
          try {
            throw Error();
          } catch (_e) {
            var pn = _e.stack.trim().match(/\n( *(at )?)/);
            Pe = pn && pn[1] || "";
          }
        return `
` + Pe + ke;
      }
    }
    var it = !1, Ot;
    {
      var st = typeof WeakMap == "function" ? WeakMap : Map;
      Ot = new st();
    }
    function oe(ke, Ht) {
      if (!ke || it)
        return "";
      {
        var Jt = Ot.get(ke);
        if (Jt !== void 0)
          return Jt;
      }
      var pn;
      it = !0;
      var _e = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Qe;
      Qe = Ne.current, Ne.current = null, Ae();
      try {
        if (Ht) {
          var at = function() {
            throw Error();
          };
          if (Object.defineProperty(at.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(at, []);
            } catch (Mt) {
              pn = Mt;
            }
            Reflect.construct(ke, [], at);
          } else {
            try {
              at.call();
            } catch (Mt) {
              pn = Mt;
            }
            ke.call(at.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Mt) {
            pn = Mt;
          }
          ke();
        }
      } catch (Mt) {
        if (Mt && pn && typeof Mt.stack == "string") {
          for (var je = Mt.stack.split(`
`), vt = pn.stack.split(`
`), sn = je.length - 1, vn = vt.length - 1; sn >= 1 && vn >= 0 && je[sn] !== vt[vn]; )
            vn--;
          for (; sn >= 1 && vn >= 0; sn--, vn--)
            if (je[sn] !== vt[vn]) {
              if (sn !== 1 || vn !== 1)
                do
                  if (sn--, vn--, vn < 0 || je[sn] !== vt[vn]) {
                    var Mn = `
` + je[sn].replace(" at new ", " at ");
                    return ke.displayName && Mn.includes("<anonymous>") && (Mn = Mn.replace("<anonymous>", ke.displayName)), typeof ke == "function" && Ot.set(ke, Mn), Mn;
                  }
                while (sn >= 1 && vn >= 0);
              break;
            }
        }
      } finally {
        it = !1, Ne.current = Qe, De(), Error.prepareStackTrace = _e;
      }
      var zn = ke ? ke.displayName || ke.name : "", pr = zn ? Fe(zn) : "";
      return typeof ke == "function" && Ot.set(ke, pr), pr;
    }
    function rt(ke, Ht, Jt) {
      return oe(ke, !1);
    }
    function qe(ke) {
      var Ht = ke.prototype;
      return !!(Ht && Ht.isReactComponent);
    }
    function $e(ke, Ht, Jt) {
      if (ke == null)
        return "";
      if (typeof ke == "function")
        return oe(ke, qe(ke));
      if (typeof ke == "string")
        return Fe(ke);
      switch (ke) {
        case p:
          return Fe("Suspense");
        case y:
          return Fe("SuspenseList");
      }
      if (typeof ke == "object")
        switch (ke.$$typeof) {
          case h:
            return rt(ke.render);
          case _:
            return $e(ke.type, Ht, Jt);
          case E: {
            var pn = ke, _e = pn._payload, Qe = pn._init;
            try {
              return $e(Qe(_e), Ht, Jt);
            } catch {
            }
          }
        }
      return "";
    }
    var Ye = Object.prototype.hasOwnProperty, zt = {}, ot = A.ReactDebugCurrentFrame;
    function Dt(ke) {
      if (ke) {
        var Ht = ke._owner, Jt = $e(ke.type, ke._source, Ht ? Ht.type : null);
        ot.setExtraStackFrame(Jt);
      } else
        ot.setExtraStackFrame(null);
    }
    function kt(ke, Ht, Jt, pn, _e) {
      {
        var Qe = Function.call.bind(Ye);
        for (var at in ke)
          if (Qe(ke, at)) {
            var je = void 0;
            try {
              if (typeof ke[at] != "function") {
                var vt = Error((pn || "React class") + ": " + Jt + " type `" + at + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ke[at] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw vt.name = "Invariant Violation", vt;
              }
              je = ke[at](Ht, at, pn, Jt, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (sn) {
              je = sn;
            }
            je && !(je instanceof Error) && (Dt(_e), k("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", pn || "React class", Jt, at, typeof je), Dt(null)), je instanceof Error && !(je.message in zt) && (zt[je.message] = !0, Dt(_e), k("Failed %s type: %s", Jt, je.message), Dt(null));
          }
      }
    }
    var mt = Array.isArray;
    function rn(ke) {
      return mt(ke);
    }
    function ae(ke) {
      {
        var Ht = typeof Symbol == "function" && Symbol.toStringTag, Jt = Ht && ke[Symbol.toStringTag] || ke.constructor.name || "Object";
        return Jt;
      }
    }
    function re(ke) {
      try {
        return ze(ke), !1;
      } catch {
        return !0;
      }
    }
    function ze(ke) {
      return "" + ke;
    }
    function xt(ke) {
      if (re(ke))
        return k("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", ae(ke)), ze(ke);
    }
    var ut = A.ReactCurrentOwner, lt = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Yt, Nt, xe;
    xe = {};
    function We(ke) {
      if (Ye.call(ke, "ref")) {
        var Ht = Object.getOwnPropertyDescriptor(ke, "ref").get;
        if (Ht && Ht.isReactWarning)
          return !1;
      }
      return ke.ref !== void 0;
    }
    function ft(ke) {
      if (Ye.call(ke, "key")) {
        var Ht = Object.getOwnPropertyDescriptor(ke, "key").get;
        if (Ht && Ht.isReactWarning)
          return !1;
      }
      return ke.key !== void 0;
    }
    function Et(ke, Ht) {
      if (typeof ke.ref == "string" && ut.current && Ht && ut.current.stateNode !== Ht) {
        var Jt = he(ut.current.type);
        xe[Jt] || (k('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', he(ut.current.type), ke.ref), xe[Jt] = !0);
      }
    }
    function Ze(ke, Ht) {
      {
        var Jt = function() {
          Yt || (Yt = !0, k("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ht));
        };
        Jt.isReactWarning = !0, Object.defineProperty(ke, "key", {
          get: Jt,
          configurable: !0
        });
      }
    }
    function Te(ke, Ht) {
      {
        var Jt = function() {
          Nt || (Nt = !0, k("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ht));
        };
        Jt.isReactWarning = !0, Object.defineProperty(ke, "ref", {
          get: Jt,
          configurable: !0
        });
      }
    }
    var tt = function(ke, Ht, Jt, pn, _e, Qe, at) {
      var je = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: e,
        // Built-in properties that belong on the element
        type: ke,
        key: Ht,
        ref: Jt,
        props: at,
        // Record the component responsible for creating this element.
        _owner: Qe
      };
      return je._store = {}, Object.defineProperty(je._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(je, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: pn
      }), Object.defineProperty(je, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: _e
      }), Object.freeze && (Object.freeze(je.props), Object.freeze(je)), je;
    };
    function pt(ke, Ht, Jt, pn, _e) {
      {
        var Qe, at = {}, je = null, vt = null;
        Jt !== void 0 && (xt(Jt), je = "" + Jt), ft(Ht) && (xt(Ht.key), je = "" + Ht.key), We(Ht) && (vt = Ht.ref, Et(Ht, _e));
        for (Qe in Ht)
          Ye.call(Ht, Qe) && !lt.hasOwnProperty(Qe) && (at[Qe] = Ht[Qe]);
        if (ke && ke.defaultProps) {
          var sn = ke.defaultProps;
          for (Qe in sn)
            at[Qe] === void 0 && (at[Qe] = sn[Qe]);
        }
        if (je || vt) {
          var vn = typeof ke == "function" ? ke.displayName || ke.name || "Unknown" : ke;
          je && Ze(at, vn), vt && Te(at, vn);
        }
        return tt(ke, je, vt, _e, pn, ut.current, at);
      }
    }
    var ve = A.ReactCurrentOwner, Pt = A.ReactDebugCurrentFrame;
    function He(ke) {
      if (ke) {
        var Ht = ke._owner, Jt = $e(ke.type, ke._source, Ht ? Ht.type : null);
        Pt.setExtraStackFrame(Jt);
      } else
        Pt.setExtraStackFrame(null);
    }
    var dt;
    dt = !1;
    function ln(ke) {
      return typeof ke == "object" && ke !== null && ke.$$typeof === e;
    }
    function Un() {
      {
        if (ve.current) {
          var ke = he(ve.current.type);
          if (ke)
            return `

Check the render method of \`` + ke + "`.";
        }
        return "";
      }
    }
    function jn(ke) {
      {
        if (ke !== void 0) {
          var Ht = ke.fileName.replace(/^.*[\\\/]/, ""), Jt = ke.lineNumber;
          return `

Check your code at ` + Ht + ":" + Jt + ".";
        }
        return "";
      }
    }
    var cr = {};
    function En(ke) {
      {
        var Ht = Un();
        if (!Ht) {
          var Jt = typeof ke == "string" ? ke : ke.displayName || ke.name;
          Jt && (Ht = `

Check the top-level render call using <` + Jt + ">.");
        }
        return Ht;
      }
    }
    function tr(ke, Ht) {
      {
        if (!ke._store || ke._store.validated || ke.key != null)
          return;
        ke._store.validated = !0;
        var Jt = En(Ht);
        if (cr[Jt])
          return;
        cr[Jt] = !0;
        var pn = "";
        ke && ke._owner && ke._owner !== ve.current && (pn = " It was passed a child from " + he(ke._owner.type) + "."), He(ke), k('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', Jt, pn), He(null);
      }
    }
    function fr(ke, Ht) {
      {
        if (typeof ke != "object")
          return;
        if (rn(ke))
          for (var Jt = 0; Jt < ke.length; Jt++) {
            var pn = ke[Jt];
            ln(pn) && tr(pn, Ht);
          }
        else if (ln(ke))
          ke._store && (ke._store.validated = !0);
        else if (ke) {
          var _e = L(ke);
          if (typeof _e == "function" && _e !== ke.entries)
            for (var Qe = _e.call(ke), at; !(at = Qe.next()).done; )
              ln(at.value) && tr(at.value, Ht);
        }
      }
    }
    function Hn(ke) {
      {
        var Ht = ke.type;
        if (Ht == null || typeof Ht == "string")
          return;
        var Jt;
        if (typeof Ht == "function")
          Jt = Ht.propTypes;
        else if (typeof Ht == "object" && (Ht.$$typeof === h || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        Ht.$$typeof === _))
          Jt = Ht.propTypes;
        else
          return;
        if (Jt) {
          var pn = he(Ht);
          kt(Jt, ke.props, "prop", pn, ke);
        } else if (Ht.PropTypes !== void 0 && !dt) {
          dt = !0;
          var _e = he(Ht);
          k("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _e || "Unknown");
        }
        typeof Ht.getDefaultProps == "function" && !Ht.getDefaultProps.isReactClassApproved && k("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function mi(ke) {
      {
        for (var Ht = Object.keys(ke.props), Jt = 0; Jt < Ht.length; Jt++) {
          var pn = Ht[Jt];
          if (pn !== "children" && pn !== "key") {
            He(ke), k("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", pn), He(null);
            break;
          }
        }
        ke.ref !== null && (He(ke), k("Invalid attribute `ref` supplied to `React.Fragment`."), He(null));
      }
    }
    function Vr(ke, Ht, Jt, pn, _e, Qe) {
      {
        var at = K(ke);
        if (!at) {
          var je = "";
          (ke === void 0 || typeof ke == "object" && ke !== null && Object.keys(ke).length === 0) && (je += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var vt = jn(_e);
          vt ? je += vt : je += Un();
          var sn;
          ke === null ? sn = "null" : rn(ke) ? sn = "array" : ke !== void 0 && ke.$$typeof === e ? (sn = "<" + (he(ke.type) || "Unknown") + " />", je = " Did you accidentally export a JSX literal instead of a component?") : sn = typeof ke, k("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", sn, je);
        }
        var vn = pt(ke, Ht, Jt, _e, Qe);
        if (vn == null)
          return vn;
        if (at) {
          var Mn = Ht.children;
          if (Mn !== void 0)
            if (pn)
              if (rn(Mn)) {
                for (var zn = 0; zn < Mn.length; zn++)
                  fr(Mn[zn], ke);
                Object.freeze && Object.freeze(Mn);
              } else
                k("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              fr(Mn, ke);
        }
        return ke === r ? mi(vn) : Hn(vn), vn;
      }
    }
    function Gr(ke, Ht, Jt) {
      return Vr(ke, Ht, Jt, !0);
    }
    function Or(ke, Ht, Jt) {
      return Vr(ke, Ht, Jt, !1);
    }
    var Ui = Or, fi = Gr;
    Yb.Fragment = r, Yb.jsx = Ui, Yb.jsxs = fi;
  }()), Yb;
}
process.env.NODE_ENV === "production" ? LL.exports = O8() : LL.exports = P8();
var es = LL.exports;
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const NR = "156", $S = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 }, YS = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 }, lI = 0, PL = 1, uI = 2, U8 = 3, cI = 0, kR = 1, mT = 2, om = 3, xv = 0, Wc = 1, cp = 2, N8 = 2, zg = 0, n_ = 1, UL = 2, NL = 3, kL = 4, fI = 5, qS = 100, dI = 101, hI = 102, FL = 103, zL = 104, pI = 200, mI = 201, vI = 202, gI = 203, rP = 204, iP = 205, yI = 206, SI = 207, _I = 208, xI = 209, EI = 210, bI = 0, TI = 1, wI = 2, hR = 3, MI = 4, CI = 5, RI = 6, AI = 7, qT = 0, DI = 1, LI = 2, yv = 0, OI = 1, PI = 2, UI = 3, aP = 4, NI = 5, FR = 300, Bg = 301, h0 = 302, MT = 303, CT = 304, $1 = 306, RT = 1e3, Vc = 1001, AT = 1002, pl = 1003, pR = 1004, k8 = 1004, vT = 1005, F8 = 1005, Ss = 1006, oP = 1007, z8 = 1007, p0 = 1008, I8 = 1008, Sv = 1009, kI = 1010, FI = 1011, zR = 1012, sP = 1013, kg = 1014, vv = 1015, z1 = 1016, lP = 1017, uP = 1018, u0 = 1020, zI = 1021, Sd = 1023, II = 1024, BI = 1025, c0 = 1026, u_ = 1027, HI = 1028, cP = 1029, VI = 1030, fP = 1031, dP = 1033, tR = 33776, nR = 33777, rR = 33778, iR = 33779, IL = 35840, BL = 35841, HL = 35842, VL = 35843, GI = 36196, GL = 37492, WL = 37496, jL = 37808, $L = 37809, YL = 37810, XL = 37811, qL = 37812, KL = 37813, QL = 37814, ZL = 37815, JL = 37816, eO = 37817, tO = 37818, nO = 37819, rO = 37820, iO = 37821, aR = 36492, aO = 36494, oO = 36495, WI = 36283, sO = 36284, lO = 36285, uO = 36286, jI = 2200, $I = 2201, YI = 2202, DT = 2300, LT = 2301, oR = 2302, QS = 2400, ZS = 2401, OT = 2402, IR = 2500, hP = 2501, B8 = 0, H8 = 1, V8 = 2, pP = 3e3, f0 = 3001, XI = 3200, mP = 3201, _0 = 0, qI = 1, d0 = "", Mo = "srgb", um = "srgb-linear", KT = "display-p3", G8 = "display-p3-linear", W8 = 0, sR = 7680, j8 = 7681, $8 = 7682, Y8 = 7683, X8 = 34055, q8 = 34056, K8 = 5386, Q8 = 512, Z8 = 513, J8 = 514, eG = 515, tG = 516, nG = 517, rG = 518, KI = 519, QI = 512, ZI = 513, JI = 514, e4 = 515, t4 = 516, n4 = 517, r4 = 518, i4 = 519, PT = 35044, iG = 35048, aG = 35040, oG = 35045, sG = 35049, lG = 35041, uG = 35046, cG = 35050, fG = 35042, dG = "100", cO = "300 es", mR = 1035, gv = 2e3, UT = 2001;
class wv {
  addEventListener(e, t) {
    this._listeners === void 0 && (this._listeners = {});
    const r = this._listeners;
    r[e] === void 0 && (r[e] = []), r[e].indexOf(t) === -1 && r[e].push(t);
  }
  hasEventListener(e, t) {
    if (this._listeners === void 0)
      return !1;
    const r = this._listeners;
    return r[e] !== void 0 && r[e].indexOf(t) !== -1;
  }
  removeEventListener(e, t) {
    if (this._listeners === void 0)
      return;
    const i = this._listeners[e];
    if (i !== void 0) {
      const o = i.indexOf(t);
      o !== -1 && i.splice(o, 1);
    }
  }
  dispatchEvent(e) {
    if (this._listeners === void 0)
      return;
    const r = this._listeners[e.type];
    if (r !== void 0) {
      e.target = this;
      const i = r.slice(0);
      for (let o = 0, l = i.length; o < l; o++)
        i[o].call(this, e);
      e.target = null;
    }
  }
}
const Bc = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "0a", "0b", "0c", "0d", "0e", "0f", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "1a", "1b", "1c", "1d", "1e", "1f", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2a", "2b", "2c", "2d", "2e", "2f", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3a", "3b", "3c", "3d", "3e", "3f", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "4a", "4b", "4c", "4d", "4e", "4f", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5a", "5b", "5c", "5d", "5e", "5f", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6a", "6b", "6c", "6d", "6e", "6f", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "7a", "7b", "7c", "7d", "7e", "7f", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8a", "8b", "8c", "8d", "8e", "8f", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9a", "9b", "9c", "9d", "9e", "9f", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa", "ab", "ac", "ad", "ae", "af", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "ba", "bb", "bc", "bd", "be", "bf", "c0", "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ca", "cb", "cc", "cd", "ce", "cf", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "da", "db", "dc", "dd", "de", "df", "e0", "e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "ea", "eb", "ec", "ed", "ee", "ef", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "fa", "fb", "fc", "fd", "fe", "ff"];
let mN = 1234567;
const r_ = Math.PI / 180, I1 = 180 / Math.PI;
function mh() {
  const n = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, r = Math.random() * 4294967295 | 0;
  return (Bc[n & 255] + Bc[n >> 8 & 255] + Bc[n >> 16 & 255] + Bc[n >> 24 & 255] + "-" + Bc[e & 255] + Bc[e >> 8 & 255] + "-" + Bc[e >> 16 & 15 | 64] + Bc[e >> 24 & 255] + "-" + Bc[t & 63 | 128] + Bc[t >> 8 & 255] + "-" + Bc[t >> 16 & 255] + Bc[t >> 24 & 255] + Bc[r & 255] + Bc[r >> 8 & 255] + Bc[r >> 16 & 255] + Bc[r >> 24 & 255]).toLowerCase();
}
function Gs(n, e, t) {
  return Math.max(e, Math.min(t, n));
}
function vP(n, e) {
  return (n % e + e) % e;
}
function hG(n, e, t, r, i) {
  return r + (n - e) * (i - r) / (t - e);
}
function pG(n, e, t) {
  return n !== e ? (t - n) / (e - n) : 0;
}
function gT(n, e, t) {
  return (1 - t) * n + t * e;
}
function mG(n, e, t, r) {
  return gT(n, e, 1 - Math.exp(-t * r));
}
function vG(n, e = 1) {
  return e - Math.abs(vP(n, e * 2) - e);
}
function gG(n, e, t) {
  return n <= e ? 0 : n >= t ? 1 : (n = (n - e) / (t - e), n * n * (3 - 2 * n));
}
function yG(n, e, t) {
  return n <= e ? 0 : n >= t ? 1 : (n = (n - e) / (t - e), n * n * n * (n * (n * 6 - 15) + 10));
}
function SG(n, e) {
  return n + Math.floor(Math.random() * (e - n + 1));
}
function _G(n, e) {
  return n + Math.random() * (e - n);
}
function xG(n) {
  return n * (0.5 - Math.random());
}
function EG(n) {
  n !== void 0 && (mN = n);
  let e = mN += 1831565813;
  return e = Math.imul(e ^ e >>> 15, e | 1), e ^= e + Math.imul(e ^ e >>> 7, e | 61), ((e ^ e >>> 14) >>> 0) / 4294967296;
}
function bG(n) {
  return n * r_;
}
function TG(n) {
  return n * I1;
}
function fO(n) {
  return (n & n - 1) === 0 && n !== 0;
}
function a4(n) {
  return Math.pow(2, Math.ceil(Math.log(n) / Math.LN2));
}
function vR(n) {
  return Math.pow(2, Math.floor(Math.log(n) / Math.LN2));
}
function wG(n, e, t, r, i) {
  const o = Math.cos, l = Math.sin, u = o(t / 2), h = l(t / 2), p = o((e + r) / 2), y = l((e + r) / 2), _ = o((e - r) / 2), E = l((e - r) / 2), w = o((r - e) / 2), R = l((r - e) / 2);
  switch (i) {
    case "XYX":
      n.set(u * y, h * _, h * E, u * p);
      break;
    case "YZY":
      n.set(h * E, u * y, h * _, u * p);
      break;
    case "ZXZ":
      n.set(h * _, h * E, u * y, u * p);
      break;
    case "XZX":
      n.set(u * y, h * R, h * w, u * p);
      break;
    case "YXY":
      n.set(h * w, u * y, h * R, u * p);
      break;
    case "ZYZ":
      n.set(h * R, h * w, u * y, u * p);
      break;
    default:
      console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
  }
}
function _d(n, e) {
  switch (e.constructor) {
    case Float32Array:
      return n;
    case Uint32Array:
      return n / 4294967295;
    case Uint16Array:
      return n / 65535;
    case Uint8Array:
      return n / 255;
    case Int32Array:
      return Math.max(n / 2147483647, -1);
    case Int16Array:
      return Math.max(n / 32767, -1);
    case Int8Array:
      return Math.max(n / 127, -1);
    default:
      throw new Error("Invalid component type.");
  }
}
function xi(n, e) {
  switch (e.constructor) {
    case Float32Array:
      return n;
    case Uint32Array:
      return Math.round(n * 4294967295);
    case Uint16Array:
      return Math.round(n * 65535);
    case Uint8Array:
      return Math.round(n * 255);
    case Int32Array:
      return Math.round(n * 2147483647);
    case Int16Array:
      return Math.round(n * 32767);
    case Int8Array:
      return Math.round(n * 127);
    default:
      throw new Error("Invalid component type.");
  }
}
const o4 = {
  DEG2RAD: r_,
  RAD2DEG: I1,
  generateUUID: mh,
  clamp: Gs,
  euclideanModulo: vP,
  mapLinear: hG,
  inverseLerp: pG,
  lerp: gT,
  damp: mG,
  pingpong: vG,
  smoothstep: gG,
  smootherstep: yG,
  randInt: SG,
  randFloat: _G,
  randFloatSpread: xG,
  seededRandom: EG,
  degToRad: bG,
  radToDeg: TG,
  isPowerOfTwo: fO,
  ceilPowerOfTwo: a4,
  floorPowerOfTwo: vR,
  setQuaternionFromProperEuler: wG,
  normalize: xi,
  denormalize: _d
};
class $t {
  constructor(e = 0, t = 0) {
    $t.prototype.isVector2 = !0, this.x = e, this.y = t;
  }
  get width() {
    return this.x;
  }
  set width(e) {
    this.x = e;
  }
  get height() {
    return this.y;
  }
  set height(e) {
    this.y = e;
  }
  set(e, t) {
    return this.x = e, this.y = t, this;
  }
  setScalar(e) {
    return this.x = e, this.y = e, this;
  }
  setX(e) {
    return this.x = e, this;
  }
  setY(e) {
    return this.y = e, this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this;
  }
  add(e) {
    return this.x += e.x, this.y += e.y, this;
  }
  addScalar(e) {
    return this.x += e, this.y += e, this;
  }
  addVectors(e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this;
  }
  addScaledVector(e, t) {
    return this.x += e.x * t, this.y += e.y * t, this;
  }
  sub(e) {
    return this.x -= e.x, this.y -= e.y, this;
  }
  subScalar(e) {
    return this.x -= e, this.y -= e, this;
  }
  subVectors(e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this;
  }
  multiply(e) {
    return this.x *= e.x, this.y *= e.y, this;
  }
  multiplyScalar(e) {
    return this.x *= e, this.y *= e, this;
  }
  divide(e) {
    return this.x /= e.x, this.y /= e.y, this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  applyMatrix3(e) {
    const t = this.x, r = this.y, i = e.elements;
    return this.x = i[0] * t + i[3] * r + i[6], this.y = i[1] * t + i[4] * r + i[7], this;
  }
  min(e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
  }
  max(e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
  }
  clamp(e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
  }
  clampScalar(e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
  }
  clampLength(e, t) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(Math.max(e, Math.min(t, r)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
  }
  roundToZero() {
    return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y;
  }
  cross(e) {
    return this.x * e.y - this.y * e.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  angleTo(e) {
    const t = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (t === 0)
      return Math.PI / 2;
    const r = this.dot(e) / t;
    return Math.acos(Gs(r, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const t = this.x - e.x, r = this.y - e.y;
    return t * t + r * r;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
  }
  lerpVectors(e, t, r) {
    return this.x = e.x + (t.x - e.x) * r, this.y = e.y + (t.y - e.y) * r, this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y;
  }
  fromArray(e, t = 0) {
    return this.x = e[t], this.y = e[t + 1], this;
  }
  toArray(e = [], t = 0) {
    return e[t] = this.x, e[t + 1] = this.y, e;
  }
  fromBufferAttribute(e, t) {
    return this.x = e.getX(t), this.y = e.getY(t), this;
  }
  rotateAround(e, t) {
    const r = Math.cos(t), i = Math.sin(t), o = this.x - e.x, l = this.y - e.y;
    return this.x = o * r - l * i + e.x, this.y = o * i + l * r + e.y, this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y;
  }
}
class _i {
  constructor(e, t, r, i, o, l, u, h, p) {
    _i.prototype.isMatrix3 = !0, this.elements = [
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1
    ], e !== void 0 && this.set(e, t, r, i, o, l, u, h, p);
  }
  set(e, t, r, i, o, l, u, h, p) {
    const y = this.elements;
    return y[0] = e, y[1] = i, y[2] = u, y[3] = t, y[4] = o, y[5] = h, y[6] = r, y[7] = l, y[8] = p, this;
  }
  identity() {
    return this.set(
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1
    ), this;
  }
  copy(e) {
    const t = this.elements, r = e.elements;
    return t[0] = r[0], t[1] = r[1], t[2] = r[2], t[3] = r[3], t[4] = r[4], t[5] = r[5], t[6] = r[6], t[7] = r[7], t[8] = r[8], this;
  }
  extractBasis(e, t, r) {
    return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), r.setFromMatrix3Column(this, 2), this;
  }
  setFromMatrix4(e) {
    const t = e.elements;
    return this.set(
      t[0],
      t[4],
      t[8],
      t[1],
      t[5],
      t[9],
      t[2],
      t[6],
      t[10]
    ), this;
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, t) {
    const r = e.elements, i = t.elements, o = this.elements, l = r[0], u = r[3], h = r[6], p = r[1], y = r[4], _ = r[7], E = r[2], w = r[5], R = r[8], U = i[0], L = i[3], A = i[6], k = i[1], F = i[4], H = i[7], B = i[2], j = i[5], Y = i[8];
    return o[0] = l * U + u * k + h * B, o[3] = l * L + u * F + h * j, o[6] = l * A + u * H + h * Y, o[1] = p * U + y * k + _ * B, o[4] = p * L + y * F + _ * j, o[7] = p * A + y * H + _ * Y, o[2] = E * U + w * k + R * B, o[5] = E * L + w * F + R * j, o[8] = E * A + w * H + R * Y, this;
  }
  multiplyScalar(e) {
    const t = this.elements;
    return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
  }
  determinant() {
    const e = this.elements, t = e[0], r = e[1], i = e[2], o = e[3], l = e[4], u = e[5], h = e[6], p = e[7], y = e[8];
    return t * l * y - t * u * p - r * o * y + r * u * h + i * o * p - i * l * h;
  }
  invert() {
    const e = this.elements, t = e[0], r = e[1], i = e[2], o = e[3], l = e[4], u = e[5], h = e[6], p = e[7], y = e[8], _ = y * l - u * p, E = u * h - y * o, w = p * o - l * h, R = t * _ + r * E + i * w;
    if (R === 0)
      return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const U = 1 / R;
    return e[0] = _ * U, e[1] = (i * p - y * r) * U, e[2] = (u * r - i * l) * U, e[3] = E * U, e[4] = (y * t - i * h) * U, e[5] = (i * o - u * t) * U, e[6] = w * U, e[7] = (r * h - p * t) * U, e[8] = (l * t - r * o) * U, this;
  }
  transpose() {
    let e;
    const t = this.elements;
    return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
  }
  getNormalMatrix(e) {
    return this.setFromMatrix4(e).invert().transpose();
  }
  transposeIntoArray(e) {
    const t = this.elements;
    return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
  }
  setUvTransform(e, t, r, i, o, l, u) {
    const h = Math.cos(o), p = Math.sin(o);
    return this.set(
      r * h,
      r * p,
      -r * (h * l + p * u) + l + e,
      -i * p,
      i * h,
      -i * (-p * l + h * u) + u + t,
      0,
      0,
      1
    ), this;
  }
  //
  scale(e, t) {
    return this.premultiply(gD.makeScale(e, t)), this;
  }
  rotate(e) {
    return this.premultiply(gD.makeRotation(-e)), this;
  }
  translate(e, t) {
    return this.premultiply(gD.makeTranslation(e, t)), this;
  }
  // for 2D Transforms
  makeTranslation(e, t) {
    return e.isVector2 ? this.set(
      1,
      0,
      e.x,
      0,
      1,
      e.y,
      0,
      0,
      1
    ) : this.set(
      1,
      0,
      e,
      0,
      1,
      t,
      0,
      0,
      1
    ), this;
  }
  makeRotation(e) {
    const t = Math.cos(e), r = Math.sin(e);
    return this.set(
      t,
      -r,
      0,
      r,
      t,
      0,
      0,
      0,
      1
    ), this;
  }
  makeScale(e, t) {
    return this.set(
      e,
      0,
      0,
      0,
      t,
      0,
      0,
      0,
      1
    ), this;
  }
  //
  equals(e) {
    const t = this.elements, r = e.elements;
    for (let i = 0; i < 9; i++)
      if (t[i] !== r[i])
        return !1;
    return !0;
  }
  fromArray(e, t = 0) {
    for (let r = 0; r < 9; r++)
      this.elements[r] = e[r + t];
    return this;
  }
  toArray(e = [], t = 0) {
    const r = this.elements;
    return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e;
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
const gD = /* @__PURE__ */ new _i();
function s4(n) {
  for (let e = n.length - 1; e >= 0; --e)
    if (n[e] >= 65535)
      return !0;
  return !1;
}
const MG = {
  Int8Array,
  Uint8Array,
  Uint8ClampedArray,
  Int16Array,
  Uint16Array,
  Int32Array,
  Uint32Array,
  Float32Array,
  Float64Array
};
function C1(n, e) {
  return new MG[n](e);
}
function NT(n) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", n);
}
function l4() {
  const n = NT("canvas");
  return n.style.display = "block", n;
}
const vN = {};
function yT(n) {
  n in vN || (vN[n] = !0, console.warn(n));
}
function U1(n) {
  return n < 0.04045 ? n * 0.0773993808 : Math.pow(n * 0.9478672986 + 0.0521327014, 2.4);
}
function yD(n) {
  return n < 31308e-7 ? n * 12.92 : 1.055 * Math.pow(n, 0.41666) - 0.055;
}
const CG = /* @__PURE__ */ new _i().fromArray([
  0.8224621,
  0.0331941,
  0.0170827,
  0.177538,
  0.9668058,
  0.0723974,
  -1e-7,
  1e-7,
  0.9105199
]), RG = /* @__PURE__ */ new _i().fromArray([
  1.2249401,
  -0.0420569,
  -0.0196376,
  -0.2249404,
  1.0420571,
  -0.0786361,
  1e-7,
  0,
  1.0982735
]);
function AG(n) {
  return n.convertSRGBToLinear().applyMatrix3(RG);
}
function DG(n) {
  return n.applyMatrix3(CG).convertLinearToSRGB();
}
const LG = {
  [um]: (n) => n,
  [Mo]: (n) => n.convertSRGBToLinear(),
  [KT]: AG
}, OG = {
  [um]: (n) => n,
  [Mo]: (n) => n.convertLinearToSRGB(),
  [KT]: DG
}, sp = {
  enabled: !0,
  get legacyMode() {
    return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."), !this.enabled;
  },
  set legacyMode(n) {
    console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."), this.enabled = !n;
  },
  get workingColorSpace() {
    return um;
  },
  set workingColorSpace(n) {
    console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
  },
  convert: function(n, e, t) {
    if (this.enabled === !1 || e === t || !e || !t)
      return n;
    const r = LG[e], i = OG[t];
    if (r === void 0 || i === void 0)
      throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);
    return i(r(n));
  },
  fromWorkingColorSpace: function(n, e) {
    return this.convert(n, this.workingColorSpace, e);
  },
  toWorkingColorSpace: function(n, e) {
    return this.convert(n, e, this.workingColorSpace);
  }
};
let Qx;
class gP {
  static getDataURL(e) {
    if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u")
      return e.src;
    let t;
    if (e instanceof HTMLCanvasElement)
      t = e;
    else {
      Qx === void 0 && (Qx = NT("canvas")), Qx.width = e.width, Qx.height = e.height;
      const r = Qx.getContext("2d");
      e instanceof ImageData ? r.putImageData(e, 0, 0) : r.drawImage(e, 0, 0, e.width, e.height), t = Qx;
    }
    return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", 0.6)) : t.toDataURL("image/png");
  }
  static sRGBToLinear(e) {
    if (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && e instanceof ImageBitmap) {
      const t = NT("canvas");
      t.width = e.width, t.height = e.height;
      const r = t.getContext("2d");
      r.drawImage(e, 0, 0, e.width, e.height);
      const i = r.getImageData(0, 0, e.width, e.height), o = i.data;
      for (let l = 0; l < o.length; l++)
        o[l] = U1(o[l] / 255) * 255;
      return r.putImageData(i, 0, 0), t;
    } else if (e.data) {
      const t = e.data.slice(0);
      for (let r = 0; r < t.length; r++)
        t instanceof Uint8Array || t instanceof Uint8ClampedArray ? t[r] = Math.floor(U1(t[r] / 255) * 255) : t[r] = U1(t[r]);
      return {
        data: t,
        width: e.width,
        height: e.height
      };
    } else
      return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."), e;
  }
}
let PG = 0;
class JS {
  constructor(e = null) {
    this.isSource = !0, Object.defineProperty(this, "id", { value: PG++ }), this.uuid = mh(), this.data = e, this.version = 0;
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    if (!t && e.images[this.uuid] !== void 0)
      return e.images[this.uuid];
    const r = {
      uuid: this.uuid,
      url: ""
    }, i = this.data;
    if (i !== null) {
      let o;
      if (Array.isArray(i)) {
        o = [];
        for (let l = 0, u = i.length; l < u; l++)
          i[l].isDataTexture ? o.push(SD(i[l].image)) : o.push(SD(i[l]));
      } else
        o = SD(i);
      r.url = o;
    }
    return t || (e.images[this.uuid] = r), r;
  }
}
function SD(n) {
  return typeof HTMLImageElement < "u" && n instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && n instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && n instanceof ImageBitmap ? gP.getDataURL(n) : n.data ? {
    data: Array.from(n.data),
    width: n.width,
    height: n.height,
    type: n.data.constructor.name
  } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
let UG = 0;
class Es extends wv {
  constructor(e = Es.DEFAULT_IMAGE, t = Es.DEFAULT_MAPPING, r = Vc, i = Vc, o = Ss, l = p0, u = Sd, h = Sv, p = Es.DEFAULT_ANISOTROPY, y = d0) {
    super(), this.isTexture = !0, Object.defineProperty(this, "id", { value: UG++ }), this.uuid = mh(), this.name = "", this.source = new JS(e), this.mipmaps = [], this.mapping = t, this.channel = 0, this.wrapS = r, this.wrapT = i, this.magFilter = o, this.minFilter = l, this.anisotropy = p, this.format = u, this.internalFormat = null, this.type = h, this.offset = new $t(0, 0), this.repeat = new $t(1, 1), this.center = new $t(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new _i(), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, typeof y == "string" ? this.colorSpace = y : (yT("THREE.Texture: Property .encoding has been replaced by .colorSpace."), this.colorSpace = y === f0 ? Mo : d0), this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1, this.needsPMREMUpdate = !1;
  }
  get image() {
    return this.source.data;
  }
  set image(e = null) {
    this.source.data = e;
  }
  updateMatrix() {
    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.name = e.name, this.source = e.source, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.channel = e.channel, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.colorSpace = e.colorSpace, this.userData = JSON.parse(JSON.stringify(e.userData)), this.needsUpdate = !0, this;
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    if (!t && e.textures[this.uuid] !== void 0)
      return e.textures[this.uuid];
    const r = {
      metadata: {
        version: 4.6,
        type: "Texture",
        generator: "Texture.toJSON"
      },
      uuid: this.uuid,
      name: this.name,
      image: this.source.toJSON(e).uuid,
      mapping: this.mapping,
      channel: this.channel,
      repeat: [this.repeat.x, this.repeat.y],
      offset: [this.offset.x, this.offset.y],
      center: [this.center.x, this.center.y],
      rotation: this.rotation,
      wrap: [this.wrapS, this.wrapT],
      format: this.format,
      internalFormat: this.internalFormat,
      type: this.type,
      colorSpace: this.colorSpace,
      minFilter: this.minFilter,
      magFilter: this.magFilter,
      anisotropy: this.anisotropy,
      flipY: this.flipY,
      generateMipmaps: this.generateMipmaps,
      premultiplyAlpha: this.premultiplyAlpha,
      unpackAlignment: this.unpackAlignment
    };
    return Object.keys(this.userData).length > 0 && (r.userData = this.userData), t || (e.textures[this.uuid] = r), r;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(e) {
    if (this.mapping !== FR)
      return e;
    if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1)
      switch (this.wrapS) {
        case RT:
          e.x = e.x - Math.floor(e.x);
          break;
        case Vc:
          e.x = e.x < 0 ? 0 : 1;
          break;
        case AT:
          Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
          break;
      }
    if (e.y < 0 || e.y > 1)
      switch (this.wrapT) {
        case RT:
          e.y = e.y - Math.floor(e.y);
          break;
        case Vc:
          e.y = e.y < 0 ? 0 : 1;
          break;
        case AT:
          Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
          break;
      }
    return this.flipY && (e.y = 1 - e.y), e;
  }
  set needsUpdate(e) {
    e === !0 && (this.version++, this.source.needsUpdate = !0);
  }
  get encoding() {
    return yT("THREE.Texture: Property .encoding has been replaced by .colorSpace."), this.colorSpace === Mo ? f0 : pP;
  }
  set encoding(e) {
    yT("THREE.Texture: Property .encoding has been replaced by .colorSpace."), this.colorSpace = e === f0 ? Mo : d0;
  }
}
Es.DEFAULT_IMAGE = null;
Es.DEFAULT_MAPPING = FR;
Es.DEFAULT_ANISOTROPY = 1;
class Ma {
  constructor(e = 0, t = 0, r = 0, i = 1) {
    Ma.prototype.isVector4 = !0, this.x = e, this.y = t, this.z = r, this.w = i;
  }
  get width() {
    return this.z;
  }
  set width(e) {
    this.z = e;
  }
  get height() {
    return this.w;
  }
  set height(e) {
    this.w = e;
  }
  set(e, t, r, i) {
    return this.x = e, this.y = t, this.z = r, this.w = i, this;
  }
  setScalar(e) {
    return this.x = e, this.y = e, this.z = e, this.w = e, this;
  }
  setX(e) {
    return this.x = e, this;
  }
  setY(e) {
    return this.y = e, this;
  }
  setZ(e) {
    return this.z = e, this;
  }
  setW(e) {
    return this.w = e, this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      case 3:
        this.w = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
  }
  add(e) {
    return this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this;
  }
  addScalar(e) {
    return this.x += e, this.y += e, this.z += e, this.w += e, this;
  }
  addVectors(e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
  }
  addScaledVector(e, t) {
    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
  }
  sub(e) {
    return this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this;
  }
  subScalar(e) {
    return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
  }
  subVectors(e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
  }
  multiply(e) {
    return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
  }
  multiplyScalar(e) {
    return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
  }
  applyMatrix4(e) {
    const t = this.x, r = this.y, i = this.z, o = this.w, l = e.elements;
    return this.x = l[0] * t + l[4] * r + l[8] * i + l[12] * o, this.y = l[1] * t + l[5] * r + l[9] * i + l[13] * o, this.z = l[2] * t + l[6] * r + l[10] * i + l[14] * o, this.w = l[3] * t + l[7] * r + l[11] * i + l[15] * o, this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  setAxisAngleFromQuaternion(e) {
    this.w = 2 * Math.acos(e.w);
    const t = Math.sqrt(1 - e.w * e.w);
    return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
  }
  setAxisAngleFromRotationMatrix(e) {
    let t, r, i, o;
    const h = e.elements, p = h[0], y = h[4], _ = h[8], E = h[1], w = h[5], R = h[9], U = h[2], L = h[6], A = h[10];
    if (Math.abs(y - E) < 0.01 && Math.abs(_ - U) < 0.01 && Math.abs(R - L) < 0.01) {
      if (Math.abs(y + E) < 0.1 && Math.abs(_ + U) < 0.1 && Math.abs(R + L) < 0.1 && Math.abs(p + w + A - 3) < 0.1)
        return this.set(1, 0, 0, 0), this;
      t = Math.PI;
      const F = (p + 1) / 2, H = (w + 1) / 2, B = (A + 1) / 2, j = (y + E) / 4, Y = (_ + U) / 4, ee = (R + L) / 4;
      return F > H && F > B ? F < 0.01 ? (r = 0, i = 0.707106781, o = 0.707106781) : (r = Math.sqrt(F), i = j / r, o = Y / r) : H > B ? H < 0.01 ? (r = 0.707106781, i = 0, o = 0.707106781) : (i = Math.sqrt(H), r = j / i, o = ee / i) : B < 0.01 ? (r = 0.707106781, i = 0.707106781, o = 0) : (o = Math.sqrt(B), r = Y / o, i = ee / o), this.set(r, i, o, t), this;
    }
    let k = Math.sqrt((L - R) * (L - R) + (_ - U) * (_ - U) + (E - y) * (E - y));
    return Math.abs(k) < 1e-3 && (k = 1), this.x = (L - R) / k, this.y = (_ - U) / k, this.z = (E - y) / k, this.w = Math.acos((p + w + A - 1) / 2), this;
  }
  min(e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
  }
  max(e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
  }
  clamp(e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
  }
  clampScalar(e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
  }
  clampLength(e, t) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(Math.max(e, Math.min(t, r)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
  }
  roundToZero() {
    return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this.w = Math.trunc(this.w), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
  }
  lerpVectors(e, t, r) {
    return this.x = e.x + (t.x - e.x) * r, this.y = e.y + (t.y - e.y) * r, this.z = e.z + (t.z - e.z) * r, this.w = e.w + (t.w - e.w) * r, this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }
  fromArray(e, t = 0) {
    return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
  }
  toArray(e = [], t = 0) {
    return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
  }
  fromBufferAttribute(e, t) {
    return this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z, yield this.w;
  }
}
class u4 extends wv {
  constructor(e = 1, t = 1, r = {}) {
    super(), this.isRenderTarget = !0, this.width = e, this.height = t, this.depth = 1, this.scissor = new Ma(0, 0, e, t), this.scissorTest = !1, this.viewport = new Ma(0, 0, e, t);
    const i = { width: e, height: t, depth: 1 };
    r.encoding !== void 0 && (yT("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."), r.colorSpace = r.encoding === f0 ? Mo : d0), this.texture = new Es(i, r.mapping, r.wrapS, r.wrapT, r.magFilter, r.minFilter, r.format, r.type, r.anisotropy, r.colorSpace), this.texture.isRenderTargetTexture = !0, this.texture.flipY = !1, this.texture.generateMipmaps = r.generateMipmaps !== void 0 ? r.generateMipmaps : !1, this.texture.internalFormat = r.internalFormat !== void 0 ? r.internalFormat : null, this.texture.minFilter = r.minFilter !== void 0 ? r.minFilter : Ss, this.depthBuffer = r.depthBuffer !== void 0 ? r.depthBuffer : !0, this.stencilBuffer = r.stencilBuffer !== void 0 ? r.stencilBuffer : !1, this.depthTexture = r.depthTexture !== void 0 ? r.depthTexture : null, this.samples = r.samples !== void 0 ? r.samples : 0;
  }
  setSize(e, t, r = 1) {
    (this.width !== e || this.height !== t || this.depth !== r) && (this.width = e, this.height = t, this.depth = r, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = r, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    this.width = e.width, this.height = e.height, this.depth = e.depth, this.scissor.copy(e.scissor), this.scissorTest = e.scissorTest, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.isRenderTargetTexture = !0;
    const t = Object.assign({}, e.texture.image);
    return this.texture.source = new JS(t), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()), this.samples = e.samples, this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class cm extends u4 {
  constructor(e = 1, t = 1, r = {}) {
    super(e, t, r), this.isWebGLRenderTarget = !0;
  }
}
class BR extends Es {
  constructor(e = null, t = 1, r = 1, i = 1) {
    super(null), this.isDataArrayTexture = !0, this.image = { data: e, width: t, height: r, depth: i }, this.magFilter = pl, this.minFilter = pl, this.wrapR = Vc, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
  }
}
class NG extends cm {
  constructor(e = 1, t = 1, r = 1) {
    super(e, t), this.isWebGLArrayRenderTarget = !0, this.depth = r, this.texture = new BR(null, e, t, r), this.texture.isRenderTargetTexture = !0;
  }
}
class yP extends Es {
  constructor(e = null, t = 1, r = 1, i = 1) {
    super(null), this.isData3DTexture = !0, this.image = { data: e, width: t, height: r, depth: i }, this.magFilter = pl, this.minFilter = pl, this.wrapR = Vc, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
  }
}
class kG extends cm {
  constructor(e = 1, t = 1, r = 1) {
    super(e, t), this.isWebGL3DRenderTarget = !0, this.depth = r, this.texture = new yP(null, e, t, r), this.texture.isRenderTargetTexture = !0;
  }
}
class FG extends cm {
  constructor(e = 1, t = 1, r = 1, i = {}) {
    super(e, t, i), this.isWebGLMultipleRenderTargets = !0;
    const o = this.texture;
    this.texture = [];
    for (let l = 0; l < r; l++)
      this.texture[l] = o.clone(), this.texture[l].isRenderTargetTexture = !0;
  }
  setSize(e, t, r = 1) {
    if (this.width !== e || this.height !== t || this.depth !== r) {
      this.width = e, this.height = t, this.depth = r;
      for (let i = 0, o = this.texture.length; i < o; i++)
        this.texture[i].image.width = e, this.texture[i].image.height = t, this.texture[i].image.depth = r;
      this.dispose();
    }
    this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
  }
  copy(e) {
    this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.scissor.copy(e.scissor), this.scissorTest = e.scissorTest, this.viewport.copy(e.viewport), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()), this.texture.length = 0;
    for (let t = 0, r = e.texture.length; t < r; t++)
      this.texture[t] = e.texture[t].clone(), this.texture[t].isRenderTargetTexture = !0;
    return this;
  }
}
class jc {
  constructor(e = 0, t = 0, r = 0, i = 1) {
    this.isQuaternion = !0, this._x = e, this._y = t, this._z = r, this._w = i;
  }
  static slerpFlat(e, t, r, i, o, l, u) {
    let h = r[i + 0], p = r[i + 1], y = r[i + 2], _ = r[i + 3];
    const E = o[l + 0], w = o[l + 1], R = o[l + 2], U = o[l + 3];
    if (u === 0) {
      e[t + 0] = h, e[t + 1] = p, e[t + 2] = y, e[t + 3] = _;
      return;
    }
    if (u === 1) {
      e[t + 0] = E, e[t + 1] = w, e[t + 2] = R, e[t + 3] = U;
      return;
    }
    if (_ !== U || h !== E || p !== w || y !== R) {
      let L = 1 - u;
      const A = h * E + p * w + y * R + _ * U, k = A >= 0 ? 1 : -1, F = 1 - A * A;
      if (F > Number.EPSILON) {
        const B = Math.sqrt(F), j = Math.atan2(B, A * k);
        L = Math.sin(L * j) / B, u = Math.sin(u * j) / B;
      }
      const H = u * k;
      if (h = h * L + E * H, p = p * L + w * H, y = y * L + R * H, _ = _ * L + U * H, L === 1 - u) {
        const B = 1 / Math.sqrt(h * h + p * p + y * y + _ * _);
        h *= B, p *= B, y *= B, _ *= B;
      }
    }
    e[t] = h, e[t + 1] = p, e[t + 2] = y, e[t + 3] = _;
  }
  static multiplyQuaternionsFlat(e, t, r, i, o, l) {
    const u = r[i], h = r[i + 1], p = r[i + 2], y = r[i + 3], _ = o[l], E = o[l + 1], w = o[l + 2], R = o[l + 3];
    return e[t] = u * R + y * _ + h * w - p * E, e[t + 1] = h * R + y * E + p * _ - u * w, e[t + 2] = p * R + y * w + u * E - h * _, e[t + 3] = y * R - u * _ - h * E - p * w, e;
  }
  get x() {
    return this._x;
  }
  set x(e) {
    this._x = e, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    this._y = e, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    this._z = e, this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(e) {
    this._w = e, this._onChangeCallback();
  }
  set(e, t, r, i) {
    return this._x = e, this._y = t, this._z = r, this._w = i, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(e) {
    return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
  }
  setFromEuler(e, t) {
    const r = e._x, i = e._y, o = e._z, l = e._order, u = Math.cos, h = Math.sin, p = u(r / 2), y = u(i / 2), _ = u(o / 2), E = h(r / 2), w = h(i / 2), R = h(o / 2);
    switch (l) {
      case "XYZ":
        this._x = E * y * _ + p * w * R, this._y = p * w * _ - E * y * R, this._z = p * y * R + E * w * _, this._w = p * y * _ - E * w * R;
        break;
      case "YXZ":
        this._x = E * y * _ + p * w * R, this._y = p * w * _ - E * y * R, this._z = p * y * R - E * w * _, this._w = p * y * _ + E * w * R;
        break;
      case "ZXY":
        this._x = E * y * _ - p * w * R, this._y = p * w * _ + E * y * R, this._z = p * y * R + E * w * _, this._w = p * y * _ - E * w * R;
        break;
      case "ZYX":
        this._x = E * y * _ - p * w * R, this._y = p * w * _ + E * y * R, this._z = p * y * R - E * w * _, this._w = p * y * _ + E * w * R;
        break;
      case "YZX":
        this._x = E * y * _ + p * w * R, this._y = p * w * _ + E * y * R, this._z = p * y * R - E * w * _, this._w = p * y * _ - E * w * R;
        break;
      case "XZY":
        this._x = E * y * _ - p * w * R, this._y = p * w * _ - E * y * R, this._z = p * y * R + E * w * _, this._w = p * y * _ + E * w * R;
        break;
      default:
        console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + l);
    }
    return t !== !1 && this._onChangeCallback(), this;
  }
  setFromAxisAngle(e, t) {
    const r = t / 2, i = Math.sin(r);
    return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(r), this._onChangeCallback(), this;
  }
  setFromRotationMatrix(e) {
    const t = e.elements, r = t[0], i = t[4], o = t[8], l = t[1], u = t[5], h = t[9], p = t[2], y = t[6], _ = t[10], E = r + u + _;
    if (E > 0) {
      const w = 0.5 / Math.sqrt(E + 1);
      this._w = 0.25 / w, this._x = (y - h) * w, this._y = (o - p) * w, this._z = (l - i) * w;
    } else if (r > u && r > _) {
      const w = 2 * Math.sqrt(1 + r - u - _);
      this._w = (y - h) / w, this._x = 0.25 * w, this._y = (i + l) / w, this._z = (o + p) / w;
    } else if (u > _) {
      const w = 2 * Math.sqrt(1 + u - r - _);
      this._w = (o - p) / w, this._x = (i + l) / w, this._y = 0.25 * w, this._z = (h + y) / w;
    } else {
      const w = 2 * Math.sqrt(1 + _ - r - u);
      this._w = (l - i) / w, this._x = (o + p) / w, this._y = (h + y) / w, this._z = 0.25 * w;
    }
    return this._onChangeCallback(), this;
  }
  setFromUnitVectors(e, t) {
    let r = e.dot(t) + 1;
    return r < Number.EPSILON ? (r = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = r) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = r)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = r), this.normalize();
  }
  angleTo(e) {
    return 2 * Math.acos(Math.abs(Gs(this.dot(e), -1, 1)));
  }
  rotateTowards(e, t) {
    const r = this.angleTo(e);
    if (r === 0)
      return this;
    const i = Math.min(1, t / r);
    return this.slerp(e, i), this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
  }
  dot(e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }
  lengthSq() {
    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
  }
  length() {
    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
  }
  normalize() {
    let e = this.length();
    return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
  }
  multiply(e) {
    return this.multiplyQuaternions(this, e);
  }
  premultiply(e) {
    return this.multiplyQuaternions(e, this);
  }
  multiplyQuaternions(e, t) {
    const r = e._x, i = e._y, o = e._z, l = e._w, u = t._x, h = t._y, p = t._z, y = t._w;
    return this._x = r * y + l * u + i * p - o * h, this._y = i * y + l * h + o * u - r * p, this._z = o * y + l * p + r * h - i * u, this._w = l * y - r * u - i * h - o * p, this._onChangeCallback(), this;
  }
  slerp(e, t) {
    if (t === 0)
      return this;
    if (t === 1)
      return this.copy(e);
    const r = this._x, i = this._y, o = this._z, l = this._w;
    let u = l * e._w + r * e._x + i * e._y + o * e._z;
    if (u < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, u = -u) : this.copy(e), u >= 1)
      return this._w = l, this._x = r, this._y = i, this._z = o, this;
    const h = 1 - u * u;
    if (h <= Number.EPSILON) {
      const w = 1 - t;
      return this._w = w * l + t * this._w, this._x = w * r + t * this._x, this._y = w * i + t * this._y, this._z = w * o + t * this._z, this.normalize(), this._onChangeCallback(), this;
    }
    const p = Math.sqrt(h), y = Math.atan2(p, u), _ = Math.sin((1 - t) * y) / p, E = Math.sin(t * y) / p;
    return this._w = l * _ + this._w * E, this._x = r * _ + this._x * E, this._y = i * _ + this._y * E, this._z = o * _ + this._z * E, this._onChangeCallback(), this;
  }
  slerpQuaternions(e, t, r) {
    return this.copy(e).slerp(t, r);
  }
  random() {
    const e = Math.random(), t = Math.sqrt(1 - e), r = Math.sqrt(e), i = 2 * Math.PI * Math.random(), o = 2 * Math.PI * Math.random();
    return this.set(
      t * Math.cos(i),
      r * Math.sin(o),
      r * Math.cos(o),
      t * Math.sin(i)
    );
  }
  equals(e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
  }
  fromArray(e, t = 0) {
    return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
  }
  toArray(e = [], t = 0) {
    return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
  }
  fromBufferAttribute(e, t) {
    return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this;
  }
  toJSON() {
    return this.toArray();
  }
  _onChange(e) {
    return this._onChangeCallback = e, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._w;
  }
}
class Re {
  constructor(e = 0, t = 0, r = 0) {
    Re.prototype.isVector3 = !0, this.x = e, this.y = t, this.z = r;
  }
  set(e, t, r) {
    return r === void 0 && (r = this.z), this.x = e, this.y = t, this.z = r, this;
  }
  setScalar(e) {
    return this.x = e, this.y = e, this.z = e, this;
  }
  setX(e) {
    return this.x = e, this;
  }
  setY(e) {
    return this.y = e, this;
  }
  setZ(e) {
    return this.z = e, this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this;
  }
  add(e) {
    return this.x += e.x, this.y += e.y, this.z += e.z, this;
  }
  addScalar(e) {
    return this.x += e, this.y += e, this.z += e, this;
  }
  addVectors(e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
  }
  addScaledVector(e, t) {
    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
  }
  sub(e) {
    return this.x -= e.x, this.y -= e.y, this.z -= e.z, this;
  }
  subScalar(e) {
    return this.x -= e, this.y -= e, this.z -= e, this;
  }
  subVectors(e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
  }
  multiply(e) {
    return this.x *= e.x, this.y *= e.y, this.z *= e.z, this;
  }
  multiplyScalar(e) {
    return this.x *= e, this.y *= e, this.z *= e, this;
  }
  multiplyVectors(e, t) {
    return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
  }
  applyEuler(e) {
    return this.applyQuaternion(gN.setFromEuler(e));
  }
  applyAxisAngle(e, t) {
    return this.applyQuaternion(gN.setFromAxisAngle(e, t));
  }
  applyMatrix3(e) {
    const t = this.x, r = this.y, i = this.z, o = e.elements;
    return this.x = o[0] * t + o[3] * r + o[6] * i, this.y = o[1] * t + o[4] * r + o[7] * i, this.z = o[2] * t + o[5] * r + o[8] * i, this;
  }
  applyNormalMatrix(e) {
    return this.applyMatrix3(e).normalize();
  }
  applyMatrix4(e) {
    const t = this.x, r = this.y, i = this.z, o = e.elements, l = 1 / (o[3] * t + o[7] * r + o[11] * i + o[15]);
    return this.x = (o[0] * t + o[4] * r + o[8] * i + o[12]) * l, this.y = (o[1] * t + o[5] * r + o[9] * i + o[13]) * l, this.z = (o[2] * t + o[6] * r + o[10] * i + o[14]) * l, this;
  }
  applyQuaternion(e) {
    const t = this.x, r = this.y, i = this.z, o = e.x, l = e.y, u = e.z, h = e.w, p = h * t + l * i - u * r, y = h * r + u * t - o * i, _ = h * i + o * r - l * t, E = -o * t - l * r - u * i;
    return this.x = p * h + E * -o + y * -u - _ * -l, this.y = y * h + E * -l + _ * -o - p * -u, this.z = _ * h + E * -u + p * -l - y * -o, this;
  }
  project(e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
  }
  unproject(e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
  }
  transformDirection(e) {
    const t = this.x, r = this.y, i = this.z, o = e.elements;
    return this.x = o[0] * t + o[4] * r + o[8] * i, this.y = o[1] * t + o[5] * r + o[9] * i, this.z = o[2] * t + o[6] * r + o[10] * i, this.normalize();
  }
  divide(e) {
    return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  min(e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
  }
  max(e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
  }
  clamp(e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
  }
  clampScalar(e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
  }
  clampLength(e, t) {
    const r = this.length();
    return this.divideScalar(r || 1).multiplyScalar(Math.max(e, Math.min(t, r)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
  }
  roundToZero() {
    return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }
  // TODO lengthSquared?
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
  }
  lerpVectors(e, t, r) {
    return this.x = e.x + (t.x - e.x) * r, this.y = e.y + (t.y - e.y) * r, this.z = e.z + (t.z - e.z) * r, this;
  }
  cross(e) {
    return this.crossVectors(this, e);
  }
  crossVectors(e, t) {
    const r = e.x, i = e.y, o = e.z, l = t.x, u = t.y, h = t.z;
    return this.x = i * h - o * u, this.y = o * l - r * h, this.z = r * u - i * l, this;
  }
  projectOnVector(e) {
    const t = e.lengthSq();
    if (t === 0)
      return this.set(0, 0, 0);
    const r = e.dot(this) / t;
    return this.copy(e).multiplyScalar(r);
  }
  projectOnPlane(e) {
    return _D.copy(this).projectOnVector(e), this.sub(_D);
  }
  reflect(e) {
    return this.sub(_D.copy(e).multiplyScalar(2 * this.dot(e)));
  }
  angleTo(e) {
    const t = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (t === 0)
      return Math.PI / 2;
    const r = this.dot(e) / t;
    return Math.acos(Gs(r, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const t = this.x - e.x, r = this.y - e.y, i = this.z - e.z;
    return t * t + r * r + i * i;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
  }
  setFromSpherical(e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }
  setFromSphericalCoords(e, t, r) {
    const i = Math.sin(t) * e;
    return this.x = i * Math.sin(r), this.y = Math.cos(t) * e, this.z = i * Math.cos(r), this;
  }
  setFromCylindrical(e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }
  setFromCylindricalCoords(e, t, r) {
    return this.x = e * Math.sin(t), this.y = r, this.z = e * Math.cos(t), this;
  }
  setFromMatrixPosition(e) {
    const t = e.elements;
    return this.x = t[12], this.y = t[13], this.z = t[14], this;
  }
  setFromMatrixScale(e) {
    const t = this.setFromMatrixColumn(e, 0).length(), r = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
    return this.x = t, this.y = r, this.z = i, this;
  }
  setFromMatrixColumn(e, t) {
    return this.fromArray(e.elements, t * 4);
  }
  setFromMatrix3Column(e, t) {
    return this.fromArray(e.elements, t * 3);
  }
  setFromEuler(e) {
    return this.x = e._x, this.y = e._y, this.z = e._z, this;
  }
  setFromColor(e) {
    return this.x = e.r, this.y = e.g, this.z = e.b, this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }
  fromArray(e, t = 0) {
    return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
  }
  toArray(e = [], t = 0) {
    return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
  }
  fromBufferAttribute(e, t) {
    return this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
  }
  randomDirection() {
    const e = (Math.random() - 0.5) * 2, t = Math.random() * Math.PI * 2, r = Math.sqrt(1 - e ** 2);
    return this.x = r * Math.cos(t), this.y = r * Math.sin(t), this.z = e, this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z;
  }
}
const _D = /* @__PURE__ */ new Re(), gN = /* @__PURE__ */ new jc();
class dm {
  constructor(e = new Re(1 / 0, 1 / 0, 1 / 0), t = new Re(-1 / 0, -1 / 0, -1 / 0)) {
    this.isBox3 = !0, this.min = e, this.max = t;
  }
  set(e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }
  setFromArray(e) {
    this.makeEmpty();
    for (let t = 0, r = e.length; t < r; t += 3)
      this.expandByPoint(wg.fromArray(e, t));
    return this;
  }
  setFromBufferAttribute(e) {
    this.makeEmpty();
    for (let t = 0, r = e.count; t < r; t++)
      this.expandByPoint(wg.fromBufferAttribute(e, t));
    return this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let t = 0, r = e.length; t < r; t++)
      this.expandByPoint(e[t]);
    return this;
  }
  setFromCenterAndSize(e, t) {
    const r = wg.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
  }
  setFromObject(e, t = !1) {
    return this.makeEmpty(), this.expandByObject(e, t);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }
  makeEmpty() {
    return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
  }
  isEmpty() {
    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
  }
  getCenter(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return this.min.min(e), this.max.max(e), this;
  }
  expandByVector(e) {
    return this.min.sub(e), this.max.add(e), this;
  }
  expandByScalar(e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }
  expandByObject(e, t = !1) {
    if (e.updateWorldMatrix(!1, !1), e.boundingBox !== void 0)
      e.boundingBox === null && e.computeBoundingBox(), Zx.copy(e.boundingBox), Zx.applyMatrix4(e.matrixWorld), this.union(Zx);
    else {
      const i = e.geometry;
      if (i !== void 0)
        if (t && i.attributes !== void 0 && i.attributes.position !== void 0) {
          const o = i.attributes.position;
          for (let l = 0, u = o.count; l < u; l++)
            wg.fromBufferAttribute(o, l).applyMatrix4(e.matrixWorld), this.expandByPoint(wg);
        } else
          i.boundingBox === null && i.computeBoundingBox(), Zx.copy(i.boundingBox), Zx.applyMatrix4(e.matrixWorld), this.union(Zx);
    }
    const r = e.children;
    for (let i = 0, o = r.length; i < o; i++)
      this.expandByObject(r[i], t);
    return this;
  }
  containsPoint(e) {
    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
  }
  containsBox(e) {
    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
  }
  getParameter(e, t) {
    return t.set(
      (e.x - this.min.x) / (this.max.x - this.min.x),
      (e.y - this.min.y) / (this.max.y - this.min.y),
      (e.z - this.min.z) / (this.max.z - this.min.z)
    );
  }
  intersectsBox(e) {
    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
  }
  intersectsSphere(e) {
    return this.clampPoint(e.center, wg), wg.distanceToSquared(e.center) <= e.radius * e.radius;
  }
  intersectsPlane(e) {
    let t, r;
    return e.normal.x > 0 ? (t = e.normal.x * this.min.x, r = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, r = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, r += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, r += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, r += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, r += e.normal.z * this.min.z), t <= -e.constant && r >= -e.constant;
  }
  intersectsTriangle(e) {
    if (this.isEmpty())
      return !1;
    this.getCenter(Xb), JM.subVectors(this.max, Xb), Jx.subVectors(e.a, Xb), e1.subVectors(e.b, Xb), t1.subVectors(e.c, Xb), t0.subVectors(e1, Jx), n0.subVectors(t1, e1), kS.subVectors(Jx, t1);
    let t = [
      0,
      -t0.z,
      t0.y,
      0,
      -n0.z,
      n0.y,
      0,
      -kS.z,
      kS.y,
      t0.z,
      0,
      -t0.x,
      n0.z,
      0,
      -n0.x,
      kS.z,
      0,
      -kS.x,
      -t0.y,
      t0.x,
      0,
      -n0.y,
      n0.x,
      0,
      -kS.y,
      kS.x,
      0
    ];
    return !xD(t, Jx, e1, t1, JM) || (t = [1, 0, 0, 0, 1, 0, 0, 0, 1], !xD(t, Jx, e1, t1, JM)) ? !1 : (eC.crossVectors(t0, n0), t = [eC.x, eC.y, eC.z], xD(t, Jx, e1, t1, JM));
  }
  clampPoint(e, t) {
    return t.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return this.clampPoint(e, wg).distanceTo(e);
  }
  getBoundingSphere(e) {
    return this.isEmpty() ? e.makeEmpty() : (this.getCenter(e.center), e.radius = this.getSize(wg).length() * 0.5), e;
  }
  intersect(e) {
    return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
  }
  union(e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }
  applyMatrix4(e) {
    return this.isEmpty() ? this : (Tg[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), Tg[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), Tg[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), Tg[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), Tg[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), Tg[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), Tg[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), Tg[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(Tg), this);
  }
  translate(e) {
    return this.min.add(e), this.max.add(e), this;
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const Tg = [
  /* @__PURE__ */ new Re(),
  /* @__PURE__ */ new Re(),
  /* @__PURE__ */ new Re(),
  /* @__PURE__ */ new Re(),
  /* @__PURE__ */ new Re(),
  /* @__PURE__ */ new Re(),
  /* @__PURE__ */ new Re(),
  /* @__PURE__ */ new Re()
], wg = /* @__PURE__ */ new Re(), Zx = /* @__PURE__ */ new dm(), Jx = /* @__PURE__ */ new Re(), e1 = /* @__PURE__ */ new Re(), t1 = /* @__PURE__ */ new Re(), t0 = /* @__PURE__ */ new Re(), n0 = /* @__PURE__ */ new Re(), kS = /* @__PURE__ */ new Re(), Xb = /* @__PURE__ */ new Re(), JM = /* @__PURE__ */ new Re(), eC = /* @__PURE__ */ new Re(), FS = /* @__PURE__ */ new Re();
function xD(n, e, t, r, i) {
  for (let o = 0, l = n.length - 3; o <= l; o += 3) {
    FS.fromArray(n, o);
    const u = i.x * Math.abs(FS.x) + i.y * Math.abs(FS.y) + i.z * Math.abs(FS.z), h = e.dot(FS), p = t.dot(FS), y = r.dot(FS);
    if (Math.max(-Math.max(h, p, y), Math.min(h, p, y)) > u)
      return !1;
  }
  return !0;
}
const zG = /* @__PURE__ */ new dm(), qb = /* @__PURE__ */ new Re(), ED = /* @__PURE__ */ new Re();
class pp {
  constructor(e = new Re(), t = -1) {
    this.center = e, this.radius = t;
  }
  set(e, t) {
    return this.center.copy(e), this.radius = t, this;
  }
  setFromPoints(e, t) {
    const r = this.center;
    t !== void 0 ? r.copy(t) : zG.setFromPoints(e).getCenter(r);
    let i = 0;
    for (let o = 0, l = e.length; o < l; o++)
      i = Math.max(i, r.distanceToSquared(e[o]));
    return this.radius = Math.sqrt(i), this;
  }
  copy(e) {
    return this.center.copy(e.center), this.radius = e.radius, this;
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    return this.center.set(0, 0, 0), this.radius = -1, this;
  }
  containsPoint(e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(e) {
    return e.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(e) {
    const t = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= t * t;
  }
  intersectsBox(e) {
    return e.intersectsSphere(this);
  }
  intersectsPlane(e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(e, t) {
    const r = this.center.distanceToSquared(e);
    return t.copy(e), r > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
  }
  getBoundingBox(e) {
    return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
  }
  applyMatrix4(e) {
    return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
  }
  translate(e) {
    return this.center.add(e), this;
  }
  expandByPoint(e) {
    if (this.isEmpty())
      return this.center.copy(e), this.radius = 0, this;
    qb.subVectors(e, this.center);
    const t = qb.lengthSq();
    if (t > this.radius * this.radius) {
      const r = Math.sqrt(t), i = (r - this.radius) * 0.5;
      this.center.addScaledVector(qb, i / r), this.radius += i;
    }
    return this;
  }
  union(e) {
    return e.isEmpty() ? this : this.isEmpty() ? (this.copy(e), this) : (this.center.equals(e.center) === !0 ? this.radius = Math.max(this.radius, e.radius) : (ED.subVectors(e.center, this.center).setLength(e.radius), this.expandByPoint(qb.copy(e.center).add(ED)), this.expandByPoint(qb.copy(e.center).sub(ED))), this);
  }
  equals(e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Mg = /* @__PURE__ */ new Re(), bD = /* @__PURE__ */ new Re(), tC = /* @__PURE__ */ new Re(), r0 = /* @__PURE__ */ new Re(), TD = /* @__PURE__ */ new Re(), nC = /* @__PURE__ */ new Re(), wD = /* @__PURE__ */ new Re();
class v_ {
  constructor(e = new Re(), t = new Re(0, 0, -1)) {
    this.origin = e, this.direction = t;
  }
  set(e, t) {
    return this.origin.copy(e), this.direction.copy(t), this;
  }
  copy(e) {
    return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
  }
  at(e, t) {
    return t.copy(this.origin).addScaledVector(this.direction, e);
  }
  lookAt(e) {
    return this.direction.copy(e).sub(this.origin).normalize(), this;
  }
  recast(e) {
    return this.origin.copy(this.at(e, Mg)), this;
  }
  closestPointToPoint(e, t) {
    t.subVectors(e, this.origin);
    const r = t.dot(this.direction);
    return r < 0 ? t.copy(this.origin) : t.copy(this.origin).addScaledVector(this.direction, r);
  }
  distanceToPoint(e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }
  distanceSqToPoint(e) {
    const t = Mg.subVectors(e, this.origin).dot(this.direction);
    return t < 0 ? this.origin.distanceToSquared(e) : (Mg.copy(this.origin).addScaledVector(this.direction, t), Mg.distanceToSquared(e));
  }
  distanceSqToSegment(e, t, r, i) {
    bD.copy(e).add(t).multiplyScalar(0.5), tC.copy(t).sub(e).normalize(), r0.copy(this.origin).sub(bD);
    const o = e.distanceTo(t) * 0.5, l = -this.direction.dot(tC), u = r0.dot(this.direction), h = -r0.dot(tC), p = r0.lengthSq(), y = Math.abs(1 - l * l);
    let _, E, w, R;
    if (y > 0)
      if (_ = l * h - u, E = l * u - h, R = o * y, _ >= 0)
        if (E >= -R)
          if (E <= R) {
            const U = 1 / y;
            _ *= U, E *= U, w = _ * (_ + l * E + 2 * u) + E * (l * _ + E + 2 * h) + p;
          } else
            E = o, _ = Math.max(0, -(l * E + u)), w = -_ * _ + E * (E + 2 * h) + p;
        else
          E = -o, _ = Math.max(0, -(l * E + u)), w = -_ * _ + E * (E + 2 * h) + p;
      else
        E <= -R ? (_ = Math.max(0, -(-l * o + u)), E = _ > 0 ? -o : Math.min(Math.max(-o, -h), o), w = -_ * _ + E * (E + 2 * h) + p) : E <= R ? (_ = 0, E = Math.min(Math.max(-o, -h), o), w = E * (E + 2 * h) + p) : (_ = Math.max(0, -(l * o + u)), E = _ > 0 ? o : Math.min(Math.max(-o, -h), o), w = -_ * _ + E * (E + 2 * h) + p);
    else
      E = l > 0 ? -o : o, _ = Math.max(0, -(l * E + u)), w = -_ * _ + E * (E + 2 * h) + p;
    return r && r.copy(this.origin).addScaledVector(this.direction, _), i && i.copy(bD).addScaledVector(tC, E), w;
  }
  intersectSphere(e, t) {
    Mg.subVectors(e.center, this.origin);
    const r = Mg.dot(this.direction), i = Mg.dot(Mg) - r * r, o = e.radius * e.radius;
    if (i > o)
      return null;
    const l = Math.sqrt(o - i), u = r - l, h = r + l;
    return h < 0 ? null : u < 0 ? this.at(h, t) : this.at(u, t);
  }
  intersectsSphere(e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }
  distanceToPlane(e) {
    const t = e.normal.dot(this.direction);
    if (t === 0)
      return e.distanceToPoint(this.origin) === 0 ? 0 : null;
    const r = -(this.origin.dot(e.normal) + e.constant) / t;
    return r >= 0 ? r : null;
  }
  intersectPlane(e, t) {
    const r = this.distanceToPlane(e);
    return r === null ? null : this.at(r, t);
  }
  intersectsPlane(e) {
    const t = e.distanceToPoint(this.origin);
    return t === 0 || e.normal.dot(this.direction) * t < 0;
  }
  intersectBox(e, t) {
    let r, i, o, l, u, h;
    const p = 1 / this.direction.x, y = 1 / this.direction.y, _ = 1 / this.direction.z, E = this.origin;
    return p >= 0 ? (r = (e.min.x - E.x) * p, i = (e.max.x - E.x) * p) : (r = (e.max.x - E.x) * p, i = (e.min.x - E.x) * p), y >= 0 ? (o = (e.min.y - E.y) * y, l = (e.max.y - E.y) * y) : (o = (e.max.y - E.y) * y, l = (e.min.y - E.y) * y), r > l || o > i || ((o > r || isNaN(r)) && (r = o), (l < i || isNaN(i)) && (i = l), _ >= 0 ? (u = (e.min.z - E.z) * _, h = (e.max.z - E.z) * _) : (u = (e.max.z - E.z) * _, h = (e.min.z - E.z) * _), r > h || u > i) || ((u > r || r !== r) && (r = u), (h < i || i !== i) && (i = h), i < 0) ? null : this.at(r >= 0 ? r : i, t);
  }
  intersectsBox(e) {
    return this.intersectBox(e, Mg) !== null;
  }
  intersectTriangle(e, t, r, i, o) {
    TD.subVectors(t, e), nC.subVectors(r, e), wD.crossVectors(TD, nC);
    let l = this.direction.dot(wD), u;
    if (l > 0) {
      if (i)
        return null;
      u = 1;
    } else if (l < 0)
      u = -1, l = -l;
    else
      return null;
    r0.subVectors(this.origin, e);
    const h = u * this.direction.dot(nC.crossVectors(r0, nC));
    if (h < 0)
      return null;
    const p = u * this.direction.dot(TD.cross(r0));
    if (p < 0 || h + p > l)
      return null;
    const y = -u * r0.dot(wD);
    return y < 0 ? null : this.at(y / l, o);
  }
  applyMatrix4(e) {
    return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
  }
  equals(e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class ri {
  constructor(e, t, r, i, o, l, u, h, p, y, _, E, w, R, U, L) {
    ri.prototype.isMatrix4 = !0, this.elements = [
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1
    ], e !== void 0 && this.set(e, t, r, i, o, l, u, h, p, y, _, E, w, R, U, L);
  }
  set(e, t, r, i, o, l, u, h, p, y, _, E, w, R, U, L) {
    const A = this.elements;
    return A[0] = e, A[4] = t, A[8] = r, A[12] = i, A[1] = o, A[5] = l, A[9] = u, A[13] = h, A[2] = p, A[6] = y, A[10] = _, A[14] = E, A[3] = w, A[7] = R, A[11] = U, A[15] = L, this;
  }
  identity() {
    return this.set(
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  clone() {
    return new ri().fromArray(this.elements);
  }
  copy(e) {
    const t = this.elements, r = e.elements;
    return t[0] = r[0], t[1] = r[1], t[2] = r[2], t[3] = r[3], t[4] = r[4], t[5] = r[5], t[6] = r[6], t[7] = r[7], t[8] = r[8], t[9] = r[9], t[10] = r[10], t[11] = r[11], t[12] = r[12], t[13] = r[13], t[14] = r[14], t[15] = r[15], this;
  }
  copyPosition(e) {
    const t = this.elements, r = e.elements;
    return t[12] = r[12], t[13] = r[13], t[14] = r[14], this;
  }
  setFromMatrix3(e) {
    const t = e.elements;
    return this.set(
      t[0],
      t[3],
      t[6],
      0,
      t[1],
      t[4],
      t[7],
      0,
      t[2],
      t[5],
      t[8],
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  extractBasis(e, t, r) {
    return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), r.setFromMatrixColumn(this, 2), this;
  }
  makeBasis(e, t, r) {
    return this.set(
      e.x,
      t.x,
      r.x,
      0,
      e.y,
      t.y,
      r.y,
      0,
      e.z,
      t.z,
      r.z,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  extractRotation(e) {
    const t = this.elements, r = e.elements, i = 1 / n1.setFromMatrixColumn(e, 0).length(), o = 1 / n1.setFromMatrixColumn(e, 1).length(), l = 1 / n1.setFromMatrixColumn(e, 2).length();
    return t[0] = r[0] * i, t[1] = r[1] * i, t[2] = r[2] * i, t[3] = 0, t[4] = r[4] * o, t[5] = r[5] * o, t[6] = r[6] * o, t[7] = 0, t[8] = r[8] * l, t[9] = r[9] * l, t[10] = r[10] * l, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
  }
  makeRotationFromEuler(e) {
    const t = this.elements, r = e.x, i = e.y, o = e.z, l = Math.cos(r), u = Math.sin(r), h = Math.cos(i), p = Math.sin(i), y = Math.cos(o), _ = Math.sin(o);
    if (e.order === "XYZ") {
      const E = l * y, w = l * _, R = u * y, U = u * _;
      t[0] = h * y, t[4] = -h * _, t[8] = p, t[1] = w + R * p, t[5] = E - U * p, t[9] = -u * h, t[2] = U - E * p, t[6] = R + w * p, t[10] = l * h;
    } else if (e.order === "YXZ") {
      const E = h * y, w = h * _, R = p * y, U = p * _;
      t[0] = E + U * u, t[4] = R * u - w, t[8] = l * p, t[1] = l * _, t[5] = l * y, t[9] = -u, t[2] = w * u - R, t[6] = U + E * u, t[10] = l * h;
    } else if (e.order === "ZXY") {
      const E = h * y, w = h * _, R = p * y, U = p * _;
      t[0] = E - U * u, t[4] = -l * _, t[8] = R + w * u, t[1] = w + R * u, t[5] = l * y, t[9] = U - E * u, t[2] = -l * p, t[6] = u, t[10] = l * h;
    } else if (e.order === "ZYX") {
      const E = l * y, w = l * _, R = u * y, U = u * _;
      t[0] = h * y, t[4] = R * p - w, t[8] = E * p + U, t[1] = h * _, t[5] = U * p + E, t[9] = w * p - R, t[2] = -p, t[6] = u * h, t[10] = l * h;
    } else if (e.order === "YZX") {
      const E = l * h, w = l * p, R = u * h, U = u * p;
      t[0] = h * y, t[4] = U - E * _, t[8] = R * _ + w, t[1] = _, t[5] = l * y, t[9] = -u * y, t[2] = -p * y, t[6] = w * _ + R, t[10] = E - U * _;
    } else if (e.order === "XZY") {
      const E = l * h, w = l * p, R = u * h, U = u * p;
      t[0] = h * y, t[4] = -_, t[8] = p * y, t[1] = E * _ + U, t[5] = l * y, t[9] = w * _ - R, t[2] = R * _ - w, t[6] = u * y, t[10] = U * _ + E;
    }
    return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
  }
  makeRotationFromQuaternion(e) {
    return this.compose(IG, e, BG);
  }
  lookAt(e, t, r) {
    const i = this.elements;
    return dh.subVectors(e, t), dh.lengthSq() === 0 && (dh.z = 1), dh.normalize(), i0.crossVectors(r, dh), i0.lengthSq() === 0 && (Math.abs(r.z) === 1 ? dh.x += 1e-4 : dh.z += 1e-4, dh.normalize(), i0.crossVectors(r, dh)), i0.normalize(), rC.crossVectors(dh, i0), i[0] = i0.x, i[4] = rC.x, i[8] = dh.x, i[1] = i0.y, i[5] = rC.y, i[9] = dh.y, i[2] = i0.z, i[6] = rC.z, i[10] = dh.z, this;
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, t) {
    const r = e.elements, i = t.elements, o = this.elements, l = r[0], u = r[4], h = r[8], p = r[12], y = r[1], _ = r[5], E = r[9], w = r[13], R = r[2], U = r[6], L = r[10], A = r[14], k = r[3], F = r[7], H = r[11], B = r[15], j = i[0], Y = i[4], ee = i[8], Z = i[12], K = i[1], fe = i[5], se = i[9], he = i[13], me = i[2], Ee = i[6], be = i[10], we = i[14], de = i[3], ye = i[7], X = i[11], q = i[15];
    return o[0] = l * j + u * K + h * me + p * de, o[4] = l * Y + u * fe + h * Ee + p * ye, o[8] = l * ee + u * se + h * be + p * X, o[12] = l * Z + u * he + h * we + p * q, o[1] = y * j + _ * K + E * me + w * de, o[5] = y * Y + _ * fe + E * Ee + w * ye, o[9] = y * ee + _ * se + E * be + w * X, o[13] = y * Z + _ * he + E * we + w * q, o[2] = R * j + U * K + L * me + A * de, o[6] = R * Y + U * fe + L * Ee + A * ye, o[10] = R * ee + U * se + L * be + A * X, o[14] = R * Z + U * he + L * we + A * q, o[3] = k * j + F * K + H * me + B * de, o[7] = k * Y + F * fe + H * Ee + B * ye, o[11] = k * ee + F * se + H * be + B * X, o[15] = k * Z + F * he + H * we + B * q, this;
  }
  multiplyScalar(e) {
    const t = this.elements;
    return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
  }
  determinant() {
    const e = this.elements, t = e[0], r = e[4], i = e[8], o = e[12], l = e[1], u = e[5], h = e[9], p = e[13], y = e[2], _ = e[6], E = e[10], w = e[14], R = e[3], U = e[7], L = e[11], A = e[15];
    return R * (+o * h * _ - i * p * _ - o * u * E + r * p * E + i * u * w - r * h * w) + U * (+t * h * w - t * p * E + o * l * E - i * l * w + i * p * y - o * h * y) + L * (+t * p * _ - t * u * w - o * l * _ + r * l * w + o * u * y - r * p * y) + A * (-i * u * y - t * h * _ + t * u * E + i * l * _ - r * l * E + r * h * y);
  }
  transpose() {
    const e = this.elements;
    let t;
    return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this;
  }
  setPosition(e, t, r) {
    const i = this.elements;
    return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = r), this;
  }
  invert() {
    const e = this.elements, t = e[0], r = e[1], i = e[2], o = e[3], l = e[4], u = e[5], h = e[6], p = e[7], y = e[8], _ = e[9], E = e[10], w = e[11], R = e[12], U = e[13], L = e[14], A = e[15], k = _ * L * p - U * E * p + U * h * w - u * L * w - _ * h * A + u * E * A, F = R * E * p - y * L * p - R * h * w + l * L * w + y * h * A - l * E * A, H = y * U * p - R * _ * p + R * u * w - l * U * w - y * u * A + l * _ * A, B = R * _ * h - y * U * h - R * u * E + l * U * E + y * u * L - l * _ * L, j = t * k + r * F + i * H + o * B;
    if (j === 0)
      return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const Y = 1 / j;
    return e[0] = k * Y, e[1] = (U * E * o - _ * L * o - U * i * w + r * L * w + _ * i * A - r * E * A) * Y, e[2] = (u * L * o - U * h * o + U * i * p - r * L * p - u * i * A + r * h * A) * Y, e[3] = (_ * h * o - u * E * o - _ * i * p + r * E * p + u * i * w - r * h * w) * Y, e[4] = F * Y, e[5] = (y * L * o - R * E * o + R * i * w - t * L * w - y * i * A + t * E * A) * Y, e[6] = (R * h * o - l * L * o - R * i * p + t * L * p + l * i * A - t * h * A) * Y, e[7] = (l * E * o - y * h * o + y * i * p - t * E * p - l * i * w + t * h * w) * Y, e[8] = H * Y, e[9] = (R * _ * o - y * U * o - R * r * w + t * U * w + y * r * A - t * _ * A) * Y, e[10] = (l * U * o - R * u * o + R * r * p - t * U * p - l * r * A + t * u * A) * Y, e[11] = (y * u * o - l * _ * o - y * r * p + t * _ * p + l * r * w - t * u * w) * Y, e[12] = B * Y, e[13] = (y * U * i - R * _ * i + R * r * E - t * U * E - y * r * L + t * _ * L) * Y, e[14] = (R * u * i - l * U * i - R * r * h + t * U * h + l * r * L - t * u * L) * Y, e[15] = (l * _ * i - y * u * i + y * r * h - t * _ * h - l * r * E + t * u * E) * Y, this;
  }
  scale(e) {
    const t = this.elements, r = e.x, i = e.y, o = e.z;
    return t[0] *= r, t[4] *= i, t[8] *= o, t[1] *= r, t[5] *= i, t[9] *= o, t[2] *= r, t[6] *= i, t[10] *= o, t[3] *= r, t[7] *= i, t[11] *= o, this;
  }
  getMaxScaleOnAxis() {
    const e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(t, r, i));
  }
  makeTranslation(e, t, r) {
    return e.isVector3 ? this.set(
      1,
      0,
      0,
      e.x,
      0,
      1,
      0,
      e.y,
      0,
      0,
      1,
      e.z,
      0,
      0,
      0,
      1
    ) : this.set(
      1,
      0,
      0,
      e,
      0,
      1,
      0,
      t,
      0,
      0,
      1,
      r,
      0,
      0,
      0,
      1
    ), this;
  }
  makeRotationX(e) {
    const t = Math.cos(e), r = Math.sin(e);
    return this.set(
      1,
      0,
      0,
      0,
      0,
      t,
      -r,
      0,
      0,
      r,
      t,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  makeRotationY(e) {
    const t = Math.cos(e), r = Math.sin(e);
    return this.set(
      t,
      0,
      r,
      0,
      0,
      1,
      0,
      0,
      -r,
      0,
      t,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  makeRotationZ(e) {
    const t = Math.cos(e), r = Math.sin(e);
    return this.set(
      t,
      -r,
      0,
      0,
      r,
      t,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  makeRotationAxis(e, t) {
    const r = Math.cos(t), i = Math.sin(t), o = 1 - r, l = e.x, u = e.y, h = e.z, p = o * l, y = o * u;
    return this.set(
      p * l + r,
      p * u - i * h,
      p * h + i * u,
      0,
      p * u + i * h,
      y * u + r,
      y * h - i * l,
      0,
      p * h - i * u,
      y * h + i * l,
      o * h * h + r,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  makeScale(e, t, r) {
    return this.set(
      e,
      0,
      0,
      0,
      0,
      t,
      0,
      0,
      0,
      0,
      r,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  makeShear(e, t, r, i, o, l) {
    return this.set(
      1,
      r,
      o,
      0,
      e,
      1,
      l,
      0,
      t,
      i,
      1,
      0,
      0,
      0,
      0,
      1
    ), this;
  }
  compose(e, t, r) {
    const i = this.elements, o = t._x, l = t._y, u = t._z, h = t._w, p = o + o, y = l + l, _ = u + u, E = o * p, w = o * y, R = o * _, U = l * y, L = l * _, A = u * _, k = h * p, F = h * y, H = h * _, B = r.x, j = r.y, Y = r.z;
    return i[0] = (1 - (U + A)) * B, i[1] = (w + H) * B, i[2] = (R - F) * B, i[3] = 0, i[4] = (w - H) * j, i[5] = (1 - (E + A)) * j, i[6] = (L + k) * j, i[7] = 0, i[8] = (R + F) * Y, i[9] = (L - k) * Y, i[10] = (1 - (E + U)) * Y, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
  }
  decompose(e, t, r) {
    const i = this.elements;
    let o = n1.set(i[0], i[1], i[2]).length();
    const l = n1.set(i[4], i[5], i[6]).length(), u = n1.set(i[8], i[9], i[10]).length();
    this.determinant() < 0 && (o = -o), e.x = i[12], e.y = i[13], e.z = i[14], rm.copy(this);
    const p = 1 / o, y = 1 / l, _ = 1 / u;
    return rm.elements[0] *= p, rm.elements[1] *= p, rm.elements[2] *= p, rm.elements[4] *= y, rm.elements[5] *= y, rm.elements[6] *= y, rm.elements[8] *= _, rm.elements[9] *= _, rm.elements[10] *= _, t.setFromRotationMatrix(rm), r.x = o, r.y = l, r.z = u, this;
  }
  makePerspective(e, t, r, i, o, l, u = gv) {
    const h = this.elements, p = 2 * o / (t - e), y = 2 * o / (r - i), _ = (t + e) / (t - e), E = (r + i) / (r - i);
    let w, R;
    if (u === gv)
      w = -(l + o) / (l - o), R = -2 * l * o / (l - o);
    else if (u === UT)
      w = -l / (l - o), R = -l * o / (l - o);
    else
      throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: " + u);
    return h[0] = p, h[4] = 0, h[8] = _, h[12] = 0, h[1] = 0, h[5] = y, h[9] = E, h[13] = 0, h[2] = 0, h[6] = 0, h[10] = w, h[14] = R, h[3] = 0, h[7] = 0, h[11] = -1, h[15] = 0, this;
  }
  makeOrthographic(e, t, r, i, o, l, u = gv) {
    const h = this.elements, p = 1 / (t - e), y = 1 / (r - i), _ = 1 / (l - o), E = (t + e) * p, w = (r + i) * y;
    let R, U;
    if (u === gv)
      R = (l + o) * _, U = -2 * _;
    else if (u === UT)
      R = o * _, U = -1 * _;
    else
      throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + u);
    return h[0] = 2 * p, h[4] = 0, h[8] = 0, h[12] = -E, h[1] = 0, h[5] = 2 * y, h[9] = 0, h[13] = -w, h[2] = 0, h[6] = 0, h[10] = U, h[14] = -R, h[3] = 0, h[7] = 0, h[11] = 0, h[15] = 1, this;
  }
  equals(e) {
    const t = this.elements, r = e.elements;
    for (let i = 0; i < 16; i++)
      if (t[i] !== r[i])
        return !1;
    return !0;
  }
  fromArray(e, t = 0) {
    for (let r = 0; r < 16; r++)
      this.elements[r] = e[r + t];
    return this;
  }
  toArray(e = [], t = 0) {
    const r = this.elements;
    return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e[t + 9] = r[9], e[t + 10] = r[10], e[t + 11] = r[11], e[t + 12] = r[12], e[t + 13] = r[13], e[t + 14] = r[14], e[t + 15] = r[15], e;
  }
}
const n1 = /* @__PURE__ */ new Re(), rm = /* @__PURE__ */ new ri(), IG = /* @__PURE__ */ new Re(0, 0, 0), BG = /* @__PURE__ */ new Re(1, 1, 1), i0 = /* @__PURE__ */ new Re(), rC = /* @__PURE__ */ new Re(), dh = /* @__PURE__ */ new Re(), yN = /* @__PURE__ */ new ri(), SN = /* @__PURE__ */ new jc();
class QT {
  constructor(e = 0, t = 0, r = 0, i = QT.DEFAULT_ORDER) {
    this.isEuler = !0, this._x = e, this._y = t, this._z = r, this._order = i;
  }
  get x() {
    return this._x;
  }
  set x(e) {
    this._x = e, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    this._y = e, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    this._z = e, this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(e) {
    this._order = e, this._onChangeCallback();
  }
  set(e, t, r, i = this._order) {
    return this._x = e, this._y = t, this._z = r, this._order = i, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(e) {
    return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
  }
  setFromRotationMatrix(e, t = this._order, r = !0) {
    const i = e.elements, o = i[0], l = i[4], u = i[8], h = i[1], p = i[5], y = i[9], _ = i[2], E = i[6], w = i[10];
    switch (t) {
      case "XYZ":
        this._y = Math.asin(Gs(u, -1, 1)), Math.abs(u) < 0.9999999 ? (this._x = Math.atan2(-y, w), this._z = Math.atan2(-l, o)) : (this._x = Math.atan2(E, p), this._z = 0);
        break;
      case "YXZ":
        this._x = Math.asin(-Gs(y, -1, 1)), Math.abs(y) < 0.9999999 ? (this._y = Math.atan2(u, w), this._z = Math.atan2(h, p)) : (this._y = Math.atan2(-_, o), this._z = 0);
        break;
      case "ZXY":
        this._x = Math.asin(Gs(E, -1, 1)), Math.abs(E) < 0.9999999 ? (this._y = Math.atan2(-_, w), this._z = Math.atan2(-l, p)) : (this._y = 0, this._z = Math.atan2(h, o));
        break;
      case "ZYX":
        this._y = Math.asin(-Gs(_, -1, 1)), Math.abs(_) < 0.9999999 ? (this._x = Math.atan2(E, w), this._z = Math.atan2(h, o)) : (this._x = 0, this._z = Math.atan2(-l, p));
        break;
      case "YZX":
        this._z = Math.asin(Gs(h, -1, 1)), Math.abs(h) < 0.9999999 ? (this._x = Math.atan2(-y, p), this._y = Math.atan2(-_, o)) : (this._x = 0, this._y = Math.atan2(u, w));
        break;
      case "XZY":
        this._z = Math.asin(-Gs(l, -1, 1)), Math.abs(l) < 0.9999999 ? (this._x = Math.atan2(E, p), this._y = Math.atan2(u, o)) : (this._x = Math.atan2(-y, w), this._y = 0);
        break;
      default:
        console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t);
    }
    return this._order = t, r === !0 && this._onChangeCallback(), this;
  }
  setFromQuaternion(e, t, r) {
    return yN.makeRotationFromQuaternion(e), this.setFromRotationMatrix(yN, t, r);
  }
  setFromVector3(e, t = this._order) {
    return this.set(e.x, e.y, e.z, t);
  }
  reorder(e) {
    return SN.setFromEuler(this), this.setFromQuaternion(SN, e);
  }
  equals(e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
  }
  fromArray(e) {
    return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
  }
  toArray(e = [], t = 0) {
    return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
  }
  _onChange(e) {
    return this._onChangeCallback = e, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._order;
  }
}
QT.DEFAULT_ORDER = "XYZ";
class i_ {
  constructor() {
    this.mask = 1;
  }
  set(e) {
    this.mask = (1 << e | 0) >>> 0;
  }
  enable(e) {
    this.mask |= 1 << e | 0;
  }
  enableAll() {
    this.mask = -1;
  }
  toggle(e) {
    this.mask ^= 1 << e | 0;
  }
  disable(e) {
    this.mask &= ~(1 << e | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(e) {
    return (this.mask & e.mask) !== 0;
  }
  isEnabled(e) {
    return (this.mask & (1 << e | 0)) !== 0;
  }
}
let HG = 0;
const _N = /* @__PURE__ */ new Re(), r1 = /* @__PURE__ */ new jc(), Cg = /* @__PURE__ */ new ri(), iC = /* @__PURE__ */ new Re(), Kb = /* @__PURE__ */ new Re(), VG = /* @__PURE__ */ new Re(), GG = /* @__PURE__ */ new jc(), xN = /* @__PURE__ */ new Re(1, 0, 0), EN = /* @__PURE__ */ new Re(0, 1, 0), bN = /* @__PURE__ */ new Re(0, 0, 1), WG = { type: "added" }, jG = { type: "removed" };
class xa extends wv {
  constructor() {
    super(), this.isObject3D = !0, Object.defineProperty(this, "id", { value: HG++ }), this.uuid = mh(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = xa.DEFAULT_UP.clone();
    const e = new Re(), t = new QT(), r = new jc(), i = new Re(1, 1, 1);
    function o() {
      r.setFromEuler(t, !1);
    }
    function l() {
      t.setFromQuaternion(r, void 0, !1);
    }
    t._onChange(o), r._onChange(l), Object.defineProperties(this, {
      position: {
        configurable: !0,
        enumerable: !0,
        value: e
      },
      rotation: {
        configurable: !0,
        enumerable: !0,
        value: t
      },
      quaternion: {
        configurable: !0,
        enumerable: !0,
        value: r
      },
      scale: {
        configurable: !0,
        enumerable: !0,
        value: i
      },
      modelViewMatrix: {
        value: new ri()
      },
      normalMatrix: {
        value: new _i()
      }
    }), this.matrix = new ri(), this.matrixWorld = new ri(), this.matrixAutoUpdate = xa.DEFAULT_MATRIX_AUTO_UPDATE, this.matrixWorldNeedsUpdate = !1, this.matrixWorldAutoUpdate = xa.DEFAULT_MATRIX_WORLD_AUTO_UPDATE, this.layers = new i_(), this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
  }
  onBeforeRender() {
  }
  onAfterRender() {
  }
  applyMatrix4(e) {
    this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
  }
  applyQuaternion(e) {
    return this.quaternion.premultiply(e), this;
  }
  setRotationFromAxisAngle(e, t) {
    this.quaternion.setFromAxisAngle(e, t);
  }
  setRotationFromEuler(e) {
    this.quaternion.setFromEuler(e, !0);
  }
  setRotationFromMatrix(e) {
    this.quaternion.setFromRotationMatrix(e);
  }
  setRotationFromQuaternion(e) {
    this.quaternion.copy(e);
  }
  rotateOnAxis(e, t) {
    return r1.setFromAxisAngle(e, t), this.quaternion.multiply(r1), this;
  }
  rotateOnWorldAxis(e, t) {
    return r1.setFromAxisAngle(e, t), this.quaternion.premultiply(r1), this;
  }
  rotateX(e) {
    return this.rotateOnAxis(xN, e);
  }
  rotateY(e) {
    return this.rotateOnAxis(EN, e);
  }
  rotateZ(e) {
    return this.rotateOnAxis(bN, e);
  }
  translateOnAxis(e, t) {
    return _N.copy(e).applyQuaternion(this.quaternion), this.position.add(_N.multiplyScalar(t)), this;
  }
  translateX(e) {
    return this.translateOnAxis(xN, e);
  }
  translateY(e) {
    return this.translateOnAxis(EN, e);
  }
  translateZ(e) {
    return this.translateOnAxis(bN, e);
  }
  localToWorld(e) {
    return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
  }
  worldToLocal(e) {
    return this.updateWorldMatrix(!0, !1), e.applyMatrix4(Cg.copy(this.matrixWorld).invert());
  }
  lookAt(e, t, r) {
    e.isVector3 ? iC.copy(e) : iC.set(e, t, r);
    const i = this.parent;
    this.updateWorldMatrix(!0, !1), Kb.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Cg.lookAt(Kb, iC, this.up) : Cg.lookAt(iC, Kb, this.up), this.quaternion.setFromRotationMatrix(Cg), i && (Cg.extractRotation(i.matrixWorld), r1.setFromRotationMatrix(Cg), this.quaternion.premultiply(r1.invert()));
  }
  add(e) {
    if (arguments.length > 1) {
      for (let t = 0; t < arguments.length; t++)
        this.add(arguments[t]);
      return this;
    }
    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(WG)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
  }
  remove(e) {
    if (arguments.length > 1) {
      for (let r = 0; r < arguments.length; r++)
        this.remove(arguments[r]);
      return this;
    }
    const t = this.children.indexOf(e);
    return t !== -1 && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(jG)), this;
  }
  removeFromParent() {
    const e = this.parent;
    return e !== null && e.remove(this), this;
  }
  clear() {
    return this.remove(...this.children);
  }
  attach(e) {
    return this.updateWorldMatrix(!0, !1), Cg.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), Cg.multiply(e.parent.matrixWorld)), e.applyMatrix4(Cg), this.add(e), e.updateWorldMatrix(!1, !0), this;
  }
  getObjectById(e) {
    return this.getObjectByProperty("id", e);
  }
  getObjectByName(e) {
    return this.getObjectByProperty("name", e);
  }
  getObjectByProperty(e, t) {
    if (this[e] === t)
      return this;
    for (let r = 0, i = this.children.length; r < i; r++) {
      const l = this.children[r].getObjectByProperty(e, t);
      if (l !== void 0)
        return l;
    }
  }
  getObjectsByProperty(e, t) {
    let r = [];
    this[e] === t && r.push(this);
    for (let i = 0, o = this.children.length; i < o; i++) {
      const l = this.children[i].getObjectsByProperty(e, t);
      l.length > 0 && (r = r.concat(l));
    }
    return r;
  }
  getWorldPosition(e) {
    return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
  }
  getWorldQuaternion(e) {
    return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Kb, e, VG), e;
  }
  getWorldScale(e) {
    return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Kb, GG, e), e;
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const t = this.matrixWorld.elements;
    return e.set(t[8], t[9], t[10]).normalize();
  }
  raycast() {
  }
  traverse(e) {
    e(this);
    const t = this.children;
    for (let r = 0, i = t.length; r < i; r++)
      t[r].traverse(e);
  }
  traverseVisible(e) {
    if (this.visible === !1)
      return;
    e(this);
    const t = this.children;
    for (let r = 0, i = t.length; r < i; r++)
      t[r].traverseVisible(e);
  }
  traverseAncestors(e) {
    const t = this.parent;
    t !== null && (e(t), t.traverseAncestors(e));
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
  }
  updateMatrixWorld(e) {
    this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
    const t = this.children;
    for (let r = 0, i = t.length; r < i; r++) {
      const o = t[r];
      (o.matrixWorldAutoUpdate === !0 || e === !0) && o.updateMatrixWorld(e);
    }
  }
  updateWorldMatrix(e, t) {
    const r = this.parent;
    if (e === !0 && r !== null && r.matrixWorldAutoUpdate === !0 && r.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t === !0) {
      const i = this.children;
      for (let o = 0, l = i.length; o < l; o++) {
        const u = i[o];
        u.matrixWorldAutoUpdate === !0 && u.updateWorldMatrix(!1, !0);
      }
    }
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string", r = {};
    t && (e = {
      geometries: {},
      materials: {},
      textures: {},
      images: {},
      shapes: {},
      skeletons: {},
      animations: {},
      nodes: {}
    }, r.metadata = {
      version: 4.6,
      type: "Object",
      generator: "Object3D.toJSON"
    });
    const i = {};
    i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), Object.keys(this.userData).length > 0 && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), i.up = this.up.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON()));
    function o(u, h) {
      return u[h.uuid] === void 0 && (u[h.uuid] = h.toJSON(e)), h.uuid;
    }
    if (this.isScene)
      this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== !0 && (i.environment = this.environment.toJSON(e).uuid);
    else if (this.isMesh || this.isLine || this.isPoints) {
      i.geometry = o(e.geometries, this.geometry);
      const u = this.geometry.parameters;
      if (u !== void 0 && u.shapes !== void 0) {
        const h = u.shapes;
        if (Array.isArray(h))
          for (let p = 0, y = h.length; p < y; p++) {
            const _ = h[p];
            o(e.shapes, _);
          }
        else
          o(e.shapes, h);
      }
    }
    if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (o(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0)
      if (Array.isArray(this.material)) {
        const u = [];
        for (let h = 0, p = this.material.length; h < p; h++)
          u.push(o(e.materials, this.material[h]));
        i.material = u;
      } else
        i.material = o(e.materials, this.material);
    if (this.children.length > 0) {
      i.children = [];
      for (let u = 0; u < this.children.length; u++)
        i.children.push(this.children[u].toJSON(e).object);
    }
    if (this.animations.length > 0) {
      i.animations = [];
      for (let u = 0; u < this.animations.length; u++) {
        const h = this.animations[u];
        i.animations.push(o(e.animations, h));
      }
    }
    if (t) {
      const u = l(e.geometries), h = l(e.materials), p = l(e.textures), y = l(e.images), _ = l(e.shapes), E = l(e.skeletons), w = l(e.animations), R = l(e.nodes);
      u.length > 0 && (r.geometries = u), h.length > 0 && (r.materials = h), p.length > 0 && (r.textures = p), y.length > 0 && (r.images = y), _.length > 0 && (r.shapes = _), E.length > 0 && (r.skeletons = E), w.length > 0 && (r.animations = w), R.length > 0 && (r.nodes = R);
    }
    return r.object = i, r;
    function l(u) {
      const h = [];
      for (const p in u) {
        const y = u[p];
        delete y.metadata, h.push(y);
      }
      return h;
    }
  }
  clone(e) {
    return new this.constructor().copy(this, e);
  }
  copy(e, t = !0) {
    if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.animations = e.animations.slice(), this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0)
      for (let r = 0; r < e.children.length; r++) {
        const i = e.children[r];
        this.add(i.clone());
      }
    return this;
  }
}
xa.DEFAULT_UP = /* @__PURE__ */ new Re(0, 1, 0);
xa.DEFAULT_MATRIX_AUTO_UPDATE = !0;
xa.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
const im = /* @__PURE__ */ new Re(), Rg = /* @__PURE__ */ new Re(), MD = /* @__PURE__ */ new Re(), Ag = /* @__PURE__ */ new Re(), i1 = /* @__PURE__ */ new Re(), a1 = /* @__PURE__ */ new Re(), TN = /* @__PURE__ */ new Re(), CD = /* @__PURE__ */ new Re(), RD = /* @__PURE__ */ new Re(), AD = /* @__PURE__ */ new Re();
let aC = !1;
class yd {
  constructor(e = new Re(), t = new Re(), r = new Re()) {
    this.a = e, this.b = t, this.c = r;
  }
  static getNormal(e, t, r, i) {
    i.subVectors(r, t), im.subVectors(e, t), i.cross(im);
    const o = i.lengthSq();
    return o > 0 ? i.multiplyScalar(1 / Math.sqrt(o)) : i.set(0, 0, 0);
  }
  // static/instance method to calculate barycentric coordinates
  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html
  static getBarycoord(e, t, r, i, o) {
    im.subVectors(i, t), Rg.subVectors(r, t), MD.subVectors(e, t);
    const l = im.dot(im), u = im.dot(Rg), h = im.dot(MD), p = Rg.dot(Rg), y = Rg.dot(MD), _ = l * p - u * u;
    if (_ === 0)
      return o.set(-2, -1, -1);
    const E = 1 / _, w = (p * h - u * y) * E, R = (l * y - u * h) * E;
    return o.set(1 - w - R, R, w);
  }
  static containsPoint(e, t, r, i) {
    return this.getBarycoord(e, t, r, i, Ag), Ag.x >= 0 && Ag.y >= 0 && Ag.x + Ag.y <= 1;
  }
  static getUV(e, t, r, i, o, l, u, h) {
    return aC === !1 && (console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."), aC = !0), this.getInterpolation(e, t, r, i, o, l, u, h);
  }
  static getInterpolation(e, t, r, i, o, l, u, h) {
    return this.getBarycoord(e, t, r, i, Ag), h.setScalar(0), h.addScaledVector(o, Ag.x), h.addScaledVector(l, Ag.y), h.addScaledVector(u, Ag.z), h;
  }
  static isFrontFacing(e, t, r, i) {
    return im.subVectors(r, t), Rg.subVectors(e, t), im.cross(Rg).dot(i) < 0;
  }
  set(e, t, r) {
    return this.a.copy(e), this.b.copy(t), this.c.copy(r), this;
  }
  setFromPointsAndIndices(e, t, r, i) {
    return this.a.copy(e[t]), this.b.copy(e[r]), this.c.copy(e[i]), this;
  }
  setFromAttributeAndIndices(e, t, r, i) {
    return this.a.fromBufferAttribute(e, t), this.b.fromBufferAttribute(e, r), this.c.fromBufferAttribute(e, i), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
  }
  getArea() {
    return im.subVectors(this.c, this.b), Rg.subVectors(this.a, this.b), im.cross(Rg).length() * 0.5;
  }
  getMidpoint(e) {
    return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
  }
  getNormal(e) {
    return yd.getNormal(this.a, this.b, this.c, e);
  }
  getPlane(e) {
    return e.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(e, t) {
    return yd.getBarycoord(e, this.a, this.b, this.c, t);
  }
  getUV(e, t, r, i, o) {
    return aC === !1 && (console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."), aC = !0), yd.getInterpolation(e, this.a, this.b, this.c, t, r, i, o);
  }
  getInterpolation(e, t, r, i, o) {
    return yd.getInterpolation(e, this.a, this.b, this.c, t, r, i, o);
  }
  containsPoint(e) {
    return yd.containsPoint(e, this.a, this.b, this.c);
  }
  isFrontFacing(e) {
    return yd.isFrontFacing(this.a, this.b, this.c, e);
  }
  intersectsBox(e) {
    return e.intersectsTriangle(this);
  }
  closestPointToPoint(e, t) {
    const r = this.a, i = this.b, o = this.c;
    let l, u;
    i1.subVectors(i, r), a1.subVectors(o, r), CD.subVectors(e, r);
    const h = i1.dot(CD), p = a1.dot(CD);
    if (h <= 0 && p <= 0)
      return t.copy(r);
    RD.subVectors(e, i);
    const y = i1.dot(RD), _ = a1.dot(RD);
    if (y >= 0 && _ <= y)
      return t.copy(i);
    const E = h * _ - y * p;
    if (E <= 0 && h >= 0 && y <= 0)
      return l = h / (h - y), t.copy(r).addScaledVector(i1, l);
    AD.subVectors(e, o);
    const w = i1.dot(AD), R = a1.dot(AD);
    if (R >= 0 && w <= R)
      return t.copy(o);
    const U = w * p - h * R;
    if (U <= 0 && p >= 0 && R <= 0)
      return u = p / (p - R), t.copy(r).addScaledVector(a1, u);
    const L = y * R - w * _;
    if (L <= 0 && _ - y >= 0 && w - R >= 0)
      return TN.subVectors(o, i), u = (_ - y) / (_ - y + (w - R)), t.copy(i).addScaledVector(TN, u);
    const A = 1 / (L + U + E);
    return l = U * A, u = E * A, t.copy(r).addScaledVector(i1, l).addScaledVector(a1, u);
  }
  equals(e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }
}
let $G = 0;
class hc extends wv {
  constructor() {
    super(), this.isMaterial = !0, Object.defineProperty(this, "id", { value: $G++ }), this.uuid = mh(), this.name = "", this.type = "Material", this.blending = n_, this.side = xv, this.vertexColors = !1, this.opacity = 1, this.transparent = !1, this.alphaHash = !1, this.blendSrc = rP, this.blendDst = iP, this.blendEquation = qS, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = hR, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = KI, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = sR, this.stencilZFail = sR, this.stencilZPass = sR, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.forceSinglePass = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(e) {
    this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
  }
  onBuild() {
  }
  onBeforeRender() {
  }
  onBeforeCompile() {
  }
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(e) {
    if (e !== void 0)
      for (const t in e) {
        const r = e[t];
        if (r === void 0) {
          console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);
          continue;
        }
        const i = this[t];
        if (i === void 0) {
          console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);
          continue;
        }
        i && i.isColor ? i.set(r) : i && i.isVector3 && r && r.isVector3 ? i.copy(r) : this[t] = r;
      }
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    t && (e = {
      textures: {},
      images: {}
    });
    const r = {
      metadata: {
        version: 4.6,
        type: "Material",
        generator: "Material.toJSON"
      }
    };
    r.uuid = this.uuid, r.type = this.type, this.name !== "" && (r.name = this.name), this.color && this.color.isColor && (r.color = this.color.getHex()), this.roughness !== void 0 && (r.roughness = this.roughness), this.metalness !== void 0 && (r.metalness = this.metalness), this.sheen !== void 0 && (r.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (r.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (r.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (r.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (r.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (r.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (r.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (r.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (r.shininess = this.shininess), this.clearcoat !== void 0 && (r.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (r.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (r.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (r.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (r.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, r.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.iridescence !== void 0 && (r.iridescence = this.iridescence), this.iridescenceIOR !== void 0 && (r.iridescenceIOR = this.iridescenceIOR), this.iridescenceThicknessRange !== void 0 && (r.iridescenceThicknessRange = this.iridescenceThicknessRange), this.iridescenceMap && this.iridescenceMap.isTexture && (r.iridescenceMap = this.iridescenceMap.toJSON(e).uuid), this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture && (r.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(e).uuid), this.anisotropy !== void 0 && (r.anisotropy = this.anisotropy), this.anisotropyRotation !== void 0 && (r.anisotropyRotation = this.anisotropyRotation), this.anisotropyMap && this.anisotropyMap.isTexture && (r.anisotropyMap = this.anisotropyMap.toJSON(e).uuid), this.map && this.map.isTexture && (r.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (r.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (r.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (r.lightMap = this.lightMap.toJSON(e).uuid, r.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (r.aoMap = this.aoMap.toJSON(e).uuid, r.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (r.bumpMap = this.bumpMap.toJSON(e).uuid, r.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (r.normalMap = this.normalMap.toJSON(e).uuid, r.normalMapType = this.normalMapType, r.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (r.displacementMap = this.displacementMap.toJSON(e).uuid, r.displacementScale = this.displacementScale, r.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (r.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (r.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (r.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (r.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (r.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (r.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (r.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (r.combine = this.combine)), this.envMapIntensity !== void 0 && (r.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (r.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (r.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (r.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (r.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (r.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (r.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (r.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && this.attenuationDistance !== 1 / 0 && (r.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (r.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (r.size = this.size), this.shadowSide !== null && (r.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (r.sizeAttenuation = this.sizeAttenuation), this.blending !== n_ && (r.blending = this.blending), this.side !== xv && (r.side = this.side), this.vertexColors && (r.vertexColors = !0), this.opacity < 1 && (r.opacity = this.opacity), this.transparent === !0 && (r.transparent = this.transparent), r.depthFunc = this.depthFunc, r.depthTest = this.depthTest, r.depthWrite = this.depthWrite, r.colorWrite = this.colorWrite, r.stencilWrite = this.stencilWrite, r.stencilWriteMask = this.stencilWriteMask, r.stencilFunc = this.stencilFunc, r.stencilRef = this.stencilRef, r.stencilFuncMask = this.stencilFuncMask, r.stencilFail = this.stencilFail, r.stencilZFail = this.stencilZFail, r.stencilZPass = this.stencilZPass, this.rotation !== void 0 && this.rotation !== 0 && (r.rotation = this.rotation), this.polygonOffset === !0 && (r.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (r.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (r.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth !== void 0 && this.linewidth !== 1 && (r.linewidth = this.linewidth), this.dashSize !== void 0 && (r.dashSize = this.dashSize), this.gapSize !== void 0 && (r.gapSize = this.gapSize), this.scale !== void 0 && (r.scale = this.scale), this.dithering === !0 && (r.dithering = !0), this.alphaTest > 0 && (r.alphaTest = this.alphaTest), this.alphaHash === !0 && (r.alphaHash = this.alphaHash), this.alphaToCoverage === !0 && (r.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === !0 && (r.premultipliedAlpha = this.premultipliedAlpha), this.forceSinglePass === !0 && (r.forceSinglePass = this.forceSinglePass), this.wireframe === !0 && (r.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (r.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (r.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (r.flatShading = this.flatShading), this.visible === !1 && (r.visible = !1), this.toneMapped === !1 && (r.toneMapped = !1), this.fog === !1 && (r.fog = !1), Object.keys(this.userData).length > 0 && (r.userData = this.userData);
    function i(o) {
      const l = [];
      for (const u in o) {
        const h = o[u];
        delete h.metadata, l.push(h);
      }
      return l;
    }
    if (t) {
      const o = i(e.textures), l = i(e.images);
      o.length > 0 && (r.textures = o), l.length > 0 && (r.images = l);
    }
    return r;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    this.name = e.name, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
    const t = e.clippingPlanes;
    let r = null;
    if (t !== null) {
      const i = t.length;
      r = new Array(i);
      for (let o = 0; o !== i; ++o)
        r[o] = t[o].clone();
    }
    return this.clippingPlanes = r, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaHash = e.alphaHash, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.forceSinglePass = e.forceSinglePass, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
}
const c4 = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
}, am = { h: 0, s: 0, l: 0 }, oC = { h: 0, s: 0, l: 0 };
function DD(n, e, t) {
  return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? n + (e - n) * 6 * t : t < 1 / 2 ? e : t < 2 / 3 ? n + (e - n) * 6 * (2 / 3 - t) : n;
}
let Pn = class {
  constructor(e, t, r) {
    return this.isColor = !0, this.r = 1, this.g = 1, this.b = 1, this.set(e, t, r);
  }
  set(e, t, r) {
    if (t === void 0 && r === void 0) {
      const i = e;
      i && i.isColor ? this.copy(i) : typeof i == "number" ? this.setHex(i) : typeof i == "string" && this.setStyle(i);
    } else
      this.setRGB(e, t, r);
    return this;
  }
  setScalar(e) {
    return this.r = e, this.g = e, this.b = e, this;
  }
  setHex(e, t = Mo) {
    return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, sp.toWorkingColorSpace(this, t), this;
  }
  setRGB(e, t, r, i = sp.workingColorSpace) {
    return this.r = e, this.g = t, this.b = r, sp.toWorkingColorSpace(this, i), this;
  }
  setHSL(e, t, r, i = sp.workingColorSpace) {
    if (e = vP(e, 1), t = Gs(t, 0, 1), r = Gs(r, 0, 1), t === 0)
      this.r = this.g = this.b = r;
    else {
      const o = r <= 0.5 ? r * (1 + t) : r + t - r * t, l = 2 * r - o;
      this.r = DD(l, o, e + 1 / 3), this.g = DD(l, o, e), this.b = DD(l, o, e - 1 / 3);
    }
    return sp.toWorkingColorSpace(this, i), this;
  }
  setStyle(e, t = Mo) {
    function r(o) {
      o !== void 0 && parseFloat(o) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
    }
    let i;
    if (i = /^(\w+)\(([^\)]*)\)/.exec(e)) {
      let o;
      const l = i[1], u = i[2];
      switch (l) {
        case "rgb":
        case "rgba":
          if (o = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(u))
            return r(o[4]), this.setRGB(
              Math.min(255, parseInt(o[1], 10)) / 255,
              Math.min(255, parseInt(o[2], 10)) / 255,
              Math.min(255, parseInt(o[3], 10)) / 255,
              t
            );
          if (o = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(u))
            return r(o[4]), this.setRGB(
              Math.min(100, parseInt(o[1], 10)) / 100,
              Math.min(100, parseInt(o[2], 10)) / 100,
              Math.min(100, parseInt(o[3], 10)) / 100,
              t
            );
          break;
        case "hsl":
        case "hsla":
          if (o = /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(u))
            return r(o[4]), this.setHSL(
              parseFloat(o[1]) / 360,
              parseFloat(o[2]) / 100,
              parseFloat(o[3]) / 100,
              t
            );
          break;
        default:
          console.warn("THREE.Color: Unknown color model " + e);
      }
    } else if (i = /^\#([A-Fa-f\d]+)$/.exec(e)) {
      const o = i[1], l = o.length;
      if (l === 3)
        return this.setRGB(
          parseInt(o.charAt(0), 16) / 15,
          parseInt(o.charAt(1), 16) / 15,
          parseInt(o.charAt(2), 16) / 15,
          t
        );
      if (l === 6)
        return this.setHex(parseInt(o, 16), t);
      console.warn("THREE.Color: Invalid hex color " + e);
    } else if (e && e.length > 0)
      return this.setColorName(e, t);
    return this;
  }
  setColorName(e, t = Mo) {
    const r = c4[e.toLowerCase()];
    return r !== void 0 ? this.setHex(r, t) : console.warn("THREE.Color: Unknown color " + e), this;
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(e) {
    return this.r = e.r, this.g = e.g, this.b = e.b, this;
  }
  copySRGBToLinear(e) {
    return this.r = U1(e.r), this.g = U1(e.g), this.b = U1(e.b), this;
  }
  copyLinearToSRGB(e) {
    return this.r = yD(e.r), this.g = yD(e.g), this.b = yD(e.b), this;
  }
  convertSRGBToLinear() {
    return this.copySRGBToLinear(this), this;
  }
  convertLinearToSRGB() {
    return this.copyLinearToSRGB(this), this;
  }
  getHex(e = Mo) {
    return sp.fromWorkingColorSpace(Hc.copy(this), e), Math.round(Gs(Hc.r * 255, 0, 255)) * 65536 + Math.round(Gs(Hc.g * 255, 0, 255)) * 256 + Math.round(Gs(Hc.b * 255, 0, 255));
  }
  getHexString(e = Mo) {
    return ("000000" + this.getHex(e).toString(16)).slice(-6);
  }
  getHSL(e, t = sp.workingColorSpace) {
    sp.fromWorkingColorSpace(Hc.copy(this), t);
    const r = Hc.r, i = Hc.g, o = Hc.b, l = Math.max(r, i, o), u = Math.min(r, i, o);
    let h, p;
    const y = (u + l) / 2;
    if (u === l)
      h = 0, p = 0;
    else {
      const _ = l - u;
      switch (p = y <= 0.5 ? _ / (l + u) : _ / (2 - l - u), l) {
        case r:
          h = (i - o) / _ + (i < o ? 6 : 0);
          break;
        case i:
          h = (o - r) / _ + 2;
          break;
        case o:
          h = (r - i) / _ + 4;
          break;
      }
      h /= 6;
    }
    return e.h = h, e.s = p, e.l = y, e;
  }
  getRGB(e, t = sp.workingColorSpace) {
    return sp.fromWorkingColorSpace(Hc.copy(this), t), e.r = Hc.r, e.g = Hc.g, e.b = Hc.b, e;
  }
  getStyle(e = Mo) {
    sp.fromWorkingColorSpace(Hc.copy(this), e);
    const t = Hc.r, r = Hc.g, i = Hc.b;
    return e !== Mo ? `color(${e} ${t.toFixed(3)} ${r.toFixed(3)} ${i.toFixed(3)})` : `rgb(${Math.round(t * 255)},${Math.round(r * 255)},${Math.round(i * 255)})`;
  }
  offsetHSL(e, t, r) {
    return this.getHSL(am), am.h += e, am.s += t, am.l += r, this.setHSL(am.h, am.s, am.l), this;
  }
  add(e) {
    return this.r += e.r, this.g += e.g, this.b += e.b, this;
  }
  addColors(e, t) {
    return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
  }
  addScalar(e) {
    return this.r += e, this.g += e, this.b += e, this;
  }
  sub(e) {
    return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
  }
  multiply(e) {
    return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
  }
  multiplyScalar(e) {
    return this.r *= e, this.g *= e, this.b *= e, this;
  }
  lerp(e, t) {
    return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
  }
  lerpColors(e, t, r) {
    return this.r = e.r + (t.r - e.r) * r, this.g = e.g + (t.g - e.g) * r, this.b = e.b + (t.b - e.b) * r, this;
  }
  lerpHSL(e, t) {
    this.getHSL(am), e.getHSL(oC);
    const r = gT(am.h, oC.h, t), i = gT(am.s, oC.s, t), o = gT(am.l, oC.l, t);
    return this.setHSL(r, i, o), this;
  }
  setFromVector3(e) {
    return this.r = e.x, this.g = e.y, this.b = e.z, this;
  }
  applyMatrix3(e) {
    const t = this.r, r = this.g, i = this.b, o = e.elements;
    return this.r = o[0] * t + o[3] * r + o[6] * i, this.g = o[1] * t + o[4] * r + o[7] * i, this.b = o[2] * t + o[5] * r + o[8] * i, this;
  }
  equals(e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }
  fromArray(e, t = 0) {
    return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
  }
  toArray(e = [], t = 0) {
    return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
  }
  fromBufferAttribute(e, t) {
    return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), this;
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r, yield this.g, yield this.b;
  }
};
const Hc = /* @__PURE__ */ new Pn();
Pn.NAMES = c4;
class $g extends hc {
  constructor(e) {
    super(), this.isMeshBasicMaterial = !0, this.type = "MeshBasicMaterial", this.color = new Pn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = qT, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
  }
}
const Ug = /* @__PURE__ */ YG();
function YG() {
  const n = new ArrayBuffer(4), e = new Float32Array(n), t = new Uint32Array(n), r = new Uint32Array(512), i = new Uint32Array(512);
  for (let h = 0; h < 256; ++h) {
    const p = h - 127;
    p < -27 ? (r[h] = 0, r[h | 256] = 32768, i[h] = 24, i[h | 256] = 24) : p < -14 ? (r[h] = 1024 >> -p - 14, r[h | 256] = 1024 >> -p - 14 | 32768, i[h] = -p - 1, i[h | 256] = -p - 1) : p <= 15 ? (r[h] = p + 15 << 10, r[h | 256] = p + 15 << 10 | 32768, i[h] = 13, i[h | 256] = 13) : p < 128 ? (r[h] = 31744, r[h | 256] = 64512, i[h] = 24, i[h | 256] = 24) : (r[h] = 31744, r[h | 256] = 64512, i[h] = 13, i[h | 256] = 13);
  }
  const o = new Uint32Array(2048), l = new Uint32Array(64), u = new Uint32Array(64);
  for (let h = 1; h < 1024; ++h) {
    let p = h << 13, y = 0;
    for (; !(p & 8388608); )
      p <<= 1, y -= 8388608;
    p &= -8388609, y += 947912704, o[h] = p | y;
  }
  for (let h = 1024; h < 2048; ++h)
    o[h] = 939524096 + (h - 1024 << 13);
  for (let h = 1; h < 31; ++h)
    l[h] = h << 23;
  l[31] = 1199570944, l[32] = 2147483648;
  for (let h = 33; h < 63; ++h)
    l[h] = 2147483648 + (h - 32 << 23);
  l[63] = 3347054592;
  for (let h = 1; h < 64; ++h)
    h !== 32 && (u[h] = 1024);
  return {
    floatView: e,
    uint32View: t,
    baseTable: r,
    shiftTable: i,
    mantissaTable: o,
    exponentTable: l,
    offsetTable: u
  };
}
function vd(n) {
  Math.abs(n) > 65504 && console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."), n = Gs(n, -65504, 65504), Ug.floatView[0] = n;
  const e = Ug.uint32View[0], t = e >> 23 & 511;
  return Ug.baseTable[t] + ((e & 8388607) >> Ug.shiftTable[t]);
}
function fT(n) {
  const e = n >> 10;
  return Ug.uint32View[0] = Ug.mantissaTable[Ug.offsetTable[e] + (n & 1023)] + Ug.exponentTable[e], Ug.floatView[0];
}
const XG = {
  toHalfFloat: vd,
  fromHalfFloat: fT
}, Ul = /* @__PURE__ */ new Re(), sC = /* @__PURE__ */ new $t();
class mo {
  constructor(e, t, r = !1) {
    if (Array.isArray(e))
      throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    this.isBufferAttribute = !0, this.name = "", this.array = e, this.itemSize = t, this.count = e !== void 0 ? e.length / t : 0, this.normalized = r, this.usage = PT, this.updateRange = { offset: 0, count: -1 }, this.gpuType = vv, this.version = 0;
  }
  onUploadCallback() {
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return this.usage = e, this;
  }
  copy(e) {
    return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this.gpuType = e.gpuType, this;
  }
  copyAt(e, t, r) {
    e *= this.itemSize, r *= t.itemSize;
    for (let i = 0, o = this.itemSize; i < o; i++)
      this.array[e + i] = t.array[r + i];
    return this;
  }
  copyArray(e) {
    return this.array.set(e), this;
  }
  applyMatrix3(e) {
    if (this.itemSize === 2)
      for (let t = 0, r = this.count; t < r; t++)
        sC.fromBufferAttribute(this, t), sC.applyMatrix3(e), this.setXY(t, sC.x, sC.y);
    else if (this.itemSize === 3)
      for (let t = 0, r = this.count; t < r; t++)
        Ul.fromBufferAttribute(this, t), Ul.applyMatrix3(e), this.setXYZ(t, Ul.x, Ul.y, Ul.z);
    return this;
  }
  applyMatrix4(e) {
    for (let t = 0, r = this.count; t < r; t++)
      Ul.fromBufferAttribute(this, t), Ul.applyMatrix4(e), this.setXYZ(t, Ul.x, Ul.y, Ul.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let t = 0, r = this.count; t < r; t++)
      Ul.fromBufferAttribute(this, t), Ul.applyNormalMatrix(e), this.setXYZ(t, Ul.x, Ul.y, Ul.z);
    return this;
  }
  transformDirection(e) {
    for (let t = 0, r = this.count; t < r; t++)
      Ul.fromBufferAttribute(this, t), Ul.transformDirection(e), this.setXYZ(t, Ul.x, Ul.y, Ul.z);
    return this;
  }
  set(e, t = 0) {
    return this.array.set(e, t), this;
  }
  getComponent(e, t) {
    let r = this.array[e * this.itemSize + t];
    return this.normalized && (r = _d(r, this.array)), r;
  }
  setComponent(e, t, r) {
    return this.normalized && (r = xi(r, this.array)), this.array[e * this.itemSize + t] = r, this;
  }
  getX(e) {
    let t = this.array[e * this.itemSize];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setX(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize] = t, this;
  }
  getY(e) {
    let t = this.array[e * this.itemSize + 1];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setY(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize + 1] = t, this;
  }
  getZ(e) {
    let t = this.array[e * this.itemSize + 2];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setZ(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize + 2] = t, this;
  }
  getW(e) {
    let t = this.array[e * this.itemSize + 3];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setW(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize + 3] = t, this;
  }
  setXY(e, t, r) {
    return e *= this.itemSize, this.normalized && (t = xi(t, this.array), r = xi(r, this.array)), this.array[e + 0] = t, this.array[e + 1] = r, this;
  }
  setXYZ(e, t, r, i) {
    return e *= this.itemSize, this.normalized && (t = xi(t, this.array), r = xi(r, this.array), i = xi(i, this.array)), this.array[e + 0] = t, this.array[e + 1] = r, this.array[e + 2] = i, this;
  }
  setXYZW(e, t, r, i, o) {
    return e *= this.itemSize, this.normalized && (t = xi(t, this.array), r = xi(r, this.array), i = xi(i, this.array), o = xi(o, this.array)), this.array[e + 0] = t, this.array[e + 1] = r, this.array[e + 2] = i, this.array[e + 3] = o, this;
  }
  onUpload(e) {
    return this.onUploadCallback = e, this;
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const e = {
      itemSize: this.itemSize,
      type: this.array.constructor.name,
      array: Array.from(this.array),
      normalized: this.normalized
    };
    return this.name !== "" && (e.name = this.name), this.usage !== PT && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
  }
}
class qG extends mo {
  constructor(e, t, r) {
    super(new Int8Array(e), t, r);
  }
}
class KG extends mo {
  constructor(e, t, r) {
    super(new Uint8Array(e), t, r);
  }
}
class QG extends mo {
  constructor(e, t, r) {
    super(new Uint8ClampedArray(e), t, r);
  }
}
class ZG extends mo {
  constructor(e, t, r) {
    super(new Int16Array(e), t, r);
  }
}
class SP extends mo {
  constructor(e, t, r) {
    super(new Uint16Array(e), t, r);
  }
}
class JG extends mo {
  constructor(e, t, r) {
    super(new Int32Array(e), t, r);
  }
}
class _P extends mo {
  constructor(e, t, r) {
    super(new Uint32Array(e), t, r);
  }
}
class eW extends mo {
  constructor(e, t, r) {
    super(new Uint16Array(e), t, r), this.isFloat16BufferAttribute = !0;
  }
  getX(e) {
    let t = fT(this.array[e * this.itemSize]);
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setX(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize] = vd(t), this;
  }
  getY(e) {
    let t = fT(this.array[e * this.itemSize + 1]);
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setY(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize + 1] = vd(t), this;
  }
  getZ(e) {
    let t = fT(this.array[e * this.itemSize + 2]);
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setZ(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize + 2] = vd(t), this;
  }
  getW(e) {
    let t = fT(this.array[e * this.itemSize + 3]);
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setW(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.array[e * this.itemSize + 3] = vd(t), this;
  }
  setXY(e, t, r) {
    return e *= this.itemSize, this.normalized && (t = xi(t, this.array), r = xi(r, this.array)), this.array[e + 0] = vd(t), this.array[e + 1] = vd(r), this;
  }
  setXYZ(e, t, r, i) {
    return e *= this.itemSize, this.normalized && (t = xi(t, this.array), r = xi(r, this.array), i = xi(i, this.array)), this.array[e + 0] = vd(t), this.array[e + 1] = vd(r), this.array[e + 2] = vd(i), this;
  }
  setXYZW(e, t, r, i, o) {
    return e *= this.itemSize, this.normalized && (t = xi(t, this.array), r = xi(r, this.array), i = xi(i, this.array), o = xi(o, this.array)), this.array[e + 0] = vd(t), this.array[e + 1] = vd(r), this.array[e + 2] = vd(i), this.array[e + 3] = vd(o), this;
  }
}
class nr extends mo {
  constructor(e, t, r) {
    super(new Float32Array(e), t, r);
  }
}
class tW extends mo {
  constructor(e, t, r) {
    super(new Float64Array(e), t, r);
  }
}
let nW = 0;
const op = /* @__PURE__ */ new ri(), LD = /* @__PURE__ */ new xa(), o1 = /* @__PURE__ */ new Re(), hh = /* @__PURE__ */ new dm(), Qb = /* @__PURE__ */ new dm(), Uu = /* @__PURE__ */ new Re();
class Ei extends wv {
  constructor() {
    super(), this.isBufferGeometry = !0, Object.defineProperty(this, "id", { value: nW++ }), this.uuid = mh(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
  }
  getIndex() {
    return this.index;
  }
  setIndex(e) {
    return Array.isArray(e) ? this.index = new (s4(e) ? _P : SP)(e, 1) : this.index = e, this;
  }
  getAttribute(e) {
    return this.attributes[e];
  }
  setAttribute(e, t) {
    return this.attributes[e] = t, this;
  }
  deleteAttribute(e) {
    return delete this.attributes[e], this;
  }
  hasAttribute(e) {
    return this.attributes[e] !== void 0;
  }
  addGroup(e, t, r = 0) {
    this.groups.push({
      start: e,
      count: t,
      materialIndex: r
    });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(e, t) {
    this.drawRange.start = e, this.drawRange.count = t;
  }
  applyMatrix4(e) {
    const t = this.attributes.position;
    t !== void 0 && (t.applyMatrix4(e), t.needsUpdate = !0);
    const r = this.attributes.normal;
    if (r !== void 0) {
      const o = new _i().getNormalMatrix(e);
      r.applyNormalMatrix(o), r.needsUpdate = !0;
    }
    const i = this.attributes.tangent;
    return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
  }
  applyQuaternion(e) {
    return op.makeRotationFromQuaternion(e), this.applyMatrix4(op), this;
  }
  rotateX(e) {
    return op.makeRotationX(e), this.applyMatrix4(op), this;
  }
  rotateY(e) {
    return op.makeRotationY(e), this.applyMatrix4(op), this;
  }
  rotateZ(e) {
    return op.makeRotationZ(e), this.applyMatrix4(op), this;
  }
  translate(e, t, r) {
    return op.makeTranslation(e, t, r), this.applyMatrix4(op), this;
  }
  scale(e, t, r) {
    return op.makeScale(e, t, r), this.applyMatrix4(op), this;
  }
  lookAt(e) {
    return LD.lookAt(e), LD.updateMatrix(), this.applyMatrix4(LD.matrix), this;
  }
  center() {
    return this.computeBoundingBox(), this.boundingBox.getCenter(o1).negate(), this.translate(o1.x, o1.y, o1.z), this;
  }
  setFromPoints(e) {
    const t = [];
    for (let r = 0, i = e.length; r < i; r++) {
      const o = e[r];
      t.push(o.x, o.y, o.z || 0);
    }
    return this.setAttribute("position", new nr(t, 3)), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new dm());
    const e = this.attributes.position, t = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(
        new Re(-1 / 0, -1 / 0, -1 / 0),
        new Re(1 / 0, 1 / 0, 1 / 0)
      );
      return;
    }
    if (e !== void 0) {
      if (this.boundingBox.setFromBufferAttribute(e), t)
        for (let r = 0, i = t.length; r < i; r++) {
          const o = t[r];
          hh.setFromBufferAttribute(o), this.morphTargetsRelative ? (Uu.addVectors(this.boundingBox.min, hh.min), this.boundingBox.expandByPoint(Uu), Uu.addVectors(this.boundingBox.max, hh.max), this.boundingBox.expandByPoint(Uu)) : (this.boundingBox.expandByPoint(hh.min), this.boundingBox.expandByPoint(hh.max));
        }
    } else
      this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new pp());
    const e = this.attributes.position, t = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new Re(), 1 / 0);
      return;
    }
    if (e) {
      const r = this.boundingSphere.center;
      if (hh.setFromBufferAttribute(e), t)
        for (let o = 0, l = t.length; o < l; o++) {
          const u = t[o];
          Qb.setFromBufferAttribute(u), this.morphTargetsRelative ? (Uu.addVectors(hh.min, Qb.min), hh.expandByPoint(Uu), Uu.addVectors(hh.max, Qb.max), hh.expandByPoint(Uu)) : (hh.expandByPoint(Qb.min), hh.expandByPoint(Qb.max));
        }
      hh.getCenter(r);
      let i = 0;
      for (let o = 0, l = e.count; o < l; o++)
        Uu.fromBufferAttribute(e, o), i = Math.max(i, r.distanceToSquared(Uu));
      if (t)
        for (let o = 0, l = t.length; o < l; o++) {
          const u = t[o], h = this.morphTargetsRelative;
          for (let p = 0, y = u.count; p < y; p++)
            Uu.fromBufferAttribute(u, p), h && (o1.fromBufferAttribute(e, p), Uu.add(o1)), i = Math.max(i, r.distanceToSquared(Uu));
        }
      this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
    }
  }
  computeTangents() {
    const e = this.index, t = this.attributes;
    if (e === null || t.position === void 0 || t.normal === void 0 || t.uv === void 0) {
      console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
      return;
    }
    const r = e.array, i = t.position.array, o = t.normal.array, l = t.uv.array, u = i.length / 3;
    this.hasAttribute("tangent") === !1 && this.setAttribute("tangent", new mo(new Float32Array(4 * u), 4));
    const h = this.getAttribute("tangent").array, p = [], y = [];
    for (let K = 0; K < u; K++)
      p[K] = new Re(), y[K] = new Re();
    const _ = new Re(), E = new Re(), w = new Re(), R = new $t(), U = new $t(), L = new $t(), A = new Re(), k = new Re();
    function F(K, fe, se) {
      _.fromArray(i, K * 3), E.fromArray(i, fe * 3), w.fromArray(i, se * 3), R.fromArray(l, K * 2), U.fromArray(l, fe * 2), L.fromArray(l, se * 2), E.sub(_), w.sub(_), U.sub(R), L.sub(R);
      const he = 1 / (U.x * L.y - L.x * U.y);
      isFinite(he) && (A.copy(E).multiplyScalar(L.y).addScaledVector(w, -U.y).multiplyScalar(he), k.copy(w).multiplyScalar(U.x).addScaledVector(E, -L.x).multiplyScalar(he), p[K].add(A), p[fe].add(A), p[se].add(A), y[K].add(k), y[fe].add(k), y[se].add(k));
    }
    let H = this.groups;
    H.length === 0 && (H = [{
      start: 0,
      count: r.length
    }]);
    for (let K = 0, fe = H.length; K < fe; ++K) {
      const se = H[K], he = se.start, me = se.count;
      for (let Ee = he, be = he + me; Ee < be; Ee += 3)
        F(
          r[Ee + 0],
          r[Ee + 1],
          r[Ee + 2]
        );
    }
    const B = new Re(), j = new Re(), Y = new Re(), ee = new Re();
    function Z(K) {
      Y.fromArray(o, K * 3), ee.copy(Y);
      const fe = p[K];
      B.copy(fe), B.sub(Y.multiplyScalar(Y.dot(fe))).normalize(), j.crossVectors(ee, fe);
      const he = j.dot(y[K]) < 0 ? -1 : 1;
      h[K * 4] = B.x, h[K * 4 + 1] = B.y, h[K * 4 + 2] = B.z, h[K * 4 + 3] = he;
    }
    for (let K = 0, fe = H.length; K < fe; ++K) {
      const se = H[K], he = se.start, me = se.count;
      for (let Ee = he, be = he + me; Ee < be; Ee += 3)
        Z(r[Ee + 0]), Z(r[Ee + 1]), Z(r[Ee + 2]);
    }
  }
  computeVertexNormals() {
    const e = this.index, t = this.getAttribute("position");
    if (t !== void 0) {
      let r = this.getAttribute("normal");
      if (r === void 0)
        r = new mo(new Float32Array(t.count * 3), 3), this.setAttribute("normal", r);
      else
        for (let E = 0, w = r.count; E < w; E++)
          r.setXYZ(E, 0, 0, 0);
      const i = new Re(), o = new Re(), l = new Re(), u = new Re(), h = new Re(), p = new Re(), y = new Re(), _ = new Re();
      if (e)
        for (let E = 0, w = e.count; E < w; E += 3) {
          const R = e.getX(E + 0), U = e.getX(E + 1), L = e.getX(E + 2);
          i.fromBufferAttribute(t, R), o.fromBufferAttribute(t, U), l.fromBufferAttribute(t, L), y.subVectors(l, o), _.subVectors(i, o), y.cross(_), u.fromBufferAttribute(r, R), h.fromBufferAttribute(r, U), p.fromBufferAttribute(r, L), u.add(y), h.add(y), p.add(y), r.setXYZ(R, u.x, u.y, u.z), r.setXYZ(U, h.x, h.y, h.z), r.setXYZ(L, p.x, p.y, p.z);
        }
      else
        for (let E = 0, w = t.count; E < w; E += 3)
          i.fromBufferAttribute(t, E + 0), o.fromBufferAttribute(t, E + 1), l.fromBufferAttribute(t, E + 2), y.subVectors(l, o), _.subVectors(i, o), y.cross(_), r.setXYZ(E + 0, y.x, y.y, y.z), r.setXYZ(E + 1, y.x, y.y, y.z), r.setXYZ(E + 2, y.x, y.y, y.z);
      this.normalizeNormals(), r.needsUpdate = !0;
    }
  }
  normalizeNormals() {
    const e = this.attributes.normal;
    for (let t = 0, r = e.count; t < r; t++)
      Uu.fromBufferAttribute(e, t), Uu.normalize(), e.setXYZ(t, Uu.x, Uu.y, Uu.z);
  }
  toNonIndexed() {
    function e(u, h) {
      const p = u.array, y = u.itemSize, _ = u.normalized, E = new p.constructor(h.length * y);
      let w = 0, R = 0;
      for (let U = 0, L = h.length; U < L; U++) {
        u.isInterleavedBufferAttribute ? w = h[U] * u.data.stride + u.offset : w = h[U] * y;
        for (let A = 0; A < y; A++)
          E[R++] = p[w++];
      }
      return new mo(E, y, _);
    }
    if (this.index === null)
      return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
    const t = new Ei(), r = this.index.array, i = this.attributes;
    for (const u in i) {
      const h = i[u], p = e(h, r);
      t.setAttribute(u, p);
    }
    const o = this.morphAttributes;
    for (const u in o) {
      const h = [], p = o[u];
      for (let y = 0, _ = p.length; y < _; y++) {
        const E = p[y], w = e(E, r);
        h.push(w);
      }
      t.morphAttributes[u] = h;
    }
    t.morphTargetsRelative = this.morphTargetsRelative;
    const l = this.groups;
    for (let u = 0, h = l.length; u < h; u++) {
      const p = l[u];
      t.addGroup(p.start, p.count, p.materialIndex);
    }
    return t;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "BufferGeometry",
        generator: "BufferGeometry.toJSON"
      }
    };
    if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
      const h = this.parameters;
      for (const p in h)
        h[p] !== void 0 && (e[p] = h[p]);
      return e;
    }
    e.data = { attributes: {} };
    const t = this.index;
    t !== null && (e.data.index = {
      type: t.array.constructor.name,
      array: Array.prototype.slice.call(t.array)
    });
    const r = this.attributes;
    for (const h in r) {
      const p = r[h];
      e.data.attributes[h] = p.toJSON(e.data);
    }
    const i = {};
    let o = !1;
    for (const h in this.morphAttributes) {
      const p = this.morphAttributes[h], y = [];
      for (let _ = 0, E = p.length; _ < E; _++) {
        const w = p[_];
        y.push(w.toJSON(e.data));
      }
      y.length > 0 && (i[h] = y, o = !0);
    }
    o && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
    const l = this.groups;
    l.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(l)));
    const u = this.boundingSphere;
    return u !== null && (e.data.boundingSphere = {
      center: u.center.toArray(),
      radius: u.radius
    }), e;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
    const t = {};
    this.name = e.name;
    const r = e.index;
    r !== null && this.setIndex(r.clone(t));
    const i = e.attributes;
    for (const p in i) {
      const y = i[p];
      this.setAttribute(p, y.clone(t));
    }
    const o = e.morphAttributes;
    for (const p in o) {
      const y = [], _ = o[p];
      for (let E = 0, w = _.length; E < w; E++)
        y.push(_[E].clone(t));
      this.morphAttributes[p] = y;
    }
    this.morphTargetsRelative = e.morphTargetsRelative;
    const l = e.groups;
    for (let p = 0, y = l.length; p < y; p++) {
      const _ = l[p];
      this.addGroup(_.start, _.count, _.materialIndex);
    }
    const u = e.boundingBox;
    u !== null && (this.boundingBox = u.clone());
    const h = e.boundingSphere;
    return h !== null && (this.boundingSphere = h.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const wN = /* @__PURE__ */ new ri(), zS = /* @__PURE__ */ new v_(), lC = /* @__PURE__ */ new pp(), MN = /* @__PURE__ */ new Re(), s1 = /* @__PURE__ */ new Re(), l1 = /* @__PURE__ */ new Re(), u1 = /* @__PURE__ */ new Re(), OD = /* @__PURE__ */ new Re(), uC = /* @__PURE__ */ new Re(), cC = /* @__PURE__ */ new $t(), fC = /* @__PURE__ */ new $t(), dC = /* @__PURE__ */ new $t(), CN = /* @__PURE__ */ new Re(), RN = /* @__PURE__ */ new Re(), AN = /* @__PURE__ */ new Re(), hC = /* @__PURE__ */ new Re(), pC = /* @__PURE__ */ new Re();
class Nl extends xa {
  constructor(e = new Ei(), t = new $g()) {
    super(), this.isMesh = !0, this.type = "Mesh", this.geometry = e, this.material = t, this.updateMorphTargets();
  }
  copy(e, t) {
    return super.copy(e, t), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes, r = Object.keys(t);
    if (r.length > 0) {
      const i = t[r[0]];
      if (i !== void 0) {
        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
        for (let o = 0, l = i.length; o < l; o++) {
          const u = i[o].name || String(o);
          this.morphTargetInfluences.push(0), this.morphTargetDictionary[u] = o;
        }
      }
    }
  }
  getVertexPosition(e, t) {
    const r = this.geometry, i = r.attributes.position, o = r.morphAttributes.position, l = r.morphTargetsRelative;
    t.fromBufferAttribute(i, e);
    const u = this.morphTargetInfluences;
    if (o && u) {
      uC.set(0, 0, 0);
      for (let h = 0, p = o.length; h < p; h++) {
        const y = u[h], _ = o[h];
        y !== 0 && (OD.fromBufferAttribute(_, e), l ? uC.addScaledVector(OD, y) : uC.addScaledVector(OD.sub(t), y));
      }
      t.add(uC);
    }
    return t;
  }
  raycast(e, t) {
    const r = this.geometry, i = this.material, o = this.matrixWorld;
    i !== void 0 && (r.boundingSphere === null && r.computeBoundingSphere(), lC.copy(r.boundingSphere), lC.applyMatrix4(o), zS.copy(e.ray).recast(e.near), !(lC.containsPoint(zS.origin) === !1 && (zS.intersectSphere(lC, MN) === null || zS.origin.distanceToSquared(MN) > (e.far - e.near) ** 2)) && (wN.copy(o).invert(), zS.copy(e.ray).applyMatrix4(wN), !(r.boundingBox !== null && zS.intersectsBox(r.boundingBox) === !1) && this._computeIntersections(e, t, zS)));
  }
  _computeIntersections(e, t, r) {
    let i;
    const o = this.geometry, l = this.material, u = o.index, h = o.attributes.position, p = o.attributes.uv, y = o.attributes.uv1, _ = o.attributes.normal, E = o.groups, w = o.drawRange;
    if (u !== null)
      if (Array.isArray(l))
        for (let R = 0, U = E.length; R < U; R++) {
          const L = E[R], A = l[L.materialIndex], k = Math.max(L.start, w.start), F = Math.min(u.count, Math.min(L.start + L.count, w.start + w.count));
          for (let H = k, B = F; H < B; H += 3) {
            const j = u.getX(H), Y = u.getX(H + 1), ee = u.getX(H + 2);
            i = mC(this, A, e, r, p, y, _, j, Y, ee), i && (i.faceIndex = Math.floor(H / 3), i.face.materialIndex = L.materialIndex, t.push(i));
          }
        }
      else {
        const R = Math.max(0, w.start), U = Math.min(u.count, w.start + w.count);
        for (let L = R, A = U; L < A; L += 3) {
          const k = u.getX(L), F = u.getX(L + 1), H = u.getX(L + 2);
          i = mC(this, l, e, r, p, y, _, k, F, H), i && (i.faceIndex = Math.floor(L / 3), t.push(i));
        }
      }
    else if (h !== void 0)
      if (Array.isArray(l))
        for (let R = 0, U = E.length; R < U; R++) {
          const L = E[R], A = l[L.materialIndex], k = Math.max(L.start, w.start), F = Math.min(h.count, Math.min(L.start + L.count, w.start + w.count));
          for (let H = k, B = F; H < B; H += 3) {
            const j = H, Y = H + 1, ee = H + 2;
            i = mC(this, A, e, r, p, y, _, j, Y, ee), i && (i.faceIndex = Math.floor(H / 3), i.face.materialIndex = L.materialIndex, t.push(i));
          }
        }
      else {
        const R = Math.max(0, w.start), U = Math.min(h.count, w.start + w.count);
        for (let L = R, A = U; L < A; L += 3) {
          const k = L, F = L + 1, H = L + 2;
          i = mC(this, l, e, r, p, y, _, k, F, H), i && (i.faceIndex = Math.floor(L / 3), t.push(i));
        }
      }
  }
}
function rW(n, e, t, r, i, o, l, u) {
  let h;
  if (e.side === Wc ? h = r.intersectTriangle(l, o, i, !0, u) : h = r.intersectTriangle(i, o, l, e.side === xv, u), h === null)
    return null;
  pC.copy(u), pC.applyMatrix4(n.matrixWorld);
  const p = t.ray.origin.distanceTo(pC);
  return p < t.near || p > t.far ? null : {
    distance: p,
    point: pC.clone(),
    object: n
  };
}
function mC(n, e, t, r, i, o, l, u, h, p) {
  n.getVertexPosition(u, s1), n.getVertexPosition(h, l1), n.getVertexPosition(p, u1);
  const y = rW(n, e, t, r, s1, l1, u1, hC);
  if (y) {
    i && (cC.fromBufferAttribute(i, u), fC.fromBufferAttribute(i, h), dC.fromBufferAttribute(i, p), y.uv = yd.getInterpolation(hC, s1, l1, u1, cC, fC, dC, new $t())), o && (cC.fromBufferAttribute(o, u), fC.fromBufferAttribute(o, h), dC.fromBufferAttribute(o, p), y.uv1 = yd.getInterpolation(hC, s1, l1, u1, cC, fC, dC, new $t()), y.uv2 = y.uv1), l && (CN.fromBufferAttribute(l, u), RN.fromBufferAttribute(l, h), AN.fromBufferAttribute(l, p), y.normal = yd.getInterpolation(hC, s1, l1, u1, CN, RN, AN, new Re()), y.normal.dot(r.direction) > 0 && y.normal.multiplyScalar(-1));
    const _ = {
      a: u,
      b: h,
      c: p,
      normal: new Re(),
      materialIndex: 0
    };
    yd.getNormal(s1, l1, u1, _.normal), y.face = _;
  }
  return y;
}
class g_ extends Ei {
  constructor(e = 1, t = 1, r = 1, i = 1, o = 1, l = 1) {
    super(), this.type = "BoxGeometry", this.parameters = {
      width: e,
      height: t,
      depth: r,
      widthSegments: i,
      heightSegments: o,
      depthSegments: l
    };
    const u = this;
    i = Math.floor(i), o = Math.floor(o), l = Math.floor(l);
    const h = [], p = [], y = [], _ = [];
    let E = 0, w = 0;
    R("z", "y", "x", -1, -1, r, t, e, l, o, 0), R("z", "y", "x", 1, -1, r, t, -e, l, o, 1), R("x", "z", "y", 1, 1, e, r, t, i, l, 2), R("x", "z", "y", 1, -1, e, r, -t, i, l, 3), R("x", "y", "z", 1, -1, e, t, r, i, o, 4), R("x", "y", "z", -1, -1, e, t, -r, i, o, 5), this.setIndex(h), this.setAttribute("position", new nr(p, 3)), this.setAttribute("normal", new nr(y, 3)), this.setAttribute("uv", new nr(_, 2));
    function R(U, L, A, k, F, H, B, j, Y, ee, Z) {
      const K = H / Y, fe = B / ee, se = H / 2, he = B / 2, me = j / 2, Ee = Y + 1, be = ee + 1;
      let we = 0, de = 0;
      const ye = new Re();
      for (let X = 0; X < be; X++) {
        const q = X * fe - he;
        for (let ue = 0; ue < Ee; ue++) {
          const Ce = ue * K - se;
          ye[U] = Ce * k, ye[L] = q * F, ye[A] = me, p.push(ye.x, ye.y, ye.z), ye[U] = 0, ye[L] = 0, ye[A] = j > 0 ? 1 : -1, y.push(ye.x, ye.y, ye.z), _.push(ue / Y), _.push(1 - X / ee), we += 1;
        }
      }
      for (let X = 0; X < ee; X++)
        for (let q = 0; q < Y; q++) {
          const ue = E + q + Ee * X, Ce = E + q + Ee * (X + 1), Ae = E + (q + 1) + Ee * (X + 1), De = E + (q + 1) + Ee * X;
          h.push(ue, Ce, De), h.push(Ce, Ae, De), de += 6;
        }
      u.addGroup(w, de, Z), w += de, E += we;
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new g_(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
  }
}
function B1(n) {
  const e = {};
  for (const t in n) {
    e[t] = {};
    for (const r in n[t]) {
      const i = n[t][r];
      i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? i.isRenderTargetTexture ? (console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."), e[t][r] = null) : e[t][r] = i.clone() : Array.isArray(i) ? e[t][r] = i.slice() : e[t][r] = i;
    }
  }
  return e;
}
function Lf(n) {
  const e = {};
  for (let t = 0; t < n.length; t++) {
    const r = B1(n[t]);
    for (const i in r)
      e[i] = r[i];
  }
  return e;
}
function iW(n) {
  const e = [];
  for (let t = 0; t < n.length; t++)
    e.push(n[t].clone());
  return e;
}
function f4(n) {
  return n.getRenderTarget() === null ? n.outputColorSpace : um;
}
const xP = { clone: B1, merge: Lf };
var aW = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, oW = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class Ev extends hc {
  constructor(e) {
    super(), this.isShaderMaterial = !0, this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.uniformsGroups = [], this.vertexShader = aW, this.fragmentShader = oW, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.forceSinglePass = !0, this.extensions = {
      derivatives: !1,
      // set to use derivatives
      fragDepth: !1,
      // set to use fragment depth values
      drawBuffers: !1,
      // set to use draw buffers
      shaderTextureLOD: !1
      // set to use shader texture LOD
    }, this.defaultAttributeValues = {
      color: [1, 1, 1],
      uv: [0, 0],
      uv1: [0, 0]
    }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = B1(e.uniforms), this.uniformsGroups = iW(e.uniformsGroups), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.fog = e.fog, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    t.glslVersion = this.glslVersion, t.uniforms = {};
    for (const i in this.uniforms) {
      const l = this.uniforms[i].value;
      l && l.isTexture ? t.uniforms[i] = {
        type: "t",
        value: l.toJSON(e).uuid
      } : l && l.isColor ? t.uniforms[i] = {
        type: "c",
        value: l.getHex()
      } : l && l.isVector2 ? t.uniforms[i] = {
        type: "v2",
        value: l.toArray()
      } : l && l.isVector3 ? t.uniforms[i] = {
        type: "v3",
        value: l.toArray()
      } : l && l.isVector4 ? t.uniforms[i] = {
        type: "v4",
        value: l.toArray()
      } : l && l.isMatrix3 ? t.uniforms[i] = {
        type: "m3",
        value: l.toArray()
      } : l && l.isMatrix4 ? t.uniforms[i] = {
        type: "m4",
        value: l.toArray()
      } : t.uniforms[i] = {
        value: l
      };
    }
    Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader, t.lights = this.lights, t.clipping = this.clipping;
    const r = {};
    for (const i in this.extensions)
      this.extensions[i] === !0 && (r[i] = !0);
    return Object.keys(r).length > 0 && (t.extensions = r), t;
  }
}
class ZT extends xa {
  constructor() {
    super(), this.isCamera = !0, this.type = "Camera", this.matrixWorldInverse = new ri(), this.projectionMatrix = new ri(), this.projectionMatrixInverse = new ri(), this.coordinateSystem = gv;
  }
  copy(e, t) {
    return super.copy(e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this.coordinateSystem = e.coordinateSystem, this;
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const t = this.matrixWorld.elements;
    return e.set(-t[8], -t[9], -t[10]).normalize();
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  updateWorldMatrix(e, t) {
    super.updateWorldMatrix(e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class Ws extends ZT {
  constructor(e = 50, t = 1, r = 0.1, i = 2e3) {
    super(), this.isPerspectiveCamera = !0, this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = r, this.far = i, this.focus = 10, this.aspect = t, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
  }
  copy(e, t) {
    return super.copy(e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
  }
  /**
   * Sets the FOV by focal length in respect to the current .filmGauge.
   *
   * The default film gauge is 35, so that the focal length can be specified for
   * a 35mm (full frame) camera.
   *
   * Values for focal length and film gauge must have the same unit.
   */
  setFocalLength(e) {
    const t = 0.5 * this.getFilmHeight() / e;
    this.fov = I1 * 2 * Math.atan(t), this.updateProjectionMatrix();
  }
  /**
   * Calculates the focal length from the current .fov and .filmGauge.
   */
  getFocalLength() {
    const e = Math.tan(r_ * 0.5 * this.fov);
    return 0.5 * this.getFilmHeight() / e;
  }
  getEffectiveFOV() {
    return I1 * 2 * Math.atan(
      Math.tan(r_ * 0.5 * this.fov) / this.zoom
    );
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  /**
   * Sets an offset in a larger frustum. This is useful for multi-window or
   * multi-monitor/multi-machine setups.
   *
   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
   * the monitors are in grid like this
   *
   *   +---+---+---+
   *   | A | B | C |
   *   +---+---+---+
   *   | D | E | F |
   *   +---+---+---+
   *
   * then for each monitor you would call it like this
   *
   *   const w = 1920;
   *   const h = 1080;
   *   const fullWidth = w * 3;
   *   const fullHeight = h * 2;
   *
   *   --A--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
   *   --B--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
   *   --C--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
   *   --D--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
   *   --E--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
   *   --F--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
   *
   *   Note there is no reason monitors have to be the same size or in a grid.
   */
  setViewOffset(e, t, r, i, o, l) {
    this.aspect = e / t, this.view === null && (this.view = {
      enabled: !0,
      fullWidth: 1,
      fullHeight: 1,
      offsetX: 0,
      offsetY: 0,
      width: 1,
      height: 1
    }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = r, this.view.offsetY = i, this.view.width = o, this.view.height = l, this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = this.near;
    let t = e * Math.tan(r_ * 0.5 * this.fov) / this.zoom, r = 2 * t, i = this.aspect * r, o = -0.5 * i;
    const l = this.view;
    if (this.view !== null && this.view.enabled) {
      const h = l.fullWidth, p = l.fullHeight;
      o += l.offsetX * i / h, t -= l.offsetY * r / p, i *= l.width / h, r *= l.height / p;
    }
    const u = this.filmOffset;
    u !== 0 && (o += e * u / this.getFilmWidth()), this.projectionMatrix.makePerspective(o, o + i, t, t - r, e, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, this.view !== null && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
  }
}
const c1 = -90, f1 = 1;
class d4 extends xa {
  constructor(e, t, r) {
    super(), this.type = "CubeCamera", this.renderTarget = r, this.coordinateSystem = null;
    const i = new Ws(c1, f1, e, t);
    i.layers = this.layers, this.add(i);
    const o = new Ws(c1, f1, e, t);
    o.layers = this.layers, this.add(o);
    const l = new Ws(c1, f1, e, t);
    l.layers = this.layers, this.add(l);
    const u = new Ws(c1, f1, e, t);
    u.layers = this.layers, this.add(u);
    const h = new Ws(c1, f1, e, t);
    h.layers = this.layers, this.add(h);
    const p = new Ws(c1, f1, e, t);
    p.layers = this.layers, this.add(p);
  }
  updateCoordinateSystem() {
    const e = this.coordinateSystem, t = this.children.concat(), [r, i, o, l, u, h] = t;
    for (const p of t)
      this.remove(p);
    if (e === gv)
      r.up.set(0, 1, 0), r.lookAt(1, 0, 0), i.up.set(0, 1, 0), i.lookAt(-1, 0, 0), o.up.set(0, 0, -1), o.lookAt(0, 1, 0), l.up.set(0, 0, 1), l.lookAt(0, -1, 0), u.up.set(0, 1, 0), u.lookAt(0, 0, 1), h.up.set(0, 1, 0), h.lookAt(0, 0, -1);
    else if (e === UT)
      r.up.set(0, -1, 0), r.lookAt(-1, 0, 0), i.up.set(0, -1, 0), i.lookAt(1, 0, 0), o.up.set(0, 0, 1), o.lookAt(0, 1, 0), l.up.set(0, 0, -1), l.lookAt(0, -1, 0), u.up.set(0, -1, 0), u.lookAt(0, 0, 1), h.up.set(0, -1, 0), h.lookAt(0, 0, -1);
    else
      throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " + e);
    for (const p of t)
      this.add(p), p.updateMatrixWorld();
  }
  update(e, t) {
    this.parent === null && this.updateMatrixWorld();
    const r = this.renderTarget;
    this.coordinateSystem !== e.coordinateSystem && (this.coordinateSystem = e.coordinateSystem, this.updateCoordinateSystem());
    const [i, o, l, u, h, p] = this.children, y = e.getRenderTarget(), _ = e.xr.enabled;
    e.xr.enabled = !1;
    const E = r.texture.generateMipmaps;
    r.texture.generateMipmaps = !1, e.setRenderTarget(r, 0), e.render(t, i), e.setRenderTarget(r, 1), e.render(t, o), e.setRenderTarget(r, 2), e.render(t, l), e.setRenderTarget(r, 3), e.render(t, u), e.setRenderTarget(r, 4), e.render(t, h), r.texture.generateMipmaps = E, e.setRenderTarget(r, 5), e.render(t, p), e.setRenderTarget(y), e.xr.enabled = _, r.texture.needsPMREMUpdate = !0;
  }
}
class JT extends Es {
  constructor(e, t, r, i, o, l, u, h, p, y) {
    e = e !== void 0 ? e : [], t = t !== void 0 ? t : Bg, super(e, t, r, i, o, l, u, h, p, y), this.isCubeTexture = !0, this.flipY = !1;
  }
  get images() {
    return this.image;
  }
  set images(e) {
    this.image = e;
  }
}
class h4 extends cm {
  constructor(e = 1, t = {}) {
    super(e, e, t), this.isWebGLCubeRenderTarget = !0;
    const r = { width: e, height: e, depth: 1 }, i = [r, r, r, r, r, r];
    t.encoding !== void 0 && (yT("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."), t.colorSpace = t.encoding === f0 ? Mo : d0), this.texture = new JT(i, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.colorSpace), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = t.generateMipmaps !== void 0 ? t.generateMipmaps : !1, this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : Ss;
  }
  fromEquirectangularTexture(e, t) {
    this.texture.type = t.type, this.texture.colorSpace = t.colorSpace, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
    const r = {
      uniforms: {
        tEquirect: { value: null }
      },
      vertexShader: (
        /* glsl */
        `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`
      ),
      fragmentShader: (
        /* glsl */
        `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
      )
    }, i = new g_(5, 5, 5), o = new Ev({
      name: "CubemapFromEquirect",
      uniforms: B1(r.uniforms),
      vertexShader: r.vertexShader,
      fragmentShader: r.fragmentShader,
      side: Wc,
      blending: zg
    });
    o.uniforms.tEquirect.value = t;
    const l = new Nl(i, o), u = t.minFilter;
    return t.minFilter === p0 && (t.minFilter = Ss), new d4(1, 10, this).update(e, l), t.minFilter = u, l.geometry.dispose(), l.material.dispose(), this;
  }
  clear(e, t, r, i) {
    const o = e.getRenderTarget();
    for (let l = 0; l < 6; l++)
      e.setRenderTarget(this, l), e.clear(t, r, i);
    e.setRenderTarget(o);
  }
}
const PD = /* @__PURE__ */ new Re(), sW = /* @__PURE__ */ new Re(), lW = /* @__PURE__ */ new _i();
class Og {
  constructor(e = new Re(1, 0, 0), t = 0) {
    this.isPlane = !0, this.normal = e, this.constant = t;
  }
  set(e, t) {
    return this.normal.copy(e), this.constant = t, this;
  }
  setComponents(e, t, r, i) {
    return this.normal.set(e, t, r), this.constant = i, this;
  }
  setFromNormalAndCoplanarPoint(e, t) {
    return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
  }
  setFromCoplanarPoints(e, t, r) {
    const i = PD.subVectors(r, t).cross(sW.subVectors(e, t)).normalize();
    return this.setFromNormalAndCoplanarPoint(i, e), this;
  }
  copy(e) {
    return this.normal.copy(e.normal), this.constant = e.constant, this;
  }
  normalize() {
    const e = 1 / this.normal.length();
    return this.normal.multiplyScalar(e), this.constant *= e, this;
  }
  negate() {
    return this.constant *= -1, this.normal.negate(), this;
  }
  distanceToPoint(e) {
    return this.normal.dot(e) + this.constant;
  }
  distanceToSphere(e) {
    return this.distanceToPoint(e.center) - e.radius;
  }
  projectPoint(e, t) {
    return t.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
  }
  intersectLine(e, t) {
    const r = e.delta(PD), i = this.normal.dot(r);
    if (i === 0)
      return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
    const o = -(e.start.dot(this.normal) + this.constant) / i;
    return o < 0 || o > 1 ? null : t.copy(e.start).addScaledVector(r, o);
  }
  intersectsLine(e) {
    const t = this.distanceToPoint(e.start), r = this.distanceToPoint(e.end);
    return t < 0 && r > 0 || r < 0 && t > 0;
  }
  intersectsBox(e) {
    return e.intersectsPlane(this);
  }
  intersectsSphere(e) {
    return e.intersectsPlane(this);
  }
  coplanarPoint(e) {
    return e.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(e, t) {
    const r = t || lW.getNormalMatrix(e), i = this.coplanarPoint(PD).applyMatrix4(e), o = this.normal.applyMatrix3(r).normalize();
    return this.constant = -i.dot(o), this;
  }
  translate(e) {
    return this.constant -= e.dot(this.normal), this;
  }
  equals(e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const IS = /* @__PURE__ */ new pp(), vC = /* @__PURE__ */ new Re();
class HR {
  constructor(e = new Og(), t = new Og(), r = new Og(), i = new Og(), o = new Og(), l = new Og()) {
    this.planes = [e, t, r, i, o, l];
  }
  set(e, t, r, i, o, l) {
    const u = this.planes;
    return u[0].copy(e), u[1].copy(t), u[2].copy(r), u[3].copy(i), u[4].copy(o), u[5].copy(l), this;
  }
  copy(e) {
    const t = this.planes;
    for (let r = 0; r < 6; r++)
      t[r].copy(e.planes[r]);
    return this;
  }
  setFromProjectionMatrix(e, t = gv) {
    const r = this.planes, i = e.elements, o = i[0], l = i[1], u = i[2], h = i[3], p = i[4], y = i[5], _ = i[6], E = i[7], w = i[8], R = i[9], U = i[10], L = i[11], A = i[12], k = i[13], F = i[14], H = i[15];
    if (r[0].setComponents(h - o, E - p, L - w, H - A).normalize(), r[1].setComponents(h + o, E + p, L + w, H + A).normalize(), r[2].setComponents(h + l, E + y, L + R, H + k).normalize(), r[3].setComponents(h - l, E - y, L - R, H - k).normalize(), r[4].setComponents(h - u, E - _, L - U, H - F).normalize(), t === gv)
      r[5].setComponents(h + u, E + _, L + U, H + F).normalize();
    else if (t === UT)
      r[5].setComponents(u, _, U, F).normalize();
    else
      throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " + t);
    return this;
  }
  intersectsObject(e) {
    if (e.boundingSphere !== void 0)
      e.boundingSphere === null && e.computeBoundingSphere(), IS.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
    else {
      const t = e.geometry;
      t.boundingSphere === null && t.computeBoundingSphere(), IS.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
    }
    return this.intersectsSphere(IS);
  }
  intersectsSprite(e) {
    return IS.center.set(0, 0, 0), IS.radius = 0.7071067811865476, IS.applyMatrix4(e.matrixWorld), this.intersectsSphere(IS);
  }
  intersectsSphere(e) {
    const t = this.planes, r = e.center, i = -e.radius;
    for (let o = 0; o < 6; o++)
      if (t[o].distanceToPoint(r) < i)
        return !1;
    return !0;
  }
  intersectsBox(e) {
    const t = this.planes;
    for (let r = 0; r < 6; r++) {
      const i = t[r];
      if (vC.x = i.normal.x > 0 ? e.max.x : e.min.x, vC.y = i.normal.y > 0 ? e.max.y : e.min.y, vC.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(vC) < 0)
        return !1;
    }
    return !0;
  }
  containsPoint(e) {
    const t = this.planes;
    for (let r = 0; r < 6; r++)
      if (t[r].distanceToPoint(e) < 0)
        return !1;
    return !0;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function p4() {
  let n = null, e = !1, t = null, r = null;
  function i(o, l) {
    t(o, l), r = n.requestAnimationFrame(i);
  }
  return {
    start: function() {
      e !== !0 && t !== null && (r = n.requestAnimationFrame(i), e = !0);
    },
    stop: function() {
      n.cancelAnimationFrame(r), e = !1;
    },
    setAnimationLoop: function(o) {
      t = o;
    },
    setContext: function(o) {
      n = o;
    }
  };
}
function uW(n, e) {
  const t = e.isWebGL2, r = /* @__PURE__ */ new WeakMap();
  function i(p, y) {
    const _ = p.array, E = p.usage, w = n.createBuffer();
    n.bindBuffer(y, w), n.bufferData(y, _, E), p.onUploadCallback();
    let R;
    if (_ instanceof Float32Array)
      R = n.FLOAT;
    else if (_ instanceof Uint16Array)
      if (p.isFloat16BufferAttribute)
        if (t)
          R = n.HALF_FLOAT;
        else
          throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");
      else
        R = n.UNSIGNED_SHORT;
    else if (_ instanceof Int16Array)
      R = n.SHORT;
    else if (_ instanceof Uint32Array)
      R = n.UNSIGNED_INT;
    else if (_ instanceof Int32Array)
      R = n.INT;
    else if (_ instanceof Int8Array)
      R = n.BYTE;
    else if (_ instanceof Uint8Array)
      R = n.UNSIGNED_BYTE;
    else if (_ instanceof Uint8ClampedArray)
      R = n.UNSIGNED_BYTE;
    else
      throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + _);
    return {
      buffer: w,
      type: R,
      bytesPerElement: _.BYTES_PER_ELEMENT,
      version: p.version
    };
  }
  function o(p, y, _) {
    const E = y.array, w = y.updateRange;
    n.bindBuffer(_, p), w.count === -1 ? n.bufferSubData(_, 0, E) : (t ? n.bufferSubData(
      _,
      w.offset * E.BYTES_PER_ELEMENT,
      E,
      w.offset,
      w.count
    ) : n.bufferSubData(
      _,
      w.offset * E.BYTES_PER_ELEMENT,
      E.subarray(w.offset, w.offset + w.count)
    ), w.count = -1), y.onUploadCallback();
  }
  function l(p) {
    return p.isInterleavedBufferAttribute && (p = p.data), r.get(p);
  }
  function u(p) {
    p.isInterleavedBufferAttribute && (p = p.data);
    const y = r.get(p);
    y && (n.deleteBuffer(y.buffer), r.delete(p));
  }
  function h(p, y) {
    if (p.isGLBufferAttribute) {
      const E = r.get(p);
      (!E || E.version < p.version) && r.set(p, {
        buffer: p.buffer,
        type: p.type,
        bytesPerElement: p.elementSize,
        version: p.version
      });
      return;
    }
    p.isInterleavedBufferAttribute && (p = p.data);
    const _ = r.get(p);
    _ === void 0 ? r.set(p, i(p, y)) : _.version < p.version && (o(_.buffer, p, y), _.version = p.version);
  }
  return {
    get: l,
    remove: u,
    update: h
  };
}
class x0 extends Ei {
  constructor(e = 1, t = 1, r = 1, i = 1) {
    super(), this.type = "PlaneGeometry", this.parameters = {
      width: e,
      height: t,
      widthSegments: r,
      heightSegments: i
    };
    const o = e / 2, l = t / 2, u = Math.floor(r), h = Math.floor(i), p = u + 1, y = h + 1, _ = e / u, E = t / h, w = [], R = [], U = [], L = [];
    for (let A = 0; A < y; A++) {
      const k = A * E - l;
      for (let F = 0; F < p; F++) {
        const H = F * _ - o;
        R.push(H, -k, 0), U.push(0, 0, 1), L.push(F / u), L.push(1 - A / h);
      }
    }
    for (let A = 0; A < h; A++)
      for (let k = 0; k < u; k++) {
        const F = k + p * A, H = k + p * (A + 1), B = k + 1 + p * (A + 1), j = k + 1 + p * A;
        w.push(F, H, j), w.push(H, B, j);
      }
    this.setIndex(w), this.setAttribute("position", new nr(R, 3)), this.setAttribute("normal", new nr(U, 3)), this.setAttribute("uv", new nr(L, 2));
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new x0(e.width, e.height, e.widthSegments, e.heightSegments);
  }
}
var cW = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`, fW = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`, dW = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`, hW = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, pW = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, mW = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, vW = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, gW = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, yW = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`, SW = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, _W = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`, xW = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`, EW = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, bW = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, TW = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, wW = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, MW = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, CW = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, RW = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, AW = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, DW = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, LW = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`, OW = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, PW = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, UW = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, NW = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`, kW = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, FW = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, zW = "gl_FragColor = linearToOutputTexel( gl_FragColor );", IW = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, BW = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, HW = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, VW = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, GW = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, WW = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, jW = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, $W = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, YW = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, XW = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, qW = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`, KW = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, QW = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, ZW = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`, JW = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`, ej = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, tj = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`, nj = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, rj = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`, ij = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, aj = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`, oj = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`, sj = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, lj = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, uj = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, cj = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, fj = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, dj = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, hj = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, pj = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, mj = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`, vj = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, gj = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, yj = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, Sj = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`, _j = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, xj = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`, Ej = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, bj = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Tj = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, wj = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`, Mj = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Cj = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Rj = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Aj = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Dj = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`, Lj = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, Oj = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`, Pj = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`, Uj = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`, Nj = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, kj = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`, Fj = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, zj = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, Ij = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, Bj = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, Hj = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`, Vj = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, Gj = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, Wj = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, jj = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`, $j = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, Yj = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, Xj = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`, qj = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, Kj = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, Qj = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, Zj = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, Jj = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, e9 = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, t9 = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`, n9 = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`, r9 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, i9 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, a9 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`, o9 = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const s9 = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, l9 = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, u9 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, c9 = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, f9 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, d9 = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, h9 = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, p9 = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, m9 = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, v9 = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, g9 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, y9 = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, S9 = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, _9 = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, x9 = `#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, E9 = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, b9 = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, T9 = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, w9 = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, M9 = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, C9 = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`, R9 = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`, A9 = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, D9 = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, L9 = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, O9 = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, P9 = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, U9 = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, N9 = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, k9 = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, F9 = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, z9 = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, I9 = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, B9 = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, pi = {
  alphahash_fragment: cW,
  alphahash_pars_fragment: fW,
  alphamap_fragment: dW,
  alphamap_pars_fragment: hW,
  alphatest_fragment: pW,
  alphatest_pars_fragment: mW,
  aomap_fragment: vW,
  aomap_pars_fragment: gW,
  begin_vertex: yW,
  beginnormal_vertex: SW,
  bsdfs: _W,
  iridescence_fragment: xW,
  bumpmap_pars_fragment: EW,
  clipping_planes_fragment: bW,
  clipping_planes_pars_fragment: TW,
  clipping_planes_pars_vertex: wW,
  clipping_planes_vertex: MW,
  color_fragment: CW,
  color_pars_fragment: RW,
  color_pars_vertex: AW,
  color_vertex: DW,
  common: LW,
  cube_uv_reflection_fragment: OW,
  defaultnormal_vertex: PW,
  displacementmap_pars_vertex: UW,
  displacementmap_vertex: NW,
  emissivemap_fragment: kW,
  emissivemap_pars_fragment: FW,
  colorspace_fragment: zW,
  colorspace_pars_fragment: IW,
  envmap_fragment: BW,
  envmap_common_pars_fragment: HW,
  envmap_pars_fragment: VW,
  envmap_pars_vertex: GW,
  envmap_physical_pars_fragment: tj,
  envmap_vertex: WW,
  fog_vertex: jW,
  fog_pars_vertex: $W,
  fog_fragment: YW,
  fog_pars_fragment: XW,
  gradientmap_pars_fragment: qW,
  lightmap_fragment: KW,
  lightmap_pars_fragment: QW,
  lights_lambert_fragment: ZW,
  lights_lambert_pars_fragment: JW,
  lights_pars_begin: ej,
  lights_toon_fragment: nj,
  lights_toon_pars_fragment: rj,
  lights_phong_fragment: ij,
  lights_phong_pars_fragment: aj,
  lights_physical_fragment: oj,
  lights_physical_pars_fragment: sj,
  lights_fragment_begin: lj,
  lights_fragment_maps: uj,
  lights_fragment_end: cj,
  logdepthbuf_fragment: fj,
  logdepthbuf_pars_fragment: dj,
  logdepthbuf_pars_vertex: hj,
  logdepthbuf_vertex: pj,
  map_fragment: mj,
  map_pars_fragment: vj,
  map_particle_fragment: gj,
  map_particle_pars_fragment: yj,
  metalnessmap_fragment: Sj,
  metalnessmap_pars_fragment: _j,
  morphcolor_vertex: xj,
  morphnormal_vertex: Ej,
  morphtarget_pars_vertex: bj,
  morphtarget_vertex: Tj,
  normal_fragment_begin: wj,
  normal_fragment_maps: Mj,
  normal_pars_fragment: Cj,
  normal_pars_vertex: Rj,
  normal_vertex: Aj,
  normalmap_pars_fragment: Dj,
  clearcoat_normal_fragment_begin: Lj,
  clearcoat_normal_fragment_maps: Oj,
  clearcoat_pars_fragment: Pj,
  iridescence_pars_fragment: Uj,
  opaque_fragment: Nj,
  packing: kj,
  premultiplied_alpha_fragment: Fj,
  project_vertex: zj,
  dithering_fragment: Ij,
  dithering_pars_fragment: Bj,
  roughnessmap_fragment: Hj,
  roughnessmap_pars_fragment: Vj,
  shadowmap_pars_fragment: Gj,
  shadowmap_pars_vertex: Wj,
  shadowmap_vertex: jj,
  shadowmask_pars_fragment: $j,
  skinbase_vertex: Yj,
  skinning_pars_vertex: Xj,
  skinning_vertex: qj,
  skinnormal_vertex: Kj,
  specularmap_fragment: Qj,
  specularmap_pars_fragment: Zj,
  tonemapping_fragment: Jj,
  tonemapping_pars_fragment: e9,
  transmission_fragment: t9,
  transmission_pars_fragment: n9,
  uv_pars_fragment: r9,
  uv_pars_vertex: i9,
  uv_vertex: a9,
  worldpos_vertex: o9,
  background_vert: s9,
  background_frag: l9,
  backgroundCube_vert: u9,
  backgroundCube_frag: c9,
  cube_vert: f9,
  cube_frag: d9,
  depth_vert: h9,
  depth_frag: p9,
  distanceRGBA_vert: m9,
  distanceRGBA_frag: v9,
  equirect_vert: g9,
  equirect_frag: y9,
  linedashed_vert: S9,
  linedashed_frag: _9,
  meshbasic_vert: x9,
  meshbasic_frag: E9,
  meshlambert_vert: b9,
  meshlambert_frag: T9,
  meshmatcap_vert: w9,
  meshmatcap_frag: M9,
  meshnormal_vert: C9,
  meshnormal_frag: R9,
  meshphong_vert: A9,
  meshphong_frag: D9,
  meshphysical_vert: L9,
  meshphysical_frag: O9,
  meshtoon_vert: P9,
  meshtoon_frag: U9,
  points_vert: N9,
  points_frag: k9,
  shadow_vert: F9,
  shadow_frag: z9,
  sprite_vert: I9,
  sprite_frag: B9
}, Cn = {
  common: {
    diffuse: { value: /* @__PURE__ */ new Pn(16777215) },
    opacity: { value: 1 },
    map: { value: null },
    mapTransform: { value: /* @__PURE__ */ new _i() },
    alphaMap: { value: null },
    alphaMapTransform: { value: /* @__PURE__ */ new _i() },
    alphaTest: { value: 0 }
  },
  specularmap: {
    specularMap: { value: null },
    specularMapTransform: { value: /* @__PURE__ */ new _i() }
  },
  envmap: {
    envMap: { value: null },
    flipEnvMap: { value: -1 },
    reflectivity: { value: 1 },
    // basic, lambert, phong
    ior: { value: 1.5 },
    // physical
    refractionRatio: { value: 0.98 }
    // basic, lambert, phong
  },
  aomap: {
    aoMap: { value: null },
    aoMapIntensity: { value: 1 },
    aoMapTransform: { value: /* @__PURE__ */ new _i() }
  },
  lightmap: {
    lightMap: { value: null },
    lightMapIntensity: { value: 1 },
    lightMapTransform: { value: /* @__PURE__ */ new _i() }
  },
  bumpmap: {
    bumpMap: { value: null },
    bumpMapTransform: { value: /* @__PURE__ */ new _i() },
    bumpScale: { value: 1 }
  },
  normalmap: {
    normalMap: { value: null },
    normalMapTransform: { value: /* @__PURE__ */ new _i() },
    normalScale: { value: /* @__PURE__ */ new $t(1, 1) }
  },
  displacementmap: {
    displacementMap: { value: null },
    displacementMapTransform: { value: /* @__PURE__ */ new _i() },
    displacementScale: { value: 1 },
    displacementBias: { value: 0 }
  },
  emissivemap: {
    emissiveMap: { value: null },
    emissiveMapTransform: { value: /* @__PURE__ */ new _i() }
  },
  metalnessmap: {
    metalnessMap: { value: null },
    metalnessMapTransform: { value: /* @__PURE__ */ new _i() }
  },
  roughnessmap: {
    roughnessMap: { value: null },
    roughnessMapTransform: { value: /* @__PURE__ */ new _i() }
  },
  gradientmap: {
    gradientMap: { value: null }
  },
  fog: {
    fogDensity: { value: 25e-5 },
    fogNear: { value: 1 },
    fogFar: { value: 2e3 },
    fogColor: { value: /* @__PURE__ */ new Pn(16777215) }
  },
  lights: {
    ambientLightColor: { value: [] },
    lightProbe: { value: [] },
    directionalLights: { value: [], properties: {
      direction: {},
      color: {}
    } },
    directionalLightShadows: { value: [], properties: {
      shadowBias: {},
      shadowNormalBias: {},
      shadowRadius: {},
      shadowMapSize: {}
    } },
    directionalShadowMap: { value: [] },
    directionalShadowMatrix: { value: [] },
    spotLights: { value: [], properties: {
      color: {},
      position: {},
      direction: {},
      distance: {},
      coneCos: {},
      penumbraCos: {},
      decay: {}
    } },
    spotLightShadows: { value: [], properties: {
      shadowBias: {},
      shadowNormalBias: {},
      shadowRadius: {},
      shadowMapSize: {}
    } },
    spotLightMap: { value: [] },
    spotShadowMap: { value: [] },
    spotLightMatrix: { value: [] },
    pointLights: { value: [], properties: {
      color: {},
      position: {},
      decay: {},
      distance: {}
    } },
    pointLightShadows: { value: [], properties: {
      shadowBias: {},
      shadowNormalBias: {},
      shadowRadius: {},
      shadowMapSize: {},
      shadowCameraNear: {},
      shadowCameraFar: {}
    } },
    pointShadowMap: { value: [] },
    pointShadowMatrix: { value: [] },
    hemisphereLights: { value: [], properties: {
      direction: {},
      skyColor: {},
      groundColor: {}
    } },
    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
    rectAreaLights: { value: [], properties: {
      color: {},
      position: {},
      width: {},
      height: {}
    } },
    ltc_1: { value: null },
    ltc_2: { value: null }
  },
  points: {
    diffuse: { value: /* @__PURE__ */ new Pn(16777215) },
    opacity: { value: 1 },
    size: { value: 1 },
    scale: { value: 1 },
    map: { value: null },
    alphaMap: { value: null },
    alphaMapTransform: { value: /* @__PURE__ */ new _i() },
    alphaTest: { value: 0 },
    uvTransform: { value: /* @__PURE__ */ new _i() }
  },
  sprite: {
    diffuse: { value: /* @__PURE__ */ new Pn(16777215) },
    opacity: { value: 1 },
    center: { value: /* @__PURE__ */ new $t(0.5, 0.5) },
    rotation: { value: 0 },
    map: { value: null },
    mapTransform: { value: /* @__PURE__ */ new _i() },
    alphaMap: { value: null },
    alphaMapTransform: { value: /* @__PURE__ */ new _i() },
    alphaTest: { value: 0 }
  }
}, lm = {
  basic: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.specularmap,
      Cn.envmap,
      Cn.aomap,
      Cn.lightmap,
      Cn.fog
    ]),
    vertexShader: pi.meshbasic_vert,
    fragmentShader: pi.meshbasic_frag
  },
  lambert: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.specularmap,
      Cn.envmap,
      Cn.aomap,
      Cn.lightmap,
      Cn.emissivemap,
      Cn.bumpmap,
      Cn.normalmap,
      Cn.displacementmap,
      Cn.fog,
      Cn.lights,
      {
        emissive: { value: /* @__PURE__ */ new Pn(0) }
      }
    ]),
    vertexShader: pi.meshlambert_vert,
    fragmentShader: pi.meshlambert_frag
  },
  phong: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.specularmap,
      Cn.envmap,
      Cn.aomap,
      Cn.lightmap,
      Cn.emissivemap,
      Cn.bumpmap,
      Cn.normalmap,
      Cn.displacementmap,
      Cn.fog,
      Cn.lights,
      {
        emissive: { value: /* @__PURE__ */ new Pn(0) },
        specular: { value: /* @__PURE__ */ new Pn(1118481) },
        shininess: { value: 30 }
      }
    ]),
    vertexShader: pi.meshphong_vert,
    fragmentShader: pi.meshphong_frag
  },
  standard: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.envmap,
      Cn.aomap,
      Cn.lightmap,
      Cn.emissivemap,
      Cn.bumpmap,
      Cn.normalmap,
      Cn.displacementmap,
      Cn.roughnessmap,
      Cn.metalnessmap,
      Cn.fog,
      Cn.lights,
      {
        emissive: { value: /* @__PURE__ */ new Pn(0) },
        roughness: { value: 1 },
        metalness: { value: 0 },
        envMapIntensity: { value: 1 }
        // temporary
      }
    ]),
    vertexShader: pi.meshphysical_vert,
    fragmentShader: pi.meshphysical_frag
  },
  toon: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.aomap,
      Cn.lightmap,
      Cn.emissivemap,
      Cn.bumpmap,
      Cn.normalmap,
      Cn.displacementmap,
      Cn.gradientmap,
      Cn.fog,
      Cn.lights,
      {
        emissive: { value: /* @__PURE__ */ new Pn(0) }
      }
    ]),
    vertexShader: pi.meshtoon_vert,
    fragmentShader: pi.meshtoon_frag
  },
  matcap: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.bumpmap,
      Cn.normalmap,
      Cn.displacementmap,
      Cn.fog,
      {
        matcap: { value: null }
      }
    ]),
    vertexShader: pi.meshmatcap_vert,
    fragmentShader: pi.meshmatcap_frag
  },
  points: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.points,
      Cn.fog
    ]),
    vertexShader: pi.points_vert,
    fragmentShader: pi.points_frag
  },
  dashed: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.fog,
      {
        scale: { value: 1 },
        dashSize: { value: 1 },
        totalSize: { value: 2 }
      }
    ]),
    vertexShader: pi.linedashed_vert,
    fragmentShader: pi.linedashed_frag
  },
  depth: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.displacementmap
    ]),
    vertexShader: pi.depth_vert,
    fragmentShader: pi.depth_frag
  },
  normal: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.bumpmap,
      Cn.normalmap,
      Cn.displacementmap,
      {
        opacity: { value: 1 }
      }
    ]),
    vertexShader: pi.meshnormal_vert,
    fragmentShader: pi.meshnormal_frag
  },
  sprite: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.sprite,
      Cn.fog
    ]),
    vertexShader: pi.sprite_vert,
    fragmentShader: pi.sprite_frag
  },
  background: {
    uniforms: {
      uvTransform: { value: /* @__PURE__ */ new _i() },
      t2D: { value: null },
      backgroundIntensity: { value: 1 }
    },
    vertexShader: pi.background_vert,
    fragmentShader: pi.background_frag
  },
  backgroundCube: {
    uniforms: {
      envMap: { value: null },
      flipEnvMap: { value: -1 },
      backgroundBlurriness: { value: 0 },
      backgroundIntensity: { value: 1 }
    },
    vertexShader: pi.backgroundCube_vert,
    fragmentShader: pi.backgroundCube_frag
  },
  cube: {
    uniforms: {
      tCube: { value: null },
      tFlip: { value: -1 },
      opacity: { value: 1 }
    },
    vertexShader: pi.cube_vert,
    fragmentShader: pi.cube_frag
  },
  equirect: {
    uniforms: {
      tEquirect: { value: null }
    },
    vertexShader: pi.equirect_vert,
    fragmentShader: pi.equirect_frag
  },
  distanceRGBA: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.common,
      Cn.displacementmap,
      {
        referencePosition: { value: /* @__PURE__ */ new Re() },
        nearDistance: { value: 1 },
        farDistance: { value: 1e3 }
      }
    ]),
    vertexShader: pi.distanceRGBA_vert,
    fragmentShader: pi.distanceRGBA_frag
  },
  shadow: {
    uniforms: /* @__PURE__ */ Lf([
      Cn.lights,
      Cn.fog,
      {
        color: { value: /* @__PURE__ */ new Pn(0) },
        opacity: { value: 1 }
      }
    ]),
    vertexShader: pi.shadow_vert,
    fragmentShader: pi.shadow_frag
  }
};
lm.physical = {
  uniforms: /* @__PURE__ */ Lf([
    lm.standard.uniforms,
    {
      clearcoat: { value: 0 },
      clearcoatMap: { value: null },
      clearcoatMapTransform: { value: /* @__PURE__ */ new _i() },
      clearcoatNormalMap: { value: null },
      clearcoatNormalMapTransform: { value: /* @__PURE__ */ new _i() },
      clearcoatNormalScale: { value: /* @__PURE__ */ new $t(1, 1) },
      clearcoatRoughness: { value: 0 },
      clearcoatRoughnessMap: { value: null },
      clearcoatRoughnessMapTransform: { value: /* @__PURE__ */ new _i() },
      iridescence: { value: 0 },
      iridescenceMap: { value: null },
      iridescenceMapTransform: { value: /* @__PURE__ */ new _i() },
      iridescenceIOR: { value: 1.3 },
      iridescenceThicknessMinimum: { value: 100 },
      iridescenceThicknessMaximum: { value: 400 },
      iridescenceThicknessMap: { value: null },
      iridescenceThicknessMapTransform: { value: /* @__PURE__ */ new _i() },
      sheen: { value: 0 },
      sheenColor: { value: /* @__PURE__ */ new Pn(0) },
      sheenColorMap: { value: null },
      sheenColorMapTransform: { value: /* @__PURE__ */ new _i() },
      sheenRoughness: { value: 1 },
      sheenRoughnessMap: { value: null },
      sheenRoughnessMapTransform: { value: /* @__PURE__ */ new _i() },
      transmission: { value: 0 },
      transmissionMap: { value: null },
      transmissionMapTransform: { value: /* @__PURE__ */ new _i() },
      transmissionSamplerSize: { value: /* @__PURE__ */ new $t() },
      transmissionSamplerMap: { value: null },
      thickness: { value: 0 },
      thicknessMap: { value: null },
      thicknessMapTransform: { value: /* @__PURE__ */ new _i() },
      attenuationDistance: { value: 0 },
      attenuationColor: { value: /* @__PURE__ */ new Pn(0) },
      specularColor: { value: /* @__PURE__ */ new Pn(1, 1, 1) },
      specularColorMap: { value: null },
      specularColorMapTransform: { value: /* @__PURE__ */ new _i() },
      specularIntensity: { value: 1 },
      specularIntensityMap: { value: null },
      specularIntensityMapTransform: { value: /* @__PURE__ */ new _i() },
      anisotropyVector: { value: /* @__PURE__ */ new $t() },
      anisotropyMap: { value: null },
      anisotropyMapTransform: { value: /* @__PURE__ */ new _i() }
    }
  ]),
  vertexShader: pi.meshphysical_vert,
  fragmentShader: pi.meshphysical_frag
};
const gC = { r: 0, b: 0, g: 0 };
function H9(n, e, t, r, i, o, l) {
  const u = new Pn(0);
  let h = o === !0 ? 0 : 1, p, y, _ = null, E = 0, w = null;
  function R(L, A) {
    let k = !1, F = A.isScene === !0 ? A.background : null;
    F && F.isTexture && (F = (A.backgroundBlurriness > 0 ? t : e).get(F)), F === null ? U(u, h) : F && F.isColor && (U(F, 1), k = !0);
    const H = n.xr.getEnvironmentBlendMode();
    H === "additive" ? r.buffers.color.setClear(0, 0, 0, 1, l) : H === "alpha-blend" && r.buffers.color.setClear(0, 0, 0, 0, l), (n.autoClear || k) && n.clear(n.autoClearColor, n.autoClearDepth, n.autoClearStencil), F && (F.isCubeTexture || F.mapping === $1) ? (y === void 0 && (y = new Nl(
      new g_(1, 1, 1),
      new Ev({
        name: "BackgroundCubeMaterial",
        uniforms: B1(lm.backgroundCube.uniforms),
        vertexShader: lm.backgroundCube.vertexShader,
        fragmentShader: lm.backgroundCube.fragmentShader,
        side: Wc,
        depthTest: !1,
        depthWrite: !1,
        fog: !1
      })
    ), y.geometry.deleteAttribute("normal"), y.geometry.deleteAttribute("uv"), y.onBeforeRender = function(B, j, Y) {
      this.matrixWorld.copyPosition(Y.matrixWorld);
    }, Object.defineProperty(y.material, "envMap", {
      get: function() {
        return this.uniforms.envMap.value;
      }
    }), i.update(y)), y.material.uniforms.envMap.value = F, y.material.uniforms.flipEnvMap.value = F.isCubeTexture && F.isRenderTargetTexture === !1 ? -1 : 1, y.material.uniforms.backgroundBlurriness.value = A.backgroundBlurriness, y.material.uniforms.backgroundIntensity.value = A.backgroundIntensity, y.material.toneMapped = F.colorSpace !== Mo, (_ !== F || E !== F.version || w !== n.toneMapping) && (y.material.needsUpdate = !0, _ = F, E = F.version, w = n.toneMapping), y.layers.enableAll(), L.unshift(y, y.geometry, y.material, 0, 0, null)) : F && F.isTexture && (p === void 0 && (p = new Nl(
      new x0(2, 2),
      new Ev({
        name: "BackgroundMaterial",
        uniforms: B1(lm.background.uniforms),
        vertexShader: lm.background.vertexShader,
        fragmentShader: lm.background.fragmentShader,
        side: xv,
        depthTest: !1,
        depthWrite: !1,
        fog: !1
      })
    ), p.geometry.deleteAttribute("normal"), Object.defineProperty(p.material, "map", {
      get: function() {
        return this.uniforms.t2D.value;
      }
    }), i.update(p)), p.material.uniforms.t2D.value = F, p.material.uniforms.backgroundIntensity.value = A.backgroundIntensity, p.material.toneMapped = F.colorSpace !== Mo, F.matrixAutoUpdate === !0 && F.updateMatrix(), p.material.uniforms.uvTransform.value.copy(F.matrix), (_ !== F || E !== F.version || w !== n.toneMapping) && (p.material.needsUpdate = !0, _ = F, E = F.version, w = n.toneMapping), p.layers.enableAll(), L.unshift(p, p.geometry, p.material, 0, 0, null));
  }
  function U(L, A) {
    L.getRGB(gC, f4(n)), r.buffers.color.setClear(gC.r, gC.g, gC.b, A, l);
  }
  return {
    getClearColor: function() {
      return u;
    },
    setClearColor: function(L, A = 1) {
      u.set(L), h = A, U(u, h);
    },
    getClearAlpha: function() {
      return h;
    },
    setClearAlpha: function(L) {
      h = L, U(u, h);
    },
    render: R
  };
}
function V9(n, e, t, r) {
  const i = n.getParameter(n.MAX_VERTEX_ATTRIBS), o = r.isWebGL2 ? null : e.get("OES_vertex_array_object"), l = r.isWebGL2 || o !== null, u = {}, h = L(null);
  let p = h, y = !1;
  function _(me, Ee, be, we, de) {
    let ye = !1;
    if (l) {
      const X = U(we, be, Ee);
      p !== X && (p = X, w(p.object)), ye = A(me, we, be, de), ye && k(me, we, be, de);
    } else {
      const X = Ee.wireframe === !0;
      (p.geometry !== we.id || p.program !== be.id || p.wireframe !== X) && (p.geometry = we.id, p.program = be.id, p.wireframe = X, ye = !0);
    }
    de !== null && t.update(de, n.ELEMENT_ARRAY_BUFFER), (ye || y) && (y = !1, ee(me, Ee, be, we), de !== null && n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, t.get(de).buffer));
  }
  function E() {
    return r.isWebGL2 ? n.createVertexArray() : o.createVertexArrayOES();
  }
  function w(me) {
    return r.isWebGL2 ? n.bindVertexArray(me) : o.bindVertexArrayOES(me);
  }
  function R(me) {
    return r.isWebGL2 ? n.deleteVertexArray(me) : o.deleteVertexArrayOES(me);
  }
  function U(me, Ee, be) {
    const we = be.wireframe === !0;
    let de = u[me.id];
    de === void 0 && (de = {}, u[me.id] = de);
    let ye = de[Ee.id];
    ye === void 0 && (ye = {}, de[Ee.id] = ye);
    let X = ye[we];
    return X === void 0 && (X = L(E()), ye[we] = X), X;
  }
  function L(me) {
    const Ee = [], be = [], we = [];
    for (let de = 0; de < i; de++)
      Ee[de] = 0, be[de] = 0, we[de] = 0;
    return {
      // for backward compatibility on non-VAO support browser
      geometry: null,
      program: null,
      wireframe: !1,
      newAttributes: Ee,
      enabledAttributes: be,
      attributeDivisors: we,
      object: me,
      attributes: {},
      index: null
    };
  }
  function A(me, Ee, be, we) {
    const de = p.attributes, ye = Ee.attributes;
    let X = 0;
    const q = be.getAttributes();
    for (const ue in q)
      if (q[ue].location >= 0) {
        const Ae = de[ue];
        let De = ye[ue];
        if (De === void 0 && (ue === "instanceMatrix" && me.instanceMatrix && (De = me.instanceMatrix), ue === "instanceColor" && me.instanceColor && (De = me.instanceColor)), Ae === void 0 || Ae.attribute !== De || De && Ae.data !== De.data)
          return !0;
        X++;
      }
    return p.attributesNum !== X || p.index !== we;
  }
  function k(me, Ee, be, we) {
    const de = {}, ye = Ee.attributes;
    let X = 0;
    const q = be.getAttributes();
    for (const ue in q)
      if (q[ue].location >= 0) {
        let Ae = ye[ue];
        Ae === void 0 && (ue === "instanceMatrix" && me.instanceMatrix && (Ae = me.instanceMatrix), ue === "instanceColor" && me.instanceColor && (Ae = me.instanceColor));
        const De = {};
        De.attribute = Ae, Ae && Ae.data && (De.data = Ae.data), de[ue] = De, X++;
      }
    p.attributes = de, p.attributesNum = X, p.index = we;
  }
  function F() {
    const me = p.newAttributes;
    for (let Ee = 0, be = me.length; Ee < be; Ee++)
      me[Ee] = 0;
  }
  function H(me) {
    B(me, 0);
  }
  function B(me, Ee) {
    const be = p.newAttributes, we = p.enabledAttributes, de = p.attributeDivisors;
    be[me] = 1, we[me] === 0 && (n.enableVertexAttribArray(me), we[me] = 1), de[me] !== Ee && ((r.isWebGL2 ? n : e.get("ANGLE_instanced_arrays"))[r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](me, Ee), de[me] = Ee);
  }
  function j() {
    const me = p.newAttributes, Ee = p.enabledAttributes;
    for (let be = 0, we = Ee.length; be < we; be++)
      Ee[be] !== me[be] && (n.disableVertexAttribArray(be), Ee[be] = 0);
  }
  function Y(me, Ee, be, we, de, ye, X) {
    X === !0 ? n.vertexAttribIPointer(me, Ee, be, de, ye) : n.vertexAttribPointer(me, Ee, be, we, de, ye);
  }
  function ee(me, Ee, be, we) {
    if (r.isWebGL2 === !1 && (me.isInstancedMesh || we.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null)
      return;
    F();
    const de = we.attributes, ye = be.getAttributes(), X = Ee.defaultAttributeValues;
    for (const q in ye) {
      const ue = ye[q];
      if (ue.location >= 0) {
        let Ce = de[q];
        if (Ce === void 0 && (q === "instanceMatrix" && me.instanceMatrix && (Ce = me.instanceMatrix), q === "instanceColor" && me.instanceColor && (Ce = me.instanceColor)), Ce !== void 0) {
          const Ae = Ce.normalized, De = Ce.itemSize, Ne = t.get(Ce);
          if (Ne === void 0)
            continue;
          const Pe = Ne.buffer, Fe = Ne.type, it = Ne.bytesPerElement, Ot = r.isWebGL2 === !0 && (Fe === n.INT || Fe === n.UNSIGNED_INT || Ce.gpuType === sP);
          if (Ce.isInterleavedBufferAttribute) {
            const st = Ce.data, oe = st.stride, rt = Ce.offset;
            if (st.isInstancedInterleavedBuffer) {
              for (let qe = 0; qe < ue.locationSize; qe++)
                B(ue.location + qe, st.meshPerAttribute);
              me.isInstancedMesh !== !0 && we._maxInstanceCount === void 0 && (we._maxInstanceCount = st.meshPerAttribute * st.count);
            } else
              for (let qe = 0; qe < ue.locationSize; qe++)
                H(ue.location + qe);
            n.bindBuffer(n.ARRAY_BUFFER, Pe);
            for (let qe = 0; qe < ue.locationSize; qe++)
              Y(
                ue.location + qe,
                De / ue.locationSize,
                Fe,
                Ae,
                oe * it,
                (rt + De / ue.locationSize * qe) * it,
                Ot
              );
          } else {
            if (Ce.isInstancedBufferAttribute) {
              for (let st = 0; st < ue.locationSize; st++)
                B(ue.location + st, Ce.meshPerAttribute);
              me.isInstancedMesh !== !0 && we._maxInstanceCount === void 0 && (we._maxInstanceCount = Ce.meshPerAttribute * Ce.count);
            } else
              for (let st = 0; st < ue.locationSize; st++)
                H(ue.location + st);
            n.bindBuffer(n.ARRAY_BUFFER, Pe);
            for (let st = 0; st < ue.locationSize; st++)
              Y(
                ue.location + st,
                De / ue.locationSize,
                Fe,
                Ae,
                De * it,
                De / ue.locationSize * st * it,
                Ot
              );
          }
        } else if (X !== void 0) {
          const Ae = X[q];
          if (Ae !== void 0)
            switch (Ae.length) {
              case 2:
                n.vertexAttrib2fv(ue.location, Ae);
                break;
              case 3:
                n.vertexAttrib3fv(ue.location, Ae);
                break;
              case 4:
                n.vertexAttrib4fv(ue.location, Ae);
                break;
              default:
                n.vertexAttrib1fv(ue.location, Ae);
            }
        }
      }
    }
    j();
  }
  function Z() {
    se();
    for (const me in u) {
      const Ee = u[me];
      for (const be in Ee) {
        const we = Ee[be];
        for (const de in we)
          R(we[de].object), delete we[de];
        delete Ee[be];
      }
      delete u[me];
    }
  }
  function K(me) {
    if (u[me.id] === void 0)
      return;
    const Ee = u[me.id];
    for (const be in Ee) {
      const we = Ee[be];
      for (const de in we)
        R(we[de].object), delete we[de];
      delete Ee[be];
    }
    delete u[me.id];
  }
  function fe(me) {
    for (const Ee in u) {
      const be = u[Ee];
      if (be[me.id] === void 0)
        continue;
      const we = be[me.id];
      for (const de in we)
        R(we[de].object), delete we[de];
      delete be[me.id];
    }
  }
  function se() {
    he(), y = !0, p !== h && (p = h, w(p.object));
  }
  function he() {
    h.geometry = null, h.program = null, h.wireframe = !1;
  }
  return {
    setup: _,
    reset: se,
    resetDefaultState: he,
    dispose: Z,
    releaseStatesOfGeometry: K,
    releaseStatesOfProgram: fe,
    initAttributes: F,
    enableAttribute: H,
    disableUnusedAttributes: j
  };
}
function G9(n, e, t, r) {
  const i = r.isWebGL2;
  let o;
  function l(p) {
    o = p;
  }
  function u(p, y) {
    n.drawArrays(o, p, y), t.update(y, o, 1);
  }
  function h(p, y, _) {
    if (_ === 0)
      return;
    let E, w;
    if (i)
      E = n, w = "drawArraysInstanced";
    else if (E = e.get("ANGLE_instanced_arrays"), w = "drawArraysInstancedANGLE", E === null) {
      console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      return;
    }
    E[w](o, p, y, _), t.update(y, o, _);
  }
  this.setMode = l, this.render = u, this.renderInstances = h;
}
function W9(n, e, t) {
  let r;
  function i() {
    if (r !== void 0)
      return r;
    if (e.has("EXT_texture_filter_anisotropic") === !0) {
      const Y = e.get("EXT_texture_filter_anisotropic");
      r = n.getParameter(Y.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else
      r = 0;
    return r;
  }
  function o(Y) {
    if (Y === "highp") {
      if (n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.HIGH_FLOAT).precision > 0 && n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.HIGH_FLOAT).precision > 0)
        return "highp";
      Y = "mediump";
    }
    return Y === "mediump" && n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.MEDIUM_FLOAT).precision > 0 && n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
  }
  const l = typeof WebGL2RenderingContext < "u" && n.constructor.name === "WebGL2RenderingContext";
  let u = t.precision !== void 0 ? t.precision : "highp";
  const h = o(u);
  h !== u && (console.warn("THREE.WebGLRenderer:", u, "not supported, using", h, "instead."), u = h);
  const p = l || e.has("WEBGL_draw_buffers"), y = t.logarithmicDepthBuffer === !0, _ = n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS), E = n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS), w = n.getParameter(n.MAX_TEXTURE_SIZE), R = n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE), U = n.getParameter(n.MAX_VERTEX_ATTRIBS), L = n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS), A = n.getParameter(n.MAX_VARYING_VECTORS), k = n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS), F = E > 0, H = l || e.has("OES_texture_float"), B = F && H, j = l ? n.getParameter(n.MAX_SAMPLES) : 0;
  return {
    isWebGL2: l,
    drawBuffers: p,
    getMaxAnisotropy: i,
    getMaxPrecision: o,
    precision: u,
    logarithmicDepthBuffer: y,
    maxTextures: _,
    maxVertexTextures: E,
    maxTextureSize: w,
    maxCubemapSize: R,
    maxAttributes: U,
    maxVertexUniforms: L,
    maxVaryings: A,
    maxFragmentUniforms: k,
    vertexTextures: F,
    floatFragmentTextures: H,
    floatVertexTextures: B,
    maxSamples: j
  };
}
function j9(n) {
  const e = this;
  let t = null, r = 0, i = !1, o = !1;
  const l = new Og(), u = new _i(), h = { value: null, needsUpdate: !1 };
  this.uniform = h, this.numPlanes = 0, this.numIntersection = 0, this.init = function(_, E) {
    const w = _.length !== 0 || E || // enable state of previous frame - the clipping code has to
    // run another frame in order to reset the state:
    r !== 0 || i;
    return i = E, r = _.length, w;
  }, this.beginShadows = function() {
    o = !0, y(null);
  }, this.endShadows = function() {
    o = !1;
  }, this.setGlobalState = function(_, E) {
    t = y(_, E, 0);
  }, this.setState = function(_, E, w) {
    const R = _.clippingPlanes, U = _.clipIntersection, L = _.clipShadows, A = n.get(_);
    if (!i || R === null || R.length === 0 || o && !L)
      o ? y(null) : p();
    else {
      const k = o ? 0 : r, F = k * 4;
      let H = A.clippingState || null;
      h.value = H, H = y(R, E, F, w);
      for (let B = 0; B !== F; ++B)
        H[B] = t[B];
      A.clippingState = H, this.numIntersection = U ? this.numPlanes : 0, this.numPlanes += k;
    }
  };
  function p() {
    h.value !== t && (h.value = t, h.needsUpdate = r > 0), e.numPlanes = r, e.numIntersection = 0;
  }
  function y(_, E, w, R) {
    const U = _ !== null ? _.length : 0;
    let L = null;
    if (U !== 0) {
      if (L = h.value, R !== !0 || L === null) {
        const A = w + U * 4, k = E.matrixWorldInverse;
        u.getNormalMatrix(k), (L === null || L.length < A) && (L = new Float32Array(A));
        for (let F = 0, H = w; F !== U; ++F, H += 4)
          l.copy(_[F]).applyMatrix4(k, u), l.normal.toArray(L, H), L[H + 3] = l.constant;
      }
      h.value = L, h.needsUpdate = !0;
    }
    return e.numPlanes = U, e.numIntersection = 0, L;
  }
}
function $9(n) {
  let e = /* @__PURE__ */ new WeakMap();
  function t(l, u) {
    return u === MT ? l.mapping = Bg : u === CT && (l.mapping = h0), l;
  }
  function r(l) {
    if (l && l.isTexture && l.isRenderTargetTexture === !1) {
      const u = l.mapping;
      if (u === MT || u === CT)
        if (e.has(l)) {
          const h = e.get(l).texture;
          return t(h, l.mapping);
        } else {
          const h = l.image;
          if (h && h.height > 0) {
            const p = new h4(h.height / 2);
            return p.fromEquirectangularTexture(n, l), e.set(l, p), l.addEventListener("dispose", i), t(p.texture, l.mapping);
          } else
            return null;
        }
    }
    return l;
  }
  function i(l) {
    const u = l.target;
    u.removeEventListener("dispose", i);
    const h = e.get(u);
    h !== void 0 && (e.delete(u), h.dispose());
  }
  function o() {
    e = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: r,
    dispose: o
  };
}
class Fg extends ZT {
  constructor(e = -1, t = 1, r = 1, i = -1, o = 0.1, l = 2e3) {
    super(), this.isOrthographicCamera = !0, this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = r, this.bottom = i, this.near = o, this.far = l, this.updateProjectionMatrix();
  }
  copy(e, t) {
    return super.copy(e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
  }
  setViewOffset(e, t, r, i, o, l) {
    this.view === null && (this.view = {
      enabled: !0,
      fullWidth: 1,
      fullHeight: 1,
      offsetX: 0,
      offsetY: 0,
      width: 1,
      height: 1
    }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = r, this.view.offsetY = i, this.view.width = o, this.view.height = l, this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), r = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2;
    let o = r - e, l = r + e, u = i + t, h = i - t;
    if (this.view !== null && this.view.enabled) {
      const p = (this.right - this.left) / this.view.fullWidth / this.zoom, y = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      o += p * this.view.offsetX, l = o + p * this.view.width, u -= y * this.view.offsetY, h = u - y * this.view.height;
    }
    this.projectionMatrix.makeOrthographic(o, l, u, h, this.near, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, this.view !== null && (t.object.view = Object.assign({}, this.view)), t;
  }
}
const R1 = 4, DN = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582], KS = 20, UD = /* @__PURE__ */ new Fg(), LN = /* @__PURE__ */ new Pn();
let ND = null;
const XS = (1 + Math.sqrt(5)) / 2, d1 = 1 / XS, ON = [
  /* @__PURE__ */ new Re(1, 1, 1),
  /* @__PURE__ */ new Re(-1, 1, 1),
  /* @__PURE__ */ new Re(1, 1, -1),
  /* @__PURE__ */ new Re(-1, 1, -1),
  /* @__PURE__ */ new Re(0, XS, d1),
  /* @__PURE__ */ new Re(0, XS, -d1),
  /* @__PURE__ */ new Re(d1, 0, XS),
  /* @__PURE__ */ new Re(-d1, 0, XS),
  /* @__PURE__ */ new Re(XS, d1, 0),
  /* @__PURE__ */ new Re(-XS, d1, 0)
];
class dO {
  constructor(e) {
    this._renderer = e, this._pingPongRenderTarget = null, this._lodMax = 0, this._cubeSize = 0, this._lodPlanes = [], this._sizeLods = [], this._sigmas = [], this._blurMaterial = null, this._cubemapMaterial = null, this._equirectMaterial = null, this._compileMaterial(this._blurMaterial);
  }
  /**
   * Generates a PMREM from a supplied Scene, which can be faster than using an
   * image if networking bandwidth is low. Optional sigma specifies a blur radius
   * in radians to be applied to the scene before PMREM generation. Optional near
   * and far planes ensure the scene is rendered in its entirety (the cubeCamera
   * is placed at the origin).
   */
  fromScene(e, t = 0, r = 0.1, i = 100) {
    ND = this._renderer.getRenderTarget(), this._setSize(256);
    const o = this._allocateTargets();
    return o.depthBuffer = !0, this._sceneToCubeUV(e, r, i, o), t > 0 && this._blur(o, 0, 0, t), this._applyPMREM(o), this._cleanup(o), o;
  }
  /**
   * Generates a PMREM from an equirectangular texture, which can be either LDR
   * or HDR. The ideal input image size is 1k (1024 x 512),
   * as this matches best with the 256 x 256 cubemap output.
   */
  fromEquirectangular(e, t = null) {
    return this._fromTexture(e, t);
  }
  /**
   * Generates a PMREM from an cubemap texture, which can be either LDR
   * or HDR. The ideal input cube size is 256 x 256,
   * as this matches best with the 256 x 256 cubemap output.
   */
  fromCubemap(e, t = null) {
    return this._fromTexture(e, t);
  }
  /**
   * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during
   * your texture's network fetch for increased concurrency.
   */
  compileCubemapShader() {
    this._cubemapMaterial === null && (this._cubemapMaterial = NN(), this._compileMaterial(this._cubemapMaterial));
  }
  /**
   * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during
   * your texture's network fetch for increased concurrency.
   */
  compileEquirectangularShader() {
    this._equirectMaterial === null && (this._equirectMaterial = UN(), this._compileMaterial(this._equirectMaterial));
  }
  /**
   * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,
   * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on
   * one of them will cause any others to also become unusable.
   */
  dispose() {
    this._dispose(), this._cubemapMaterial !== null && this._cubemapMaterial.dispose(), this._equirectMaterial !== null && this._equirectMaterial.dispose();
  }
  // private interface
  _setSize(e) {
    this._lodMax = Math.floor(Math.log2(e)), this._cubeSize = Math.pow(2, this._lodMax);
  }
  _dispose() {
    this._blurMaterial !== null && this._blurMaterial.dispose(), this._pingPongRenderTarget !== null && this._pingPongRenderTarget.dispose();
    for (let e = 0; e < this._lodPlanes.length; e++)
      this._lodPlanes[e].dispose();
  }
  _cleanup(e) {
    this._renderer.setRenderTarget(ND), e.scissorTest = !1, yC(e, 0, 0, e.width, e.height);
  }
  _fromTexture(e, t) {
    e.mapping === Bg || e.mapping === h0 ? this._setSize(e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width) : this._setSize(e.image.width / 4), ND = this._renderer.getRenderTarget();
    const r = t || this._allocateTargets();
    return this._textureToCubeUV(e, r), this._applyPMREM(r), this._cleanup(r), r;
  }
  _allocateTargets() {
    const e = 3 * Math.max(this._cubeSize, 112), t = 4 * this._cubeSize, r = {
      magFilter: Ss,
      minFilter: Ss,
      generateMipmaps: !1,
      type: z1,
      format: Sd,
      colorSpace: um,
      depthBuffer: !1
    }, i = PN(e, t, r);
    if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== e || this._pingPongRenderTarget.height !== t) {
      this._pingPongRenderTarget !== null && this._dispose(), this._pingPongRenderTarget = PN(e, t, r);
      const { _lodMax: o } = this;
      ({ sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = Y9(o)), this._blurMaterial = X9(o, e, t);
    }
    return i;
  }
  _compileMaterial(e) {
    const t = new Nl(this._lodPlanes[0], e);
    this._renderer.compile(t, UD);
  }
  _sceneToCubeUV(e, t, r, i) {
    const u = new Ws(90, 1, t, r), h = [1, -1, 1, 1, 1, 1], p = [1, 1, 1, -1, -1, -1], y = this._renderer, _ = y.autoClear, E = y.toneMapping;
    y.getClearColor(LN), y.toneMapping = yv, y.autoClear = !1;
    const w = new $g({
      name: "PMREM.Background",
      side: Wc,
      depthWrite: !1,
      depthTest: !1
    }), R = new Nl(new g_(), w);
    let U = !1;
    const L = e.background;
    L ? L.isColor && (w.color.copy(L), e.background = null, U = !0) : (w.color.copy(LN), U = !0);
    for (let A = 0; A < 6; A++) {
      const k = A % 3;
      k === 0 ? (u.up.set(0, h[A], 0), u.lookAt(p[A], 0, 0)) : k === 1 ? (u.up.set(0, 0, h[A]), u.lookAt(0, p[A], 0)) : (u.up.set(0, h[A], 0), u.lookAt(0, 0, p[A]));
      const F = this._cubeSize;
      yC(i, k * F, A > 2 ? F : 0, F, F), y.setRenderTarget(i), U && y.render(R, u), y.render(e, u);
    }
    R.geometry.dispose(), R.material.dispose(), y.toneMapping = E, y.autoClear = _, e.background = L;
  }
  _textureToCubeUV(e, t) {
    const r = this._renderer, i = e.mapping === Bg || e.mapping === h0;
    i ? (this._cubemapMaterial === null && (this._cubemapMaterial = NN()), this._cubemapMaterial.uniforms.flipEnvMap.value = e.isRenderTargetTexture === !1 ? -1 : 1) : this._equirectMaterial === null && (this._equirectMaterial = UN());
    const o = i ? this._cubemapMaterial : this._equirectMaterial, l = new Nl(this._lodPlanes[0], o), u = o.uniforms;
    u.envMap.value = e;
    const h = this._cubeSize;
    yC(t, 0, 0, 3 * h, 2 * h), r.setRenderTarget(t), r.render(l, UD);
  }
  _applyPMREM(e) {
    const t = this._renderer, r = t.autoClear;
    t.autoClear = !1;
    for (let i = 1; i < this._lodPlanes.length; i++) {
      const o = Math.sqrt(this._sigmas[i] * this._sigmas[i] - this._sigmas[i - 1] * this._sigmas[i - 1]), l = ON[(i - 1) % ON.length];
      this._blur(e, i - 1, i, o, l);
    }
    t.autoClear = r;
  }
  /**
   * This is a two-pass Gaussian blur for a cubemap. Normally this is done
   * vertically and horizontally, but this breaks down on a cube. Here we apply
   * the blur latitudinally (around the poles), and then longitudinally (towards
   * the poles) to approximate the orthogonally-separable blur. It is least
   * accurate at the poles, but still does a decent job.
   */
  _blur(e, t, r, i, o) {
    const l = this._pingPongRenderTarget;
    this._halfBlur(
      e,
      l,
      t,
      r,
      i,
      "latitudinal",
      o
    ), this._halfBlur(
      l,
      e,
      r,
      r,
      i,
      "longitudinal",
      o
    );
  }
  _halfBlur(e, t, r, i, o, l, u) {
    const h = this._renderer, p = this._blurMaterial;
    l !== "latitudinal" && l !== "longitudinal" && console.error(
      "blur direction must be either latitudinal or longitudinal!"
    );
    const y = 3, _ = new Nl(this._lodPlanes[i], p), E = p.uniforms, w = this._sizeLods[r] - 1, R = isFinite(o) ? Math.PI / (2 * w) : 2 * Math.PI / (2 * KS - 1), U = o / R, L = isFinite(o) ? 1 + Math.floor(y * U) : KS;
    L > KS && console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${L} samples when the maximum is set to ${KS}`);
    const A = [];
    let k = 0;
    for (let Y = 0; Y < KS; ++Y) {
      const ee = Y / U, Z = Math.exp(-ee * ee / 2);
      A.push(Z), Y === 0 ? k += Z : Y < L && (k += 2 * Z);
    }
    for (let Y = 0; Y < A.length; Y++)
      A[Y] = A[Y] / k;
    E.envMap.value = e.texture, E.samples.value = L, E.weights.value = A, E.latitudinal.value = l === "latitudinal", u && (E.poleAxis.value = u);
    const { _lodMax: F } = this;
    E.dTheta.value = R, E.mipInt.value = F - r;
    const H = this._sizeLods[i], B = 3 * H * (i > F - R1 ? i - F + R1 : 0), j = 4 * (this._cubeSize - H);
    yC(t, B, j, 3 * H, 2 * H), h.setRenderTarget(t), h.render(_, UD);
  }
}
function Y9(n) {
  const e = [], t = [], r = [];
  let i = n;
  const o = n - R1 + 1 + DN.length;
  for (let l = 0; l < o; l++) {
    const u = Math.pow(2, i);
    t.push(u);
    let h = 1 / u;
    l > n - R1 ? h = DN[l - n + R1 - 1] : l === 0 && (h = 0), r.push(h);
    const p = 1 / (u - 2), y = -p, _ = 1 + p, E = [y, y, _, y, _, _, y, y, _, _, y, _], w = 6, R = 6, U = 3, L = 2, A = 1, k = new Float32Array(U * R * w), F = new Float32Array(L * R * w), H = new Float32Array(A * R * w);
    for (let j = 0; j < w; j++) {
      const Y = j % 3 * 2 / 3 - 1, ee = j > 2 ? 0 : -1, Z = [
        Y,
        ee,
        0,
        Y + 2 / 3,
        ee,
        0,
        Y + 2 / 3,
        ee + 1,
        0,
        Y,
        ee,
        0,
        Y + 2 / 3,
        ee + 1,
        0,
        Y,
        ee + 1,
        0
      ];
      k.set(Z, U * R * j), F.set(E, L * R * j);
      const K = [j, j, j, j, j, j];
      H.set(K, A * R * j);
    }
    const B = new Ei();
    B.setAttribute("position", new mo(k, U)), B.setAttribute("uv", new mo(F, L)), B.setAttribute("faceIndex", new mo(H, A)), e.push(B), i > R1 && i--;
  }
  return { lodPlanes: e, sizeLods: t, sigmas: r };
}
function PN(n, e, t) {
  const r = new cm(n, e, t);
  return r.texture.mapping = $1, r.texture.name = "PMREM.cubeUv", r.scissorTest = !0, r;
}
function yC(n, e, t, r, i) {
  n.viewport.set(e, t, r, i), n.scissor.set(e, t, r, i);
}
function X9(n, e, t) {
  const r = new Float32Array(KS), i = new Re(0, 1, 0);
  return new Ev({
    name: "SphericalGaussianBlur",
    defines: {
      n: KS,
      CUBEUV_TEXEL_WIDTH: 1 / e,
      CUBEUV_TEXEL_HEIGHT: 1 / t,
      CUBEUV_MAX_MIP: `${n}.0`
    },
    uniforms: {
      envMap: { value: null },
      samples: { value: 1 },
      weights: { value: r },
      latitudinal: { value: !1 },
      dTheta: { value: 0 },
      mipInt: { value: 0 },
      poleAxis: { value: i }
    },
    vertexShader: EP(),
    fragmentShader: (
      /* glsl */
      `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`
    ),
    blending: zg,
    depthTest: !1,
    depthWrite: !1
  });
}
function UN() {
  return new Ev({
    name: "EquirectangularToCubeUV",
    uniforms: {
      envMap: { value: null }
    },
    vertexShader: EP(),
    fragmentShader: (
      /* glsl */
      `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`
    ),
    blending: zg,
    depthTest: !1,
    depthWrite: !1
  });
}
function NN() {
  return new Ev({
    name: "CubemapToCubeUV",
    uniforms: {
      envMap: { value: null },
      flipEnvMap: { value: -1 }
    },
    vertexShader: EP(),
    fragmentShader: (
      /* glsl */
      `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`
    ),
    blending: zg,
    depthTest: !1,
    depthWrite: !1
  });
}
function EP() {
  return (
    /* glsl */
    `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`
  );
}
function q9(n) {
  let e = /* @__PURE__ */ new WeakMap(), t = null;
  function r(u) {
    if (u && u.isTexture) {
      const h = u.mapping, p = h === MT || h === CT, y = h === Bg || h === h0;
      if (p || y)
        if (u.isRenderTargetTexture && u.needsPMREMUpdate === !0) {
          u.needsPMREMUpdate = !1;
          let _ = e.get(u);
          return t === null && (t = new dO(n)), _ = p ? t.fromEquirectangular(u, _) : t.fromCubemap(u, _), e.set(u, _), _.texture;
        } else {
          if (e.has(u))
            return e.get(u).texture;
          {
            const _ = u.image;
            if (p && _ && _.height > 0 || y && _ && i(_)) {
              t === null && (t = new dO(n));
              const E = p ? t.fromEquirectangular(u) : t.fromCubemap(u);
              return e.set(u, E), u.addEventListener("dispose", o), E.texture;
            } else
              return null;
          }
        }
    }
    return u;
  }
  function i(u) {
    let h = 0;
    const p = 6;
    for (let y = 0; y < p; y++)
      u[y] !== void 0 && h++;
    return h === p;
  }
  function o(u) {
    const h = u.target;
    h.removeEventListener("dispose", o);
    const p = e.get(h);
    p !== void 0 && (e.delete(h), p.dispose());
  }
  function l() {
    e = /* @__PURE__ */ new WeakMap(), t !== null && (t.dispose(), t = null);
  }
  return {
    get: r,
    dispose: l
  };
}
function K9(n) {
  const e = {};
  function t(r) {
    if (e[r] !== void 0)
      return e[r];
    let i;
    switch (r) {
      case "WEBGL_depth_texture":
        i = n.getExtension("WEBGL_depth_texture") || n.getExtension("MOZ_WEBGL_depth_texture") || n.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        i = n.getExtension("EXT_texture_filter_anisotropic") || n.getExtension("MOZ_EXT_texture_filter_anisotropic") || n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        i = n.getExtension("WEBGL_compressed_texture_s3tc") || n.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        i = n.getExtension("WEBGL_compressed_texture_pvrtc") || n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        i = n.getExtension(r);
    }
    return e[r] = i, i;
  }
  return {
    has: function(r) {
      return t(r) !== null;
    },
    init: function(r) {
      r.isWebGL2 ? t("EXT_color_buffer_float") : (t("WEBGL_depth_texture"), t("OES_texture_float"), t("OES_texture_half_float"), t("OES_texture_half_float_linear"), t("OES_standard_derivatives"), t("OES_element_index_uint"), t("OES_vertex_array_object"), t("ANGLE_instanced_arrays")), t("OES_texture_float_linear"), t("EXT_color_buffer_half_float"), t("WEBGL_multisampled_render_to_texture");
    },
    get: function(r) {
      const i = t(r);
      return i === null && console.warn("THREE.WebGLRenderer: " + r + " extension not supported."), i;
    }
  };
}
function Q9(n, e, t, r) {
  const i = {}, o = /* @__PURE__ */ new WeakMap();
  function l(_) {
    const E = _.target;
    E.index !== null && e.remove(E.index);
    for (const R in E.attributes)
      e.remove(E.attributes[R]);
    for (const R in E.morphAttributes) {
      const U = E.morphAttributes[R];
      for (let L = 0, A = U.length; L < A; L++)
        e.remove(U[L]);
    }
    E.removeEventListener("dispose", l), delete i[E.id];
    const w = o.get(E);
    w && (e.remove(w), o.delete(E)), r.releaseStatesOfGeometry(E), E.isInstancedBufferGeometry === !0 && delete E._maxInstanceCount, t.memory.geometries--;
  }
  function u(_, E) {
    return i[E.id] === !0 || (E.addEventListener("dispose", l), i[E.id] = !0, t.memory.geometries++), E;
  }
  function h(_) {
    const E = _.attributes;
    for (const R in E)
      e.update(E[R], n.ARRAY_BUFFER);
    const w = _.morphAttributes;
    for (const R in w) {
      const U = w[R];
      for (let L = 0, A = U.length; L < A; L++)
        e.update(U[L], n.ARRAY_BUFFER);
    }
  }
  function p(_) {
    const E = [], w = _.index, R = _.attributes.position;
    let U = 0;
    if (w !== null) {
      const k = w.array;
      U = w.version;
      for (let F = 0, H = k.length; F < H; F += 3) {
        const B = k[F + 0], j = k[F + 1], Y = k[F + 2];
        E.push(B, j, j, Y, Y, B);
      }
    } else if (R !== void 0) {
      const k = R.array;
      U = R.version;
      for (let F = 0, H = k.length / 3 - 1; F < H; F += 3) {
        const B = F + 0, j = F + 1, Y = F + 2;
        E.push(B, j, j, Y, Y, B);
      }
    } else
      return;
    const L = new (s4(E) ? _P : SP)(E, 1);
    L.version = U;
    const A = o.get(_);
    A && e.remove(A), o.set(_, L);
  }
  function y(_) {
    const E = o.get(_);
    if (E) {
      const w = _.index;
      w !== null && E.version < w.version && p(_);
    } else
      p(_);
    return o.get(_);
  }
  return {
    get: u,
    update: h,
    getWireframeAttribute: y
  };
}
function Z9(n, e, t, r) {
  const i = r.isWebGL2;
  let o;
  function l(E) {
    o = E;
  }
  let u, h;
  function p(E) {
    u = E.type, h = E.bytesPerElement;
  }
  function y(E, w) {
    n.drawElements(o, w, u, E * h), t.update(w, o, 1);
  }
  function _(E, w, R) {
    if (R === 0)
      return;
    let U, L;
    if (i)
      U = n, L = "drawElementsInstanced";
    else if (U = e.get("ANGLE_instanced_arrays"), L = "drawElementsInstancedANGLE", U === null) {
      console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      return;
    }
    U[L](o, w, u, E * h, R), t.update(w, o, R);
  }
  this.setMode = l, this.setIndex = p, this.render = y, this.renderInstances = _;
}
function J9(n) {
  const e = {
    geometries: 0,
    textures: 0
  }, t = {
    frame: 0,
    calls: 0,
    triangles: 0,
    points: 0,
    lines: 0
  };
  function r(o, l, u) {
    switch (t.calls++, l) {
      case n.TRIANGLES:
        t.triangles += u * (o / 3);
        break;
      case n.LINES:
        t.lines += u * (o / 2);
        break;
      case n.LINE_STRIP:
        t.lines += u * (o - 1);
        break;
      case n.LINE_LOOP:
        t.lines += u * o;
        break;
      case n.POINTS:
        t.points += u * o;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", l);
        break;
    }
  }
  function i() {
    t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
  }
  return {
    memory: e,
    render: t,
    programs: null,
    autoReset: !0,
    reset: i,
    update: r
  };
}
function e7(n, e) {
  return n[0] - e[0];
}
function t7(n, e) {
  return Math.abs(e[1]) - Math.abs(n[1]);
}
function n7(n, e, t) {
  const r = {}, i = new Float32Array(8), o = /* @__PURE__ */ new WeakMap(), l = new Ma(), u = [];
  for (let p = 0; p < 8; p++)
    u[p] = [p, 0];
  function h(p, y, _) {
    const E = p.morphTargetInfluences;
    if (e.isWebGL2 === !0) {
      const w = y.morphAttributes.position || y.morphAttributes.normal || y.morphAttributes.color, R = w !== void 0 ? w.length : 0;
      let U = o.get(y);
      if (U === void 0 || U.count !== R) {
        let me = function() {
          se.dispose(), o.delete(y), y.removeEventListener("dispose", me);
        };
        U !== void 0 && U.texture.dispose();
        const k = y.morphAttributes.position !== void 0, F = y.morphAttributes.normal !== void 0, H = y.morphAttributes.color !== void 0, B = y.morphAttributes.position || [], j = y.morphAttributes.normal || [], Y = y.morphAttributes.color || [];
        let ee = 0;
        k === !0 && (ee = 1), F === !0 && (ee = 2), H === !0 && (ee = 3);
        let Z = y.attributes.position.count * ee, K = 1;
        Z > e.maxTextureSize && (K = Math.ceil(Z / e.maxTextureSize), Z = e.maxTextureSize);
        const fe = new Float32Array(Z * K * 4 * R), se = new BR(fe, Z, K, R);
        se.type = vv, se.needsUpdate = !0;
        const he = ee * 4;
        for (let Ee = 0; Ee < R; Ee++) {
          const be = B[Ee], we = j[Ee], de = Y[Ee], ye = Z * K * 4 * Ee;
          for (let X = 0; X < be.count; X++) {
            const q = X * he;
            k === !0 && (l.fromBufferAttribute(be, X), fe[ye + q + 0] = l.x, fe[ye + q + 1] = l.y, fe[ye + q + 2] = l.z, fe[ye + q + 3] = 0), F === !0 && (l.fromBufferAttribute(we, X), fe[ye + q + 4] = l.x, fe[ye + q + 5] = l.y, fe[ye + q + 6] = l.z, fe[ye + q + 7] = 0), H === !0 && (l.fromBufferAttribute(de, X), fe[ye + q + 8] = l.x, fe[ye + q + 9] = l.y, fe[ye + q + 10] = l.z, fe[ye + q + 11] = de.itemSize === 4 ? l.w : 1);
          }
        }
        U = {
          count: R,
          texture: se,
          size: new $t(Z, K)
        }, o.set(y, U), y.addEventListener("dispose", me);
      }
      let L = 0;
      for (let k = 0; k < E.length; k++)
        L += E[k];
      const A = y.morphTargetsRelative ? 1 : 1 - L;
      _.getUniforms().setValue(n, "morphTargetBaseInfluence", A), _.getUniforms().setValue(n, "morphTargetInfluences", E), _.getUniforms().setValue(n, "morphTargetsTexture", U.texture, t), _.getUniforms().setValue(n, "morphTargetsTextureSize", U.size);
    } else {
      const w = E === void 0 ? 0 : E.length;
      let R = r[y.id];
      if (R === void 0 || R.length !== w) {
        R = [];
        for (let F = 0; F < w; F++)
          R[F] = [F, 0];
        r[y.id] = R;
      }
      for (let F = 0; F < w; F++) {
        const H = R[F];
        H[0] = F, H[1] = E[F];
      }
      R.sort(t7);
      for (let F = 0; F < 8; F++)
        F < w && R[F][1] ? (u[F][0] = R[F][0], u[F][1] = R[F][1]) : (u[F][0] = Number.MAX_SAFE_INTEGER, u[F][1] = 0);
      u.sort(e7);
      const U = y.morphAttributes.position, L = y.morphAttributes.normal;
      let A = 0;
      for (let F = 0; F < 8; F++) {
        const H = u[F], B = H[0], j = H[1];
        B !== Number.MAX_SAFE_INTEGER && j ? (U && y.getAttribute("morphTarget" + F) !== U[B] && y.setAttribute("morphTarget" + F, U[B]), L && y.getAttribute("morphNormal" + F) !== L[B] && y.setAttribute("morphNormal" + F, L[B]), i[F] = j, A += j) : (U && y.hasAttribute("morphTarget" + F) === !0 && y.deleteAttribute("morphTarget" + F), L && y.hasAttribute("morphNormal" + F) === !0 && y.deleteAttribute("morphNormal" + F), i[F] = 0);
      }
      const k = y.morphTargetsRelative ? 1 : 1 - A;
      _.getUniforms().setValue(n, "morphTargetBaseInfluence", k), _.getUniforms().setValue(n, "morphTargetInfluences", i);
    }
  }
  return {
    update: h
  };
}
function r7(n, e, t, r) {
  let i = /* @__PURE__ */ new WeakMap();
  function o(h) {
    const p = r.render.frame, y = h.geometry, _ = e.get(h, y);
    if (i.get(_) !== p && (e.update(_), i.set(_, p)), h.isInstancedMesh && (h.hasEventListener("dispose", u) === !1 && h.addEventListener("dispose", u), i.get(h) !== p && (t.update(h.instanceMatrix, n.ARRAY_BUFFER), h.instanceColor !== null && t.update(h.instanceColor, n.ARRAY_BUFFER), i.set(h, p))), h.isSkinnedMesh) {
      const E = h.skeleton;
      i.get(E) !== p && (E.update(), i.set(E, p));
    }
    return _;
  }
  function l() {
    i = /* @__PURE__ */ new WeakMap();
  }
  function u(h) {
    const p = h.target;
    p.removeEventListener("dispose", u), t.remove(p.instanceMatrix), p.instanceColor !== null && t.remove(p.instanceColor);
  }
  return {
    update: o,
    dispose: l
  };
}
const m4 = /* @__PURE__ */ new Es(), v4 = /* @__PURE__ */ new BR(), g4 = /* @__PURE__ */ new yP(), y4 = /* @__PURE__ */ new JT(), kN = [], FN = [], zN = new Float32Array(16), IN = new Float32Array(9), BN = new Float32Array(4);
function Y1(n, e, t) {
  const r = n[0];
  if (r <= 0 || r > 0)
    return n;
  const i = e * t;
  let o = kN[i];
  if (o === void 0 && (o = new Float32Array(i), kN[i] = o), e !== 0) {
    r.toArray(o, 0);
    for (let l = 1, u = 0; l !== e; ++l)
      u += t, n[l].toArray(o, u);
  }
  return o;
}
function du(n, e) {
  if (n.length !== e.length)
    return !1;
  for (let t = 0, r = n.length; t < r; t++)
    if (n[t] !== e[t])
      return !1;
  return !0;
}
function hu(n, e) {
  for (let t = 0, r = e.length; t < r; t++)
    n[t] = e[t];
}
function VR(n, e) {
  let t = FN[e];
  t === void 0 && (t = new Int32Array(e), FN[e] = t);
  for (let r = 0; r !== e; ++r)
    t[r] = n.allocateTextureUnit();
  return t;
}
function i7(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1f(this.addr, e), t[0] = e);
}
function a7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) && (n.uniform2f(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
  else {
    if (du(t, e))
      return;
    n.uniform2fv(this.addr, e), hu(t, e);
  }
}
function o7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (n.uniform3f(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
  else if (e.r !== void 0)
    (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) && (n.uniform3f(this.addr, e.r, e.g, e.b), t[0] = e.r, t[1] = e.g, t[2] = e.b);
  else {
    if (du(t, e))
      return;
    n.uniform3fv(this.addr, e), hu(t, e);
  }
}
function s7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (n.uniform4f(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
  else {
    if (du(t, e))
      return;
    n.uniform4fv(this.addr, e), hu(t, e);
  }
}
function l7(n, e) {
  const t = this.cache, r = e.elements;
  if (r === void 0) {
    if (du(t, e))
      return;
    n.uniformMatrix2fv(this.addr, !1, e), hu(t, e);
  } else {
    if (du(t, r))
      return;
    BN.set(r), n.uniformMatrix2fv(this.addr, !1, BN), hu(t, r);
  }
}
function u7(n, e) {
  const t = this.cache, r = e.elements;
  if (r === void 0) {
    if (du(t, e))
      return;
    n.uniformMatrix3fv(this.addr, !1, e), hu(t, e);
  } else {
    if (du(t, r))
      return;
    IN.set(r), n.uniformMatrix3fv(this.addr, !1, IN), hu(t, r);
  }
}
function c7(n, e) {
  const t = this.cache, r = e.elements;
  if (r === void 0) {
    if (du(t, e))
      return;
    n.uniformMatrix4fv(this.addr, !1, e), hu(t, e);
  } else {
    if (du(t, r))
      return;
    zN.set(r), n.uniformMatrix4fv(this.addr, !1, zN), hu(t, r);
  }
}
function f7(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1i(this.addr, e), t[0] = e);
}
function d7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) && (n.uniform2i(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
  else {
    if (du(t, e))
      return;
    n.uniform2iv(this.addr, e), hu(t, e);
  }
}
function h7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (n.uniform3i(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
  else {
    if (du(t, e))
      return;
    n.uniform3iv(this.addr, e), hu(t, e);
  }
}
function p7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (n.uniform4i(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
  else {
    if (du(t, e))
      return;
    n.uniform4iv(this.addr, e), hu(t, e);
  }
}
function m7(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1ui(this.addr, e), t[0] = e);
}
function v7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) && (n.uniform2ui(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
  else {
    if (du(t, e))
      return;
    n.uniform2uiv(this.addr, e), hu(t, e);
  }
}
function g7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (n.uniform3ui(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
  else {
    if (du(t, e))
      return;
    n.uniform3uiv(this.addr, e), hu(t, e);
  }
}
function y7(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (n.uniform4ui(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
  else {
    if (du(t, e))
      return;
    n.uniform4uiv(this.addr, e), hu(t, e);
  }
}
function S7(n, e, t) {
  const r = this.cache, i = t.allocateTextureUnit();
  r[0] !== i && (n.uniform1i(this.addr, i), r[0] = i), t.setTexture2D(e || m4, i);
}
function _7(n, e, t) {
  const r = this.cache, i = t.allocateTextureUnit();
  r[0] !== i && (n.uniform1i(this.addr, i), r[0] = i), t.setTexture3D(e || g4, i);
}
function x7(n, e, t) {
  const r = this.cache, i = t.allocateTextureUnit();
  r[0] !== i && (n.uniform1i(this.addr, i), r[0] = i), t.setTextureCube(e || y4, i);
}
function E7(n, e, t) {
  const r = this.cache, i = t.allocateTextureUnit();
  r[0] !== i && (n.uniform1i(this.addr, i), r[0] = i), t.setTexture2DArray(e || v4, i);
}
function b7(n) {
  switch (n) {
    case 5126:
      return i7;
    case 35664:
      return a7;
    case 35665:
      return o7;
    case 35666:
      return s7;
    case 35674:
      return l7;
    case 35675:
      return u7;
    case 35676:
      return c7;
    case 5124:
    case 35670:
      return f7;
    case 35667:
    case 35671:
      return d7;
    case 35668:
    case 35672:
      return h7;
    case 35669:
    case 35673:
      return p7;
    case 5125:
      return m7;
    case 36294:
      return v7;
    case 36295:
      return g7;
    case 36296:
      return y7;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return S7;
    case 35679:
    case 36299:
    case 36307:
      return _7;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return x7;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return E7;
  }
}
function T7(n, e) {
  n.uniform1fv(this.addr, e);
}
function w7(n, e) {
  const t = Y1(e, this.size, 2);
  n.uniform2fv(this.addr, t);
}
function M7(n, e) {
  const t = Y1(e, this.size, 3);
  n.uniform3fv(this.addr, t);
}
function C7(n, e) {
  const t = Y1(e, this.size, 4);
  n.uniform4fv(this.addr, t);
}
function R7(n, e) {
  const t = Y1(e, this.size, 4);
  n.uniformMatrix2fv(this.addr, !1, t);
}
function A7(n, e) {
  const t = Y1(e, this.size, 9);
  n.uniformMatrix3fv(this.addr, !1, t);
}
function D7(n, e) {
  const t = Y1(e, this.size, 16);
  n.uniformMatrix4fv(this.addr, !1, t);
}
function L7(n, e) {
  n.uniform1iv(this.addr, e);
}
function O7(n, e) {
  n.uniform2iv(this.addr, e);
}
function P7(n, e) {
  n.uniform3iv(this.addr, e);
}
function U7(n, e) {
  n.uniform4iv(this.addr, e);
}
function N7(n, e) {
  n.uniform1uiv(this.addr, e);
}
function k7(n, e) {
  n.uniform2uiv(this.addr, e);
}
function F7(n, e) {
  n.uniform3uiv(this.addr, e);
}
function z7(n, e) {
  n.uniform4uiv(this.addr, e);
}
function I7(n, e, t) {
  const r = this.cache, i = e.length, o = VR(t, i);
  du(r, o) || (n.uniform1iv(this.addr, o), hu(r, o));
  for (let l = 0; l !== i; ++l)
    t.setTexture2D(e[l] || m4, o[l]);
}
function B7(n, e, t) {
  const r = this.cache, i = e.length, o = VR(t, i);
  du(r, o) || (n.uniform1iv(this.addr, o), hu(r, o));
  for (let l = 0; l !== i; ++l)
    t.setTexture3D(e[l] || g4, o[l]);
}
function H7(n, e, t) {
  const r = this.cache, i = e.length, o = VR(t, i);
  du(r, o) || (n.uniform1iv(this.addr, o), hu(r, o));
  for (let l = 0; l !== i; ++l)
    t.setTextureCube(e[l] || y4, o[l]);
}
function V7(n, e, t) {
  const r = this.cache, i = e.length, o = VR(t, i);
  du(r, o) || (n.uniform1iv(this.addr, o), hu(r, o));
  for (let l = 0; l !== i; ++l)
    t.setTexture2DArray(e[l] || v4, o[l]);
}
function G7(n) {
  switch (n) {
    case 5126:
      return T7;
    case 35664:
      return w7;
    case 35665:
      return M7;
    case 35666:
      return C7;
    case 35674:
      return R7;
    case 35675:
      return A7;
    case 35676:
      return D7;
    case 5124:
    case 35670:
      return L7;
    case 35667:
    case 35671:
      return O7;
    case 35668:
    case 35672:
      return P7;
    case 35669:
    case 35673:
      return U7;
    case 5125:
      return N7;
    case 36294:
      return k7;
    case 36295:
      return F7;
    case 36296:
      return z7;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return I7;
    case 35679:
    case 36299:
    case 36307:
      return B7;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return H7;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return V7;
  }
}
class W7 {
  constructor(e, t, r) {
    this.id = e, this.addr = r, this.cache = [], this.setValue = b7(t.type);
  }
}
class j7 {
  constructor(e, t, r) {
    this.id = e, this.addr = r, this.cache = [], this.size = t.size, this.setValue = G7(t.type);
  }
}
class $7 {
  constructor(e) {
    this.id = e, this.seq = [], this.map = {};
  }
  setValue(e, t, r) {
    const i = this.seq;
    for (let o = 0, l = i.length; o !== l; ++o) {
      const u = i[o];
      u.setValue(e, t[u.id], r);
    }
  }
}
const kD = /(\w+)(\])?(\[|\.)?/g;
function HN(n, e) {
  n.seq.push(e), n.map[e.id] = e;
}
function Y7(n, e, t) {
  const r = n.name, i = r.length;
  for (kD.lastIndex = 0; ; ) {
    const o = kD.exec(r), l = kD.lastIndex;
    let u = o[1];
    const h = o[2] === "]", p = o[3];
    if (h && (u = u | 0), p === void 0 || p === "[" && l + 2 === i) {
      HN(t, p === void 0 ? new W7(u, n, e) : new j7(u, n, e));
      break;
    } else {
      let _ = t.map[u];
      _ === void 0 && (_ = new $7(u), HN(t, _)), t = _;
    }
  }
}
class lR {
  constructor(e, t) {
    this.seq = [], this.map = {};
    const r = e.getProgramParameter(t, e.ACTIVE_UNIFORMS);
    for (let i = 0; i < r; ++i) {
      const o = e.getActiveUniform(t, i), l = e.getUniformLocation(t, o.name);
      Y7(o, l, this);
    }
  }
  setValue(e, t, r, i) {
    const o = this.map[t];
    o !== void 0 && o.setValue(e, r, i);
  }
  setOptional(e, t, r) {
    const i = t[r];
    i !== void 0 && this.setValue(e, r, i);
  }
  static upload(e, t, r, i) {
    for (let o = 0, l = t.length; o !== l; ++o) {
      const u = t[o], h = r[u.id];
      h.needsUpdate !== !1 && u.setValue(e, h.value, i);
    }
  }
  static seqWithValue(e, t) {
    const r = [];
    for (let i = 0, o = e.length; i !== o; ++i) {
      const l = e[i];
      l.id in t && r.push(l);
    }
    return r;
  }
}
function VN(n, e, t) {
  const r = n.createShader(e);
  return n.shaderSource(r, t), n.compileShader(r), r;
}
let X7 = 0;
function q7(n, e) {
  const t = n.split(`
`), r = [], i = Math.max(e - 6, 0), o = Math.min(e + 6, t.length);
  for (let l = i; l < o; l++) {
    const u = l + 1;
    r.push(`${u === e ? ">" : " "} ${u}: ${t[l]}`);
  }
  return r.join(`
`);
}
function K7(n) {
  switch (n) {
    case um:
      return ["Linear", "( value )"];
    case Mo:
      return ["sRGB", "( value )"];
    default:
      return console.warn("THREE.WebGLProgram: Unsupported color space:", n), ["Linear", "( value )"];
  }
}
function GN(n, e, t) {
  const r = n.getShaderParameter(e, n.COMPILE_STATUS), i = n.getShaderInfoLog(e).trim();
  if (r && i === "")
    return "";
  const o = /ERROR: 0:(\d+)/.exec(i);
  if (o) {
    const l = parseInt(o[1]);
    return t.toUpperCase() + `

` + i + `

` + q7(n.getShaderSource(e), l);
  } else
    return i;
}
function Q7(n, e) {
  const t = K7(e);
  return "vec4 " + n + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function Z7(n, e) {
  let t;
  switch (e) {
    case OI:
      t = "Linear";
      break;
    case PI:
      t = "Reinhard";
      break;
    case UI:
      t = "OptimizedCineon";
      break;
    case aP:
      t = "ACESFilmic";
      break;
    case NI:
      t = "Custom";
      break;
    default:
      console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), t = "Linear";
  }
  return "vec3 " + n + "( vec3 color ) { return " + t + "ToneMapping( color ); }";
}
function J7(n) {
  return [
    n.extensionDerivatives || n.envMapCubeUVHeight || n.bumpMap || n.normalMapTangentSpace || n.clearcoatNormalMap || n.flatShading || n.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
    (n.extensionFragDepth || n.logarithmicDepthBuffer) && n.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
    n.extensionDrawBuffers && n.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
    (n.extensionShaderTextureLOD || n.envMap || n.transmission) && n.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
  ].filter(dT).join(`
`);
}
function e$(n) {
  const e = [];
  for (const t in n) {
    const r = n[t];
    r !== !1 && e.push("#define " + t + " " + r);
  }
  return e.join(`
`);
}
function t$(n, e) {
  const t = {}, r = n.getProgramParameter(e, n.ACTIVE_ATTRIBUTES);
  for (let i = 0; i < r; i++) {
    const o = n.getActiveAttrib(e, i), l = o.name;
    let u = 1;
    o.type === n.FLOAT_MAT2 && (u = 2), o.type === n.FLOAT_MAT3 && (u = 3), o.type === n.FLOAT_MAT4 && (u = 4), t[l] = {
      type: o.type,
      location: n.getAttribLocation(e, l),
      locationSize: u
    };
  }
  return t;
}
function dT(n) {
  return n !== "";
}
function WN(n, e) {
  const t = e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
  return n.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g, t).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function jN(n, e) {
  return n.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
const n$ = /^[ \t]*#include +<([\w\d./]+)>/gm;
function hO(n) {
  return n.replace(n$, i$);
}
const r$ = /* @__PURE__ */ new Map([
  ["encodings_fragment", "colorspace_fragment"],
  // @deprecated, r154
  ["encodings_pars_fragment", "colorspace_pars_fragment"],
  // @deprecated, r154
  ["output_fragment", "opaque_fragment"]
  // @deprecated, r154
]);
function i$(n, e) {
  let t = pi[e];
  if (t === void 0) {
    const r = r$.get(e);
    if (r !== void 0)
      t = pi[r], console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.', e, r);
    else
      throw new Error("Can not resolve #include <" + e + ">");
  }
  return hO(t);
}
const a$ = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function $N(n) {
  return n.replace(a$, o$);
}
function o$(n, e, t, r) {
  let i = "";
  for (let o = parseInt(e); o < parseInt(t); o++)
    i += r.replace(/\[\s*i\s*\]/g, "[ " + o + " ]").replace(/UNROLLED_LOOP_INDEX/g, o);
  return i;
}
function YN(n) {
  let e = "precision " + n.precision + ` float;
precision ` + n.precision + " int;";
  return n.precision === "highp" ? e += `
#define HIGH_PRECISION` : n.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : n.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function s$(n) {
  let e = "SHADOWMAP_TYPE_BASIC";
  return n.shadowMapType === kR ? e = "SHADOWMAP_TYPE_PCF" : n.shadowMapType === mT ? e = "SHADOWMAP_TYPE_PCF_SOFT" : n.shadowMapType === om && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function l$(n) {
  let e = "ENVMAP_TYPE_CUBE";
  if (n.envMap)
    switch (n.envMapMode) {
      case Bg:
      case h0:
        e = "ENVMAP_TYPE_CUBE";
        break;
      case $1:
        e = "ENVMAP_TYPE_CUBE_UV";
        break;
    }
  return e;
}
function u$(n) {
  let e = "ENVMAP_MODE_REFLECTION";
  if (n.envMap)
    switch (n.envMapMode) {
      case h0:
        e = "ENVMAP_MODE_REFRACTION";
        break;
    }
  return e;
}
function c$(n) {
  let e = "ENVMAP_BLENDING_NONE";
  if (n.envMap)
    switch (n.combine) {
      case qT:
        e = "ENVMAP_BLENDING_MULTIPLY";
        break;
      case DI:
        e = "ENVMAP_BLENDING_MIX";
        break;
      case LI:
        e = "ENVMAP_BLENDING_ADD";
        break;
    }
  return e;
}
function f$(n) {
  const e = n.envMapCubeUVHeight;
  if (e === null)
    return null;
  const t = Math.log2(e) - 2, r = 1 / e;
  return { texelWidth: 1 / (3 * Math.max(Math.pow(2, t), 7 * 16)), texelHeight: r, maxMip: t };
}
function d$(n, e, t, r) {
  const i = n.getContext(), o = t.defines;
  let l = t.vertexShader, u = t.fragmentShader;
  const h = s$(t), p = l$(t), y = u$(t), _ = c$(t), E = f$(t), w = t.isWebGL2 ? "" : J7(t), R = e$(o), U = i.createProgram();
  let L, A, k = t.glslVersion ? "#version " + t.glslVersion + `
` : "";
  t.isRawShaderMaterial ? (L = [
    "#define SHADER_TYPE " + t.shaderType,
    "#define SHADER_NAME " + t.shaderName,
    R
  ].filter(dT).join(`
`), L.length > 0 && (L += `
`), A = [
    w,
    "#define SHADER_TYPE " + t.shaderType,
    "#define SHADER_NAME " + t.shaderName,
    R
  ].filter(dT).join(`
`), A.length > 0 && (A += `
`)) : (L = [
    YN(t),
    "#define SHADER_TYPE " + t.shaderType,
    "#define SHADER_NAME " + t.shaderName,
    R,
    t.instancing ? "#define USE_INSTANCING" : "",
    t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
    t.useFog && t.fog ? "#define USE_FOG" : "",
    t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
    t.map ? "#define USE_MAP" : "",
    t.envMap ? "#define USE_ENVMAP" : "",
    t.envMap ? "#define " + y : "",
    t.lightMap ? "#define USE_LIGHTMAP" : "",
    t.aoMap ? "#define USE_AOMAP" : "",
    t.bumpMap ? "#define USE_BUMPMAP" : "",
    t.normalMap ? "#define USE_NORMALMAP" : "",
    t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
    t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
    t.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
    t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
    t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
    t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
    t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
    t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
    t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
    t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
    t.specularMap ? "#define USE_SPECULARMAP" : "",
    t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
    t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
    t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
    t.metalnessMap ? "#define USE_METALNESSMAP" : "",
    t.alphaMap ? "#define USE_ALPHAMAP" : "",
    t.alphaHash ? "#define USE_ALPHAHASH" : "",
    t.transmission ? "#define USE_TRANSMISSION" : "",
    t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
    t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
    t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
    t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
    //
    t.mapUv ? "#define MAP_UV " + t.mapUv : "",
    t.alphaMapUv ? "#define ALPHAMAP_UV " + t.alphaMapUv : "",
    t.lightMapUv ? "#define LIGHTMAP_UV " + t.lightMapUv : "",
    t.aoMapUv ? "#define AOMAP_UV " + t.aoMapUv : "",
    t.emissiveMapUv ? "#define EMISSIVEMAP_UV " + t.emissiveMapUv : "",
    t.bumpMapUv ? "#define BUMPMAP_UV " + t.bumpMapUv : "",
    t.normalMapUv ? "#define NORMALMAP_UV " + t.normalMapUv : "",
    t.displacementMapUv ? "#define DISPLACEMENTMAP_UV " + t.displacementMapUv : "",
    t.metalnessMapUv ? "#define METALNESSMAP_UV " + t.metalnessMapUv : "",
    t.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + t.roughnessMapUv : "",
    t.anisotropyMapUv ? "#define ANISOTROPYMAP_UV " + t.anisotropyMapUv : "",
    t.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + t.clearcoatMapUv : "",
    t.clearcoatNormalMapUv ? "#define CLEARCOAT_NORMALMAP_UV " + t.clearcoatNormalMapUv : "",
    t.clearcoatRoughnessMapUv ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + t.clearcoatRoughnessMapUv : "",
    t.iridescenceMapUv ? "#define IRIDESCENCEMAP_UV " + t.iridescenceMapUv : "",
    t.iridescenceThicknessMapUv ? "#define IRIDESCENCE_THICKNESSMAP_UV " + t.iridescenceThicknessMapUv : "",
    t.sheenColorMapUv ? "#define SHEEN_COLORMAP_UV " + t.sheenColorMapUv : "",
    t.sheenRoughnessMapUv ? "#define SHEEN_ROUGHNESSMAP_UV " + t.sheenRoughnessMapUv : "",
    t.specularMapUv ? "#define SPECULARMAP_UV " + t.specularMapUv : "",
    t.specularColorMapUv ? "#define SPECULAR_COLORMAP_UV " + t.specularColorMapUv : "",
    t.specularIntensityMapUv ? "#define SPECULAR_INTENSITYMAP_UV " + t.specularIntensityMapUv : "",
    t.transmissionMapUv ? "#define TRANSMISSIONMAP_UV " + t.transmissionMapUv : "",
    t.thicknessMapUv ? "#define THICKNESSMAP_UV " + t.thicknessMapUv : "",
    //
    t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
    t.vertexColors ? "#define USE_COLOR" : "",
    t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
    t.vertexUv1s ? "#define USE_UV1" : "",
    t.vertexUv2s ? "#define USE_UV2" : "",
    t.vertexUv3s ? "#define USE_UV3" : "",
    t.pointsUvs ? "#define USE_POINTS_UV" : "",
    t.flatShading ? "#define FLAT_SHADED" : "",
    t.skinning ? "#define USE_SKINNING" : "",
    t.morphTargets ? "#define USE_MORPHTARGETS" : "",
    t.morphNormals && t.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
    t.morphColors && t.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
    t.morphTargetsCount > 0 && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
    t.morphTargetsCount > 0 && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + t.morphTextureStride : "",
    t.morphTargetsCount > 0 && t.isWebGL2 ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount : "",
    t.doubleSided ? "#define DOUBLE_SIDED" : "",
    t.flipSided ? "#define FLIP_SIDED" : "",
    t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
    t.shadowMapEnabled ? "#define " + h : "",
    t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
    t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
    t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
    t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
    "uniform mat4 modelMatrix;",
    "uniform mat4 modelViewMatrix;",
    "uniform mat4 projectionMatrix;",
    "uniform mat4 viewMatrix;",
    "uniform mat3 normalMatrix;",
    "uniform vec3 cameraPosition;",
    "uniform bool isOrthographic;",
    "#ifdef USE_INSTANCING",
    "	attribute mat4 instanceMatrix;",
    "#endif",
    "#ifdef USE_INSTANCING_COLOR",
    "	attribute vec3 instanceColor;",
    "#endif",
    "attribute vec3 position;",
    "attribute vec3 normal;",
    "attribute vec2 uv;",
    "#ifdef USE_UV1",
    "	attribute vec2 uv1;",
    "#endif",
    "#ifdef USE_UV2",
    "	attribute vec2 uv2;",
    "#endif",
    "#ifdef USE_UV3",
    "	attribute vec2 uv3;",
    "#endif",
    "#ifdef USE_TANGENT",
    "	attribute vec4 tangent;",
    "#endif",
    "#if defined( USE_COLOR_ALPHA )",
    "	attribute vec4 color;",
    "#elif defined( USE_COLOR )",
    "	attribute vec3 color;",
    "#endif",
    "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
    "	attribute vec3 morphTarget0;",
    "	attribute vec3 morphTarget1;",
    "	attribute vec3 morphTarget2;",
    "	attribute vec3 morphTarget3;",
    "	#ifdef USE_MORPHNORMALS",
    "		attribute vec3 morphNormal0;",
    "		attribute vec3 morphNormal1;",
    "		attribute vec3 morphNormal2;",
    "		attribute vec3 morphNormal3;",
    "	#else",
    "		attribute vec3 morphTarget4;",
    "		attribute vec3 morphTarget5;",
    "		attribute vec3 morphTarget6;",
    "		attribute vec3 morphTarget7;",
    "	#endif",
    "#endif",
    "#ifdef USE_SKINNING",
    "	attribute vec4 skinIndex;",
    "	attribute vec4 skinWeight;",
    "#endif",
    `
`
  ].filter(dT).join(`
`), A = [
    w,
    YN(t),
    "#define SHADER_TYPE " + t.shaderType,
    "#define SHADER_NAME " + t.shaderName,
    R,
    t.useFog && t.fog ? "#define USE_FOG" : "",
    t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
    t.map ? "#define USE_MAP" : "",
    t.matcap ? "#define USE_MATCAP" : "",
    t.envMap ? "#define USE_ENVMAP" : "",
    t.envMap ? "#define " + p : "",
    t.envMap ? "#define " + y : "",
    t.envMap ? "#define " + _ : "",
    E ? "#define CUBEUV_TEXEL_WIDTH " + E.texelWidth : "",
    E ? "#define CUBEUV_TEXEL_HEIGHT " + E.texelHeight : "",
    E ? "#define CUBEUV_MAX_MIP " + E.maxMip + ".0" : "",
    t.lightMap ? "#define USE_LIGHTMAP" : "",
    t.aoMap ? "#define USE_AOMAP" : "",
    t.bumpMap ? "#define USE_BUMPMAP" : "",
    t.normalMap ? "#define USE_NORMALMAP" : "",
    t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
    t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
    t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
    t.anisotropy ? "#define USE_ANISOTROPY" : "",
    t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
    t.clearcoat ? "#define USE_CLEARCOAT" : "",
    t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
    t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
    t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
    t.iridescence ? "#define USE_IRIDESCENCE" : "",
    t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
    t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
    t.specularMap ? "#define USE_SPECULARMAP" : "",
    t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
    t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
    t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
    t.metalnessMap ? "#define USE_METALNESSMAP" : "",
    t.alphaMap ? "#define USE_ALPHAMAP" : "",
    t.alphaTest ? "#define USE_ALPHATEST" : "",
    t.alphaHash ? "#define USE_ALPHAHASH" : "",
    t.sheen ? "#define USE_SHEEN" : "",
    t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
    t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
    t.transmission ? "#define USE_TRANSMISSION" : "",
    t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
    t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
    t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
    t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
    t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
    t.vertexUv1s ? "#define USE_UV1" : "",
    t.vertexUv2s ? "#define USE_UV2" : "",
    t.vertexUv3s ? "#define USE_UV3" : "",
    t.pointsUvs ? "#define USE_POINTS_UV" : "",
    t.gradientMap ? "#define USE_GRADIENTMAP" : "",
    t.flatShading ? "#define FLAT_SHADED" : "",
    t.doubleSided ? "#define DOUBLE_SIDED" : "",
    t.flipSided ? "#define FLIP_SIDED" : "",
    t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
    t.shadowMapEnabled ? "#define " + h : "",
    t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
    t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
    t.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
    t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
    t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
    "uniform mat4 viewMatrix;",
    "uniform vec3 cameraPosition;",
    "uniform bool isOrthographic;",
    t.toneMapping !== yv ? "#define TONE_MAPPING" : "",
    t.toneMapping !== yv ? pi.tonemapping_pars_fragment : "",
    // this code is required here because it is used by the toneMapping() function defined below
    t.toneMapping !== yv ? Z7("toneMapping", t.toneMapping) : "",
    t.dithering ? "#define DITHERING" : "",
    t.opaque ? "#define OPAQUE" : "",
    pi.colorspace_pars_fragment,
    // this code is required here because it is used by the various encoding/decoding function defined below
    Q7("linearToOutputTexel", t.outputColorSpace),
    t.useDepthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
    `
`
  ].filter(dT).join(`
`)), l = hO(l), l = WN(l, t), l = jN(l, t), u = hO(u), u = WN(u, t), u = jN(u, t), l = $N(l), u = $N(u), t.isWebGL2 && t.isRawShaderMaterial !== !0 && (k = `#version 300 es
`, L = [
    "precision mediump sampler2DArray;",
    "#define attribute in",
    "#define varying out",
    "#define texture2D texture"
  ].join(`
`) + `
` + L, A = [
    "#define varying in",
    t.glslVersion === cO ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
    t.glslVersion === cO ? "" : "#define gl_FragColor pc_fragColor",
    "#define gl_FragDepthEXT gl_FragDepth",
    "#define texture2D texture",
    "#define textureCube texture",
    "#define texture2DProj textureProj",
    "#define texture2DLodEXT textureLod",
    "#define texture2DProjLodEXT textureProjLod",
    "#define textureCubeLodEXT textureLod",
    "#define texture2DGradEXT textureGrad",
    "#define texture2DProjGradEXT textureProjGrad",
    "#define textureCubeGradEXT textureGrad"
  ].join(`
`) + `
` + A);
  const F = k + L + l, H = k + A + u, B = VN(i, i.VERTEX_SHADER, F), j = VN(i, i.FRAGMENT_SHADER, H);
  if (i.attachShader(U, B), i.attachShader(U, j), t.index0AttributeName !== void 0 ? i.bindAttribLocation(U, 0, t.index0AttributeName) : t.morphTargets === !0 && i.bindAttribLocation(U, 0, "position"), i.linkProgram(U), n.debug.checkShaderErrors) {
    const Z = i.getProgramInfoLog(U).trim(), K = i.getShaderInfoLog(B).trim(), fe = i.getShaderInfoLog(j).trim();
    let se = !0, he = !0;
    if (i.getProgramParameter(U, i.LINK_STATUS) === !1)
      if (se = !1, typeof n.debug.onShaderError == "function")
        n.debug.onShaderError(i, U, B, j);
      else {
        const me = GN(i, B, "vertex"), Ee = GN(i, j, "fragment");
        console.error(
          "THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(U, i.VALIDATE_STATUS) + `

Program Info Log: ` + Z + `
` + me + `
` + Ee
        );
      }
    else
      Z !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", Z) : (K === "" || fe === "") && (he = !1);
    he && (this.diagnostics = {
      runnable: se,
      programLog: Z,
      vertexShader: {
        log: K,
        prefix: L
      },
      fragmentShader: {
        log: fe,
        prefix: A
      }
    });
  }
  i.deleteShader(B), i.deleteShader(j);
  let Y;
  this.getUniforms = function() {
    return Y === void 0 && (Y = new lR(i, U)), Y;
  };
  let ee;
  return this.getAttributes = function() {
    return ee === void 0 && (ee = t$(i, U)), ee;
  }, this.destroy = function() {
    r.releaseStatesOfProgram(this), i.deleteProgram(U), this.program = void 0;
  }, this.type = t.shaderType, this.name = t.shaderName, this.id = X7++, this.cacheKey = e, this.usedTimes = 1, this.program = U, this.vertexShader = B, this.fragmentShader = j, this;
}
let h$ = 0;
class p$ {
  constructor() {
    this.shaderCache = /* @__PURE__ */ new Map(), this.materialCache = /* @__PURE__ */ new Map();
  }
  update(e) {
    const t = e.vertexShader, r = e.fragmentShader, i = this._getShaderStage(t), o = this._getShaderStage(r), l = this._getShaderCacheForMaterial(e);
    return l.has(i) === !1 && (l.add(i), i.usedTimes++), l.has(o) === !1 && (l.add(o), o.usedTimes++), this;
  }
  remove(e) {
    const t = this.materialCache.get(e);
    for (const r of t)
      r.usedTimes--, r.usedTimes === 0 && this.shaderCache.delete(r.code);
    return this.materialCache.delete(e), this;
  }
  getVertexShaderID(e) {
    return this._getShaderStage(e.vertexShader).id;
  }
  getFragmentShaderID(e) {
    return this._getShaderStage(e.fragmentShader).id;
  }
  dispose() {
    this.shaderCache.clear(), this.materialCache.clear();
  }
  _getShaderCacheForMaterial(e) {
    const t = this.materialCache;
    let r = t.get(e);
    return r === void 0 && (r = /* @__PURE__ */ new Set(), t.set(e, r)), r;
  }
  _getShaderStage(e) {
    const t = this.shaderCache;
    let r = t.get(e);
    return r === void 0 && (r = new m$(e), t.set(e, r)), r;
  }
}
class m$ {
  constructor(e) {
    this.id = h$++, this.code = e, this.usedTimes = 0;
  }
}
function v$(n, e, t, r, i, o, l) {
  const u = new i_(), h = new p$(), p = [], y = i.isWebGL2, _ = i.logarithmicDepthBuffer, E = i.vertexTextures;
  let w = i.precision;
  const R = {
    MeshDepthMaterial: "depth",
    MeshDistanceMaterial: "distanceRGBA",
    MeshNormalMaterial: "normal",
    MeshBasicMaterial: "basic",
    MeshLambertMaterial: "lambert",
    MeshPhongMaterial: "phong",
    MeshToonMaterial: "toon",
    MeshStandardMaterial: "physical",
    MeshPhysicalMaterial: "physical",
    MeshMatcapMaterial: "matcap",
    LineBasicMaterial: "basic",
    LineDashedMaterial: "dashed",
    PointsMaterial: "points",
    ShadowMaterial: "shadow",
    SpriteMaterial: "sprite"
  };
  function U(Z) {
    return Z === 0 ? "uv" : `uv${Z}`;
  }
  function L(Z, K, fe, se, he) {
    const me = se.fog, Ee = he.geometry, be = Z.isMeshStandardMaterial ? se.environment : null, we = (Z.isMeshStandardMaterial ? t : e).get(Z.envMap || be), de = we && we.mapping === $1 ? we.image.height : null, ye = R[Z.type];
    Z.precision !== null && (w = i.getMaxPrecision(Z.precision), w !== Z.precision && console.warn("THREE.WebGLProgram.getParameters:", Z.precision, "not supported, using", w, "instead."));
    const X = Ee.morphAttributes.position || Ee.morphAttributes.normal || Ee.morphAttributes.color, q = X !== void 0 ? X.length : 0;
    let ue = 0;
    Ee.morphAttributes.position !== void 0 && (ue = 1), Ee.morphAttributes.normal !== void 0 && (ue = 2), Ee.morphAttributes.color !== void 0 && (ue = 3);
    let Ce, Ae, De, Ne;
    if (ye) {
      const tr = lm[ye];
      Ce = tr.vertexShader, Ae = tr.fragmentShader;
    } else
      Ce = Z.vertexShader, Ae = Z.fragmentShader, h.update(Z), De = h.getVertexShaderID(Z), Ne = h.getFragmentShaderID(Z);
    const Pe = n.getRenderTarget(), Fe = he.isInstancedMesh === !0, it = !!Z.map, Ot = !!Z.matcap, st = !!we, oe = !!Z.aoMap, rt = !!Z.lightMap, qe = !!Z.bumpMap, $e = !!Z.normalMap, Ye = !!Z.displacementMap, zt = !!Z.emissiveMap, ot = !!Z.metalnessMap, Dt = !!Z.roughnessMap, kt = Z.anisotropy > 0, mt = Z.clearcoat > 0, rn = Z.iridescence > 0, ae = Z.sheen > 0, re = Z.transmission > 0, ze = kt && !!Z.anisotropyMap, xt = mt && !!Z.clearcoatMap, ut = mt && !!Z.clearcoatNormalMap, lt = mt && !!Z.clearcoatRoughnessMap, Yt = rn && !!Z.iridescenceMap, Nt = rn && !!Z.iridescenceThicknessMap, xe = ae && !!Z.sheenColorMap, We = ae && !!Z.sheenRoughnessMap, ft = !!Z.specularMap, Et = !!Z.specularColorMap, Ze = !!Z.specularIntensityMap, Te = re && !!Z.transmissionMap, tt = re && !!Z.thicknessMap, pt = !!Z.gradientMap, ve = !!Z.alphaMap, Pt = Z.alphaTest > 0, He = !!Z.alphaHash, dt = !!Z.extensions, ln = !!Ee.attributes.uv1, Un = !!Ee.attributes.uv2, jn = !!Ee.attributes.uv3;
    let cr = yv;
    return Z.toneMapped && (Pe === null || Pe.isXRRenderTarget === !0) && (cr = n.toneMapping), {
      isWebGL2: y,
      shaderID: ye,
      shaderType: Z.type,
      shaderName: Z.name,
      vertexShader: Ce,
      fragmentShader: Ae,
      defines: Z.defines,
      customVertexShaderID: De,
      customFragmentShaderID: Ne,
      isRawShaderMaterial: Z.isRawShaderMaterial === !0,
      glslVersion: Z.glslVersion,
      precision: w,
      instancing: Fe,
      instancingColor: Fe && he.instanceColor !== null,
      supportsVertexTextures: E,
      outputColorSpace: Pe === null ? n.outputColorSpace : Pe.isXRRenderTarget === !0 ? Pe.texture.colorSpace : um,
      map: it,
      matcap: Ot,
      envMap: st,
      envMapMode: st && we.mapping,
      envMapCubeUVHeight: de,
      aoMap: oe,
      lightMap: rt,
      bumpMap: qe,
      normalMap: $e,
      displacementMap: E && Ye,
      emissiveMap: zt,
      normalMapObjectSpace: $e && Z.normalMapType === qI,
      normalMapTangentSpace: $e && Z.normalMapType === _0,
      metalnessMap: ot,
      roughnessMap: Dt,
      anisotropy: kt,
      anisotropyMap: ze,
      clearcoat: mt,
      clearcoatMap: xt,
      clearcoatNormalMap: ut,
      clearcoatRoughnessMap: lt,
      iridescence: rn,
      iridescenceMap: Yt,
      iridescenceThicknessMap: Nt,
      sheen: ae,
      sheenColorMap: xe,
      sheenRoughnessMap: We,
      specularMap: ft,
      specularColorMap: Et,
      specularIntensityMap: Ze,
      transmission: re,
      transmissionMap: Te,
      thicknessMap: tt,
      gradientMap: pt,
      opaque: Z.transparent === !1 && Z.blending === n_,
      alphaMap: ve,
      alphaTest: Pt,
      alphaHash: He,
      combine: Z.combine,
      //
      mapUv: it && U(Z.map.channel),
      aoMapUv: oe && U(Z.aoMap.channel),
      lightMapUv: rt && U(Z.lightMap.channel),
      bumpMapUv: qe && U(Z.bumpMap.channel),
      normalMapUv: $e && U(Z.normalMap.channel),
      displacementMapUv: Ye && U(Z.displacementMap.channel),
      emissiveMapUv: zt && U(Z.emissiveMap.channel),
      metalnessMapUv: ot && U(Z.metalnessMap.channel),
      roughnessMapUv: Dt && U(Z.roughnessMap.channel),
      anisotropyMapUv: ze && U(Z.anisotropyMap.channel),
      clearcoatMapUv: xt && U(Z.clearcoatMap.channel),
      clearcoatNormalMapUv: ut && U(Z.clearcoatNormalMap.channel),
      clearcoatRoughnessMapUv: lt && U(Z.clearcoatRoughnessMap.channel),
      iridescenceMapUv: Yt && U(Z.iridescenceMap.channel),
      iridescenceThicknessMapUv: Nt && U(Z.iridescenceThicknessMap.channel),
      sheenColorMapUv: xe && U(Z.sheenColorMap.channel),
      sheenRoughnessMapUv: We && U(Z.sheenRoughnessMap.channel),
      specularMapUv: ft && U(Z.specularMap.channel),
      specularColorMapUv: Et && U(Z.specularColorMap.channel),
      specularIntensityMapUv: Ze && U(Z.specularIntensityMap.channel),
      transmissionMapUv: Te && U(Z.transmissionMap.channel),
      thicknessMapUv: tt && U(Z.thicknessMap.channel),
      alphaMapUv: ve && U(Z.alphaMap.channel),
      //
      vertexTangents: !!Ee.attributes.tangent && ($e || kt),
      vertexColors: Z.vertexColors,
      vertexAlphas: Z.vertexColors === !0 && !!Ee.attributes.color && Ee.attributes.color.itemSize === 4,
      vertexUv1s: ln,
      vertexUv2s: Un,
      vertexUv3s: jn,
      pointsUvs: he.isPoints === !0 && !!Ee.attributes.uv && (it || ve),
      fog: !!me,
      useFog: Z.fog === !0,
      fogExp2: me && me.isFogExp2,
      flatShading: Z.flatShading === !0,
      sizeAttenuation: Z.sizeAttenuation === !0,
      logarithmicDepthBuffer: _,
      skinning: he.isSkinnedMesh === !0,
      morphTargets: Ee.morphAttributes.position !== void 0,
      morphNormals: Ee.morphAttributes.normal !== void 0,
      morphColors: Ee.morphAttributes.color !== void 0,
      morphTargetsCount: q,
      morphTextureStride: ue,
      numDirLights: K.directional.length,
      numPointLights: K.point.length,
      numSpotLights: K.spot.length,
      numSpotLightMaps: K.spotLightMap.length,
      numRectAreaLights: K.rectArea.length,
      numHemiLights: K.hemi.length,
      numDirLightShadows: K.directionalShadowMap.length,
      numPointLightShadows: K.pointShadowMap.length,
      numSpotLightShadows: K.spotShadowMap.length,
      numSpotLightShadowsWithMaps: K.numSpotLightShadowsWithMaps,
      numClippingPlanes: l.numPlanes,
      numClipIntersection: l.numIntersection,
      dithering: Z.dithering,
      shadowMapEnabled: n.shadowMap.enabled && fe.length > 0,
      shadowMapType: n.shadowMap.type,
      toneMapping: cr,
      useLegacyLights: n._useLegacyLights,
      decodeVideoTexture: it && Z.map.isVideoTexture === !0 && Z.map.colorSpace === Mo,
      premultipliedAlpha: Z.premultipliedAlpha,
      doubleSided: Z.side === cp,
      flipSided: Z.side === Wc,
      useDepthPacking: Z.depthPacking >= 0,
      depthPacking: Z.depthPacking || 0,
      index0AttributeName: Z.index0AttributeName,
      extensionDerivatives: dt && Z.extensions.derivatives === !0,
      extensionFragDepth: dt && Z.extensions.fragDepth === !0,
      extensionDrawBuffers: dt && Z.extensions.drawBuffers === !0,
      extensionShaderTextureLOD: dt && Z.extensions.shaderTextureLOD === !0,
      rendererExtensionFragDepth: y || r.has("EXT_frag_depth"),
      rendererExtensionDrawBuffers: y || r.has("WEBGL_draw_buffers"),
      rendererExtensionShaderTextureLod: y || r.has("EXT_shader_texture_lod"),
      customProgramCacheKey: Z.customProgramCacheKey()
    };
  }
  function A(Z) {
    const K = [];
    if (Z.shaderID ? K.push(Z.shaderID) : (K.push(Z.customVertexShaderID), K.push(Z.customFragmentShaderID)), Z.defines !== void 0)
      for (const fe in Z.defines)
        K.push(fe), K.push(Z.defines[fe]);
    return Z.isRawShaderMaterial === !1 && (k(K, Z), F(K, Z), K.push(n.outputColorSpace)), K.push(Z.customProgramCacheKey), K.join();
  }
  function k(Z, K) {
    Z.push(K.precision), Z.push(K.outputColorSpace), Z.push(K.envMapMode), Z.push(K.envMapCubeUVHeight), Z.push(K.mapUv), Z.push(K.alphaMapUv), Z.push(K.lightMapUv), Z.push(K.aoMapUv), Z.push(K.bumpMapUv), Z.push(K.normalMapUv), Z.push(K.displacementMapUv), Z.push(K.emissiveMapUv), Z.push(K.metalnessMapUv), Z.push(K.roughnessMapUv), Z.push(K.anisotropyMapUv), Z.push(K.clearcoatMapUv), Z.push(K.clearcoatNormalMapUv), Z.push(K.clearcoatRoughnessMapUv), Z.push(K.iridescenceMapUv), Z.push(K.iridescenceThicknessMapUv), Z.push(K.sheenColorMapUv), Z.push(K.sheenRoughnessMapUv), Z.push(K.specularMapUv), Z.push(K.specularColorMapUv), Z.push(K.specularIntensityMapUv), Z.push(K.transmissionMapUv), Z.push(K.thicknessMapUv), Z.push(K.combine), Z.push(K.fogExp2), Z.push(K.sizeAttenuation), Z.push(K.morphTargetsCount), Z.push(K.morphAttributeCount), Z.push(K.numDirLights), Z.push(K.numPointLights), Z.push(K.numSpotLights), Z.push(K.numSpotLightMaps), Z.push(K.numHemiLights), Z.push(K.numRectAreaLights), Z.push(K.numDirLightShadows), Z.push(K.numPointLightShadows), Z.push(K.numSpotLightShadows), Z.push(K.numSpotLightShadowsWithMaps), Z.push(K.shadowMapType), Z.push(K.toneMapping), Z.push(K.numClippingPlanes), Z.push(K.numClipIntersection), Z.push(K.depthPacking);
  }
  function F(Z, K) {
    u.disableAll(), K.isWebGL2 && u.enable(0), K.supportsVertexTextures && u.enable(1), K.instancing && u.enable(2), K.instancingColor && u.enable(3), K.matcap && u.enable(4), K.envMap && u.enable(5), K.normalMapObjectSpace && u.enable(6), K.normalMapTangentSpace && u.enable(7), K.clearcoat && u.enable(8), K.iridescence && u.enable(9), K.alphaTest && u.enable(10), K.vertexColors && u.enable(11), K.vertexAlphas && u.enable(12), K.vertexUv1s && u.enable(13), K.vertexUv2s && u.enable(14), K.vertexUv3s && u.enable(15), K.vertexTangents && u.enable(16), K.anisotropy && u.enable(17), Z.push(u.mask), u.disableAll(), K.fog && u.enable(0), K.useFog && u.enable(1), K.flatShading && u.enable(2), K.logarithmicDepthBuffer && u.enable(3), K.skinning && u.enable(4), K.morphTargets && u.enable(5), K.morphNormals && u.enable(6), K.morphColors && u.enable(7), K.premultipliedAlpha && u.enable(8), K.shadowMapEnabled && u.enable(9), K.useLegacyLights && u.enable(10), K.doubleSided && u.enable(11), K.flipSided && u.enable(12), K.useDepthPacking && u.enable(13), K.dithering && u.enable(14), K.transmission && u.enable(15), K.sheen && u.enable(16), K.opaque && u.enable(17), K.pointsUvs && u.enable(18), K.decodeVideoTexture && u.enable(19), Z.push(u.mask);
  }
  function H(Z) {
    const K = R[Z.type];
    let fe;
    if (K) {
      const se = lm[K];
      fe = xP.clone(se.uniforms);
    } else
      fe = Z.uniforms;
    return fe;
  }
  function B(Z, K) {
    let fe;
    for (let se = 0, he = p.length; se < he; se++) {
      const me = p[se];
      if (me.cacheKey === K) {
        fe = me, ++fe.usedTimes;
        break;
      }
    }
    return fe === void 0 && (fe = new d$(n, K, Z, o), p.push(fe)), fe;
  }
  function j(Z) {
    if (--Z.usedTimes === 0) {
      const K = p.indexOf(Z);
      p[K] = p[p.length - 1], p.pop(), Z.destroy();
    }
  }
  function Y(Z) {
    h.remove(Z);
  }
  function ee() {
    h.dispose();
  }
  return {
    getParameters: L,
    getProgramCacheKey: A,
    getUniforms: H,
    acquireProgram: B,
    releaseProgram: j,
    releaseShaderCache: Y,
    // Exposed for resource monitoring & error feedback via renderer.info:
    programs: p,
    dispose: ee
  };
}
function g$() {
  let n = /* @__PURE__ */ new WeakMap();
  function e(o) {
    let l = n.get(o);
    return l === void 0 && (l = {}, n.set(o, l)), l;
  }
  function t(o) {
    n.delete(o);
  }
  function r(o, l, u) {
    n.get(o)[l] = u;
  }
  function i() {
    n = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: e,
    remove: t,
    update: r,
    dispose: i
  };
}
function y$(n, e) {
  return n.groupOrder !== e.groupOrder ? n.groupOrder - e.groupOrder : n.renderOrder !== e.renderOrder ? n.renderOrder - e.renderOrder : n.material.id !== e.material.id ? n.material.id - e.material.id : n.z !== e.z ? n.z - e.z : n.id - e.id;
}
function XN(n, e) {
  return n.groupOrder !== e.groupOrder ? n.groupOrder - e.groupOrder : n.renderOrder !== e.renderOrder ? n.renderOrder - e.renderOrder : n.z !== e.z ? e.z - n.z : n.id - e.id;
}
function qN() {
  const n = [];
  let e = 0;
  const t = [], r = [], i = [];
  function o() {
    e = 0, t.length = 0, r.length = 0, i.length = 0;
  }
  function l(_, E, w, R, U, L) {
    let A = n[e];
    return A === void 0 ? (A = {
      id: _.id,
      object: _,
      geometry: E,
      material: w,
      groupOrder: R,
      renderOrder: _.renderOrder,
      z: U,
      group: L
    }, n[e] = A) : (A.id = _.id, A.object = _, A.geometry = E, A.material = w, A.groupOrder = R, A.renderOrder = _.renderOrder, A.z = U, A.group = L), e++, A;
  }
  function u(_, E, w, R, U, L) {
    const A = l(_, E, w, R, U, L);
    w.transmission > 0 ? r.push(A) : w.transparent === !0 ? i.push(A) : t.push(A);
  }
  function h(_, E, w, R, U, L) {
    const A = l(_, E, w, R, U, L);
    w.transmission > 0 ? r.unshift(A) : w.transparent === !0 ? i.unshift(A) : t.unshift(A);
  }
  function p(_, E) {
    t.length > 1 && t.sort(_ || y$), r.length > 1 && r.sort(E || XN), i.length > 1 && i.sort(E || XN);
  }
  function y() {
    for (let _ = e, E = n.length; _ < E; _++) {
      const w = n[_];
      if (w.id === null)
        break;
      w.id = null, w.object = null, w.geometry = null, w.material = null, w.group = null;
    }
  }
  return {
    opaque: t,
    transmissive: r,
    transparent: i,
    init: o,
    push: u,
    unshift: h,
    finish: y,
    sort: p
  };
}
function S$() {
  let n = /* @__PURE__ */ new WeakMap();
  function e(r, i) {
    const o = n.get(r);
    let l;
    return o === void 0 ? (l = new qN(), n.set(r, [l])) : i >= o.length ? (l = new qN(), o.push(l)) : l = o[i], l;
  }
  function t() {
    n = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: e,
    dispose: t
  };
}
function _$() {
  const n = {};
  return {
    get: function(e) {
      if (n[e.id] !== void 0)
        return n[e.id];
      let t;
      switch (e.type) {
        case "DirectionalLight":
          t = {
            direction: new Re(),
            color: new Pn()
          };
          break;
        case "SpotLight":
          t = {
            position: new Re(),
            direction: new Re(),
            color: new Pn(),
            distance: 0,
            coneCos: 0,
            penumbraCos: 0,
            decay: 0
          };
          break;
        case "PointLight":
          t = {
            position: new Re(),
            color: new Pn(),
            distance: 0,
            decay: 0
          };
          break;
        case "HemisphereLight":
          t = {
            direction: new Re(),
            skyColor: new Pn(),
            groundColor: new Pn()
          };
          break;
        case "RectAreaLight":
          t = {
            color: new Pn(),
            position: new Re(),
            halfWidth: new Re(),
            halfHeight: new Re()
          };
          break;
      }
      return n[e.id] = t, t;
    }
  };
}
function x$() {
  const n = {};
  return {
    get: function(e) {
      if (n[e.id] !== void 0)
        return n[e.id];
      let t;
      switch (e.type) {
        case "DirectionalLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new $t()
          };
          break;
        case "SpotLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new $t()
          };
          break;
        case "PointLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new $t(),
            shadowCameraNear: 1,
            shadowCameraFar: 1e3
          };
          break;
      }
      return n[e.id] = t, t;
    }
  };
}
let E$ = 0;
function b$(n, e) {
  return (e.castShadow ? 2 : 0) - (n.castShadow ? 2 : 0) + (e.map ? 1 : 0) - (n.map ? 1 : 0);
}
function T$(n, e) {
  const t = new _$(), r = x$(), i = {
    version: 0,
    hash: {
      directionalLength: -1,
      pointLength: -1,
      spotLength: -1,
      rectAreaLength: -1,
      hemiLength: -1,
      numDirectionalShadows: -1,
      numPointShadows: -1,
      numSpotShadows: -1,
      numSpotMaps: -1
    },
    ambient: [0, 0, 0],
    probe: [],
    directional: [],
    directionalShadow: [],
    directionalShadowMap: [],
    directionalShadowMatrix: [],
    spot: [],
    spotLightMap: [],
    spotShadow: [],
    spotShadowMap: [],
    spotLightMatrix: [],
    rectArea: [],
    rectAreaLTC1: null,
    rectAreaLTC2: null,
    point: [],
    pointShadow: [],
    pointShadowMap: [],
    pointShadowMatrix: [],
    hemi: [],
    numSpotLightShadowsWithMaps: 0
  };
  for (let y = 0; y < 9; y++)
    i.probe.push(new Re());
  const o = new Re(), l = new ri(), u = new ri();
  function h(y, _) {
    let E = 0, w = 0, R = 0;
    for (let fe = 0; fe < 9; fe++)
      i.probe[fe].set(0, 0, 0);
    let U = 0, L = 0, A = 0, k = 0, F = 0, H = 0, B = 0, j = 0, Y = 0, ee = 0;
    y.sort(b$);
    const Z = _ === !0 ? Math.PI : 1;
    for (let fe = 0, se = y.length; fe < se; fe++) {
      const he = y[fe], me = he.color, Ee = he.intensity, be = he.distance, we = he.shadow && he.shadow.map ? he.shadow.map.texture : null;
      if (he.isAmbientLight)
        E += me.r * Ee * Z, w += me.g * Ee * Z, R += me.b * Ee * Z;
      else if (he.isLightProbe)
        for (let de = 0; de < 9; de++)
          i.probe[de].addScaledVector(he.sh.coefficients[de], Ee);
      else if (he.isDirectionalLight) {
        const de = t.get(he);
        if (de.color.copy(he.color).multiplyScalar(he.intensity * Z), he.castShadow) {
          const ye = he.shadow, X = r.get(he);
          X.shadowBias = ye.bias, X.shadowNormalBias = ye.normalBias, X.shadowRadius = ye.radius, X.shadowMapSize = ye.mapSize, i.directionalShadow[U] = X, i.directionalShadowMap[U] = we, i.directionalShadowMatrix[U] = he.shadow.matrix, H++;
        }
        i.directional[U] = de, U++;
      } else if (he.isSpotLight) {
        const de = t.get(he);
        de.position.setFromMatrixPosition(he.matrixWorld), de.color.copy(me).multiplyScalar(Ee * Z), de.distance = be, de.coneCos = Math.cos(he.angle), de.penumbraCos = Math.cos(he.angle * (1 - he.penumbra)), de.decay = he.decay, i.spot[A] = de;
        const ye = he.shadow;
        if (he.map && (i.spotLightMap[Y] = he.map, Y++, ye.updateMatrices(he), he.castShadow && ee++), i.spotLightMatrix[A] = ye.matrix, he.castShadow) {
          const X = r.get(he);
          X.shadowBias = ye.bias, X.shadowNormalBias = ye.normalBias, X.shadowRadius = ye.radius, X.shadowMapSize = ye.mapSize, i.spotShadow[A] = X, i.spotShadowMap[A] = we, j++;
        }
        A++;
      } else if (he.isRectAreaLight) {
        const de = t.get(he);
        de.color.copy(me).multiplyScalar(Ee), de.halfWidth.set(he.width * 0.5, 0, 0), de.halfHeight.set(0, he.height * 0.5, 0), i.rectArea[k] = de, k++;
      } else if (he.isPointLight) {
        const de = t.get(he);
        if (de.color.copy(he.color).multiplyScalar(he.intensity * Z), de.distance = he.distance, de.decay = he.decay, he.castShadow) {
          const ye = he.shadow, X = r.get(he);
          X.shadowBias = ye.bias, X.shadowNormalBias = ye.normalBias, X.shadowRadius = ye.radius, X.shadowMapSize = ye.mapSize, X.shadowCameraNear = ye.camera.near, X.shadowCameraFar = ye.camera.far, i.pointShadow[L] = X, i.pointShadowMap[L] = we, i.pointShadowMatrix[L] = he.shadow.matrix, B++;
        }
        i.point[L] = de, L++;
      } else if (he.isHemisphereLight) {
        const de = t.get(he);
        de.skyColor.copy(he.color).multiplyScalar(Ee * Z), de.groundColor.copy(he.groundColor).multiplyScalar(Ee * Z), i.hemi[F] = de, F++;
      }
    }
    k > 0 && (e.isWebGL2 || n.has("OES_texture_float_linear") === !0 ? (i.rectAreaLTC1 = Cn.LTC_FLOAT_1, i.rectAreaLTC2 = Cn.LTC_FLOAT_2) : n.has("OES_texture_half_float_linear") === !0 ? (i.rectAreaLTC1 = Cn.LTC_HALF_1, i.rectAreaLTC2 = Cn.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = E, i.ambient[1] = w, i.ambient[2] = R;
    const K = i.hash;
    (K.directionalLength !== U || K.pointLength !== L || K.spotLength !== A || K.rectAreaLength !== k || K.hemiLength !== F || K.numDirectionalShadows !== H || K.numPointShadows !== B || K.numSpotShadows !== j || K.numSpotMaps !== Y) && (i.directional.length = U, i.spot.length = A, i.rectArea.length = k, i.point.length = L, i.hemi.length = F, i.directionalShadow.length = H, i.directionalShadowMap.length = H, i.pointShadow.length = B, i.pointShadowMap.length = B, i.spotShadow.length = j, i.spotShadowMap.length = j, i.directionalShadowMatrix.length = H, i.pointShadowMatrix.length = B, i.spotLightMatrix.length = j + Y - ee, i.spotLightMap.length = Y, i.numSpotLightShadowsWithMaps = ee, K.directionalLength = U, K.pointLength = L, K.spotLength = A, K.rectAreaLength = k, K.hemiLength = F, K.numDirectionalShadows = H, K.numPointShadows = B, K.numSpotShadows = j, K.numSpotMaps = Y, i.version = E$++);
  }
  function p(y, _) {
    let E = 0, w = 0, R = 0, U = 0, L = 0;
    const A = _.matrixWorldInverse;
    for (let k = 0, F = y.length; k < F; k++) {
      const H = y[k];
      if (H.isDirectionalLight) {
        const B = i.directional[E];
        B.direction.setFromMatrixPosition(H.matrixWorld), o.setFromMatrixPosition(H.target.matrixWorld), B.direction.sub(o), B.direction.transformDirection(A), E++;
      } else if (H.isSpotLight) {
        const B = i.spot[R];
        B.position.setFromMatrixPosition(H.matrixWorld), B.position.applyMatrix4(A), B.direction.setFromMatrixPosition(H.matrixWorld), o.setFromMatrixPosition(H.target.matrixWorld), B.direction.sub(o), B.direction.transformDirection(A), R++;
      } else if (H.isRectAreaLight) {
        const B = i.rectArea[U];
        B.position.setFromMatrixPosition(H.matrixWorld), B.position.applyMatrix4(A), u.identity(), l.copy(H.matrixWorld), l.premultiply(A), u.extractRotation(l), B.halfWidth.set(H.width * 0.5, 0, 0), B.halfHeight.set(0, H.height * 0.5, 0), B.halfWidth.applyMatrix4(u), B.halfHeight.applyMatrix4(u), U++;
      } else if (H.isPointLight) {
        const B = i.point[w];
        B.position.setFromMatrixPosition(H.matrixWorld), B.position.applyMatrix4(A), w++;
      } else if (H.isHemisphereLight) {
        const B = i.hemi[L];
        B.direction.setFromMatrixPosition(H.matrixWorld), B.direction.transformDirection(A), L++;
      }
    }
  }
  return {
    setup: h,
    setupView: p,
    state: i
  };
}
function KN(n, e) {
  const t = new T$(n, e), r = [], i = [];
  function o() {
    r.length = 0, i.length = 0;
  }
  function l(_) {
    r.push(_);
  }
  function u(_) {
    i.push(_);
  }
  function h(_) {
    t.setup(r, _);
  }
  function p(_) {
    t.setupView(r, _);
  }
  return {
    init: o,
    state: {
      lightsArray: r,
      shadowsArray: i,
      lights: t
    },
    setupLights: h,
    setupLightsView: p,
    pushLight: l,
    pushShadow: u
  };
}
function w$(n, e) {
  let t = /* @__PURE__ */ new WeakMap();
  function r(o, l = 0) {
    const u = t.get(o);
    let h;
    return u === void 0 ? (h = new KN(n, e), t.set(o, [h])) : l >= u.length ? (h = new KN(n, e), u.push(h)) : h = u[l], h;
  }
  function i() {
    t = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: r,
    dispose: i
  };
}
class GR extends hc {
  constructor(e) {
    super(), this.isMeshDepthMaterial = !0, this.type = "MeshDepthMaterial", this.depthPacking = XI, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
  }
}
class WR extends hc {
  constructor(e) {
    super(), this.isMeshDistanceMaterial = !0, this.type = "MeshDistanceMaterial", this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
  }
}
const M$ = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, C$ = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function R$(n, e, t) {
  let r = new HR();
  const i = new $t(), o = new $t(), l = new Ma(), u = new GR({ depthPacking: mP }), h = new WR(), p = {}, y = t.maxTextureSize, _ = { [xv]: Wc, [Wc]: xv, [cp]: cp }, E = new Ev({
    defines: {
      VSM_SAMPLES: 8
    },
    uniforms: {
      shadow_pass: { value: null },
      resolution: { value: new $t() },
      radius: { value: 4 }
    },
    vertexShader: M$,
    fragmentShader: C$
  }), w = E.clone();
  w.defines.HORIZONTAL_PASS = 1;
  const R = new Ei();
  R.setAttribute(
    "position",
    new mo(
      new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]),
      3
    )
  );
  const U = new Nl(R, E), L = this;
  this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = kR;
  let A = this.type;
  this.render = function(B, j, Y) {
    if (L.enabled === !1 || L.autoUpdate === !1 && L.needsUpdate === !1 || B.length === 0)
      return;
    const ee = n.getRenderTarget(), Z = n.getActiveCubeFace(), K = n.getActiveMipmapLevel(), fe = n.state;
    fe.setBlending(zg), fe.buffers.color.setClear(1, 1, 1, 1), fe.buffers.depth.setTest(!0), fe.setScissorTest(!1);
    const se = A !== om && this.type === om, he = A === om && this.type !== om;
    for (let me = 0, Ee = B.length; me < Ee; me++) {
      const be = B[me], we = be.shadow;
      if (we === void 0) {
        console.warn("THREE.WebGLShadowMap:", be, "has no shadow.");
        continue;
      }
      if (we.autoUpdate === !1 && we.needsUpdate === !1)
        continue;
      i.copy(we.mapSize);
      const de = we.getFrameExtents();
      if (i.multiply(de), o.copy(we.mapSize), (i.x > y || i.y > y) && (i.x > y && (o.x = Math.floor(y / de.x), i.x = o.x * de.x, we.mapSize.x = o.x), i.y > y && (o.y = Math.floor(y / de.y), i.y = o.y * de.y, we.mapSize.y = o.y)), we.map === null || se === !0 || he === !0) {
        const X = this.type !== om ? { minFilter: pl, magFilter: pl } : {};
        we.map !== null && we.map.dispose(), we.map = new cm(i.x, i.y, X), we.map.texture.name = be.name + ".shadowMap", we.camera.updateProjectionMatrix();
      }
      n.setRenderTarget(we.map), n.clear();
      const ye = we.getViewportCount();
      for (let X = 0; X < ye; X++) {
        const q = we.getViewport(X);
        l.set(
          o.x * q.x,
          o.y * q.y,
          o.x * q.z,
          o.y * q.w
        ), fe.viewport(l), we.updateMatrices(be, X), r = we.getFrustum(), H(j, Y, we.camera, be, this.type);
      }
      we.isPointLightShadow !== !0 && this.type === om && k(we, Y), we.needsUpdate = !1;
    }
    A = this.type, L.needsUpdate = !1, n.setRenderTarget(ee, Z, K);
  };
  function k(B, j) {
    const Y = e.update(U);
    E.defines.VSM_SAMPLES !== B.blurSamples && (E.defines.VSM_SAMPLES = B.blurSamples, w.defines.VSM_SAMPLES = B.blurSamples, E.needsUpdate = !0, w.needsUpdate = !0), B.mapPass === null && (B.mapPass = new cm(i.x, i.y)), E.uniforms.shadow_pass.value = B.map.texture, E.uniforms.resolution.value = B.mapSize, E.uniforms.radius.value = B.radius, n.setRenderTarget(B.mapPass), n.clear(), n.renderBufferDirect(j, null, Y, E, U, null), w.uniforms.shadow_pass.value = B.mapPass.texture, w.uniforms.resolution.value = B.mapSize, w.uniforms.radius.value = B.radius, n.setRenderTarget(B.map), n.clear(), n.renderBufferDirect(j, null, Y, w, U, null);
  }
  function F(B, j, Y, ee) {
    let Z = null;
    const K = Y.isPointLight === !0 ? B.customDistanceMaterial : B.customDepthMaterial;
    if (K !== void 0)
      Z = K;
    else if (Z = Y.isPointLight === !0 ? h : u, n.localClippingEnabled && j.clipShadows === !0 && Array.isArray(j.clippingPlanes) && j.clippingPlanes.length !== 0 || j.displacementMap && j.displacementScale !== 0 || j.alphaMap && j.alphaTest > 0 || j.map && j.alphaTest > 0) {
      const fe = Z.uuid, se = j.uuid;
      let he = p[fe];
      he === void 0 && (he = {}, p[fe] = he);
      let me = he[se];
      me === void 0 && (me = Z.clone(), he[se] = me), Z = me;
    }
    if (Z.visible = j.visible, Z.wireframe = j.wireframe, ee === om ? Z.side = j.shadowSide !== null ? j.shadowSide : j.side : Z.side = j.shadowSide !== null ? j.shadowSide : _[j.side], Z.alphaMap = j.alphaMap, Z.alphaTest = j.alphaTest, Z.map = j.map, Z.clipShadows = j.clipShadows, Z.clippingPlanes = j.clippingPlanes, Z.clipIntersection = j.clipIntersection, Z.displacementMap = j.displacementMap, Z.displacementScale = j.displacementScale, Z.displacementBias = j.displacementBias, Z.wireframeLinewidth = j.wireframeLinewidth, Z.linewidth = j.linewidth, Y.isPointLight === !0 && Z.isMeshDistanceMaterial === !0) {
      const fe = n.properties.get(Z);
      fe.light = Y;
    }
    return Z;
  }
  function H(B, j, Y, ee, Z) {
    if (B.visible === !1)
      return;
    if (B.layers.test(j.layers) && (B.isMesh || B.isLine || B.isPoints) && (B.castShadow || B.receiveShadow && Z === om) && (!B.frustumCulled || r.intersectsObject(B))) {
      B.modelViewMatrix.multiplyMatrices(Y.matrixWorldInverse, B.matrixWorld);
      const se = e.update(B), he = B.material;
      if (Array.isArray(he)) {
        const me = se.groups;
        for (let Ee = 0, be = me.length; Ee < be; Ee++) {
          const we = me[Ee], de = he[we.materialIndex];
          if (de && de.visible) {
            const ye = F(B, de, ee, Z);
            n.renderBufferDirect(Y, null, se, ye, B, we);
          }
        }
      } else if (he.visible) {
        const me = F(B, he, ee, Z);
        n.renderBufferDirect(Y, null, se, me, B, null);
      }
    }
    const fe = B.children;
    for (let se = 0, he = fe.length; se < he; se++)
      H(fe[se], j, Y, ee, Z);
  }
}
function A$(n, e, t) {
  const r = t.isWebGL2;
  function i() {
    let ve = !1;
    const Pt = new Ma();
    let He = null;
    const dt = new Ma(0, 0, 0, 0);
    return {
      setMask: function(ln) {
        He !== ln && !ve && (n.colorMask(ln, ln, ln, ln), He = ln);
      },
      setLocked: function(ln) {
        ve = ln;
      },
      setClear: function(ln, Un, jn, cr, En) {
        En === !0 && (ln *= cr, Un *= cr, jn *= cr), Pt.set(ln, Un, jn, cr), dt.equals(Pt) === !1 && (n.clearColor(ln, Un, jn, cr), dt.copy(Pt));
      },
      reset: function() {
        ve = !1, He = null, dt.set(-1, 0, 0, 0);
      }
    };
  }
  function o() {
    let ve = !1, Pt = null, He = null, dt = null;
    return {
      setTest: function(ln) {
        ln ? Pe(n.DEPTH_TEST) : Fe(n.DEPTH_TEST);
      },
      setMask: function(ln) {
        Pt !== ln && !ve && (n.depthMask(ln), Pt = ln);
      },
      setFunc: function(ln) {
        if (He !== ln) {
          switch (ln) {
            case bI:
              n.depthFunc(n.NEVER);
              break;
            case TI:
              n.depthFunc(n.ALWAYS);
              break;
            case wI:
              n.depthFunc(n.LESS);
              break;
            case hR:
              n.depthFunc(n.LEQUAL);
              break;
            case MI:
              n.depthFunc(n.EQUAL);
              break;
            case CI:
              n.depthFunc(n.GEQUAL);
              break;
            case RI:
              n.depthFunc(n.GREATER);
              break;
            case AI:
              n.depthFunc(n.NOTEQUAL);
              break;
            default:
              n.depthFunc(n.LEQUAL);
          }
          He = ln;
        }
      },
      setLocked: function(ln) {
        ve = ln;
      },
      setClear: function(ln) {
        dt !== ln && (n.clearDepth(ln), dt = ln);
      },
      reset: function() {
        ve = !1, Pt = null, He = null, dt = null;
      }
    };
  }
  function l() {
    let ve = !1, Pt = null, He = null, dt = null, ln = null, Un = null, jn = null, cr = null, En = null;
    return {
      setTest: function(tr) {
        ve || (tr ? Pe(n.STENCIL_TEST) : Fe(n.STENCIL_TEST));
      },
      setMask: function(tr) {
        Pt !== tr && !ve && (n.stencilMask(tr), Pt = tr);
      },
      setFunc: function(tr, fr, Hn) {
        (He !== tr || dt !== fr || ln !== Hn) && (n.stencilFunc(tr, fr, Hn), He = tr, dt = fr, ln = Hn);
      },
      setOp: function(tr, fr, Hn) {
        (Un !== tr || jn !== fr || cr !== Hn) && (n.stencilOp(tr, fr, Hn), Un = tr, jn = fr, cr = Hn);
      },
      setLocked: function(tr) {
        ve = tr;
      },
      setClear: function(tr) {
        En !== tr && (n.clearStencil(tr), En = tr);
      },
      reset: function() {
        ve = !1, Pt = null, He = null, dt = null, ln = null, Un = null, jn = null, cr = null, En = null;
      }
    };
  }
  const u = new i(), h = new o(), p = new l(), y = /* @__PURE__ */ new WeakMap(), _ = /* @__PURE__ */ new WeakMap();
  let E = {}, w = {}, R = /* @__PURE__ */ new WeakMap(), U = [], L = null, A = !1, k = null, F = null, H = null, B = null, j = null, Y = null, ee = null, Z = !1, K = null, fe = null, se = null, he = null, me = null;
  const Ee = n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
  let be = !1, we = 0;
  const de = n.getParameter(n.VERSION);
  de.indexOf("WebGL") !== -1 ? (we = parseFloat(/^WebGL (\d)/.exec(de)[1]), be = we >= 1) : de.indexOf("OpenGL ES") !== -1 && (we = parseFloat(/^OpenGL ES (\d)/.exec(de)[1]), be = we >= 2);
  let ye = null, X = {};
  const q = n.getParameter(n.SCISSOR_BOX), ue = n.getParameter(n.VIEWPORT), Ce = new Ma().fromArray(q), Ae = new Ma().fromArray(ue);
  function De(ve, Pt, He, dt) {
    const ln = new Uint8Array(4), Un = n.createTexture();
    n.bindTexture(ve, Un), n.texParameteri(ve, n.TEXTURE_MIN_FILTER, n.NEAREST), n.texParameteri(ve, n.TEXTURE_MAG_FILTER, n.NEAREST);
    for (let jn = 0; jn < He; jn++)
      r && (ve === n.TEXTURE_3D || ve === n.TEXTURE_2D_ARRAY) ? n.texImage3D(Pt, 0, n.RGBA, 1, 1, dt, 0, n.RGBA, n.UNSIGNED_BYTE, ln) : n.texImage2D(Pt + jn, 0, n.RGBA, 1, 1, 0, n.RGBA, n.UNSIGNED_BYTE, ln);
    return Un;
  }
  const Ne = {};
  Ne[n.TEXTURE_2D] = De(n.TEXTURE_2D, n.TEXTURE_2D, 1), Ne[n.TEXTURE_CUBE_MAP] = De(n.TEXTURE_CUBE_MAP, n.TEXTURE_CUBE_MAP_POSITIVE_X, 6), r && (Ne[n.TEXTURE_2D_ARRAY] = De(n.TEXTURE_2D_ARRAY, n.TEXTURE_2D_ARRAY, 1, 1), Ne[n.TEXTURE_3D] = De(n.TEXTURE_3D, n.TEXTURE_3D, 1, 1)), u.setClear(0, 0, 0, 1), h.setClear(1), p.setClear(0), Pe(n.DEPTH_TEST), h.setFunc(hR), Ye(!1), zt(PL), Pe(n.CULL_FACE), qe(zg);
  function Pe(ve) {
    E[ve] !== !0 && (n.enable(ve), E[ve] = !0);
  }
  function Fe(ve) {
    E[ve] !== !1 && (n.disable(ve), E[ve] = !1);
  }
  function it(ve, Pt) {
    return w[ve] !== Pt ? (n.bindFramebuffer(ve, Pt), w[ve] = Pt, r && (ve === n.DRAW_FRAMEBUFFER && (w[n.FRAMEBUFFER] = Pt), ve === n.FRAMEBUFFER && (w[n.DRAW_FRAMEBUFFER] = Pt)), !0) : !1;
  }
  function Ot(ve, Pt) {
    let He = U, dt = !1;
    if (ve)
      if (He = R.get(Pt), He === void 0 && (He = [], R.set(Pt, He)), ve.isWebGLMultipleRenderTargets) {
        const ln = ve.texture;
        if (He.length !== ln.length || He[0] !== n.COLOR_ATTACHMENT0) {
          for (let Un = 0, jn = ln.length; Un < jn; Un++)
            He[Un] = n.COLOR_ATTACHMENT0 + Un;
          He.length = ln.length, dt = !0;
        }
      } else
        He[0] !== n.COLOR_ATTACHMENT0 && (He[0] = n.COLOR_ATTACHMENT0, dt = !0);
    else
      He[0] !== n.BACK && (He[0] = n.BACK, dt = !0);
    dt && (t.isWebGL2 ? n.drawBuffers(He) : e.get("WEBGL_draw_buffers").drawBuffersWEBGL(He));
  }
  function st(ve) {
    return L !== ve ? (n.useProgram(ve), L = ve, !0) : !1;
  }
  const oe = {
    [qS]: n.FUNC_ADD,
    [dI]: n.FUNC_SUBTRACT,
    [hI]: n.FUNC_REVERSE_SUBTRACT
  };
  if (r)
    oe[FL] = n.MIN, oe[zL] = n.MAX;
  else {
    const ve = e.get("EXT_blend_minmax");
    ve !== null && (oe[FL] = ve.MIN_EXT, oe[zL] = ve.MAX_EXT);
  }
  const rt = {
    [pI]: n.ZERO,
    [mI]: n.ONE,
    [vI]: n.SRC_COLOR,
    [rP]: n.SRC_ALPHA,
    [EI]: n.SRC_ALPHA_SATURATE,
    [_I]: n.DST_COLOR,
    [yI]: n.DST_ALPHA,
    [gI]: n.ONE_MINUS_SRC_COLOR,
    [iP]: n.ONE_MINUS_SRC_ALPHA,
    [xI]: n.ONE_MINUS_DST_COLOR,
    [SI]: n.ONE_MINUS_DST_ALPHA
  };
  function qe(ve, Pt, He, dt, ln, Un, jn, cr) {
    if (ve === zg) {
      A === !0 && (Fe(n.BLEND), A = !1);
      return;
    }
    if (A === !1 && (Pe(n.BLEND), A = !0), ve !== fI) {
      if (ve !== k || cr !== Z) {
        if ((F !== qS || j !== qS) && (n.blendEquation(n.FUNC_ADD), F = qS, j = qS), cr)
          switch (ve) {
            case n_:
              n.blendFuncSeparate(n.ONE, n.ONE_MINUS_SRC_ALPHA, n.ONE, n.ONE_MINUS_SRC_ALPHA);
              break;
            case UL:
              n.blendFunc(n.ONE, n.ONE);
              break;
            case NL:
              n.blendFuncSeparate(n.ZERO, n.ONE_MINUS_SRC_COLOR, n.ZERO, n.ONE);
              break;
            case kL:
              n.blendFuncSeparate(n.ZERO, n.SRC_COLOR, n.ZERO, n.SRC_ALPHA);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ve);
              break;
          }
        else
          switch (ve) {
            case n_:
              n.blendFuncSeparate(n.SRC_ALPHA, n.ONE_MINUS_SRC_ALPHA, n.ONE, n.ONE_MINUS_SRC_ALPHA);
              break;
            case UL:
              n.blendFunc(n.SRC_ALPHA, n.ONE);
              break;
            case NL:
              n.blendFuncSeparate(n.ZERO, n.ONE_MINUS_SRC_COLOR, n.ZERO, n.ONE);
              break;
            case kL:
              n.blendFunc(n.ZERO, n.SRC_COLOR);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ve);
              break;
          }
        H = null, B = null, Y = null, ee = null, k = ve, Z = cr;
      }
      return;
    }
    ln = ln || Pt, Un = Un || He, jn = jn || dt, (Pt !== F || ln !== j) && (n.blendEquationSeparate(oe[Pt], oe[ln]), F = Pt, j = ln), (He !== H || dt !== B || Un !== Y || jn !== ee) && (n.blendFuncSeparate(rt[He], rt[dt], rt[Un], rt[jn]), H = He, B = dt, Y = Un, ee = jn), k = ve, Z = !1;
  }
  function $e(ve, Pt) {
    ve.side === cp ? Fe(n.CULL_FACE) : Pe(n.CULL_FACE);
    let He = ve.side === Wc;
    Pt && (He = !He), Ye(He), ve.blending === n_ && ve.transparent === !1 ? qe(zg) : qe(ve.blending, ve.blendEquation, ve.blendSrc, ve.blendDst, ve.blendEquationAlpha, ve.blendSrcAlpha, ve.blendDstAlpha, ve.premultipliedAlpha), h.setFunc(ve.depthFunc), h.setTest(ve.depthTest), h.setMask(ve.depthWrite), u.setMask(ve.colorWrite);
    const dt = ve.stencilWrite;
    p.setTest(dt), dt && (p.setMask(ve.stencilWriteMask), p.setFunc(ve.stencilFunc, ve.stencilRef, ve.stencilFuncMask), p.setOp(ve.stencilFail, ve.stencilZFail, ve.stencilZPass)), Dt(ve.polygonOffset, ve.polygonOffsetFactor, ve.polygonOffsetUnits), ve.alphaToCoverage === !0 ? Pe(n.SAMPLE_ALPHA_TO_COVERAGE) : Fe(n.SAMPLE_ALPHA_TO_COVERAGE);
  }
  function Ye(ve) {
    K !== ve && (ve ? n.frontFace(n.CW) : n.frontFace(n.CCW), K = ve);
  }
  function zt(ve) {
    ve !== lI ? (Pe(n.CULL_FACE), ve !== fe && (ve === PL ? n.cullFace(n.BACK) : ve === uI ? n.cullFace(n.FRONT) : n.cullFace(n.FRONT_AND_BACK))) : Fe(n.CULL_FACE), fe = ve;
  }
  function ot(ve) {
    ve !== se && (be && n.lineWidth(ve), se = ve);
  }
  function Dt(ve, Pt, He) {
    ve ? (Pe(n.POLYGON_OFFSET_FILL), (he !== Pt || me !== He) && (n.polygonOffset(Pt, He), he = Pt, me = He)) : Fe(n.POLYGON_OFFSET_FILL);
  }
  function kt(ve) {
    ve ? Pe(n.SCISSOR_TEST) : Fe(n.SCISSOR_TEST);
  }
  function mt(ve) {
    ve === void 0 && (ve = n.TEXTURE0 + Ee - 1), ye !== ve && (n.activeTexture(ve), ye = ve);
  }
  function rn(ve, Pt, He) {
    He === void 0 && (ye === null ? He = n.TEXTURE0 + Ee - 1 : He = ye);
    let dt = X[He];
    dt === void 0 && (dt = { type: void 0, texture: void 0 }, X[He] = dt), (dt.type !== ve || dt.texture !== Pt) && (ye !== He && (n.activeTexture(He), ye = He), n.bindTexture(ve, Pt || Ne[ve]), dt.type = ve, dt.texture = Pt);
  }
  function ae() {
    const ve = X[ye];
    ve !== void 0 && ve.type !== void 0 && (n.bindTexture(ve.type, null), ve.type = void 0, ve.texture = void 0);
  }
  function re() {
    try {
      n.compressedTexImage2D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function ze() {
    try {
      n.compressedTexImage3D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function xt() {
    try {
      n.texSubImage2D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function ut() {
    try {
      n.texSubImage3D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function lt() {
    try {
      n.compressedTexSubImage2D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function Yt() {
    try {
      n.compressedTexSubImage3D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function Nt() {
    try {
      n.texStorage2D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function xe() {
    try {
      n.texStorage3D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function We() {
    try {
      n.texImage2D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function ft() {
    try {
      n.texImage3D.apply(n, arguments);
    } catch (ve) {
      console.error("THREE.WebGLState:", ve);
    }
  }
  function Et(ve) {
    Ce.equals(ve) === !1 && (n.scissor(ve.x, ve.y, ve.z, ve.w), Ce.copy(ve));
  }
  function Ze(ve) {
    Ae.equals(ve) === !1 && (n.viewport(ve.x, ve.y, ve.z, ve.w), Ae.copy(ve));
  }
  function Te(ve, Pt) {
    let He = _.get(Pt);
    He === void 0 && (He = /* @__PURE__ */ new WeakMap(), _.set(Pt, He));
    let dt = He.get(ve);
    dt === void 0 && (dt = n.getUniformBlockIndex(Pt, ve.name), He.set(ve, dt));
  }
  function tt(ve, Pt) {
    const dt = _.get(Pt).get(ve);
    y.get(Pt) !== dt && (n.uniformBlockBinding(Pt, dt, ve.__bindingPointIndex), y.set(Pt, dt));
  }
  function pt() {
    n.disable(n.BLEND), n.disable(n.CULL_FACE), n.disable(n.DEPTH_TEST), n.disable(n.POLYGON_OFFSET_FILL), n.disable(n.SCISSOR_TEST), n.disable(n.STENCIL_TEST), n.disable(n.SAMPLE_ALPHA_TO_COVERAGE), n.blendEquation(n.FUNC_ADD), n.blendFunc(n.ONE, n.ZERO), n.blendFuncSeparate(n.ONE, n.ZERO, n.ONE, n.ZERO), n.colorMask(!0, !0, !0, !0), n.clearColor(0, 0, 0, 0), n.depthMask(!0), n.depthFunc(n.LESS), n.clearDepth(1), n.stencilMask(4294967295), n.stencilFunc(n.ALWAYS, 0, 4294967295), n.stencilOp(n.KEEP, n.KEEP, n.KEEP), n.clearStencil(0), n.cullFace(n.BACK), n.frontFace(n.CCW), n.polygonOffset(0, 0), n.activeTexture(n.TEXTURE0), n.bindFramebuffer(n.FRAMEBUFFER, null), r === !0 && (n.bindFramebuffer(n.DRAW_FRAMEBUFFER, null), n.bindFramebuffer(n.READ_FRAMEBUFFER, null)), n.useProgram(null), n.lineWidth(1), n.scissor(0, 0, n.canvas.width, n.canvas.height), n.viewport(0, 0, n.canvas.width, n.canvas.height), E = {}, ye = null, X = {}, w = {}, R = /* @__PURE__ */ new WeakMap(), U = [], L = null, A = !1, k = null, F = null, H = null, B = null, j = null, Y = null, ee = null, Z = !1, K = null, fe = null, se = null, he = null, me = null, Ce.set(0, 0, n.canvas.width, n.canvas.height), Ae.set(0, 0, n.canvas.width, n.canvas.height), u.reset(), h.reset(), p.reset();
  }
  return {
    buffers: {
      color: u,
      depth: h,
      stencil: p
    },
    enable: Pe,
    disable: Fe,
    bindFramebuffer: it,
    drawBuffers: Ot,
    useProgram: st,
    setBlending: qe,
    setMaterial: $e,
    setFlipSided: Ye,
    setCullFace: zt,
    setLineWidth: ot,
    setPolygonOffset: Dt,
    setScissorTest: kt,
    activeTexture: mt,
    bindTexture: rn,
    unbindTexture: ae,
    compressedTexImage2D: re,
    compressedTexImage3D: ze,
    texImage2D: We,
    texImage3D: ft,
    updateUBOMapping: Te,
    uniformBlockBinding: tt,
    texStorage2D: Nt,
    texStorage3D: xe,
    texSubImage2D: xt,
    texSubImage3D: ut,
    compressedTexSubImage2D: lt,
    compressedTexSubImage3D: Yt,
    scissor: Et,
    viewport: Ze,
    reset: pt
  };
}
function D$(n, e, t, r, i, o, l) {
  const u = i.isWebGL2, h = i.maxTextures, p = i.maxCubemapSize, y = i.maxTextureSize, _ = i.maxSamples, E = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : null, w = typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent), R = /* @__PURE__ */ new WeakMap();
  let U;
  const L = /* @__PURE__ */ new WeakMap();
  let A = !1;
  try {
    A = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch {
  }
  function k(ae, re) {
    return A ? (
      // eslint-disable-next-line compat/compat
      new OffscreenCanvas(ae, re)
    ) : NT("canvas");
  }
  function F(ae, re, ze, xt) {
    let ut = 1;
    if ((ae.width > xt || ae.height > xt) && (ut = xt / Math.max(ae.width, ae.height)), ut < 1 || re === !0)
      if (typeof HTMLImageElement < "u" && ae instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && ae instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && ae instanceof ImageBitmap) {
        const lt = re ? vR : Math.floor, Yt = lt(ut * ae.width), Nt = lt(ut * ae.height);
        U === void 0 && (U = k(Yt, Nt));
        const xe = ze ? k(Yt, Nt) : U;
        return xe.width = Yt, xe.height = Nt, xe.getContext("2d").drawImage(ae, 0, 0, Yt, Nt), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + ae.width + "x" + ae.height + ") to (" + Yt + "x" + Nt + ")."), xe;
      } else
        return "data" in ae && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + ae.width + "x" + ae.height + ")."), ae;
    return ae;
  }
  function H(ae) {
    return fO(ae.width) && fO(ae.height);
  }
  function B(ae) {
    return u ? !1 : ae.wrapS !== Vc || ae.wrapT !== Vc || ae.minFilter !== pl && ae.minFilter !== Ss;
  }
  function j(ae, re) {
    return ae.generateMipmaps && re && ae.minFilter !== pl && ae.minFilter !== Ss;
  }
  function Y(ae) {
    n.generateMipmap(ae);
  }
  function ee(ae, re, ze, xt, ut = !1) {
    if (u === !1)
      return re;
    if (ae !== null) {
      if (n[ae] !== void 0)
        return n[ae];
      console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + ae + "'");
    }
    let lt = re;
    return re === n.RED && (ze === n.FLOAT && (lt = n.R32F), ze === n.HALF_FLOAT && (lt = n.R16F), ze === n.UNSIGNED_BYTE && (lt = n.R8)), re === n.RED_INTEGER && (ze === n.UNSIGNED_BYTE && (lt = n.R8UI), ze === n.UNSIGNED_SHORT && (lt = n.R16UI), ze === n.UNSIGNED_INT && (lt = n.R32UI), ze === n.BYTE && (lt = n.R8I), ze === n.SHORT && (lt = n.R16I), ze === n.INT && (lt = n.R32I)), re === n.RG && (ze === n.FLOAT && (lt = n.RG32F), ze === n.HALF_FLOAT && (lt = n.RG16F), ze === n.UNSIGNED_BYTE && (lt = n.RG8)), re === n.RGBA && (ze === n.FLOAT && (lt = n.RGBA32F), ze === n.HALF_FLOAT && (lt = n.RGBA16F), ze === n.UNSIGNED_BYTE && (lt = xt === Mo && ut === !1 ? n.SRGB8_ALPHA8 : n.RGBA8), ze === n.UNSIGNED_SHORT_4_4_4_4 && (lt = n.RGBA4), ze === n.UNSIGNED_SHORT_5_5_5_1 && (lt = n.RGB5_A1)), (lt === n.R16F || lt === n.R32F || lt === n.RG16F || lt === n.RG32F || lt === n.RGBA16F || lt === n.RGBA32F) && e.get("EXT_color_buffer_float"), lt;
  }
  function Z(ae, re, ze) {
    return j(ae, ze) === !0 || ae.isFramebufferTexture && ae.minFilter !== pl && ae.minFilter !== Ss ? Math.log2(Math.max(re.width, re.height)) + 1 : ae.mipmaps !== void 0 && ae.mipmaps.length > 0 ? ae.mipmaps.length : ae.isCompressedTexture && Array.isArray(ae.image) ? re.mipmaps.length : 1;
  }
  function K(ae) {
    return ae === pl || ae === pR || ae === vT ? n.NEAREST : n.LINEAR;
  }
  function fe(ae) {
    const re = ae.target;
    re.removeEventListener("dispose", fe), he(re), re.isVideoTexture && R.delete(re);
  }
  function se(ae) {
    const re = ae.target;
    re.removeEventListener("dispose", se), Ee(re);
  }
  function he(ae) {
    const re = r.get(ae);
    if (re.__webglInit === void 0)
      return;
    const ze = ae.source, xt = L.get(ze);
    if (xt) {
      const ut = xt[re.__cacheKey];
      ut.usedTimes--, ut.usedTimes === 0 && me(ae), Object.keys(xt).length === 0 && L.delete(ze);
    }
    r.remove(ae);
  }
  function me(ae) {
    const re = r.get(ae);
    n.deleteTexture(re.__webglTexture);
    const ze = ae.source, xt = L.get(ze);
    delete xt[re.__cacheKey], l.memory.textures--;
  }
  function Ee(ae) {
    const re = ae.texture, ze = r.get(ae), xt = r.get(re);
    if (xt.__webglTexture !== void 0 && (n.deleteTexture(xt.__webglTexture), l.memory.textures--), ae.depthTexture && ae.depthTexture.dispose(), ae.isWebGLCubeRenderTarget)
      for (let ut = 0; ut < 6; ut++) {
        if (Array.isArray(ze.__webglFramebuffer[ut]))
          for (let lt = 0; lt < ze.__webglFramebuffer[ut].length; lt++)
            n.deleteFramebuffer(ze.__webglFramebuffer[ut][lt]);
        else
          n.deleteFramebuffer(ze.__webglFramebuffer[ut]);
        ze.__webglDepthbuffer && n.deleteRenderbuffer(ze.__webglDepthbuffer[ut]);
      }
    else {
      if (Array.isArray(ze.__webglFramebuffer))
        for (let ut = 0; ut < ze.__webglFramebuffer.length; ut++)
          n.deleteFramebuffer(ze.__webglFramebuffer[ut]);
      else
        n.deleteFramebuffer(ze.__webglFramebuffer);
      if (ze.__webglDepthbuffer && n.deleteRenderbuffer(ze.__webglDepthbuffer), ze.__webglMultisampledFramebuffer && n.deleteFramebuffer(ze.__webglMultisampledFramebuffer), ze.__webglColorRenderbuffer)
        for (let ut = 0; ut < ze.__webglColorRenderbuffer.length; ut++)
          ze.__webglColorRenderbuffer[ut] && n.deleteRenderbuffer(ze.__webglColorRenderbuffer[ut]);
      ze.__webglDepthRenderbuffer && n.deleteRenderbuffer(ze.__webglDepthRenderbuffer);
    }
    if (ae.isWebGLMultipleRenderTargets)
      for (let ut = 0, lt = re.length; ut < lt; ut++) {
        const Yt = r.get(re[ut]);
        Yt.__webglTexture && (n.deleteTexture(Yt.__webglTexture), l.memory.textures--), r.remove(re[ut]);
      }
    r.remove(re), r.remove(ae);
  }
  let be = 0;
  function we() {
    be = 0;
  }
  function de() {
    const ae = be;
    return ae >= h && console.warn("THREE.WebGLTextures: Trying to use " + ae + " texture units while this GPU supports only " + h), be += 1, ae;
  }
  function ye(ae) {
    const re = [];
    return re.push(ae.wrapS), re.push(ae.wrapT), re.push(ae.wrapR || 0), re.push(ae.magFilter), re.push(ae.minFilter), re.push(ae.anisotropy), re.push(ae.internalFormat), re.push(ae.format), re.push(ae.type), re.push(ae.generateMipmaps), re.push(ae.premultiplyAlpha), re.push(ae.flipY), re.push(ae.unpackAlignment), re.push(ae.colorSpace), re.join();
  }
  function X(ae, re) {
    const ze = r.get(ae);
    if (ae.isVideoTexture && mt(ae), ae.isRenderTargetTexture === !1 && ae.version > 0 && ze.__version !== ae.version) {
      const xt = ae.image;
      if (xt === null)
        console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
      else if (xt.complete === !1)
        console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
      else {
        it(ze, ae, re);
        return;
      }
    }
    t.bindTexture(n.TEXTURE_2D, ze.__webglTexture, n.TEXTURE0 + re);
  }
  function q(ae, re) {
    const ze = r.get(ae);
    if (ae.version > 0 && ze.__version !== ae.version) {
      it(ze, ae, re);
      return;
    }
    t.bindTexture(n.TEXTURE_2D_ARRAY, ze.__webglTexture, n.TEXTURE0 + re);
  }
  function ue(ae, re) {
    const ze = r.get(ae);
    if (ae.version > 0 && ze.__version !== ae.version) {
      it(ze, ae, re);
      return;
    }
    t.bindTexture(n.TEXTURE_3D, ze.__webglTexture, n.TEXTURE0 + re);
  }
  function Ce(ae, re) {
    const ze = r.get(ae);
    if (ae.version > 0 && ze.__version !== ae.version) {
      Ot(ze, ae, re);
      return;
    }
    t.bindTexture(n.TEXTURE_CUBE_MAP, ze.__webglTexture, n.TEXTURE0 + re);
  }
  const Ae = {
    [RT]: n.REPEAT,
    [Vc]: n.CLAMP_TO_EDGE,
    [AT]: n.MIRRORED_REPEAT
  }, De = {
    [pl]: n.NEAREST,
    [pR]: n.NEAREST_MIPMAP_NEAREST,
    [vT]: n.NEAREST_MIPMAP_LINEAR,
    [Ss]: n.LINEAR,
    [oP]: n.LINEAR_MIPMAP_NEAREST,
    [p0]: n.LINEAR_MIPMAP_LINEAR
  }, Ne = {
    [QI]: n.NEVER,
    [i4]: n.ALWAYS,
    [ZI]: n.LESS,
    [e4]: n.LEQUAL,
    [JI]: n.EQUAL,
    [r4]: n.GEQUAL,
    [t4]: n.GREATER,
    [n4]: n.NOTEQUAL
  };
  function Pe(ae, re, ze) {
    if (ze ? (n.texParameteri(ae, n.TEXTURE_WRAP_S, Ae[re.wrapS]), n.texParameteri(ae, n.TEXTURE_WRAP_T, Ae[re.wrapT]), (ae === n.TEXTURE_3D || ae === n.TEXTURE_2D_ARRAY) && n.texParameteri(ae, n.TEXTURE_WRAP_R, Ae[re.wrapR]), n.texParameteri(ae, n.TEXTURE_MAG_FILTER, De[re.magFilter]), n.texParameteri(ae, n.TEXTURE_MIN_FILTER, De[re.minFilter])) : (n.texParameteri(ae, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE), n.texParameteri(ae, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE), (ae === n.TEXTURE_3D || ae === n.TEXTURE_2D_ARRAY) && n.texParameteri(ae, n.TEXTURE_WRAP_R, n.CLAMP_TO_EDGE), (re.wrapS !== Vc || re.wrapT !== Vc) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), n.texParameteri(ae, n.TEXTURE_MAG_FILTER, K(re.magFilter)), n.texParameteri(ae, n.TEXTURE_MIN_FILTER, K(re.minFilter)), re.minFilter !== pl && re.minFilter !== Ss && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), re.compareFunction && (n.texParameteri(ae, n.TEXTURE_COMPARE_MODE, n.COMPARE_REF_TO_TEXTURE), n.texParameteri(ae, n.TEXTURE_COMPARE_FUNC, Ne[re.compareFunction])), e.has("EXT_texture_filter_anisotropic") === !0) {
      const xt = e.get("EXT_texture_filter_anisotropic");
      if (re.magFilter === pl || re.minFilter !== vT && re.minFilter !== p0 || re.type === vv && e.has("OES_texture_float_linear") === !1 || u === !1 && re.type === z1 && e.has("OES_texture_half_float_linear") === !1)
        return;
      (re.anisotropy > 1 || r.get(re).__currentAnisotropy) && (n.texParameterf(ae, xt.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(re.anisotropy, i.getMaxAnisotropy())), r.get(re).__currentAnisotropy = re.anisotropy);
    }
  }
  function Fe(ae, re) {
    let ze = !1;
    ae.__webglInit === void 0 && (ae.__webglInit = !0, re.addEventListener("dispose", fe));
    const xt = re.source;
    let ut = L.get(xt);
    ut === void 0 && (ut = {}, L.set(xt, ut));
    const lt = ye(re);
    if (lt !== ae.__cacheKey) {
      ut[lt] === void 0 && (ut[lt] = {
        texture: n.createTexture(),
        usedTimes: 0
      }, l.memory.textures++, ze = !0), ut[lt].usedTimes++;
      const Yt = ut[ae.__cacheKey];
      Yt !== void 0 && (ut[ae.__cacheKey].usedTimes--, Yt.usedTimes === 0 && me(re)), ae.__cacheKey = lt, ae.__webglTexture = ut[lt].texture;
    }
    return ze;
  }
  function it(ae, re, ze) {
    let xt = n.TEXTURE_2D;
    (re.isDataArrayTexture || re.isCompressedArrayTexture) && (xt = n.TEXTURE_2D_ARRAY), re.isData3DTexture && (xt = n.TEXTURE_3D);
    const ut = Fe(ae, re), lt = re.source;
    t.bindTexture(xt, ae.__webglTexture, n.TEXTURE0 + ze);
    const Yt = r.get(lt);
    if (lt.version !== Yt.__version || ut === !0) {
      t.activeTexture(n.TEXTURE0 + ze), n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, re.flipY), n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL, re.premultiplyAlpha), n.pixelStorei(n.UNPACK_ALIGNMENT, re.unpackAlignment), n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL, n.NONE);
      const Nt = B(re) && H(re.image) === !1;
      let xe = F(re.image, Nt, !1, y);
      xe = rn(re, xe);
      const We = H(xe) || u, ft = o.convert(re.format, re.colorSpace);
      let Et = o.convert(re.type), Ze = ee(re.internalFormat, ft, Et, re.colorSpace, re.isVideoTexture);
      Pe(xt, re, We);
      let Te;
      const tt = re.mipmaps, pt = u && re.isVideoTexture !== !0, ve = Yt.__version === void 0 || ut === !0, Pt = Z(re, xe, We);
      if (re.isDepthTexture)
        Ze = n.DEPTH_COMPONENT, u ? re.type === vv ? Ze = n.DEPTH_COMPONENT32F : re.type === kg ? Ze = n.DEPTH_COMPONENT24 : re.type === u0 ? Ze = n.DEPTH24_STENCIL8 : Ze = n.DEPTH_COMPONENT16 : re.type === vv && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), re.format === c0 && Ze === n.DEPTH_COMPONENT && re.type !== zR && re.type !== kg && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), re.type = kg, Et = o.convert(re.type)), re.format === u_ && Ze === n.DEPTH_COMPONENT && (Ze = n.DEPTH_STENCIL, re.type !== u0 && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), re.type = u0, Et = o.convert(re.type))), ve && (pt ? t.texStorage2D(n.TEXTURE_2D, 1, Ze, xe.width, xe.height) : t.texImage2D(n.TEXTURE_2D, 0, Ze, xe.width, xe.height, 0, ft, Et, null));
      else if (re.isDataTexture)
        if (tt.length > 0 && We) {
          pt && ve && t.texStorage2D(n.TEXTURE_2D, Pt, Ze, tt[0].width, tt[0].height);
          for (let He = 0, dt = tt.length; He < dt; He++)
            Te = tt[He], pt ? t.texSubImage2D(n.TEXTURE_2D, He, 0, 0, Te.width, Te.height, ft, Et, Te.data) : t.texImage2D(n.TEXTURE_2D, He, Ze, Te.width, Te.height, 0, ft, Et, Te.data);
          re.generateMipmaps = !1;
        } else
          pt ? (ve && t.texStorage2D(n.TEXTURE_2D, Pt, Ze, xe.width, xe.height), t.texSubImage2D(n.TEXTURE_2D, 0, 0, 0, xe.width, xe.height, ft, Et, xe.data)) : t.texImage2D(n.TEXTURE_2D, 0, Ze, xe.width, xe.height, 0, ft, Et, xe.data);
      else if (re.isCompressedTexture)
        if (re.isCompressedArrayTexture) {
          pt && ve && t.texStorage3D(n.TEXTURE_2D_ARRAY, Pt, Ze, tt[0].width, tt[0].height, xe.depth);
          for (let He = 0, dt = tt.length; He < dt; He++)
            Te = tt[He], re.format !== Sd ? ft !== null ? pt ? t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY, He, 0, 0, 0, Te.width, Te.height, xe.depth, ft, Te.data, 0, 0) : t.compressedTexImage3D(n.TEXTURE_2D_ARRAY, He, Ze, Te.width, Te.height, xe.depth, 0, Te.data, 0, 0) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : pt ? t.texSubImage3D(n.TEXTURE_2D_ARRAY, He, 0, 0, 0, Te.width, Te.height, xe.depth, ft, Et, Te.data) : t.texImage3D(n.TEXTURE_2D_ARRAY, He, Ze, Te.width, Te.height, xe.depth, 0, ft, Et, Te.data);
        } else {
          pt && ve && t.texStorage2D(n.TEXTURE_2D, Pt, Ze, tt[0].width, tt[0].height);
          for (let He = 0, dt = tt.length; He < dt; He++)
            Te = tt[He], re.format !== Sd ? ft !== null ? pt ? t.compressedTexSubImage2D(n.TEXTURE_2D, He, 0, 0, Te.width, Te.height, ft, Te.data) : t.compressedTexImage2D(n.TEXTURE_2D, He, Ze, Te.width, Te.height, 0, Te.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : pt ? t.texSubImage2D(n.TEXTURE_2D, He, 0, 0, Te.width, Te.height, ft, Et, Te.data) : t.texImage2D(n.TEXTURE_2D, He, Ze, Te.width, Te.height, 0, ft, Et, Te.data);
        }
      else if (re.isDataArrayTexture)
        pt ? (ve && t.texStorage3D(n.TEXTURE_2D_ARRAY, Pt, Ze, xe.width, xe.height, xe.depth), t.texSubImage3D(n.TEXTURE_2D_ARRAY, 0, 0, 0, 0, xe.width, xe.height, xe.depth, ft, Et, xe.data)) : t.texImage3D(n.TEXTURE_2D_ARRAY, 0, Ze, xe.width, xe.height, xe.depth, 0, ft, Et, xe.data);
      else if (re.isData3DTexture)
        pt ? (ve && t.texStorage3D(n.TEXTURE_3D, Pt, Ze, xe.width, xe.height, xe.depth), t.texSubImage3D(n.TEXTURE_3D, 0, 0, 0, 0, xe.width, xe.height, xe.depth, ft, Et, xe.data)) : t.texImage3D(n.TEXTURE_3D, 0, Ze, xe.width, xe.height, xe.depth, 0, ft, Et, xe.data);
      else if (re.isFramebufferTexture) {
        if (ve)
          if (pt)
            t.texStorage2D(n.TEXTURE_2D, Pt, Ze, xe.width, xe.height);
          else {
            let He = xe.width, dt = xe.height;
            for (let ln = 0; ln < Pt; ln++)
              t.texImage2D(n.TEXTURE_2D, ln, Ze, He, dt, 0, ft, Et, null), He >>= 1, dt >>= 1;
          }
      } else if (tt.length > 0 && We) {
        pt && ve && t.texStorage2D(n.TEXTURE_2D, Pt, Ze, tt[0].width, tt[0].height);
        for (let He = 0, dt = tt.length; He < dt; He++)
          Te = tt[He], pt ? t.texSubImage2D(n.TEXTURE_2D, He, 0, 0, ft, Et, Te) : t.texImage2D(n.TEXTURE_2D, He, Ze, ft, Et, Te);
        re.generateMipmaps = !1;
      } else
        pt ? (ve && t.texStorage2D(n.TEXTURE_2D, Pt, Ze, xe.width, xe.height), t.texSubImage2D(n.TEXTURE_2D, 0, 0, 0, ft, Et, xe)) : t.texImage2D(n.TEXTURE_2D, 0, Ze, ft, Et, xe);
      j(re, We) && Y(xt), Yt.__version = lt.version, re.onUpdate && re.onUpdate(re);
    }
    ae.__version = re.version;
  }
  function Ot(ae, re, ze) {
    if (re.image.length !== 6)
      return;
    const xt = Fe(ae, re), ut = re.source;
    t.bindTexture(n.TEXTURE_CUBE_MAP, ae.__webglTexture, n.TEXTURE0 + ze);
    const lt = r.get(ut);
    if (ut.version !== lt.__version || xt === !0) {
      t.activeTexture(n.TEXTURE0 + ze), n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, re.flipY), n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL, re.premultiplyAlpha), n.pixelStorei(n.UNPACK_ALIGNMENT, re.unpackAlignment), n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL, n.NONE);
      const Yt = re.isCompressedTexture || re.image[0].isCompressedTexture, Nt = re.image[0] && re.image[0].isDataTexture, xe = [];
      for (let He = 0; He < 6; He++)
        !Yt && !Nt ? xe[He] = F(re.image[He], !1, !0, p) : xe[He] = Nt ? re.image[He].image : re.image[He], xe[He] = rn(re, xe[He]);
      const We = xe[0], ft = H(We) || u, Et = o.convert(re.format, re.colorSpace), Ze = o.convert(re.type), Te = ee(re.internalFormat, Et, Ze, re.colorSpace), tt = u && re.isVideoTexture !== !0, pt = lt.__version === void 0 || xt === !0;
      let ve = Z(re, We, ft);
      Pe(n.TEXTURE_CUBE_MAP, re, ft);
      let Pt;
      if (Yt) {
        tt && pt && t.texStorage2D(n.TEXTURE_CUBE_MAP, ve, Te, We.width, We.height);
        for (let He = 0; He < 6; He++) {
          Pt = xe[He].mipmaps;
          for (let dt = 0; dt < Pt.length; dt++) {
            const ln = Pt[dt];
            re.format !== Sd ? Et !== null ? tt ? t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt, 0, 0, ln.width, ln.height, Et, ln.data) : t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt, Te, ln.width, ln.height, 0, ln.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : tt ? t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt, 0, 0, ln.width, ln.height, Et, Ze, ln.data) : t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt, Te, ln.width, ln.height, 0, Et, Ze, ln.data);
          }
        }
      } else {
        Pt = re.mipmaps, tt && pt && (Pt.length > 0 && ve++, t.texStorage2D(n.TEXTURE_CUBE_MAP, ve, Te, xe[0].width, xe[0].height));
        for (let He = 0; He < 6; He++)
          if (Nt) {
            tt ? t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, 0, 0, 0, xe[He].width, xe[He].height, Et, Ze, xe[He].data) : t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, 0, Te, xe[He].width, xe[He].height, 0, Et, Ze, xe[He].data);
            for (let dt = 0; dt < Pt.length; dt++) {
              const Un = Pt[dt].image[He].image;
              tt ? t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt + 1, 0, 0, Un.width, Un.height, Et, Ze, Un.data) : t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt + 1, Te, Un.width, Un.height, 0, Et, Ze, Un.data);
            }
          } else {
            tt ? t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, 0, 0, 0, Et, Ze, xe[He]) : t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, 0, Te, Et, Ze, xe[He]);
            for (let dt = 0; dt < Pt.length; dt++) {
              const ln = Pt[dt];
              tt ? t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt + 1, 0, 0, Et, Ze, ln.image[He]) : t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X + He, dt + 1, Te, Et, Ze, ln.image[He]);
            }
          }
      }
      j(re, ft) && Y(n.TEXTURE_CUBE_MAP), lt.__version = ut.version, re.onUpdate && re.onUpdate(re);
    }
    ae.__version = re.version;
  }
  function st(ae, re, ze, xt, ut, lt) {
    const Yt = o.convert(ze.format, ze.colorSpace), Nt = o.convert(ze.type), xe = ee(ze.internalFormat, Yt, Nt, ze.colorSpace);
    if (!r.get(re).__hasExternalTextures) {
      const ft = Math.max(1, re.width >> lt), Et = Math.max(1, re.height >> lt);
      ut === n.TEXTURE_3D || ut === n.TEXTURE_2D_ARRAY ? t.texImage3D(ut, lt, xe, ft, Et, re.depth, 0, Yt, Nt, null) : t.texImage2D(ut, lt, xe, ft, Et, 0, Yt, Nt, null);
    }
    t.bindFramebuffer(n.FRAMEBUFFER, ae), kt(re) ? E.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER, xt, ut, r.get(ze).__webglTexture, 0, Dt(re)) : (ut === n.TEXTURE_2D || ut >= n.TEXTURE_CUBE_MAP_POSITIVE_X && ut <= n.TEXTURE_CUBE_MAP_NEGATIVE_Z) && n.framebufferTexture2D(n.FRAMEBUFFER, xt, ut, r.get(ze).__webglTexture, lt), t.bindFramebuffer(n.FRAMEBUFFER, null);
  }
  function oe(ae, re, ze) {
    if (n.bindRenderbuffer(n.RENDERBUFFER, ae), re.depthBuffer && !re.stencilBuffer) {
      let xt = n.DEPTH_COMPONENT16;
      if (ze || kt(re)) {
        const ut = re.depthTexture;
        ut && ut.isDepthTexture && (ut.type === vv ? xt = n.DEPTH_COMPONENT32F : ut.type === kg && (xt = n.DEPTH_COMPONENT24));
        const lt = Dt(re);
        kt(re) ? E.renderbufferStorageMultisampleEXT(n.RENDERBUFFER, lt, xt, re.width, re.height) : n.renderbufferStorageMultisample(n.RENDERBUFFER, lt, xt, re.width, re.height);
      } else
        n.renderbufferStorage(n.RENDERBUFFER, xt, re.width, re.height);
      n.framebufferRenderbuffer(n.FRAMEBUFFER, n.DEPTH_ATTACHMENT, n.RENDERBUFFER, ae);
    } else if (re.depthBuffer && re.stencilBuffer) {
      const xt = Dt(re);
      ze && kt(re) === !1 ? n.renderbufferStorageMultisample(n.RENDERBUFFER, xt, n.DEPTH24_STENCIL8, re.width, re.height) : kt(re) ? E.renderbufferStorageMultisampleEXT(n.RENDERBUFFER, xt, n.DEPTH24_STENCIL8, re.width, re.height) : n.renderbufferStorage(n.RENDERBUFFER, n.DEPTH_STENCIL, re.width, re.height), n.framebufferRenderbuffer(n.FRAMEBUFFER, n.DEPTH_STENCIL_ATTACHMENT, n.RENDERBUFFER, ae);
    } else {
      const xt = re.isWebGLMultipleRenderTargets === !0 ? re.texture : [re.texture];
      for (let ut = 0; ut < xt.length; ut++) {
        const lt = xt[ut], Yt = o.convert(lt.format, lt.colorSpace), Nt = o.convert(lt.type), xe = ee(lt.internalFormat, Yt, Nt, lt.colorSpace), We = Dt(re);
        ze && kt(re) === !1 ? n.renderbufferStorageMultisample(n.RENDERBUFFER, We, xe, re.width, re.height) : kt(re) ? E.renderbufferStorageMultisampleEXT(n.RENDERBUFFER, We, xe, re.width, re.height) : n.renderbufferStorage(n.RENDERBUFFER, xe, re.width, re.height);
      }
    }
    n.bindRenderbuffer(n.RENDERBUFFER, null);
  }
  function rt(ae, re) {
    if (re && re.isWebGLCubeRenderTarget)
      throw new Error("Depth Texture with cube render targets is not supported");
    if (t.bindFramebuffer(n.FRAMEBUFFER, ae), !(re.depthTexture && re.depthTexture.isDepthTexture))
      throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
    (!r.get(re.depthTexture).__webglTexture || re.depthTexture.image.width !== re.width || re.depthTexture.image.height !== re.height) && (re.depthTexture.image.width = re.width, re.depthTexture.image.height = re.height, re.depthTexture.needsUpdate = !0), X(re.depthTexture, 0);
    const xt = r.get(re.depthTexture).__webglTexture, ut = Dt(re);
    if (re.depthTexture.format === c0)
      kt(re) ? E.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER, n.DEPTH_ATTACHMENT, n.TEXTURE_2D, xt, 0, ut) : n.framebufferTexture2D(n.FRAMEBUFFER, n.DEPTH_ATTACHMENT, n.TEXTURE_2D, xt, 0);
    else if (re.depthTexture.format === u_)
      kt(re) ? E.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER, n.DEPTH_STENCIL_ATTACHMENT, n.TEXTURE_2D, xt, 0, ut) : n.framebufferTexture2D(n.FRAMEBUFFER, n.DEPTH_STENCIL_ATTACHMENT, n.TEXTURE_2D, xt, 0);
    else
      throw new Error("Unknown depthTexture format");
  }
  function qe(ae) {
    const re = r.get(ae), ze = ae.isWebGLCubeRenderTarget === !0;
    if (ae.depthTexture && !re.__autoAllocateDepthBuffer) {
      if (ze)
        throw new Error("target.depthTexture not supported in Cube render targets");
      rt(re.__webglFramebuffer, ae);
    } else if (ze) {
      re.__webglDepthbuffer = [];
      for (let xt = 0; xt < 6; xt++)
        t.bindFramebuffer(n.FRAMEBUFFER, re.__webglFramebuffer[xt]), re.__webglDepthbuffer[xt] = n.createRenderbuffer(), oe(re.__webglDepthbuffer[xt], ae, !1);
    } else
      t.bindFramebuffer(n.FRAMEBUFFER, re.__webglFramebuffer), re.__webglDepthbuffer = n.createRenderbuffer(), oe(re.__webglDepthbuffer, ae, !1);
    t.bindFramebuffer(n.FRAMEBUFFER, null);
  }
  function $e(ae, re, ze) {
    const xt = r.get(ae);
    re !== void 0 && st(xt.__webglFramebuffer, ae, ae.texture, n.COLOR_ATTACHMENT0, n.TEXTURE_2D, 0), ze !== void 0 && qe(ae);
  }
  function Ye(ae) {
    const re = ae.texture, ze = r.get(ae), xt = r.get(re);
    ae.addEventListener("dispose", se), ae.isWebGLMultipleRenderTargets !== !0 && (xt.__webglTexture === void 0 && (xt.__webglTexture = n.createTexture()), xt.__version = re.version, l.memory.textures++);
    const ut = ae.isWebGLCubeRenderTarget === !0, lt = ae.isWebGLMultipleRenderTargets === !0, Yt = H(ae) || u;
    if (ut) {
      ze.__webglFramebuffer = [];
      for (let Nt = 0; Nt < 6; Nt++)
        if (u && re.mipmaps && re.mipmaps.length > 0) {
          ze.__webglFramebuffer[Nt] = [];
          for (let xe = 0; xe < re.mipmaps.length; xe++)
            ze.__webglFramebuffer[Nt][xe] = n.createFramebuffer();
        } else
          ze.__webglFramebuffer[Nt] = n.createFramebuffer();
    } else {
      if (u && re.mipmaps && re.mipmaps.length > 0) {
        ze.__webglFramebuffer = [];
        for (let Nt = 0; Nt < re.mipmaps.length; Nt++)
          ze.__webglFramebuffer[Nt] = n.createFramebuffer();
      } else
        ze.__webglFramebuffer = n.createFramebuffer();
      if (lt)
        if (i.drawBuffers) {
          const Nt = ae.texture;
          for (let xe = 0, We = Nt.length; xe < We; xe++) {
            const ft = r.get(Nt[xe]);
            ft.__webglTexture === void 0 && (ft.__webglTexture = n.createTexture(), l.memory.textures++);
          }
        } else
          console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
      if (u && ae.samples > 0 && kt(ae) === !1) {
        const Nt = lt ? re : [re];
        ze.__webglMultisampledFramebuffer = n.createFramebuffer(), ze.__webglColorRenderbuffer = [], t.bindFramebuffer(n.FRAMEBUFFER, ze.__webglMultisampledFramebuffer);
        for (let xe = 0; xe < Nt.length; xe++) {
          const We = Nt[xe];
          ze.__webglColorRenderbuffer[xe] = n.createRenderbuffer(), n.bindRenderbuffer(n.RENDERBUFFER, ze.__webglColorRenderbuffer[xe]);
          const ft = o.convert(We.format, We.colorSpace), Et = o.convert(We.type), Ze = ee(We.internalFormat, ft, Et, We.colorSpace, ae.isXRRenderTarget === !0), Te = Dt(ae);
          n.renderbufferStorageMultisample(n.RENDERBUFFER, Te, Ze, ae.width, ae.height), n.framebufferRenderbuffer(n.FRAMEBUFFER, n.COLOR_ATTACHMENT0 + xe, n.RENDERBUFFER, ze.__webglColorRenderbuffer[xe]);
        }
        n.bindRenderbuffer(n.RENDERBUFFER, null), ae.depthBuffer && (ze.__webglDepthRenderbuffer = n.createRenderbuffer(), oe(ze.__webglDepthRenderbuffer, ae, !0)), t.bindFramebuffer(n.FRAMEBUFFER, null);
      }
    }
    if (ut) {
      t.bindTexture(n.TEXTURE_CUBE_MAP, xt.__webglTexture), Pe(n.TEXTURE_CUBE_MAP, re, Yt);
      for (let Nt = 0; Nt < 6; Nt++)
        if (u && re.mipmaps && re.mipmaps.length > 0)
          for (let xe = 0; xe < re.mipmaps.length; xe++)
            st(ze.__webglFramebuffer[Nt][xe], ae, re, n.COLOR_ATTACHMENT0, n.TEXTURE_CUBE_MAP_POSITIVE_X + Nt, xe);
        else
          st(ze.__webglFramebuffer[Nt], ae, re, n.COLOR_ATTACHMENT0, n.TEXTURE_CUBE_MAP_POSITIVE_X + Nt, 0);
      j(re, Yt) && Y(n.TEXTURE_CUBE_MAP), t.unbindTexture();
    } else if (lt) {
      const Nt = ae.texture;
      for (let xe = 0, We = Nt.length; xe < We; xe++) {
        const ft = Nt[xe], Et = r.get(ft);
        t.bindTexture(n.TEXTURE_2D, Et.__webglTexture), Pe(n.TEXTURE_2D, ft, Yt), st(ze.__webglFramebuffer, ae, ft, n.COLOR_ATTACHMENT0 + xe, n.TEXTURE_2D, 0), j(ft, Yt) && Y(n.TEXTURE_2D);
      }
      t.unbindTexture();
    } else {
      let Nt = n.TEXTURE_2D;
      if ((ae.isWebGL3DRenderTarget || ae.isWebGLArrayRenderTarget) && (u ? Nt = ae.isWebGL3DRenderTarget ? n.TEXTURE_3D : n.TEXTURE_2D_ARRAY : console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")), t.bindTexture(Nt, xt.__webglTexture), Pe(Nt, re, Yt), u && re.mipmaps && re.mipmaps.length > 0)
        for (let xe = 0; xe < re.mipmaps.length; xe++)
          st(ze.__webglFramebuffer[xe], ae, re, n.COLOR_ATTACHMENT0, Nt, xe);
      else
        st(ze.__webglFramebuffer, ae, re, n.COLOR_ATTACHMENT0, Nt, 0);
      j(re, Yt) && Y(Nt), t.unbindTexture();
    }
    ae.depthBuffer && qe(ae);
  }
  function zt(ae) {
    const re = H(ae) || u, ze = ae.isWebGLMultipleRenderTargets === !0 ? ae.texture : [ae.texture];
    for (let xt = 0, ut = ze.length; xt < ut; xt++) {
      const lt = ze[xt];
      if (j(lt, re)) {
        const Yt = ae.isWebGLCubeRenderTarget ? n.TEXTURE_CUBE_MAP : n.TEXTURE_2D, Nt = r.get(lt).__webglTexture;
        t.bindTexture(Yt, Nt), Y(Yt), t.unbindTexture();
      }
    }
  }
  function ot(ae) {
    if (u && ae.samples > 0 && kt(ae) === !1) {
      const re = ae.isWebGLMultipleRenderTargets ? ae.texture : [ae.texture], ze = ae.width, xt = ae.height;
      let ut = n.COLOR_BUFFER_BIT;
      const lt = [], Yt = ae.stencilBuffer ? n.DEPTH_STENCIL_ATTACHMENT : n.DEPTH_ATTACHMENT, Nt = r.get(ae), xe = ae.isWebGLMultipleRenderTargets === !0;
      if (xe)
        for (let We = 0; We < re.length; We++)
          t.bindFramebuffer(n.FRAMEBUFFER, Nt.__webglMultisampledFramebuffer), n.framebufferRenderbuffer(n.FRAMEBUFFER, n.COLOR_ATTACHMENT0 + We, n.RENDERBUFFER, null), t.bindFramebuffer(n.FRAMEBUFFER, Nt.__webglFramebuffer), n.framebufferTexture2D(n.DRAW_FRAMEBUFFER, n.COLOR_ATTACHMENT0 + We, n.TEXTURE_2D, null, 0);
      t.bindFramebuffer(n.READ_FRAMEBUFFER, Nt.__webglMultisampledFramebuffer), t.bindFramebuffer(n.DRAW_FRAMEBUFFER, Nt.__webglFramebuffer);
      for (let We = 0; We < re.length; We++) {
        lt.push(n.COLOR_ATTACHMENT0 + We), ae.depthBuffer && lt.push(Yt);
        const ft = Nt.__ignoreDepthValues !== void 0 ? Nt.__ignoreDepthValues : !1;
        if (ft === !1 && (ae.depthBuffer && (ut |= n.DEPTH_BUFFER_BIT), ae.stencilBuffer && (ut |= n.STENCIL_BUFFER_BIT)), xe && n.framebufferRenderbuffer(n.READ_FRAMEBUFFER, n.COLOR_ATTACHMENT0, n.RENDERBUFFER, Nt.__webglColorRenderbuffer[We]), ft === !0 && (n.invalidateFramebuffer(n.READ_FRAMEBUFFER, [Yt]), n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER, [Yt])), xe) {
          const Et = r.get(re[We]).__webglTexture;
          n.framebufferTexture2D(n.DRAW_FRAMEBUFFER, n.COLOR_ATTACHMENT0, n.TEXTURE_2D, Et, 0);
        }
        n.blitFramebuffer(0, 0, ze, xt, 0, 0, ze, xt, ut, n.NEAREST), w && n.invalidateFramebuffer(n.READ_FRAMEBUFFER, lt);
      }
      if (t.bindFramebuffer(n.READ_FRAMEBUFFER, null), t.bindFramebuffer(n.DRAW_FRAMEBUFFER, null), xe)
        for (let We = 0; We < re.length; We++) {
          t.bindFramebuffer(n.FRAMEBUFFER, Nt.__webglMultisampledFramebuffer), n.framebufferRenderbuffer(n.FRAMEBUFFER, n.COLOR_ATTACHMENT0 + We, n.RENDERBUFFER, Nt.__webglColorRenderbuffer[We]);
          const ft = r.get(re[We]).__webglTexture;
          t.bindFramebuffer(n.FRAMEBUFFER, Nt.__webglFramebuffer), n.framebufferTexture2D(n.DRAW_FRAMEBUFFER, n.COLOR_ATTACHMENT0 + We, n.TEXTURE_2D, ft, 0);
        }
      t.bindFramebuffer(n.DRAW_FRAMEBUFFER, Nt.__webglMultisampledFramebuffer);
    }
  }
  function Dt(ae) {
    return Math.min(_, ae.samples);
  }
  function kt(ae) {
    const re = r.get(ae);
    return u && ae.samples > 0 && e.has("WEBGL_multisampled_render_to_texture") === !0 && re.__useRenderToTexture !== !1;
  }
  function mt(ae) {
    const re = l.render.frame;
    R.get(ae) !== re && (R.set(ae, re), ae.update());
  }
  function rn(ae, re) {
    const ze = ae.colorSpace, xt = ae.format, ut = ae.type;
    return ae.isCompressedTexture === !0 || ae.isVideoTexture === !0 || ae.format === mR || ze !== um && ze !== d0 && (ze === Mo || ze === KT ? u === !1 ? e.has("EXT_sRGB") === !0 && xt === Sd ? (ae.format = mR, ae.minFilter = Ss, ae.generateMipmaps = !1) : re = gP.sRGBToLinear(re) : (xt !== Sd || ut !== Sv) && console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.") : console.error("THREE.WebGLTextures: Unsupported texture color space:", ze)), re;
  }
  this.allocateTextureUnit = de, this.resetTextureUnits = we, this.setTexture2D = X, this.setTexture2DArray = q, this.setTexture3D = ue, this.setTextureCube = Ce, this.rebindTextures = $e, this.setupRenderTarget = Ye, this.updateRenderTargetMipmap = zt, this.updateMultisampleRenderTarget = ot, this.setupDepthRenderbuffer = qe, this.setupFrameBufferTexture = st, this.useMultisampledRTT = kt;
}
const L$ = 0, fu = 1;
function S4(n, e, t) {
  const r = t.isWebGL2;
  function i(o, l = d0) {
    let u;
    const h = l === Mo || l === KT ? fu : L$;
    if (o === Sv)
      return n.UNSIGNED_BYTE;
    if (o === lP)
      return n.UNSIGNED_SHORT_4_4_4_4;
    if (o === uP)
      return n.UNSIGNED_SHORT_5_5_5_1;
    if (o === kI)
      return n.BYTE;
    if (o === FI)
      return n.SHORT;
    if (o === zR)
      return n.UNSIGNED_SHORT;
    if (o === sP)
      return n.INT;
    if (o === kg)
      return n.UNSIGNED_INT;
    if (o === vv)
      return n.FLOAT;
    if (o === z1)
      return r ? n.HALF_FLOAT : (u = e.get("OES_texture_half_float"), u !== null ? u.HALF_FLOAT_OES : null);
    if (o === zI)
      return n.ALPHA;
    if (o === Sd)
      return n.RGBA;
    if (o === II)
      return n.LUMINANCE;
    if (o === BI)
      return n.LUMINANCE_ALPHA;
    if (o === c0)
      return n.DEPTH_COMPONENT;
    if (o === u_)
      return n.DEPTH_STENCIL;
    if (o === mR)
      return u = e.get("EXT_sRGB"), u !== null ? u.SRGB_ALPHA_EXT : null;
    if (o === HI)
      return n.RED;
    if (o === cP)
      return n.RED_INTEGER;
    if (o === VI)
      return n.RG;
    if (o === fP)
      return n.RG_INTEGER;
    if (o === dP)
      return n.RGBA_INTEGER;
    if (o === tR || o === nR || o === rR || o === iR)
      if (h === fu)
        if (u = e.get("WEBGL_compressed_texture_s3tc_srgb"), u !== null) {
          if (o === tR)
            return u.COMPRESSED_SRGB_S3TC_DXT1_EXT;
          if (o === nR)
            return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
          if (o === rR)
            return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
          if (o === iR)
            return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
        } else
          return null;
      else if (u = e.get("WEBGL_compressed_texture_s3tc"), u !== null) {
        if (o === tR)
          return u.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (o === nR)
          return u.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (o === rR)
          return u.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (o === iR)
          return u.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      } else
        return null;
    if (o === IL || o === BL || o === HL || o === VL)
      if (u = e.get("WEBGL_compressed_texture_pvrtc"), u !== null) {
        if (o === IL)
          return u.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (o === BL)
          return u.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (o === HL)
          return u.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (o === VL)
          return u.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      } else
        return null;
    if (o === GI)
      return u = e.get("WEBGL_compressed_texture_etc1"), u !== null ? u.COMPRESSED_RGB_ETC1_WEBGL : null;
    if (o === GL || o === WL)
      if (u = e.get("WEBGL_compressed_texture_etc"), u !== null) {
        if (o === GL)
          return h === fu ? u.COMPRESSED_SRGB8_ETC2 : u.COMPRESSED_RGB8_ETC2;
        if (o === WL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : u.COMPRESSED_RGBA8_ETC2_EAC;
      } else
        return null;
    if (o === jL || o === $L || o === YL || o === XL || o === qL || o === KL || o === QL || o === ZL || o === JL || o === eO || o === tO || o === nO || o === rO || o === iO)
      if (u = e.get("WEBGL_compressed_texture_astc"), u !== null) {
        if (o === jL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : u.COMPRESSED_RGBA_ASTC_4x4_KHR;
        if (o === $L)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : u.COMPRESSED_RGBA_ASTC_5x4_KHR;
        if (o === YL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : u.COMPRESSED_RGBA_ASTC_5x5_KHR;
        if (o === XL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : u.COMPRESSED_RGBA_ASTC_6x5_KHR;
        if (o === qL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : u.COMPRESSED_RGBA_ASTC_6x6_KHR;
        if (o === KL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : u.COMPRESSED_RGBA_ASTC_8x5_KHR;
        if (o === QL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : u.COMPRESSED_RGBA_ASTC_8x6_KHR;
        if (o === ZL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : u.COMPRESSED_RGBA_ASTC_8x8_KHR;
        if (o === JL)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : u.COMPRESSED_RGBA_ASTC_10x5_KHR;
        if (o === eO)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : u.COMPRESSED_RGBA_ASTC_10x6_KHR;
        if (o === tO)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : u.COMPRESSED_RGBA_ASTC_10x8_KHR;
        if (o === nO)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : u.COMPRESSED_RGBA_ASTC_10x10_KHR;
        if (o === rO)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : u.COMPRESSED_RGBA_ASTC_12x10_KHR;
        if (o === iO)
          return h === fu ? u.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : u.COMPRESSED_RGBA_ASTC_12x12_KHR;
      } else
        return null;
    if (o === aR || o === aO || o === oO)
      if (u = e.get("EXT_texture_compression_bptc"), u !== null) {
        if (o === aR)
          return h === fu ? u.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : u.COMPRESSED_RGBA_BPTC_UNORM_EXT;
        if (o === aO)
          return u.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
        if (o === oO)
          return u.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
      } else
        return null;
    if (o === WI || o === sO || o === lO || o === uO)
      if (u = e.get("EXT_texture_compression_rgtc"), u !== null) {
        if (o === aR)
          return u.COMPRESSED_RED_RGTC1_EXT;
        if (o === sO)
          return u.COMPRESSED_SIGNED_RED_RGTC1_EXT;
        if (o === lO)
          return u.COMPRESSED_RED_GREEN_RGTC2_EXT;
        if (o === uO)
          return u.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
      } else
        return null;
    return o === u0 ? r ? n.UNSIGNED_INT_24_8 : (u = e.get("WEBGL_depth_texture"), u !== null ? u.UNSIGNED_INT_24_8_WEBGL : null) : n[o] !== void 0 ? n[o] : null;
  }
  return { convert: i };
}
class _4 extends Ws {
  constructor(e = []) {
    super(), this.isArrayCamera = !0, this.cameras = e;
  }
}
class A1 extends xa {
  constructor() {
    super(), this.isGroup = !0, this.type = "Group";
  }
}
const O$ = { type: "move" };
class FD {
  constructor() {
    this._targetRay = null, this._grip = null, this._hand = null;
  }
  getHandSpace() {
    return this._hand === null && (this._hand = new A1(), this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = { pinching: !1 }), this._hand;
  }
  getTargetRaySpace() {
    return this._targetRay === null && (this._targetRay = new A1(), this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new Re(), this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new Re()), this._targetRay;
  }
  getGripSpace() {
    return this._grip === null && (this._grip = new A1(), this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new Re(), this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new Re()), this._grip;
  }
  dispatchEvent(e) {
    return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
  }
  connect(e) {
    if (e && e.hand) {
      const t = this._hand;
      if (t)
        for (const r of e.hand.values())
          this._getHandJoint(t, r);
    }
    return this.dispatchEvent({ type: "connected", data: e }), this;
  }
  disconnect(e) {
    return this.dispatchEvent({ type: "disconnected", data: e }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
  }
  update(e, t, r) {
    let i = null, o = null, l = null;
    const u = this._targetRay, h = this._grip, p = this._hand;
    if (e && t.session.visibilityState !== "visible-blurred") {
      if (p && e.hand) {
        l = !0;
        for (const U of e.hand.values()) {
          const L = t.getJointPose(U, r), A = this._getHandJoint(p, U);
          L !== null && (A.matrix.fromArray(L.transform.matrix), A.matrix.decompose(A.position, A.rotation, A.scale), A.matrixWorldNeedsUpdate = !0, A.jointRadius = L.radius), A.visible = L !== null;
        }
        const y = p.joints["index-finger-tip"], _ = p.joints["thumb-tip"], E = y.position.distanceTo(_.position), w = 0.02, R = 5e-3;
        p.inputState.pinching && E > w + R ? (p.inputState.pinching = !1, this.dispatchEvent({
          type: "pinchend",
          handedness: e.handedness,
          target: this
        })) : !p.inputState.pinching && E <= w - R && (p.inputState.pinching = !0, this.dispatchEvent({
          type: "pinchstart",
          handedness: e.handedness,
          target: this
        }));
      } else
        h !== null && e.gripSpace && (o = t.getPose(e.gripSpace, r), o !== null && (h.matrix.fromArray(o.transform.matrix), h.matrix.decompose(h.position, h.rotation, h.scale), h.matrixWorldNeedsUpdate = !0, o.linearVelocity ? (h.hasLinearVelocity = !0, h.linearVelocity.copy(o.linearVelocity)) : h.hasLinearVelocity = !1, o.angularVelocity ? (h.hasAngularVelocity = !0, h.angularVelocity.copy(o.angularVelocity)) : h.hasAngularVelocity = !1));
      u !== null && (i = t.getPose(e.targetRaySpace, r), i === null && o !== null && (i = o), i !== null && (u.matrix.fromArray(i.transform.matrix), u.matrix.decompose(u.position, u.rotation, u.scale), u.matrixWorldNeedsUpdate = !0, i.linearVelocity ? (u.hasLinearVelocity = !0, u.linearVelocity.copy(i.linearVelocity)) : u.hasLinearVelocity = !1, i.angularVelocity ? (u.hasAngularVelocity = !0, u.angularVelocity.copy(i.angularVelocity)) : u.hasAngularVelocity = !1, this.dispatchEvent(O$)));
    }
    return u !== null && (u.visible = i !== null), h !== null && (h.visible = o !== null), p !== null && (p.visible = l !== null), this;
  }
  // private method
  _getHandJoint(e, t) {
    if (e.joints[t.jointName] === void 0) {
      const r = new A1();
      r.matrixAutoUpdate = !1, r.visible = !1, e.joints[t.jointName] = r, e.add(r);
    }
    return e.joints[t.jointName];
  }
}
class x4 extends Es {
  constructor(e, t, r, i, o, l, u, h, p, y) {
    if (y = y !== void 0 ? y : c0, y !== c0 && y !== u_)
      throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
    r === void 0 && y === c0 && (r = kg), r === void 0 && y === u_ && (r = u0), super(null, i, o, l, u, h, y, r, p), this.isDepthTexture = !0, this.image = { width: e, height: t }, this.magFilter = u !== void 0 ? u : pl, this.minFilter = h !== void 0 ? h : pl, this.flipY = !1, this.generateMipmaps = !1, this.compareFunction = null;
  }
  copy(e) {
    return super.copy(e), this.compareFunction = e.compareFunction, this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return this.compareFunction !== null && (t.compareFunction = this.compareFunction), t;
  }
}
class P$ extends wv {
  constructor(e, t) {
    super();
    const r = this;
    let i = null, o = 1, l = null, u = "local-floor", h = 1, p = null, y = null, _ = null, E = null, w = null, R = null;
    const U = t.getContextAttributes();
    let L = null, A = null;
    const k = [], F = [], H = new Ws();
    H.layers.enable(1), H.viewport = new Ma();
    const B = new Ws();
    B.layers.enable(2), B.viewport = new Ma();
    const j = [H, B], Y = new _4();
    Y.layers.enable(1), Y.layers.enable(2);
    let ee = null, Z = null;
    this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(q) {
      let ue = k[q];
      return ue === void 0 && (ue = new FD(), k[q] = ue), ue.getTargetRaySpace();
    }, this.getControllerGrip = function(q) {
      let ue = k[q];
      return ue === void 0 && (ue = new FD(), k[q] = ue), ue.getGripSpace();
    }, this.getHand = function(q) {
      let ue = k[q];
      return ue === void 0 && (ue = new FD(), k[q] = ue), ue.getHandSpace();
    };
    function K(q) {
      const ue = F.indexOf(q.inputSource);
      if (ue === -1)
        return;
      const Ce = k[ue];
      Ce !== void 0 && (Ce.update(q.inputSource, q.frame, p || l), Ce.dispatchEvent({ type: q.type, data: q.inputSource }));
    }
    function fe() {
      i.removeEventListener("select", K), i.removeEventListener("selectstart", K), i.removeEventListener("selectend", K), i.removeEventListener("squeeze", K), i.removeEventListener("squeezestart", K), i.removeEventListener("squeezeend", K), i.removeEventListener("end", fe), i.removeEventListener("inputsourceschange", se);
      for (let q = 0; q < k.length; q++) {
        const ue = F[q];
        ue !== null && (F[q] = null, k[q].disconnect(ue));
      }
      ee = null, Z = null, e.setRenderTarget(L), w = null, E = null, _ = null, i = null, A = null, X.stop(), r.isPresenting = !1, r.dispatchEvent({ type: "sessionend" });
    }
    this.setFramebufferScaleFactor = function(q) {
      o = q, r.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
    }, this.setReferenceSpaceType = function(q) {
      u = q, r.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
    }, this.getReferenceSpace = function() {
      return p || l;
    }, this.setReferenceSpace = function(q) {
      p = q;
    }, this.getBaseLayer = function() {
      return E !== null ? E : w;
    }, this.getBinding = function() {
      return _;
    }, this.getFrame = function() {
      return R;
    }, this.getSession = function() {
      return i;
    }, this.setSession = async function(q) {
      if (i = q, i !== null) {
        if (L = e.getRenderTarget(), i.addEventListener("select", K), i.addEventListener("selectstart", K), i.addEventListener("selectend", K), i.addEventListener("squeeze", K), i.addEventListener("squeezestart", K), i.addEventListener("squeezeend", K), i.addEventListener("end", fe), i.addEventListener("inputsourceschange", se), U.xrCompatible !== !0 && await t.makeXRCompatible(), i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1) {
          const ue = {
            antialias: i.renderState.layers === void 0 ? U.antialias : !0,
            alpha: !0,
            depth: U.depth,
            stencil: U.stencil,
            framebufferScaleFactor: o
          };
          w = new XRWebGLLayer(i, t, ue), i.updateRenderState({ baseLayer: w }), A = new cm(
            w.framebufferWidth,
            w.framebufferHeight,
            {
              format: Sd,
              type: Sv,
              colorSpace: e.outputColorSpace,
              stencilBuffer: U.stencil
            }
          );
        } else {
          let ue = null, Ce = null, Ae = null;
          U.depth && (Ae = U.stencil ? t.DEPTH24_STENCIL8 : t.DEPTH_COMPONENT24, ue = U.stencil ? u_ : c0, Ce = U.stencil ? u0 : kg);
          const De = {
            colorFormat: t.RGBA8,
            depthFormat: Ae,
            scaleFactor: o
          };
          _ = new XRWebGLBinding(i, t), E = _.createProjectionLayer(De), i.updateRenderState({ layers: [E] }), A = new cm(
            E.textureWidth,
            E.textureHeight,
            {
              format: Sd,
              type: Sv,
              depthTexture: new x4(E.textureWidth, E.textureHeight, Ce, void 0, void 0, void 0, void 0, void 0, void 0, ue),
              stencilBuffer: U.stencil,
              colorSpace: e.outputColorSpace,
              samples: U.antialias ? 4 : 0
            }
          );
          const Ne = e.properties.get(A);
          Ne.__ignoreDepthValues = E.ignoreDepthValues;
        }
        A.isXRRenderTarget = !0, this.setFoveation(h), p = null, l = await i.requestReferenceSpace(u), X.setContext(i), X.start(), r.isPresenting = !0, r.dispatchEvent({ type: "sessionstart" });
      }
    }, this.getEnvironmentBlendMode = function() {
      if (i !== null)
        return i.environmentBlendMode;
    };
    function se(q) {
      for (let ue = 0; ue < q.removed.length; ue++) {
        const Ce = q.removed[ue], Ae = F.indexOf(Ce);
        Ae >= 0 && (F[Ae] = null, k[Ae].disconnect(Ce));
      }
      for (let ue = 0; ue < q.added.length; ue++) {
        const Ce = q.added[ue];
        let Ae = F.indexOf(Ce);
        if (Ae === -1) {
          for (let Ne = 0; Ne < k.length; Ne++)
            if (Ne >= F.length) {
              F.push(Ce), Ae = Ne;
              break;
            } else if (F[Ne] === null) {
              F[Ne] = Ce, Ae = Ne;
              break;
            }
          if (Ae === -1)
            break;
        }
        const De = k[Ae];
        De && De.connect(Ce);
      }
    }
    const he = new Re(), me = new Re();
    function Ee(q, ue, Ce) {
      he.setFromMatrixPosition(ue.matrixWorld), me.setFromMatrixPosition(Ce.matrixWorld);
      const Ae = he.distanceTo(me), De = ue.projectionMatrix.elements, Ne = Ce.projectionMatrix.elements, Pe = De[14] / (De[10] - 1), Fe = De[14] / (De[10] + 1), it = (De[9] + 1) / De[5], Ot = (De[9] - 1) / De[5], st = (De[8] - 1) / De[0], oe = (Ne[8] + 1) / Ne[0], rt = Pe * st, qe = Pe * oe, $e = Ae / (-st + oe), Ye = $e * -st;
      ue.matrixWorld.decompose(q.position, q.quaternion, q.scale), q.translateX(Ye), q.translateZ($e), q.matrixWorld.compose(q.position, q.quaternion, q.scale), q.matrixWorldInverse.copy(q.matrixWorld).invert();
      const zt = Pe + $e, ot = Fe + $e, Dt = rt - Ye, kt = qe + (Ae - Ye), mt = it * Fe / ot * zt, rn = Ot * Fe / ot * zt;
      q.projectionMatrix.makePerspective(Dt, kt, mt, rn, zt, ot), q.projectionMatrixInverse.copy(q.projectionMatrix).invert();
    }
    function be(q, ue) {
      ue === null ? q.matrixWorld.copy(q.matrix) : q.matrixWorld.multiplyMatrices(ue.matrixWorld, q.matrix), q.matrixWorldInverse.copy(q.matrixWorld).invert();
    }
    this.updateCamera = function(q) {
      if (i === null)
        return;
      Y.near = B.near = H.near = q.near, Y.far = B.far = H.far = q.far, (ee !== Y.near || Z !== Y.far) && (i.updateRenderState({
        depthNear: Y.near,
        depthFar: Y.far
      }), ee = Y.near, Z = Y.far);
      const ue = q.parent, Ce = Y.cameras;
      be(Y, ue);
      for (let Ae = 0; Ae < Ce.length; Ae++)
        be(Ce[Ae], ue);
      Ce.length === 2 ? Ee(Y, H, B) : Y.projectionMatrix.copy(H.projectionMatrix), we(q, Y, ue);
    };
    function we(q, ue, Ce) {
      Ce === null ? q.matrix.copy(ue.matrixWorld) : (q.matrix.copy(Ce.matrixWorld), q.matrix.invert(), q.matrix.multiply(ue.matrixWorld)), q.matrix.decompose(q.position, q.quaternion, q.scale), q.updateMatrixWorld(!0), q.projectionMatrix.copy(ue.projectionMatrix), q.projectionMatrixInverse.copy(ue.projectionMatrixInverse), q.isPerspectiveCamera && (q.fov = I1 * 2 * Math.atan(1 / q.projectionMatrix.elements[5]), q.zoom = 1);
    }
    this.getCamera = function() {
      return Y;
    }, this.getFoveation = function() {
      if (!(E === null && w === null))
        return h;
    }, this.setFoveation = function(q) {
      h = q, E !== null && (E.fixedFoveation = q), w !== null && w.fixedFoveation !== void 0 && (w.fixedFoveation = q);
    };
    let de = null;
    function ye(q, ue) {
      if (y = ue.getViewerPose(p || l), R = ue, y !== null) {
        const Ce = y.views;
        w !== null && (e.setRenderTargetFramebuffer(A, w.framebuffer), e.setRenderTarget(A));
        let Ae = !1;
        Ce.length !== Y.cameras.length && (Y.cameras.length = 0, Ae = !0);
        for (let De = 0; De < Ce.length; De++) {
          const Ne = Ce[De];
          let Pe = null;
          if (w !== null)
            Pe = w.getViewport(Ne);
          else {
            const it = _.getViewSubImage(E, Ne);
            Pe = it.viewport, De === 0 && (e.setRenderTargetTextures(
              A,
              it.colorTexture,
              E.ignoreDepthValues ? void 0 : it.depthStencilTexture
            ), e.setRenderTarget(A));
          }
          let Fe = j[De];
          Fe === void 0 && (Fe = new Ws(), Fe.layers.enable(De), Fe.viewport = new Ma(), j[De] = Fe), Fe.matrix.fromArray(Ne.transform.matrix), Fe.matrix.decompose(Fe.position, Fe.quaternion, Fe.scale), Fe.projectionMatrix.fromArray(Ne.projectionMatrix), Fe.projectionMatrixInverse.copy(Fe.projectionMatrix).invert(), Fe.viewport.set(Pe.x, Pe.y, Pe.width, Pe.height), De === 0 && (Y.matrix.copy(Fe.matrix), Y.matrix.decompose(Y.position, Y.quaternion, Y.scale)), Ae === !0 && Y.cameras.push(Fe);
        }
      }
      for (let Ce = 0; Ce < k.length; Ce++) {
        const Ae = F[Ce], De = k[Ce];
        Ae !== null && De !== void 0 && De.update(Ae, ue, p || l);
      }
      de && de(q, ue), ue.detectedPlanes && r.dispatchEvent({ type: "planesdetected", data: ue }), R = null;
    }
    const X = new p4();
    X.setAnimationLoop(ye), this.setAnimationLoop = function(q) {
      de = q;
    }, this.dispose = function() {
    };
  }
}
function U$(n, e) {
  function t(L, A) {
    L.matrixAutoUpdate === !0 && L.updateMatrix(), A.value.copy(L.matrix);
  }
  function r(L, A) {
    A.color.getRGB(L.fogColor.value, f4(n)), A.isFog ? (L.fogNear.value = A.near, L.fogFar.value = A.far) : A.isFogExp2 && (L.fogDensity.value = A.density);
  }
  function i(L, A, k, F, H) {
    A.isMeshBasicMaterial || A.isMeshLambertMaterial ? o(L, A) : A.isMeshToonMaterial ? (o(L, A), _(L, A)) : A.isMeshPhongMaterial ? (o(L, A), y(L, A)) : A.isMeshStandardMaterial ? (o(L, A), E(L, A), A.isMeshPhysicalMaterial && w(L, A, H)) : A.isMeshMatcapMaterial ? (o(L, A), R(L, A)) : A.isMeshDepthMaterial ? o(L, A) : A.isMeshDistanceMaterial ? (o(L, A), U(L, A)) : A.isMeshNormalMaterial ? o(L, A) : A.isLineBasicMaterial ? (l(L, A), A.isLineDashedMaterial && u(L, A)) : A.isPointsMaterial ? h(L, A, k, F) : A.isSpriteMaterial ? p(L, A) : A.isShadowMaterial ? (L.color.value.copy(A.color), L.opacity.value = A.opacity) : A.isShaderMaterial && (A.uniformsNeedUpdate = !1);
  }
  function o(L, A) {
    L.opacity.value = A.opacity, A.color && L.diffuse.value.copy(A.color), A.emissive && L.emissive.value.copy(A.emissive).multiplyScalar(A.emissiveIntensity), A.map && (L.map.value = A.map, t(A.map, L.mapTransform)), A.alphaMap && (L.alphaMap.value = A.alphaMap, t(A.alphaMap, L.alphaMapTransform)), A.bumpMap && (L.bumpMap.value = A.bumpMap, t(A.bumpMap, L.bumpMapTransform), L.bumpScale.value = A.bumpScale, A.side === Wc && (L.bumpScale.value *= -1)), A.normalMap && (L.normalMap.value = A.normalMap, t(A.normalMap, L.normalMapTransform), L.normalScale.value.copy(A.normalScale), A.side === Wc && L.normalScale.value.negate()), A.displacementMap && (L.displacementMap.value = A.displacementMap, t(A.displacementMap, L.displacementMapTransform), L.displacementScale.value = A.displacementScale, L.displacementBias.value = A.displacementBias), A.emissiveMap && (L.emissiveMap.value = A.emissiveMap, t(A.emissiveMap, L.emissiveMapTransform)), A.specularMap && (L.specularMap.value = A.specularMap, t(A.specularMap, L.specularMapTransform)), A.alphaTest > 0 && (L.alphaTest.value = A.alphaTest);
    const k = e.get(A).envMap;
    if (k && (L.envMap.value = k, L.flipEnvMap.value = k.isCubeTexture && k.isRenderTargetTexture === !1 ? -1 : 1, L.reflectivity.value = A.reflectivity, L.ior.value = A.ior, L.refractionRatio.value = A.refractionRatio), A.lightMap) {
      L.lightMap.value = A.lightMap;
      const F = n._useLegacyLights === !0 ? Math.PI : 1;
      L.lightMapIntensity.value = A.lightMapIntensity * F, t(A.lightMap, L.lightMapTransform);
    }
    A.aoMap && (L.aoMap.value = A.aoMap, L.aoMapIntensity.value = A.aoMapIntensity, t(A.aoMap, L.aoMapTransform));
  }
  function l(L, A) {
    L.diffuse.value.copy(A.color), L.opacity.value = A.opacity, A.map && (L.map.value = A.map, t(A.map, L.mapTransform));
  }
  function u(L, A) {
    L.dashSize.value = A.dashSize, L.totalSize.value = A.dashSize + A.gapSize, L.scale.value = A.scale;
  }
  function h(L, A, k, F) {
    L.diffuse.value.copy(A.color), L.opacity.value = A.opacity, L.size.value = A.size * k, L.scale.value = F * 0.5, A.map && (L.map.value = A.map, t(A.map, L.uvTransform)), A.alphaMap && (L.alphaMap.value = A.alphaMap, t(A.alphaMap, L.alphaMapTransform)), A.alphaTest > 0 && (L.alphaTest.value = A.alphaTest);
  }
  function p(L, A) {
    L.diffuse.value.copy(A.color), L.opacity.value = A.opacity, L.rotation.value = A.rotation, A.map && (L.map.value = A.map, t(A.map, L.mapTransform)), A.alphaMap && (L.alphaMap.value = A.alphaMap, t(A.alphaMap, L.alphaMapTransform)), A.alphaTest > 0 && (L.alphaTest.value = A.alphaTest);
  }
  function y(L, A) {
    L.specular.value.copy(A.specular), L.shininess.value = Math.max(A.shininess, 1e-4);
  }
  function _(L, A) {
    A.gradientMap && (L.gradientMap.value = A.gradientMap);
  }
  function E(L, A) {
    L.metalness.value = A.metalness, A.metalnessMap && (L.metalnessMap.value = A.metalnessMap, t(A.metalnessMap, L.metalnessMapTransform)), L.roughness.value = A.roughness, A.roughnessMap && (L.roughnessMap.value = A.roughnessMap, t(A.roughnessMap, L.roughnessMapTransform)), e.get(A).envMap && (L.envMapIntensity.value = A.envMapIntensity);
  }
  function w(L, A, k) {
    L.ior.value = A.ior, A.sheen > 0 && (L.sheenColor.value.copy(A.sheenColor).multiplyScalar(A.sheen), L.sheenRoughness.value = A.sheenRoughness, A.sheenColorMap && (L.sheenColorMap.value = A.sheenColorMap, t(A.sheenColorMap, L.sheenColorMapTransform)), A.sheenRoughnessMap && (L.sheenRoughnessMap.value = A.sheenRoughnessMap, t(A.sheenRoughnessMap, L.sheenRoughnessMapTransform))), A.clearcoat > 0 && (L.clearcoat.value = A.clearcoat, L.clearcoatRoughness.value = A.clearcoatRoughness, A.clearcoatMap && (L.clearcoatMap.value = A.clearcoatMap, t(A.clearcoatMap, L.clearcoatMapTransform)), A.clearcoatRoughnessMap && (L.clearcoatRoughnessMap.value = A.clearcoatRoughnessMap, t(A.clearcoatRoughnessMap, L.clearcoatRoughnessMapTransform)), A.clearcoatNormalMap && (L.clearcoatNormalMap.value = A.clearcoatNormalMap, t(A.clearcoatNormalMap, L.clearcoatNormalMapTransform), L.clearcoatNormalScale.value.copy(A.clearcoatNormalScale), A.side === Wc && L.clearcoatNormalScale.value.negate())), A.iridescence > 0 && (L.iridescence.value = A.iridescence, L.iridescenceIOR.value = A.iridescenceIOR, L.iridescenceThicknessMinimum.value = A.iridescenceThicknessRange[0], L.iridescenceThicknessMaximum.value = A.iridescenceThicknessRange[1], A.iridescenceMap && (L.iridescenceMap.value = A.iridescenceMap, t(A.iridescenceMap, L.iridescenceMapTransform)), A.iridescenceThicknessMap && (L.iridescenceThicknessMap.value = A.iridescenceThicknessMap, t(A.iridescenceThicknessMap, L.iridescenceThicknessMapTransform))), A.transmission > 0 && (L.transmission.value = A.transmission, L.transmissionSamplerMap.value = k.texture, L.transmissionSamplerSize.value.set(k.width, k.height), A.transmissionMap && (L.transmissionMap.value = A.transmissionMap, t(A.transmissionMap, L.transmissionMapTransform)), L.thickness.value = A.thickness, A.thicknessMap && (L.thicknessMap.value = A.thicknessMap, t(A.thicknessMap, L.thicknessMapTransform)), L.attenuationDistance.value = A.attenuationDistance, L.attenuationColor.value.copy(A.attenuationColor)), A.anisotropy > 0 && (L.anisotropyVector.value.set(A.anisotropy * Math.cos(A.anisotropyRotation), A.anisotropy * Math.sin(A.anisotropyRotation)), A.anisotropyMap && (L.anisotropyMap.value = A.anisotropyMap, t(A.anisotropyMap, L.anisotropyMapTransform))), L.specularIntensity.value = A.specularIntensity, L.specularColor.value.copy(A.specularColor), A.specularColorMap && (L.specularColorMap.value = A.specularColorMap, t(A.specularColorMap, L.specularColorMapTransform)), A.specularIntensityMap && (L.specularIntensityMap.value = A.specularIntensityMap, t(A.specularIntensityMap, L.specularIntensityMapTransform));
  }
  function R(L, A) {
    A.matcap && (L.matcap.value = A.matcap);
  }
  function U(L, A) {
    const k = e.get(A).light;
    L.referencePosition.value.setFromMatrixPosition(k.matrixWorld), L.nearDistance.value = k.shadow.camera.near, L.farDistance.value = k.shadow.camera.far;
  }
  return {
    refreshFogUniforms: r,
    refreshMaterialUniforms: i
  };
}
function N$(n, e, t, r) {
  let i = {}, o = {}, l = [];
  const u = t.isWebGL2 ? n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
  function h(k, F) {
    const H = F.program;
    r.uniformBlockBinding(k, H);
  }
  function p(k, F) {
    let H = i[k.id];
    H === void 0 && (R(k), H = y(k), i[k.id] = H, k.addEventListener("dispose", L));
    const B = F.program;
    r.updateUBOMapping(k, B);
    const j = e.render.frame;
    o[k.id] !== j && (E(k), o[k.id] = j);
  }
  function y(k) {
    const F = _();
    k.__bindingPointIndex = F;
    const H = n.createBuffer(), B = k.__size, j = k.usage;
    return n.bindBuffer(n.UNIFORM_BUFFER, H), n.bufferData(n.UNIFORM_BUFFER, B, j), n.bindBuffer(n.UNIFORM_BUFFER, null), n.bindBufferBase(n.UNIFORM_BUFFER, F, H), H;
  }
  function _() {
    for (let k = 0; k < u; k++)
      if (l.indexOf(k) === -1)
        return l.push(k), k;
    return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."), 0;
  }
  function E(k) {
    const F = i[k.id], H = k.uniforms, B = k.__cache;
    n.bindBuffer(n.UNIFORM_BUFFER, F);
    for (let j = 0, Y = H.length; j < Y; j++) {
      const ee = H[j];
      if (w(ee, j, B) === !0) {
        const Z = ee.__offset, K = Array.isArray(ee.value) ? ee.value : [ee.value];
        let fe = 0;
        for (let se = 0; se < K.length; se++) {
          const he = K[se], me = U(he);
          typeof he == "number" ? (ee.__data[0] = he, n.bufferSubData(n.UNIFORM_BUFFER, Z + fe, ee.__data)) : he.isMatrix3 ? (ee.__data[0] = he.elements[0], ee.__data[1] = he.elements[1], ee.__data[2] = he.elements[2], ee.__data[3] = he.elements[0], ee.__data[4] = he.elements[3], ee.__data[5] = he.elements[4], ee.__data[6] = he.elements[5], ee.__data[7] = he.elements[0], ee.__data[8] = he.elements[6], ee.__data[9] = he.elements[7], ee.__data[10] = he.elements[8], ee.__data[11] = he.elements[0]) : (he.toArray(ee.__data, fe), fe += me.storage / Float32Array.BYTES_PER_ELEMENT);
        }
        n.bufferSubData(n.UNIFORM_BUFFER, Z, ee.__data);
      }
    }
    n.bindBuffer(n.UNIFORM_BUFFER, null);
  }
  function w(k, F, H) {
    const B = k.value;
    if (H[F] === void 0) {
      if (typeof B == "number")
        H[F] = B;
      else {
        const j = Array.isArray(B) ? B : [B], Y = [];
        for (let ee = 0; ee < j.length; ee++)
          Y.push(j[ee].clone());
        H[F] = Y;
      }
      return !0;
    } else if (typeof B == "number") {
      if (H[F] !== B)
        return H[F] = B, !0;
    } else {
      const j = Array.isArray(H[F]) ? H[F] : [H[F]], Y = Array.isArray(B) ? B : [B];
      for (let ee = 0; ee < j.length; ee++) {
        const Z = j[ee];
        if (Z.equals(Y[ee]) === !1)
          return Z.copy(Y[ee]), !0;
      }
    }
    return !1;
  }
  function R(k) {
    const F = k.uniforms;
    let H = 0;
    const B = 16;
    let j = 0;
    for (let Y = 0, ee = F.length; Y < ee; Y++) {
      const Z = F[Y], K = {
        boundary: 0,
        // bytes
        storage: 0
        // bytes
      }, fe = Array.isArray(Z.value) ? Z.value : [Z.value];
      for (let se = 0, he = fe.length; se < he; se++) {
        const me = fe[se], Ee = U(me);
        K.boundary += Ee.boundary, K.storage += Ee.storage;
      }
      if (Z.__data = new Float32Array(K.storage / Float32Array.BYTES_PER_ELEMENT), Z.__offset = H, Y > 0) {
        j = H % B;
        const se = B - j;
        j !== 0 && se - K.boundary < 0 && (H += B - j, Z.__offset = H);
      }
      H += K.storage;
    }
    return j = H % B, j > 0 && (H += B - j), k.__size = H, k.__cache = {}, this;
  }
  function U(k) {
    const F = {
      boundary: 0,
      // bytes
      storage: 0
      // bytes
    };
    return typeof k == "number" ? (F.boundary = 4, F.storage = 4) : k.isVector2 ? (F.boundary = 8, F.storage = 8) : k.isVector3 || k.isColor ? (F.boundary = 16, F.storage = 12) : k.isVector4 ? (F.boundary = 16, F.storage = 16) : k.isMatrix3 ? (F.boundary = 48, F.storage = 48) : k.isMatrix4 ? (F.boundary = 64, F.storage = 64) : k.isTexture ? console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.") : console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", k), F;
  }
  function L(k) {
    const F = k.target;
    F.removeEventListener("dispose", L);
    const H = l.indexOf(F.__bindingPointIndex);
    l.splice(H, 1), n.deleteBuffer(i[F.id]), delete i[F.id], delete o[F.id];
  }
  function A() {
    for (const k in i)
      n.deleteBuffer(i[k]);
    l = [], i = {}, o = {};
  }
  return {
    bind: h,
    update: p,
    dispose: A
  };
}
class bP {
  constructor(e = {}) {
    const {
      canvas: t = l4(),
      context: r = null,
      depth: i = !0,
      stencil: o = !0,
      alpha: l = !1,
      antialias: u = !1,
      premultipliedAlpha: h = !0,
      preserveDrawingBuffer: p = !1,
      powerPreference: y = "default",
      failIfMajorPerformanceCaveat: _ = !1
    } = e;
    this.isWebGLRenderer = !0;
    let E;
    r !== null ? E = r.getContextAttributes().alpha : E = l;
    const w = new Uint32Array(4), R = new Int32Array(4);
    let U = null, L = null;
    const A = [], k = [];
    this.domElement = t, this.debug = {
      /**
       * Enables error checking and reporting when shader programs are being compiled
       * @type {boolean}
       */
      checkShaderErrors: !0,
      /**
       * Callback for custom error reporting.
       * @type {?Function}
       */
      onShaderError: null
    }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.outputColorSpace = Mo, this._useLegacyLights = !1, this.toneMapping = yv, this.toneMappingExposure = 1;
    const F = this;
    let H = !1, B = 0, j = 0, Y = null, ee = -1, Z = null;
    const K = new Ma(), fe = new Ma();
    let se = null;
    const he = new Pn(0);
    let me = 0, Ee = t.width, be = t.height, we = 1, de = null, ye = null;
    const X = new Ma(0, 0, Ee, be), q = new Ma(0, 0, Ee, be);
    let ue = !1;
    const Ce = new HR();
    let Ae = !1, De = !1, Ne = null;
    const Pe = new ri(), Fe = new $t(), it = new Re(), Ot = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: !0 };
    function st() {
      return Y === null ? we : 1;
    }
    let oe = r;
    function rt(_e, Qe) {
      for (let at = 0; at < _e.length; at++) {
        const je = _e[at], vt = t.getContext(je, Qe);
        if (vt !== null)
          return vt;
      }
      return null;
    }
    try {
      const _e = {
        alpha: !0,
        depth: i,
        stencil: o,
        antialias: u,
        premultipliedAlpha: h,
        preserveDrawingBuffer: p,
        powerPreference: y,
        failIfMajorPerformanceCaveat: _
      };
      if ("setAttribute" in t && t.setAttribute("data-engine", `three.js r${NR}`), t.addEventListener("webglcontextlost", Pt, !1), t.addEventListener("webglcontextrestored", He, !1), t.addEventListener("webglcontextcreationerror", dt, !1), oe === null) {
        const Qe = ["webgl2", "webgl", "experimental-webgl"];
        if (F.isWebGL1Renderer === !0 && Qe.shift(), oe = rt(Qe, _e), oe === null)
          throw rt(Qe) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
      }
      typeof WebGLRenderingContext < "u" && oe instanceof WebGLRenderingContext && console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."), oe.getShaderPrecisionFormat === void 0 && (oe.getShaderPrecisionFormat = function() {
        return { rangeMin: 1, rangeMax: 1, precision: 1 };
      });
    } catch (_e) {
      throw console.error("THREE.WebGLRenderer: " + _e.message), _e;
    }
    let qe, $e, Ye, zt, ot, Dt, kt, mt, rn, ae, re, ze, xt, ut, lt, Yt, Nt, xe, We, ft, Et, Ze, Te, tt;
    function pt() {
      qe = new K9(oe), $e = new W9(oe, qe, e), qe.init($e), Ze = new S4(oe, qe, $e), Ye = new A$(oe, qe, $e), zt = new J9(oe), ot = new g$(), Dt = new D$(oe, qe, Ye, ot, $e, Ze, zt), kt = new $9(F), mt = new q9(F), rn = new uW(oe, $e), Te = new V9(oe, qe, rn, $e), ae = new Q9(oe, rn, zt, Te), re = new r7(oe, ae, rn, zt), We = new n7(oe, $e, Dt), Yt = new j9(ot), ze = new v$(F, kt, mt, qe, $e, Te, Yt), xt = new U$(F, ot), ut = new S$(), lt = new w$(qe, $e), xe = new H9(F, kt, mt, Ye, re, E, h), Nt = new R$(F, re, $e), tt = new N$(oe, zt, $e, Ye), ft = new G9(oe, qe, zt, $e), Et = new Z9(oe, qe, zt, $e), zt.programs = ze.programs, F.capabilities = $e, F.extensions = qe, F.properties = ot, F.renderLists = ut, F.shadowMap = Nt, F.state = Ye, F.info = zt;
    }
    pt();
    const ve = new P$(F, oe);
    this.xr = ve, this.getContext = function() {
      return oe;
    }, this.getContextAttributes = function() {
      return oe.getContextAttributes();
    }, this.forceContextLoss = function() {
      const _e = qe.get("WEBGL_lose_context");
      _e && _e.loseContext();
    }, this.forceContextRestore = function() {
      const _e = qe.get("WEBGL_lose_context");
      _e && _e.restoreContext();
    }, this.getPixelRatio = function() {
      return we;
    }, this.setPixelRatio = function(_e) {
      _e !== void 0 && (we = _e, this.setSize(Ee, be, !1));
    }, this.getSize = function(_e) {
      return _e.set(Ee, be);
    }, this.setSize = function(_e, Qe, at = !0) {
      if (ve.isPresenting) {
        console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
        return;
      }
      Ee = _e, be = Qe, t.width = Math.floor(_e * we), t.height = Math.floor(Qe * we), at === !0 && (t.style.width = _e + "px", t.style.height = Qe + "px"), this.setViewport(0, 0, _e, Qe);
    }, this.getDrawingBufferSize = function(_e) {
      return _e.set(Ee * we, be * we).floor();
    }, this.setDrawingBufferSize = function(_e, Qe, at) {
      Ee = _e, be = Qe, we = at, t.width = Math.floor(_e * at), t.height = Math.floor(Qe * at), this.setViewport(0, 0, _e, Qe);
    }, this.getCurrentViewport = function(_e) {
      return _e.copy(K);
    }, this.getViewport = function(_e) {
      return _e.copy(X);
    }, this.setViewport = function(_e, Qe, at, je) {
      _e.isVector4 ? X.set(_e.x, _e.y, _e.z, _e.w) : X.set(_e, Qe, at, je), Ye.viewport(K.copy(X).multiplyScalar(we).floor());
    }, this.getScissor = function(_e) {
      return _e.copy(q);
    }, this.setScissor = function(_e, Qe, at, je) {
      _e.isVector4 ? q.set(_e.x, _e.y, _e.z, _e.w) : q.set(_e, Qe, at, je), Ye.scissor(fe.copy(q).multiplyScalar(we).floor());
    }, this.getScissorTest = function() {
      return ue;
    }, this.setScissorTest = function(_e) {
      Ye.setScissorTest(ue = _e);
    }, this.setOpaqueSort = function(_e) {
      de = _e;
    }, this.setTransparentSort = function(_e) {
      ye = _e;
    }, this.getClearColor = function(_e) {
      return _e.copy(xe.getClearColor());
    }, this.setClearColor = function() {
      xe.setClearColor.apply(xe, arguments);
    }, this.getClearAlpha = function() {
      return xe.getClearAlpha();
    }, this.setClearAlpha = function() {
      xe.setClearAlpha.apply(xe, arguments);
    }, this.clear = function(_e = !0, Qe = !0, at = !0) {
      let je = 0;
      if (_e) {
        let vt = !1;
        if (Y !== null) {
          const sn = Y.texture.format;
          vt = sn === dP || sn === fP || sn === cP;
        }
        if (vt) {
          const sn = Y.texture.type, vn = sn === Sv || sn === kg || sn === zR || sn === u0 || sn === lP || sn === uP, Mn = xe.getClearColor(), zn = xe.getClearAlpha(), pr = Mn.r, Mt = Mn.g, dr = Mn.b;
          vn ? (w[0] = pr, w[1] = Mt, w[2] = dr, w[3] = zn, oe.clearBufferuiv(oe.COLOR, 0, w)) : (R[0] = pr, R[1] = Mt, R[2] = dr, R[3] = zn, oe.clearBufferiv(oe.COLOR, 0, R));
        } else
          je |= oe.COLOR_BUFFER_BIT;
      }
      Qe && (je |= oe.DEPTH_BUFFER_BIT), at && (je |= oe.STENCIL_BUFFER_BIT), oe.clear(je);
    }, this.clearColor = function() {
      this.clear(!0, !1, !1);
    }, this.clearDepth = function() {
      this.clear(!1, !0, !1);
    }, this.clearStencil = function() {
      this.clear(!1, !1, !0);
    }, this.dispose = function() {
      t.removeEventListener("webglcontextlost", Pt, !1), t.removeEventListener("webglcontextrestored", He, !1), t.removeEventListener("webglcontextcreationerror", dt, !1), ut.dispose(), lt.dispose(), ot.dispose(), kt.dispose(), mt.dispose(), re.dispose(), Te.dispose(), tt.dispose(), ze.dispose(), ve.dispose(), ve.removeEventListener("sessionstart", tr), ve.removeEventListener("sessionend", fr), Ne && (Ne.dispose(), Ne = null), Hn.stop();
    };
    function Pt(_e) {
      _e.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), H = !0;
    }
    function He() {
      console.log("THREE.WebGLRenderer: Context Restored."), H = !1;
      const _e = zt.autoReset, Qe = Nt.enabled, at = Nt.autoUpdate, je = Nt.needsUpdate, vt = Nt.type;
      pt(), zt.autoReset = _e, Nt.enabled = Qe, Nt.autoUpdate = at, Nt.needsUpdate = je, Nt.type = vt;
    }
    function dt(_e) {
      console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", _e.statusMessage);
    }
    function ln(_e) {
      const Qe = _e.target;
      Qe.removeEventListener("dispose", ln), Un(Qe);
    }
    function Un(_e) {
      jn(_e), ot.remove(_e);
    }
    function jn(_e) {
      const Qe = ot.get(_e).programs;
      Qe !== void 0 && (Qe.forEach(function(at) {
        ze.releaseProgram(at);
      }), _e.isShaderMaterial && ze.releaseShaderCache(_e));
    }
    this.renderBufferDirect = function(_e, Qe, at, je, vt, sn) {
      Qe === null && (Qe = Ot);
      const vn = vt.isMesh && vt.matrixWorld.determinant() < 0, Mn = Ht(_e, Qe, at, je, vt);
      Ye.setMaterial(je, vn);
      let zn = at.index, pr = 1;
      if (je.wireframe === !0) {
        if (zn = ae.getWireframeAttribute(at), zn === void 0)
          return;
        pr = 2;
      }
      const Mt = at.drawRange, dr = at.attributes.position;
      let Wr = Mt.start * pr, Rn = (Mt.start + Mt.count) * pr;
      sn !== null && (Wr = Math.max(Wr, sn.start * pr), Rn = Math.min(Rn, (sn.start + sn.count) * pr)), zn !== null ? (Wr = Math.max(Wr, 0), Rn = Math.min(Rn, zn.count)) : dr != null && (Wr = Math.max(Wr, 0), Rn = Math.min(Rn, dr.count));
      const Ji = Rn - Wr;
      if (Ji < 0 || Ji === 1 / 0)
        return;
      Te.setup(vt, je, Mn, at, zn);
      let Ca, li = ft;
      if (zn !== null && (Ca = rn.get(zn), li = Et, li.setIndex(Ca)), vt.isMesh)
        je.wireframe === !0 ? (Ye.setLineWidth(je.wireframeLinewidth * st()), li.setMode(oe.LINES)) : li.setMode(oe.TRIANGLES);
      else if (vt.isLine) {
        let qn = je.linewidth;
        qn === void 0 && (qn = 1), Ye.setLineWidth(qn * st()), vt.isLineSegments ? li.setMode(oe.LINES) : vt.isLineLoop ? li.setMode(oe.LINE_LOOP) : li.setMode(oe.LINE_STRIP);
      } else
        vt.isPoints ? li.setMode(oe.POINTS) : vt.isSprite && li.setMode(oe.TRIANGLES);
      if (vt.isInstancedMesh)
        li.renderInstances(Wr, Ji, vt.count);
      else if (at.isInstancedBufferGeometry) {
        const qn = at._maxInstanceCount !== void 0 ? at._maxInstanceCount : 1 / 0, br = Math.min(at.instanceCount, qn);
        li.renderInstances(Wr, Ji, br);
      } else
        li.render(Wr, Ji);
    }, this.compile = function(_e, Qe) {
      function at(je, vt, sn) {
        je.transparent === !0 && je.side === cp && je.forceSinglePass === !1 ? (je.side = Wc, je.needsUpdate = !0, fi(je, vt, sn), je.side = xv, je.needsUpdate = !0, fi(je, vt, sn), je.side = cp) : fi(je, vt, sn);
      }
      L = lt.get(_e), L.init(), k.push(L), _e.traverseVisible(function(je) {
        je.isLight && je.layers.test(Qe.layers) && (L.pushLight(je), je.castShadow && L.pushShadow(je));
      }), L.setupLights(F._useLegacyLights), _e.traverse(function(je) {
        const vt = je.material;
        if (vt)
          if (Array.isArray(vt))
            for (let sn = 0; sn < vt.length; sn++) {
              const vn = vt[sn];
              at(vn, _e, je);
            }
          else
            at(vt, _e, je);
      }), k.pop(), L = null;
    };
    let cr = null;
    function En(_e) {
      cr && cr(_e);
    }
    function tr() {
      Hn.stop();
    }
    function fr() {
      Hn.start();
    }
    const Hn = new p4();
    Hn.setAnimationLoop(En), typeof self < "u" && Hn.setContext(self), this.setAnimationLoop = function(_e) {
      cr = _e, ve.setAnimationLoop(_e), _e === null ? Hn.stop() : Hn.start();
    }, ve.addEventListener("sessionstart", tr), ve.addEventListener("sessionend", fr), this.render = function(_e, Qe) {
      if (Qe !== void 0 && Qe.isCamera !== !0) {
        console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        return;
      }
      if (H === !0)
        return;
      _e.matrixWorldAutoUpdate === !0 && _e.updateMatrixWorld(), Qe.parent === null && Qe.matrixWorldAutoUpdate === !0 && Qe.updateMatrixWorld(), ve.enabled === !0 && ve.isPresenting === !0 && (ve.cameraAutoUpdate === !0 && ve.updateCamera(Qe), Qe = ve.getCamera()), _e.isScene === !0 && _e.onBeforeRender(F, _e, Qe, Y), L = lt.get(_e, k.length), L.init(), k.push(L), Pe.multiplyMatrices(Qe.projectionMatrix, Qe.matrixWorldInverse), Ce.setFromProjectionMatrix(Pe), De = this.localClippingEnabled, Ae = Yt.init(this.clippingPlanes, De), U = ut.get(_e, A.length), U.init(), A.push(U), mi(_e, Qe, 0, F.sortObjects), U.finish(), F.sortObjects === !0 && U.sort(de, ye), this.info.render.frame++, Ae === !0 && Yt.beginShadows();
      const at = L.state.shadowsArray;
      if (Nt.render(at, _e, Qe), Ae === !0 && Yt.endShadows(), this.info.autoReset === !0 && this.info.reset(), xe.render(U, _e), L.setupLights(F._useLegacyLights), Qe.isArrayCamera) {
        const je = Qe.cameras;
        for (let vt = 0, sn = je.length; vt < sn; vt++) {
          const vn = je[vt];
          Vr(U, _e, vn, vn.viewport);
        }
      } else
        Vr(U, _e, Qe);
      Y !== null && (Dt.updateMultisampleRenderTarget(Y), Dt.updateRenderTargetMipmap(Y)), _e.isScene === !0 && _e.onAfterRender(F, _e, Qe), Te.resetDefaultState(), ee = -1, Z = null, k.pop(), k.length > 0 ? L = k[k.length - 1] : L = null, A.pop(), A.length > 0 ? U = A[A.length - 1] : U = null;
    };
    function mi(_e, Qe, at, je) {
      if (_e.visible === !1)
        return;
      if (_e.layers.test(Qe.layers)) {
        if (_e.isGroup)
          at = _e.renderOrder;
        else if (_e.isLOD)
          _e.autoUpdate === !0 && _e.update(Qe);
        else if (_e.isLight)
          L.pushLight(_e), _e.castShadow && L.pushShadow(_e);
        else if (_e.isSprite) {
          if (!_e.frustumCulled || Ce.intersectsSprite(_e)) {
            je && it.setFromMatrixPosition(_e.matrixWorld).applyMatrix4(Pe);
            const vn = re.update(_e), Mn = _e.material;
            Mn.visible && U.push(_e, vn, Mn, at, it.z, null);
          }
        } else if ((_e.isMesh || _e.isLine || _e.isPoints) && (!_e.frustumCulled || Ce.intersectsObject(_e))) {
          const vn = re.update(_e), Mn = _e.material;
          if (je && (_e.boundingSphere !== void 0 ? (_e.boundingSphere === null && _e.computeBoundingSphere(), it.copy(_e.boundingSphere.center)) : (vn.boundingSphere === null && vn.computeBoundingSphere(), it.copy(vn.boundingSphere.center)), it.applyMatrix4(_e.matrixWorld).applyMatrix4(Pe)), Array.isArray(Mn)) {
            const zn = vn.groups;
            for (let pr = 0, Mt = zn.length; pr < Mt; pr++) {
              const dr = zn[pr], Wr = Mn[dr.materialIndex];
              Wr && Wr.visible && U.push(_e, vn, Wr, at, it.z, dr);
            }
          } else
            Mn.visible && U.push(_e, vn, Mn, at, it.z, null);
        }
      }
      const sn = _e.children;
      for (let vn = 0, Mn = sn.length; vn < Mn; vn++)
        mi(sn[vn], Qe, at, je);
    }
    function Vr(_e, Qe, at, je) {
      const vt = _e.opaque, sn = _e.transmissive, vn = _e.transparent;
      L.setupLightsView(at), Ae === !0 && Yt.setGlobalState(F.clippingPlanes, at), sn.length > 0 && Gr(vt, sn, Qe, at), je && Ye.viewport(K.copy(je)), vt.length > 0 && Or(vt, Qe, at), sn.length > 0 && Or(sn, Qe, at), vn.length > 0 && Or(vn, Qe, at), Ye.buffers.depth.setTest(!0), Ye.buffers.depth.setMask(!0), Ye.buffers.color.setMask(!0), Ye.setPolygonOffset(!1);
    }
    function Gr(_e, Qe, at, je) {
      const vt = $e.isWebGL2;
      Ne === null && (Ne = new cm(1, 1, {
        generateMipmaps: !0,
        type: qe.has("EXT_color_buffer_half_float") ? z1 : Sv,
        minFilter: p0,
        samples: vt ? 4 : 0
      })), F.getDrawingBufferSize(Fe), vt ? Ne.setSize(Fe.x, Fe.y) : Ne.setSize(vR(Fe.x), vR(Fe.y));
      const sn = F.getRenderTarget();
      F.setRenderTarget(Ne), F.getClearColor(he), me = F.getClearAlpha(), me < 1 && F.setClearColor(16777215, 0.5), F.clear();
      const vn = F.toneMapping;
      F.toneMapping = yv, Or(_e, at, je), Dt.updateMultisampleRenderTarget(Ne), Dt.updateRenderTargetMipmap(Ne);
      let Mn = !1;
      for (let zn = 0, pr = Qe.length; zn < pr; zn++) {
        const Mt = Qe[zn], dr = Mt.object, Wr = Mt.geometry, Rn = Mt.material, Ji = Mt.group;
        if (Rn.side === cp && dr.layers.test(je.layers)) {
          const Ca = Rn.side;
          Rn.side = Wc, Rn.needsUpdate = !0, Ui(dr, at, je, Wr, Rn, Ji), Rn.side = Ca, Rn.needsUpdate = !0, Mn = !0;
        }
      }
      Mn === !0 && (Dt.updateMultisampleRenderTarget(Ne), Dt.updateRenderTargetMipmap(Ne)), F.setRenderTarget(sn), F.setClearColor(he, me), F.toneMapping = vn;
    }
    function Or(_e, Qe, at) {
      const je = Qe.isScene === !0 ? Qe.overrideMaterial : null;
      for (let vt = 0, sn = _e.length; vt < sn; vt++) {
        const vn = _e[vt], Mn = vn.object, zn = vn.geometry, pr = je === null ? vn.material : je, Mt = vn.group;
        Mn.layers.test(at.layers) && Ui(Mn, Qe, at, zn, pr, Mt);
      }
    }
    function Ui(_e, Qe, at, je, vt, sn) {
      _e.onBeforeRender(F, Qe, at, je, vt, sn), _e.modelViewMatrix.multiplyMatrices(at.matrixWorldInverse, _e.matrixWorld), _e.normalMatrix.getNormalMatrix(_e.modelViewMatrix), vt.onBeforeRender(F, Qe, at, je, _e, sn), vt.transparent === !0 && vt.side === cp && vt.forceSinglePass === !1 ? (vt.side = Wc, vt.needsUpdate = !0, F.renderBufferDirect(at, Qe, je, vt, _e, sn), vt.side = xv, vt.needsUpdate = !0, F.renderBufferDirect(at, Qe, je, vt, _e, sn), vt.side = cp) : F.renderBufferDirect(at, Qe, je, vt, _e, sn), _e.onAfterRender(F, Qe, at, je, vt, sn);
    }
    function fi(_e, Qe, at) {
      Qe.isScene !== !0 && (Qe = Ot);
      const je = ot.get(_e), vt = L.state.lights, sn = L.state.shadowsArray, vn = vt.state.version, Mn = ze.getParameters(_e, vt.state, sn, Qe, at), zn = ze.getProgramCacheKey(Mn);
      let pr = je.programs;
      je.environment = _e.isMeshStandardMaterial ? Qe.environment : null, je.fog = Qe.fog, je.envMap = (_e.isMeshStandardMaterial ? mt : kt).get(_e.envMap || je.environment), pr === void 0 && (_e.addEventListener("dispose", ln), pr = /* @__PURE__ */ new Map(), je.programs = pr);
      let Mt = pr.get(zn);
      if (Mt !== void 0) {
        if (je.currentProgram === Mt && je.lightsStateVersion === vn)
          return ke(_e, Mn), Mt;
      } else
        Mn.uniforms = ze.getUniforms(_e), _e.onBuild(at, Mn, F), _e.onBeforeCompile(Mn, F), Mt = ze.acquireProgram(Mn, zn), pr.set(zn, Mt), je.uniforms = Mn.uniforms;
      const dr = je.uniforms;
      (!_e.isShaderMaterial && !_e.isRawShaderMaterial || _e.clipping === !0) && (dr.clippingPlanes = Yt.uniform), ke(_e, Mn), je.needsLights = pn(_e), je.lightsStateVersion = vn, je.needsLights && (dr.ambientLightColor.value = vt.state.ambient, dr.lightProbe.value = vt.state.probe, dr.directionalLights.value = vt.state.directional, dr.directionalLightShadows.value = vt.state.directionalShadow, dr.spotLights.value = vt.state.spot, dr.spotLightShadows.value = vt.state.spotShadow, dr.rectAreaLights.value = vt.state.rectArea, dr.ltc_1.value = vt.state.rectAreaLTC1, dr.ltc_2.value = vt.state.rectAreaLTC2, dr.pointLights.value = vt.state.point, dr.pointLightShadows.value = vt.state.pointShadow, dr.hemisphereLights.value = vt.state.hemi, dr.directionalShadowMap.value = vt.state.directionalShadowMap, dr.directionalShadowMatrix.value = vt.state.directionalShadowMatrix, dr.spotShadowMap.value = vt.state.spotShadowMap, dr.spotLightMatrix.value = vt.state.spotLightMatrix, dr.spotLightMap.value = vt.state.spotLightMap, dr.pointShadowMap.value = vt.state.pointShadowMap, dr.pointShadowMatrix.value = vt.state.pointShadowMatrix);
      const Wr = Mt.getUniforms(), Rn = lR.seqWithValue(Wr.seq, dr);
      return je.currentProgram = Mt, je.uniformsList = Rn, Mt;
    }
    function ke(_e, Qe) {
      const at = ot.get(_e);
      at.outputColorSpace = Qe.outputColorSpace, at.instancing = Qe.instancing, at.instancingColor = Qe.instancingColor, at.skinning = Qe.skinning, at.morphTargets = Qe.morphTargets, at.morphNormals = Qe.morphNormals, at.morphColors = Qe.morphColors, at.morphTargetsCount = Qe.morphTargetsCount, at.numClippingPlanes = Qe.numClippingPlanes, at.numIntersection = Qe.numClipIntersection, at.vertexAlphas = Qe.vertexAlphas, at.vertexTangents = Qe.vertexTangents, at.toneMapping = Qe.toneMapping;
    }
    function Ht(_e, Qe, at, je, vt) {
      Qe.isScene !== !0 && (Qe = Ot), Dt.resetTextureUnits();
      const sn = Qe.fog, vn = je.isMeshStandardMaterial ? Qe.environment : null, Mn = Y === null ? F.outputColorSpace : Y.isXRRenderTarget === !0 ? Y.texture.colorSpace : um, zn = (je.isMeshStandardMaterial ? mt : kt).get(je.envMap || vn), pr = je.vertexColors === !0 && !!at.attributes.color && at.attributes.color.itemSize === 4, Mt = !!at.attributes.tangent && (!!je.normalMap || je.anisotropy > 0), dr = !!at.morphAttributes.position, Wr = !!at.morphAttributes.normal, Rn = !!at.morphAttributes.color;
      let Ji = yv;
      je.toneMapped && (Y === null || Y.isXRRenderTarget === !0) && (Ji = F.toneMapping);
      const Ca = at.morphAttributes.position || at.morphAttributes.normal || at.morphAttributes.color, li = Ca !== void 0 ? Ca.length : 0, qn = ot.get(je), br = L.state.lights;
      if (Ae === !0 && (De === !0 || _e !== Z)) {
        const bi = _e === Z && je.id === ee;
        Yt.setState(je, _e, bi);
      }
      let hr = !1;
      je.version === qn.__version ? (qn.needsLights && qn.lightsStateVersion !== br.state.version || qn.outputColorSpace !== Mn || vt.isInstancedMesh && qn.instancing === !1 || !vt.isInstancedMesh && qn.instancing === !0 || vt.isSkinnedMesh && qn.skinning === !1 || !vt.isSkinnedMesh && qn.skinning === !0 || vt.isInstancedMesh && qn.instancingColor === !0 && vt.instanceColor === null || vt.isInstancedMesh && qn.instancingColor === !1 && vt.instanceColor !== null || qn.envMap !== zn || je.fog === !0 && qn.fog !== sn || qn.numClippingPlanes !== void 0 && (qn.numClippingPlanes !== Yt.numPlanes || qn.numIntersection !== Yt.numIntersection) || qn.vertexAlphas !== pr || qn.vertexTangents !== Mt || qn.morphTargets !== dr || qn.morphNormals !== Wr || qn.morphColors !== Rn || qn.toneMapping !== Ji || $e.isWebGL2 === !0 && qn.morphTargetsCount !== li) && (hr = !0) : (hr = !0, qn.__version = je.version);
      let di = qn.currentProgram;
      hr === !0 && (di = fi(je, Qe, vt));
      let ha = !1, Kr = !1, Co = !1;
      const Ri = di.getUniforms(), Ai = qn.uniforms;
      if (Ye.useProgram(di.program) && (ha = !0, Kr = !0, Co = !0), je.id !== ee && (ee = je.id, Kr = !0), ha || Z !== _e) {
        Ri.setValue(oe, "projectionMatrix", _e.projectionMatrix), Ri.setValue(oe, "viewMatrix", _e.matrixWorldInverse);
        const bi = Ri.map.cameraPosition;
        bi !== void 0 && bi.setValue(oe, it.setFromMatrixPosition(_e.matrixWorld)), $e.logarithmicDepthBuffer && Ri.setValue(
          oe,
          "logDepthBufFC",
          2 / (Math.log(_e.far + 1) / Math.LN2)
        ), (je.isMeshPhongMaterial || je.isMeshToonMaterial || je.isMeshLambertMaterial || je.isMeshBasicMaterial || je.isMeshStandardMaterial || je.isShaderMaterial) && Ri.setValue(oe, "isOrthographic", _e.isOrthographicCamera === !0), Z !== _e && (Z = _e, Kr = !0, Co = !0);
      }
      if (vt.isSkinnedMesh) {
        Ri.setOptional(oe, vt, "bindMatrix"), Ri.setOptional(oe, vt, "bindMatrixInverse");
        const bi = vt.skeleton;
        bi && ($e.floatVertexTextures ? (bi.boneTexture === null && bi.computeBoneTexture(), Ri.setValue(oe, "boneTexture", bi.boneTexture, Dt), Ri.setValue(oe, "boneTextureSize", bi.boneTextureSize)) : console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."));
      }
      const Ea = at.morphAttributes;
      if ((Ea.position !== void 0 || Ea.normal !== void 0 || Ea.color !== void 0 && $e.isWebGL2 === !0) && We.update(vt, at, di), (Kr || qn.receiveShadow !== vt.receiveShadow) && (qn.receiveShadow = vt.receiveShadow, Ri.setValue(oe, "receiveShadow", vt.receiveShadow)), je.isMeshGouraudMaterial && je.envMap !== null && (Ai.envMap.value = zn, Ai.flipEnvMap.value = zn.isCubeTexture && zn.isRenderTargetTexture === !1 ? -1 : 1), Kr && (Ri.setValue(oe, "toneMappingExposure", F.toneMappingExposure), qn.needsLights && Jt(Ai, Co), sn && je.fog === !0 && xt.refreshFogUniforms(Ai, sn), xt.refreshMaterialUniforms(Ai, je, we, be, Ne), lR.upload(oe, qn.uniformsList, Ai, Dt)), je.isShaderMaterial && je.uniformsNeedUpdate === !0 && (lR.upload(oe, qn.uniformsList, Ai, Dt), je.uniformsNeedUpdate = !1), je.isSpriteMaterial && Ri.setValue(oe, "center", vt.center), Ri.setValue(oe, "modelViewMatrix", vt.modelViewMatrix), Ri.setValue(oe, "normalMatrix", vt.normalMatrix), Ri.setValue(oe, "modelMatrix", vt.matrixWorld), je.isShaderMaterial || je.isRawShaderMaterial) {
        const bi = je.uniformsGroups;
        for (let ns = 0, Ro = bi.length; ns < Ro; ns++)
          if ($e.isWebGL2) {
            const Ra = bi[ns];
            tt.update(Ra, di), tt.bind(Ra, di);
          } else
            console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");
      }
      return di;
    }
    function Jt(_e, Qe) {
      _e.ambientLightColor.needsUpdate = Qe, _e.lightProbe.needsUpdate = Qe, _e.directionalLights.needsUpdate = Qe, _e.directionalLightShadows.needsUpdate = Qe, _e.pointLights.needsUpdate = Qe, _e.pointLightShadows.needsUpdate = Qe, _e.spotLights.needsUpdate = Qe, _e.spotLightShadows.needsUpdate = Qe, _e.rectAreaLights.needsUpdate = Qe, _e.hemisphereLights.needsUpdate = Qe;
    }
    function pn(_e) {
      return _e.isMeshLambertMaterial || _e.isMeshToonMaterial || _e.isMeshPhongMaterial || _e.isMeshStandardMaterial || _e.isShadowMaterial || _e.isShaderMaterial && _e.lights === !0;
    }
    this.getActiveCubeFace = function() {
      return B;
    }, this.getActiveMipmapLevel = function() {
      return j;
    }, this.getRenderTarget = function() {
      return Y;
    }, this.setRenderTargetTextures = function(_e, Qe, at) {
      ot.get(_e.texture).__webglTexture = Qe, ot.get(_e.depthTexture).__webglTexture = at;
      const je = ot.get(_e);
      je.__hasExternalTextures = !0, je.__hasExternalTextures && (je.__autoAllocateDepthBuffer = at === void 0, je.__autoAllocateDepthBuffer || qe.has("WEBGL_multisampled_render_to_texture") === !0 && (console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"), je.__useRenderToTexture = !1));
    }, this.setRenderTargetFramebuffer = function(_e, Qe) {
      const at = ot.get(_e);
      at.__webglFramebuffer = Qe, at.__useDefaultFramebuffer = Qe === void 0;
    }, this.setRenderTarget = function(_e, Qe = 0, at = 0) {
      Y = _e, B = Qe, j = at;
      let je = !0, vt = null, sn = !1, vn = !1;
      if (_e) {
        const zn = ot.get(_e);
        zn.__useDefaultFramebuffer !== void 0 ? (Ye.bindFramebuffer(oe.FRAMEBUFFER, null), je = !1) : zn.__webglFramebuffer === void 0 ? Dt.setupRenderTarget(_e) : zn.__hasExternalTextures && Dt.rebindTextures(_e, ot.get(_e.texture).__webglTexture, ot.get(_e.depthTexture).__webglTexture);
        const pr = _e.texture;
        (pr.isData3DTexture || pr.isDataArrayTexture || pr.isCompressedArrayTexture) && (vn = !0);
        const Mt = ot.get(_e).__webglFramebuffer;
        _e.isWebGLCubeRenderTarget ? (Array.isArray(Mt[Qe]) ? vt = Mt[Qe][at] : vt = Mt[Qe], sn = !0) : $e.isWebGL2 && _e.samples > 0 && Dt.useMultisampledRTT(_e) === !1 ? vt = ot.get(_e).__webglMultisampledFramebuffer : Array.isArray(Mt) ? vt = Mt[at] : vt = Mt, K.copy(_e.viewport), fe.copy(_e.scissor), se = _e.scissorTest;
      } else
        K.copy(X).multiplyScalar(we).floor(), fe.copy(q).multiplyScalar(we).floor(), se = ue;
      if (Ye.bindFramebuffer(oe.FRAMEBUFFER, vt) && $e.drawBuffers && je && Ye.drawBuffers(_e, vt), Ye.viewport(K), Ye.scissor(fe), Ye.setScissorTest(se), sn) {
        const zn = ot.get(_e.texture);
        oe.framebufferTexture2D(oe.FRAMEBUFFER, oe.COLOR_ATTACHMENT0, oe.TEXTURE_CUBE_MAP_POSITIVE_X + Qe, zn.__webglTexture, at);
      } else if (vn) {
        const zn = ot.get(_e.texture), pr = Qe || 0;
        oe.framebufferTextureLayer(oe.FRAMEBUFFER, oe.COLOR_ATTACHMENT0, zn.__webglTexture, at || 0, pr);
      }
      ee = -1;
    }, this.readRenderTargetPixels = function(_e, Qe, at, je, vt, sn, vn) {
      if (!(_e && _e.isWebGLRenderTarget)) {
        console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
        return;
      }
      let Mn = ot.get(_e).__webglFramebuffer;
      if (_e.isWebGLCubeRenderTarget && vn !== void 0 && (Mn = Mn[vn]), Mn) {
        Ye.bindFramebuffer(oe.FRAMEBUFFER, Mn);
        try {
          const zn = _e.texture, pr = zn.format, Mt = zn.type;
          if (pr !== Sd && Ze.convert(pr) !== oe.getParameter(oe.IMPLEMENTATION_COLOR_READ_FORMAT)) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
            return;
          }
          const dr = Mt === z1 && (qe.has("EXT_color_buffer_half_float") || $e.isWebGL2 && qe.has("EXT_color_buffer_float"));
          if (Mt !== Sv && Ze.convert(Mt) !== oe.getParameter(oe.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)
          !(Mt === vv && ($e.isWebGL2 || qe.has("OES_texture_float") || qe.has("WEBGL_color_buffer_float"))) && // Chrome Mac >= 52 and Firefox
          !dr) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
            return;
          }
          Qe >= 0 && Qe <= _e.width - je && at >= 0 && at <= _e.height - vt && oe.readPixels(Qe, at, je, vt, Ze.convert(pr), Ze.convert(Mt), sn);
        } finally {
          const zn = Y !== null ? ot.get(Y).__webglFramebuffer : null;
          Ye.bindFramebuffer(oe.FRAMEBUFFER, zn);
        }
      }
    }, this.copyFramebufferToTexture = function(_e, Qe, at = 0) {
      const je = Math.pow(2, -at), vt = Math.floor(Qe.image.width * je), sn = Math.floor(Qe.image.height * je);
      Dt.setTexture2D(Qe, 0), oe.copyTexSubImage2D(oe.TEXTURE_2D, at, 0, 0, _e.x, _e.y, vt, sn), Ye.unbindTexture();
    }, this.copyTextureToTexture = function(_e, Qe, at, je = 0) {
      const vt = Qe.image.width, sn = Qe.image.height, vn = Ze.convert(at.format), Mn = Ze.convert(at.type);
      Dt.setTexture2D(at, 0), oe.pixelStorei(oe.UNPACK_FLIP_Y_WEBGL, at.flipY), oe.pixelStorei(oe.UNPACK_PREMULTIPLY_ALPHA_WEBGL, at.premultiplyAlpha), oe.pixelStorei(oe.UNPACK_ALIGNMENT, at.unpackAlignment), Qe.isDataTexture ? oe.texSubImage2D(oe.TEXTURE_2D, je, _e.x, _e.y, vt, sn, vn, Mn, Qe.image.data) : Qe.isCompressedTexture ? oe.compressedTexSubImage2D(oe.TEXTURE_2D, je, _e.x, _e.y, Qe.mipmaps[0].width, Qe.mipmaps[0].height, vn, Qe.mipmaps[0].data) : oe.texSubImage2D(oe.TEXTURE_2D, je, _e.x, _e.y, vn, Mn, Qe.image), je === 0 && at.generateMipmaps && oe.generateMipmap(oe.TEXTURE_2D), Ye.unbindTexture();
    }, this.copyTextureToTexture3D = function(_e, Qe, at, je, vt = 0) {
      if (F.isWebGL1Renderer) {
        console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
        return;
      }
      const sn = _e.max.x - _e.min.x + 1, vn = _e.max.y - _e.min.y + 1, Mn = _e.max.z - _e.min.z + 1, zn = Ze.convert(je.format), pr = Ze.convert(je.type);
      let Mt;
      if (je.isData3DTexture)
        Dt.setTexture3D(je, 0), Mt = oe.TEXTURE_3D;
      else if (je.isDataArrayTexture)
        Dt.setTexture2DArray(je, 0), Mt = oe.TEXTURE_2D_ARRAY;
      else {
        console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
        return;
      }
      oe.pixelStorei(oe.UNPACK_FLIP_Y_WEBGL, je.flipY), oe.pixelStorei(oe.UNPACK_PREMULTIPLY_ALPHA_WEBGL, je.premultiplyAlpha), oe.pixelStorei(oe.UNPACK_ALIGNMENT, je.unpackAlignment);
      const dr = oe.getParameter(oe.UNPACK_ROW_LENGTH), Wr = oe.getParameter(oe.UNPACK_IMAGE_HEIGHT), Rn = oe.getParameter(oe.UNPACK_SKIP_PIXELS), Ji = oe.getParameter(oe.UNPACK_SKIP_ROWS), Ca = oe.getParameter(oe.UNPACK_SKIP_IMAGES), li = at.isCompressedTexture ? at.mipmaps[0] : at.image;
      oe.pixelStorei(oe.UNPACK_ROW_LENGTH, li.width), oe.pixelStorei(oe.UNPACK_IMAGE_HEIGHT, li.height), oe.pixelStorei(oe.UNPACK_SKIP_PIXELS, _e.min.x), oe.pixelStorei(oe.UNPACK_SKIP_ROWS, _e.min.y), oe.pixelStorei(oe.UNPACK_SKIP_IMAGES, _e.min.z), at.isDataTexture || at.isData3DTexture ? oe.texSubImage3D(Mt, vt, Qe.x, Qe.y, Qe.z, sn, vn, Mn, zn, pr, li.data) : at.isCompressedArrayTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), oe.compressedTexSubImage3D(Mt, vt, Qe.x, Qe.y, Qe.z, sn, vn, Mn, zn, li.data)) : oe.texSubImage3D(Mt, vt, Qe.x, Qe.y, Qe.z, sn, vn, Mn, zn, pr, li), oe.pixelStorei(oe.UNPACK_ROW_LENGTH, dr), oe.pixelStorei(oe.UNPACK_IMAGE_HEIGHT, Wr), oe.pixelStorei(oe.UNPACK_SKIP_PIXELS, Rn), oe.pixelStorei(oe.UNPACK_SKIP_ROWS, Ji), oe.pixelStorei(oe.UNPACK_SKIP_IMAGES, Ca), vt === 0 && je.generateMipmaps && oe.generateMipmap(Mt), Ye.unbindTexture();
    }, this.initTexture = function(_e) {
      _e.isCubeTexture ? Dt.setTextureCube(_e, 0) : _e.isData3DTexture ? Dt.setTexture3D(_e, 0) : _e.isDataArrayTexture || _e.isCompressedArrayTexture ? Dt.setTexture2DArray(_e, 0) : Dt.setTexture2D(_e, 0), Ye.unbindTexture();
    }, this.resetState = function() {
      B = 0, j = 0, Y = null, Ye.reset(), Te.reset();
    }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
  }
  get coordinateSystem() {
    return gv;
  }
  get physicallyCorrectLights() {
    return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."), !this.useLegacyLights;
  }
  set physicallyCorrectLights(e) {
    console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."), this.useLegacyLights = !e;
  }
  get outputEncoding() {
    return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."), this.outputColorSpace === Mo ? f0 : pP;
  }
  set outputEncoding(e) {
    console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."), this.outputColorSpace = e === f0 ? Mo : um;
  }
  get useLegacyLights() {
    return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."), this._useLegacyLights;
  }
  set useLegacyLights(e) {
    console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."), this._useLegacyLights = e;
  }
}
class E4 extends bP {
}
E4.prototype.isWebGL1Renderer = !0;
class jR {
  constructor(e, t = 25e-5) {
    this.isFogExp2 = !0, this.name = "", this.color = new Pn(e), this.density = t;
  }
  clone() {
    return new jR(this.color, this.density);
  }
  toJSON() {
    return {
      type: "FogExp2",
      color: this.color.getHex(),
      density: this.density
    };
  }
}
class $R {
  constructor(e, t = 1, r = 1e3) {
    this.isFog = !0, this.name = "", this.color = new Pn(e), this.near = t, this.far = r;
  }
  clone() {
    return new $R(this.color, this.near, this.far);
  }
  toJSON() {
    return {
      type: "Fog",
      color: this.color.getHex(),
      near: this.near,
      far: this.far
    };
  }
}
class gR extends xa {
  constructor() {
    super(), this.isScene = !0, this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.backgroundBlurriness = 0, this.backgroundIntensity = 1, this.overrideMaterial = null, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
  }
  copy(e, t) {
    return super.copy(e, t), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), this.backgroundBlurriness = e.backgroundBlurriness, this.backgroundIntensity = e.backgroundIntensity, e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.matrixAutoUpdate = e.matrixAutoUpdate, this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return this.fog !== null && (t.object.fog = this.fog.toJSON()), this.backgroundBlurriness > 0 && (t.object.backgroundBlurriness = this.backgroundBlurriness), this.backgroundIntensity !== 1 && (t.object.backgroundIntensity = this.backgroundIntensity), t;
  }
}
class YR {
  constructor(e, t) {
    this.isInterleavedBuffer = !0, this.array = e, this.stride = t, this.count = e !== void 0 ? e.length / t : 0, this.usage = PT, this.updateRange = { offset: 0, count: -1 }, this.version = 0, this.uuid = mh();
  }
  onUploadCallback() {
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return this.usage = e, this;
  }
  copy(e) {
    return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
  }
  copyAt(e, t, r) {
    e *= this.stride, r *= t.stride;
    for (let i = 0, o = this.stride; i < o; i++)
      this.array[e + i] = t.array[r + i];
    return this;
  }
  set(e, t = 0) {
    return this.array.set(e, t), this;
  }
  clone(e) {
    e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = mh()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
    const t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), r = new this.constructor(t, this.stride);
    return r.setUsage(this.usage), r;
  }
  onUpload(e) {
    return this.onUploadCallback = e, this;
  }
  toJSON(e) {
    return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = mh()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.from(new Uint32Array(this.array.buffer))), {
      uuid: this.uuid,
      buffer: this.array.buffer._uuid,
      type: this.array.constructor.name,
      stride: this.stride
    };
  }
}
const Af = /* @__PURE__ */ new Re();
class c_ {
  constructor(e, t, r, i = !1) {
    this.isInterleavedBufferAttribute = !0, this.name = "", this.data = e, this.itemSize = t, this.offset = r, this.normalized = i;
  }
  get count() {
    return this.data.count;
  }
  get array() {
    return this.data.array;
  }
  set needsUpdate(e) {
    this.data.needsUpdate = e;
  }
  applyMatrix4(e) {
    for (let t = 0, r = this.data.count; t < r; t++)
      Af.fromBufferAttribute(this, t), Af.applyMatrix4(e), this.setXYZ(t, Af.x, Af.y, Af.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let t = 0, r = this.count; t < r; t++)
      Af.fromBufferAttribute(this, t), Af.applyNormalMatrix(e), this.setXYZ(t, Af.x, Af.y, Af.z);
    return this;
  }
  transformDirection(e) {
    for (let t = 0, r = this.count; t < r; t++)
      Af.fromBufferAttribute(this, t), Af.transformDirection(e), this.setXYZ(t, Af.x, Af.y, Af.z);
    return this;
  }
  setX(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.data.array[e * this.data.stride + this.offset] = t, this;
  }
  setY(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.data.array[e * this.data.stride + this.offset + 1] = t, this;
  }
  setZ(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.data.array[e * this.data.stride + this.offset + 2] = t, this;
  }
  setW(e, t) {
    return this.normalized && (t = xi(t, this.array)), this.data.array[e * this.data.stride + this.offset + 3] = t, this;
  }
  getX(e) {
    let t = this.data.array[e * this.data.stride + this.offset];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  getY(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 1];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  getZ(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 2];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  getW(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 3];
    return this.normalized && (t = _d(t, this.array)), t;
  }
  setXY(e, t, r) {
    return e = e * this.data.stride + this.offset, this.normalized && (t = xi(t, this.array), r = xi(r, this.array)), this.data.array[e + 0] = t, this.data.array[e + 1] = r, this;
  }
  setXYZ(e, t, r, i) {
    return e = e * this.data.stride + this.offset, this.normalized && (t = xi(t, this.array), r = xi(r, this.array), i = xi(i, this.array)), this.data.array[e + 0] = t, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this;
  }
  setXYZW(e, t, r, i, o) {
    return e = e * this.data.stride + this.offset, this.normalized && (t = xi(t, this.array), r = xi(r, this.array), i = xi(i, this.array), o = xi(o, this.array)), this.data.array[e + 0] = t, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this.data.array[e + 3] = o, this;
  }
  clone(e) {
    if (e === void 0) {
      console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");
      const t = [];
      for (let r = 0; r < this.count; r++) {
        const i = r * this.data.stride + this.offset;
        for (let o = 0; o < this.itemSize; o++)
          t.push(this.data.array[i + o]);
      }
      return new mo(new this.array.constructor(t), this.itemSize, this.normalized);
    } else
      return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new c_(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
  }
  toJSON(e) {
    if (e === void 0) {
      console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");
      const t = [];
      for (let r = 0; r < this.count; r++) {
        const i = r * this.data.stride + this.offset;
        for (let o = 0; o < this.itemSize; o++)
          t.push(this.data.array[i + o]);
      }
      return {
        itemSize: this.itemSize,
        type: this.array.constructor.name,
        array: t,
        normalized: this.normalized
      };
    } else
      return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
        isInterleavedBufferAttribute: !0,
        itemSize: this.itemSize,
        data: this.data.uuid,
        offset: this.offset,
        normalized: this.normalized
      };
  }
}
class TP extends hc {
  constructor(e) {
    super(), this.isSpriteMaterial = !0, this.type = "SpriteMaterial", this.color = new Pn(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
  }
}
let h1;
const Zb = /* @__PURE__ */ new Re(), p1 = /* @__PURE__ */ new Re(), m1 = /* @__PURE__ */ new Re(), v1 = /* @__PURE__ */ new $t(), Jb = /* @__PURE__ */ new $t(), b4 = /* @__PURE__ */ new ri(), SC = /* @__PURE__ */ new Re(), eT = /* @__PURE__ */ new Re(), _C = /* @__PURE__ */ new Re(), QN = /* @__PURE__ */ new $t(), zD = /* @__PURE__ */ new $t(), ZN = /* @__PURE__ */ new $t();
class T4 extends xa {
  constructor(e) {
    if (super(), this.isSprite = !0, this.type = "Sprite", h1 === void 0) {
      h1 = new Ei();
      const t = new Float32Array([
        -0.5,
        -0.5,
        0,
        0,
        0,
        0.5,
        -0.5,
        0,
        1,
        0,
        0.5,
        0.5,
        0,
        1,
        1,
        -0.5,
        0.5,
        0,
        0,
        1
      ]), r = new YR(t, 5);
      h1.setIndex([0, 1, 2, 0, 2, 3]), h1.setAttribute("position", new c_(r, 3, 0, !1)), h1.setAttribute("uv", new c_(r, 2, 3, !1));
    }
    this.geometry = h1, this.material = e !== void 0 ? e : new TP(), this.center = new $t(0.5, 0.5);
  }
  raycast(e, t) {
    e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), p1.setFromMatrixScale(this.matrixWorld), b4.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), m1.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && p1.multiplyScalar(-m1.z);
    const r = this.material.rotation;
    let i, o;
    r !== 0 && (o = Math.cos(r), i = Math.sin(r));
    const l = this.center;
    xC(SC.set(-0.5, -0.5, 0), m1, l, p1, i, o), xC(eT.set(0.5, -0.5, 0), m1, l, p1, i, o), xC(_C.set(0.5, 0.5, 0), m1, l, p1, i, o), QN.set(0, 0), zD.set(1, 0), ZN.set(1, 1);
    let u = e.ray.intersectTriangle(SC, eT, _C, !1, Zb);
    if (u === null && (xC(eT.set(-0.5, 0.5, 0), m1, l, p1, i, o), zD.set(0, 1), u = e.ray.intersectTriangle(SC, _C, eT, !1, Zb), u === null))
      return;
    const h = e.ray.origin.distanceTo(Zb);
    h < e.near || h > e.far || t.push({
      distance: h,
      point: Zb.clone(),
      uv: yd.getInterpolation(Zb, SC, eT, _C, QN, zD, ZN, new $t()),
      face: null,
      object: this
    });
  }
  copy(e, t) {
    return super.copy(e, t), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
  }
}
function xC(n, e, t, r, i, o) {
  v1.subVectors(n, t).addScalar(0.5).multiply(r), i !== void 0 ? (Jb.x = o * v1.x - i * v1.y, Jb.y = i * v1.x + o * v1.y) : Jb.copy(v1), n.copy(e), n.x += Jb.x, n.y += Jb.y, n.applyMatrix4(b4);
}
const EC = /* @__PURE__ */ new Re(), JN = /* @__PURE__ */ new Re();
class w4 extends xa {
  constructor() {
    super(), this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
      levels: {
        enumerable: !0,
        value: []
      },
      isLOD: {
        value: !0
      }
    }), this.autoUpdate = !0;
  }
  copy(e) {
    super.copy(e, !1);
    const t = e.levels;
    for (let r = 0, i = t.length; r < i; r++) {
      const o = t[r];
      this.addLevel(o.object.clone(), o.distance, o.hysteresis);
    }
    return this.autoUpdate = e.autoUpdate, this;
  }
  addLevel(e, t = 0, r = 0) {
    t = Math.abs(t);
    const i = this.levels;
    let o;
    for (o = 0; o < i.length && !(t < i[o].distance); o++)
      ;
    return i.splice(o, 0, { distance: t, hysteresis: r, object: e }), this.add(e), this;
  }
  getCurrentLevel() {
    return this._currentLevel;
  }
  getObjectForDistance(e) {
    const t = this.levels;
    if (t.length > 0) {
      let r, i;
      for (r = 1, i = t.length; r < i; r++) {
        let o = t[r].distance;
        if (t[r].object.visible && (o -= o * t[r].hysteresis), e < o)
          break;
      }
      return t[r - 1].object;
    }
    return null;
  }
  raycast(e, t) {
    if (this.levels.length > 0) {
      EC.setFromMatrixPosition(this.matrixWorld);
      const i = e.ray.origin.distanceTo(EC);
      this.getObjectForDistance(i).raycast(e, t);
    }
  }
  update(e) {
    const t = this.levels;
    if (t.length > 1) {
      EC.setFromMatrixPosition(e.matrixWorld), JN.setFromMatrixPosition(this.matrixWorld);
      const r = EC.distanceTo(JN) / e.zoom;
      t[0].object.visible = !0;
      let i, o;
      for (i = 1, o = t.length; i < o; i++) {
        let l = t[i].distance;
        if (t[i].object.visible && (l -= l * t[i].hysteresis), r >= l)
          t[i - 1].object.visible = !1, t[i].object.visible = !0;
        else
          break;
      }
      for (this._currentLevel = i - 1; i < o; i++)
        t[i].object.visible = !1;
    }
  }
  toJSON(e) {
    const t = super.toJSON(e);
    this.autoUpdate === !1 && (t.object.autoUpdate = !1), t.object.levels = [];
    const r = this.levels;
    for (let i = 0, o = r.length; i < o; i++) {
      const l = r[i];
      t.object.levels.push({
        object: l.object.uuid,
        distance: l.distance,
        hysteresis: l.hysteresis
      });
    }
    return t;
  }
}
const ek = /* @__PURE__ */ new Re(), tk = /* @__PURE__ */ new Ma(), nk = /* @__PURE__ */ new Ma(), k$ = /* @__PURE__ */ new Re(), rk = /* @__PURE__ */ new ri(), g1 = /* @__PURE__ */ new Re(), ID = /* @__PURE__ */ new pp(), ik = /* @__PURE__ */ new ri(), BD = /* @__PURE__ */ new v_();
class M4 extends Nl {
  constructor(e, t) {
    super(e, t), this.isSkinnedMesh = !0, this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new ri(), this.bindMatrixInverse = new ri(), this.boundingBox = null, this.boundingSphere = null;
  }
  computeBoundingBox() {
    const e = this.geometry;
    this.boundingBox === null && (this.boundingBox = new dm()), this.boundingBox.makeEmpty();
    const t = e.getAttribute("position");
    for (let r = 0; r < t.count; r++)
      g1.fromBufferAttribute(t, r), this.applyBoneTransform(r, g1), this.boundingBox.expandByPoint(g1);
  }
  computeBoundingSphere() {
    const e = this.geometry;
    this.boundingSphere === null && (this.boundingSphere = new pp()), this.boundingSphere.makeEmpty();
    const t = e.getAttribute("position");
    for (let r = 0; r < t.count; r++)
      g1.fromBufferAttribute(t, r), this.applyBoneTransform(r, g1), this.boundingSphere.expandByPoint(g1);
  }
  copy(e, t) {
    return super.copy(e, t), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
  }
  raycast(e, t) {
    const r = this.material, i = this.matrixWorld;
    r !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), ID.copy(this.boundingSphere), ID.applyMatrix4(i), e.ray.intersectsSphere(ID) !== !1 && (ik.copy(i).invert(), BD.copy(e.ray).applyMatrix4(ik), !(this.boundingBox !== null && BD.intersectsBox(this.boundingBox) === !1) && this._computeIntersections(e, t, BD)));
  }
  getVertexPosition(e, t) {
    return super.getVertexPosition(e, t), this.applyBoneTransform(e, t), t;
  }
  bind(e, t) {
    this.skeleton = e, t === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert();
  }
  pose() {
    this.skeleton.pose();
  }
  normalizeSkinWeights() {
    const e = new Ma(), t = this.geometry.attributes.skinWeight;
    for (let r = 0, i = t.count; r < i; r++) {
      e.fromBufferAttribute(t, r);
      const o = 1 / e.manhattanLength();
      o !== 1 / 0 ? e.multiplyScalar(o) : e.set(1, 0, 0, 0), t.setXYZW(r, e.x, e.y, e.z, e.w);
    }
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e), this.bindMode === "attached" ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === "detached" ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
  }
  applyBoneTransform(e, t) {
    const r = this.skeleton, i = this.geometry;
    tk.fromBufferAttribute(i.attributes.skinIndex, e), nk.fromBufferAttribute(i.attributes.skinWeight, e), ek.copy(t).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
    for (let o = 0; o < 4; o++) {
      const l = nk.getComponent(o);
      if (l !== 0) {
        const u = tk.getComponent(o);
        rk.multiplyMatrices(r.bones[u].matrixWorld, r.boneInverses[u]), t.addScaledVector(k$.copy(ek).applyMatrix4(rk), l);
      }
    }
    return t.applyMatrix4(this.bindMatrixInverse);
  }
  boneTransform(e, t) {
    return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."), this.applyBoneTransform(e, t);
  }
}
class wP extends xa {
  constructor() {
    super(), this.isBone = !0, this.type = "Bone";
  }
}
class N1 extends Es {
  constructor(e = null, t = 1, r = 1, i, o, l, u, h, p = pl, y = pl, _, E) {
    super(null, l, u, h, p, y, i, o, _, E), this.isDataTexture = !0, this.image = { data: e, width: t, height: r }, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
  }
}
const ak = /* @__PURE__ */ new ri(), F$ = /* @__PURE__ */ new ri();
class XR {
  constructor(e = [], t = []) {
    this.uuid = mh(), this.bones = e.slice(0), this.boneInverses = t, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.init();
  }
  init() {
    const e = this.bones, t = this.boneInverses;
    if (this.boneMatrices = new Float32Array(e.length * 16), t.length === 0)
      this.calculateInverses();
    else if (e.length !== t.length) {
      console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
      for (let r = 0, i = this.bones.length; r < i; r++)
        this.boneInverses.push(new ri());
    }
  }
  calculateInverses() {
    this.boneInverses.length = 0;
    for (let e = 0, t = this.bones.length; e < t; e++) {
      const r = new ri();
      this.bones[e] && r.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(r);
    }
  }
  pose() {
    for (let e = 0, t = this.bones.length; e < t; e++) {
      const r = this.bones[e];
      r && r.matrixWorld.copy(this.boneInverses[e]).invert();
    }
    for (let e = 0, t = this.bones.length; e < t; e++) {
      const r = this.bones[e];
      r && (r.parent && r.parent.isBone ? (r.matrix.copy(r.parent.matrixWorld).invert(), r.matrix.multiply(r.matrixWorld)) : r.matrix.copy(r.matrixWorld), r.matrix.decompose(r.position, r.quaternion, r.scale));
    }
  }
  update() {
    const e = this.bones, t = this.boneInverses, r = this.boneMatrices, i = this.boneTexture;
    for (let o = 0, l = e.length; o < l; o++) {
      const u = e[o] ? e[o].matrixWorld : F$;
      ak.multiplyMatrices(u, t[o]), ak.toArray(r, o * 16);
    }
    i !== null && (i.needsUpdate = !0);
  }
  clone() {
    return new XR(this.bones, this.boneInverses);
  }
  computeBoneTexture() {
    let e = Math.sqrt(this.bones.length * 4);
    e = a4(e), e = Math.max(e, 4);
    const t = new Float32Array(e * e * 4);
    t.set(this.boneMatrices);
    const r = new N1(t, e, e, Sd, vv);
    return r.needsUpdate = !0, this.boneMatrices = t, this.boneTexture = r, this.boneTextureSize = e, this;
  }
  getBoneByName(e) {
    for (let t = 0, r = this.bones.length; t < r; t++) {
      const i = this.bones[t];
      if (i.name === e)
        return i;
    }
  }
  dispose() {
    this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
  }
  fromJSON(e, t) {
    this.uuid = e.uuid;
    for (let r = 0, i = e.bones.length; r < i; r++) {
      const o = e.bones[r];
      let l = t[o];
      l === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", o), l = new wP()), this.bones.push(l), this.boneInverses.push(new ri().fromArray(e.boneInverses[r]));
    }
    return this.init(), this;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "Skeleton",
        generator: "Skeleton.toJSON"
      },
      bones: [],
      boneInverses: []
    };
    e.uuid = this.uuid;
    const t = this.bones, r = this.boneInverses;
    for (let i = 0, o = t.length; i < o; i++) {
      const l = t[i];
      e.bones.push(l.uuid);
      const u = r[i];
      e.boneInverses.push(u.toArray());
    }
    return e;
  }
}
class f_ extends mo {
  constructor(e, t, r, i = 1) {
    super(e, t, r), this.isInstancedBufferAttribute = !0, this.meshPerAttribute = i;
  }
  copy(e) {
    return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
  }
}
const y1 = /* @__PURE__ */ new ri(), ok = /* @__PURE__ */ new ri(), bC = [], sk = /* @__PURE__ */ new dm(), z$ = /* @__PURE__ */ new ri(), tT = /* @__PURE__ */ new Nl(), nT = /* @__PURE__ */ new pp();
class C4 extends Nl {
  constructor(e, t, r) {
    super(e, t), this.isInstancedMesh = !0, this.instanceMatrix = new f_(new Float32Array(r * 16), 16), this.instanceColor = null, this.count = r, this.boundingBox = null, this.boundingSphere = null;
    for (let i = 0; i < r; i++)
      this.setMatrixAt(i, z$);
  }
  computeBoundingBox() {
    const e = this.geometry, t = this.count;
    this.boundingBox === null && (this.boundingBox = new dm()), e.boundingBox === null && e.computeBoundingBox(), this.boundingBox.makeEmpty();
    for (let r = 0; r < t; r++)
      this.getMatrixAt(r, y1), sk.copy(e.boundingBox).applyMatrix4(y1), this.boundingBox.union(sk);
  }
  computeBoundingSphere() {
    const e = this.geometry, t = this.count;
    this.boundingSphere === null && (this.boundingSphere = new pp()), e.boundingSphere === null && e.computeBoundingSphere(), this.boundingSphere.makeEmpty();
    for (let r = 0; r < t; r++)
      this.getMatrixAt(r, y1), nT.copy(e.boundingSphere).applyMatrix4(y1), this.boundingSphere.union(nT);
  }
  copy(e, t) {
    return super.copy(e, t), this.instanceMatrix.copy(e.instanceMatrix), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
  }
  getColorAt(e, t) {
    t.fromArray(this.instanceColor.array, e * 3);
  }
  getMatrixAt(e, t) {
    t.fromArray(this.instanceMatrix.array, e * 16);
  }
  raycast(e, t) {
    const r = this.matrixWorld, i = this.count;
    if (tT.geometry = this.geometry, tT.material = this.material, tT.material !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), nT.copy(this.boundingSphere), nT.applyMatrix4(r), e.ray.intersectsSphere(nT) !== !1))
      for (let o = 0; o < i; o++) {
        this.getMatrixAt(o, y1), ok.multiplyMatrices(r, y1), tT.matrixWorld = ok, tT.raycast(e, bC);
        for (let l = 0, u = bC.length; l < u; l++) {
          const h = bC[l];
          h.instanceId = o, h.object = this, t.push(h);
        }
        bC.length = 0;
      }
  }
  setColorAt(e, t) {
    this.instanceColor === null && (this.instanceColor = new f_(new Float32Array(this.instanceMatrix.count * 3), 3)), t.toArray(this.instanceColor.array, e * 3);
  }
  setMatrixAt(e, t) {
    t.toArray(this.instanceMatrix.array, e * 16);
  }
  updateMorphTargets() {
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class Uf extends hc {
  constructor(e) {
    super(), this.isLineBasicMaterial = !0, this.type = "LineBasicMaterial", this.color = new Pn(16777215), this.map = null, this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.map = e.map, this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this.fog = e.fog, this;
  }
}
const lk = /* @__PURE__ */ new Re(), uk = /* @__PURE__ */ new Re(), ck = /* @__PURE__ */ new ri(), HD = /* @__PURE__ */ new v_(), TC = /* @__PURE__ */ new pp();
class m0 extends xa {
  constructor(e = new Ei(), t = new Uf()) {
    super(), this.isLine = !0, this.type = "Line", this.geometry = e, this.material = t, this.updateMorphTargets();
  }
  copy(e, t) {
    return super.copy(e, t), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const t = e.attributes.position, r = [0];
      for (let i = 1, o = t.count; i < o; i++)
        lk.fromBufferAttribute(t, i - 1), uk.fromBufferAttribute(t, i), r[i] = r[i - 1], r[i] += lk.distanceTo(uk);
      e.setAttribute("lineDistance", new nr(r, 1));
    } else
      console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
    return this;
  }
  raycast(e, t) {
    const r = this.geometry, i = this.matrixWorld, o = e.params.Line.threshold, l = r.drawRange;
    if (r.boundingSphere === null && r.computeBoundingSphere(), TC.copy(r.boundingSphere), TC.applyMatrix4(i), TC.radius += o, e.ray.intersectsSphere(TC) === !1)
      return;
    ck.copy(i).invert(), HD.copy(e.ray).applyMatrix4(ck);
    const u = o / ((this.scale.x + this.scale.y + this.scale.z) / 3), h = u * u, p = new Re(), y = new Re(), _ = new Re(), E = new Re(), w = this.isLineSegments ? 2 : 1, R = r.index, L = r.attributes.position;
    if (R !== null) {
      const A = Math.max(0, l.start), k = Math.min(R.count, l.start + l.count);
      for (let F = A, H = k - 1; F < H; F += w) {
        const B = R.getX(F), j = R.getX(F + 1);
        if (p.fromBufferAttribute(L, B), y.fromBufferAttribute(L, j), HD.distanceSqToSegment(p, y, E, _) > h)
          continue;
        E.applyMatrix4(this.matrixWorld);
        const ee = e.ray.origin.distanceTo(E);
        ee < e.near || ee > e.far || t.push({
          distance: ee,
          // What do we want? intersection point on the ray or on the segment??
          // point: raycaster.ray.at( distance ),
          point: _.clone().applyMatrix4(this.matrixWorld),
          index: F,
          face: null,
          faceIndex: null,
          object: this
        });
      }
    } else {
      const A = Math.max(0, l.start), k = Math.min(L.count, l.start + l.count);
      for (let F = A, H = k - 1; F < H; F += w) {
        if (p.fromBufferAttribute(L, F), y.fromBufferAttribute(L, F + 1), HD.distanceSqToSegment(p, y, E, _) > h)
          continue;
        E.applyMatrix4(this.matrixWorld);
        const j = e.ray.origin.distanceTo(E);
        j < e.near || j > e.far || t.push({
          distance: j,
          // What do we want? intersection point on the ray or on the segment??
          // point: raycaster.ray.at( distance ),
          point: _.clone().applyMatrix4(this.matrixWorld),
          index: F,
          face: null,
          faceIndex: null,
          object: this
        });
      }
    }
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes, r = Object.keys(t);
    if (r.length > 0) {
      const i = t[r[0]];
      if (i !== void 0) {
        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
        for (let o = 0, l = i.length; o < l; o++) {
          const u = i[o].name || String(o);
          this.morphTargetInfluences.push(0), this.morphTargetDictionary[u] = o;
        }
      }
    }
  }
}
const fk = /* @__PURE__ */ new Re(), dk = /* @__PURE__ */ new Re();
class Mv extends m0 {
  constructor(e, t) {
    super(e, t), this.isLineSegments = !0, this.type = "LineSegments";
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const t = e.attributes.position, r = [];
      for (let i = 0, o = t.count; i < o; i += 2)
        fk.fromBufferAttribute(t, i), dk.fromBufferAttribute(t, i + 1), r[i] = i === 0 ? 0 : r[i - 1], r[i + 1] = r[i] + fk.distanceTo(dk);
      e.setAttribute("lineDistance", new nr(r, 1));
    } else
      console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
    return this;
  }
}
class R4 extends m0 {
  constructor(e, t) {
    super(e, t), this.isLineLoop = !0, this.type = "LineLoop";
  }
}
class MP extends hc {
  constructor(e) {
    super(), this.isPointsMaterial = !0, this.type = "PointsMaterial", this.color = new Pn(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
  }
}
const hk = /* @__PURE__ */ new ri(), pO = /* @__PURE__ */ new v_(), wC = /* @__PURE__ */ new pp(), MC = /* @__PURE__ */ new Re();
class A4 extends xa {
  constructor(e = new Ei(), t = new MP()) {
    super(), this.isPoints = !0, this.type = "Points", this.geometry = e, this.material = t, this.updateMorphTargets();
  }
  copy(e, t) {
    return super.copy(e, t), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
  }
  raycast(e, t) {
    const r = this.geometry, i = this.matrixWorld, o = e.params.Points.threshold, l = r.drawRange;
    if (r.boundingSphere === null && r.computeBoundingSphere(), wC.copy(r.boundingSphere), wC.applyMatrix4(i), wC.radius += o, e.ray.intersectsSphere(wC) === !1)
      return;
    hk.copy(i).invert(), pO.copy(e.ray).applyMatrix4(hk);
    const u = o / ((this.scale.x + this.scale.y + this.scale.z) / 3), h = u * u, p = r.index, _ = r.attributes.position;
    if (p !== null) {
      const E = Math.max(0, l.start), w = Math.min(p.count, l.start + l.count);
      for (let R = E, U = w; R < U; R++) {
        const L = p.getX(R);
        MC.fromBufferAttribute(_, L), pk(MC, L, h, i, e, t, this);
      }
    } else {
      const E = Math.max(0, l.start), w = Math.min(_.count, l.start + l.count);
      for (let R = E, U = w; R < U; R++)
        MC.fromBufferAttribute(_, R), pk(MC, R, h, i, e, t, this);
    }
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes, r = Object.keys(t);
    if (r.length > 0) {
      const i = t[r[0]];
      if (i !== void 0) {
        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
        for (let o = 0, l = i.length; o < l; o++) {
          const u = i[o].name || String(o);
          this.morphTargetInfluences.push(0), this.morphTargetDictionary[u] = o;
        }
      }
    }
  }
}
function pk(n, e, t, r, i, o, l) {
  const u = pO.distanceSqToPoint(n);
  if (u < t) {
    const h = new Re();
    pO.closestPointToPoint(n, h), h.applyMatrix4(r);
    const p = i.ray.origin.distanceTo(h);
    if (p < i.near || p > i.far)
      return;
    o.push({
      distance: p,
      distanceToRay: Math.sqrt(u),
      point: h,
      index: e,
      face: null,
      object: l
    });
  }
}
class I$ extends Es {
  constructor(e, t, r, i, o, l, u, h, p) {
    super(e, t, r, i, o, l, u, h, p), this.isVideoTexture = !0, this.minFilter = l !== void 0 ? l : Ss, this.magFilter = o !== void 0 ? o : Ss, this.generateMipmaps = !1;
    const y = this;
    function _() {
      y.needsUpdate = !0, e.requestVideoFrameCallback(_);
    }
    "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(_);
  }
  clone() {
    return new this.constructor(this.image).copy(this);
  }
  update() {
    const e = this.image;
    "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
  }
}
class B$ extends Es {
  constructor(e, t) {
    super({ width: e, height: t }), this.isFramebufferTexture = !0, this.magFilter = pl, this.minFilter = pl, this.generateMipmaps = !1, this.needsUpdate = !0;
  }
}
class qR extends Es {
  constructor(e, t, r, i, o, l, u, h, p, y, _, E) {
    super(null, l, u, h, p, y, i, o, _, E), this.isCompressedTexture = !0, this.image = { width: t, height: r }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
  }
}
class H$ extends qR {
  constructor(e, t, r, i, o, l) {
    super(e, t, r, o, l), this.isCompressedArrayTexture = !0, this.image.depth = i, this.wrapR = Vc;
  }
}
class V$ extends qR {
  constructor(e, t, r) {
    super(void 0, e[0].width, e[0].height, t, r, Bg), this.isCompressedCubeTexture = !0, this.isCubeTexture = !0, this.image = e;
  }
}
class G$ extends Es {
  constructor(e, t, r, i, o, l, u, h, p) {
    super(e, t, r, i, o, l, u, h, p), this.isCanvasTexture = !0, this.needsUpdate = !0;
  }
}
class hm {
  constructor() {
    this.type = "Curve", this.arcLengthDivisions = 200;
  }
  // Virtual base class method to overwrite and implement in subclasses
  //	- t [0 .. 1]
  getPoint() {
    return console.warn("THREE.Curve: .getPoint() not implemented."), null;
  }
  // Get point at relative position in curve according to arc length
  // - u [0 .. 1]
  getPointAt(e, t) {
    const r = this.getUtoTmapping(e);
    return this.getPoint(r, t);
  }
  // Get sequence of points using getPoint( t )
  getPoints(e = 5) {
    const t = [];
    for (let r = 0; r <= e; r++)
      t.push(this.getPoint(r / e));
    return t;
  }
  // Get sequence of points using getPointAt( u )
  getSpacedPoints(e = 5) {
    const t = [];
    for (let r = 0; r <= e; r++)
      t.push(this.getPointAt(r / e));
    return t;
  }
  // Get total curve arc length
  getLength() {
    const e = this.getLengths();
    return e[e.length - 1];
  }
  // Get list of cumulative segment lengths
  getLengths(e = this.arcLengthDivisions) {
    if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate)
      return this.cacheArcLengths;
    this.needsUpdate = !1;
    const t = [];
    let r, i = this.getPoint(0), o = 0;
    t.push(0);
    for (let l = 1; l <= e; l++)
      r = this.getPoint(l / e), o += r.distanceTo(i), t.push(o), i = r;
    return this.cacheArcLengths = t, t;
  }
  updateArcLengths() {
    this.needsUpdate = !0, this.getLengths();
  }
  // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
  getUtoTmapping(e, t) {
    const r = this.getLengths();
    let i = 0;
    const o = r.length;
    let l;
    t ? l = t : l = e * r[o - 1];
    let u = 0, h = o - 1, p;
    for (; u <= h; )
      if (i = Math.floor(u + (h - u) / 2), p = r[i] - l, p < 0)
        u = i + 1;
      else if (p > 0)
        h = i - 1;
      else {
        h = i;
        break;
      }
    if (i = h, r[i] === l)
      return i / (o - 1);
    const y = r[i], E = r[i + 1] - y, w = (l - y) / E;
    return (i + w) / (o - 1);
  }
  // Returns a unit vector tangent at t
  // In case any sub curve does not implement its tangent derivation,
  // 2 points a small delta apart will be used to find its gradient
  // which seems to give a reasonable approximation
  getTangent(e, t) {
    let i = e - 1e-4, o = e + 1e-4;
    i < 0 && (i = 0), o > 1 && (o = 1);
    const l = this.getPoint(i), u = this.getPoint(o), h = t || (l.isVector2 ? new $t() : new Re());
    return h.copy(u).sub(l).normalize(), h;
  }
  getTangentAt(e, t) {
    const r = this.getUtoTmapping(e);
    return this.getTangent(r, t);
  }
  computeFrenetFrames(e, t) {
    const r = new Re(), i = [], o = [], l = [], u = new Re(), h = new ri();
    for (let w = 0; w <= e; w++) {
      const R = w / e;
      i[w] = this.getTangentAt(R, new Re());
    }
    o[0] = new Re(), l[0] = new Re();
    let p = Number.MAX_VALUE;
    const y = Math.abs(i[0].x), _ = Math.abs(i[0].y), E = Math.abs(i[0].z);
    y <= p && (p = y, r.set(1, 0, 0)), _ <= p && (p = _, r.set(0, 1, 0)), E <= p && r.set(0, 0, 1), u.crossVectors(i[0], r).normalize(), o[0].crossVectors(i[0], u), l[0].crossVectors(i[0], o[0]);
    for (let w = 1; w <= e; w++) {
      if (o[w] = o[w - 1].clone(), l[w] = l[w - 1].clone(), u.crossVectors(i[w - 1], i[w]), u.length() > Number.EPSILON) {
        u.normalize();
        const R = Math.acos(Gs(i[w - 1].dot(i[w]), -1, 1));
        o[w].applyMatrix4(h.makeRotationAxis(u, R));
      }
      l[w].crossVectors(i[w], o[w]);
    }
    if (t === !0) {
      let w = Math.acos(Gs(o[0].dot(o[e]), -1, 1));
      w /= e, i[0].dot(u.crossVectors(o[0], o[e])) > 0 && (w = -w);
      for (let R = 1; R <= e; R++)
        o[R].applyMatrix4(h.makeRotationAxis(i[R], w * R)), l[R].crossVectors(i[R], o[R]);
    }
    return {
      tangents: i,
      normals: o,
      binormals: l
    };
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.arcLengthDivisions = e.arcLengthDivisions, this;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "Curve",
        generator: "Curve.toJSON"
      }
    };
    return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
  }
  fromJSON(e) {
    return this.arcLengthDivisions = e.arcLengthDivisions, this;
  }
}
class KR extends hm {
  constructor(e = 0, t = 0, r = 1, i = 1, o = 0, l = Math.PI * 2, u = !1, h = 0) {
    super(), this.isEllipseCurve = !0, this.type = "EllipseCurve", this.aX = e, this.aY = t, this.xRadius = r, this.yRadius = i, this.aStartAngle = o, this.aEndAngle = l, this.aClockwise = u, this.aRotation = h;
  }
  getPoint(e, t) {
    const r = t || new $t(), i = Math.PI * 2;
    let o = this.aEndAngle - this.aStartAngle;
    const l = Math.abs(o) < Number.EPSILON;
    for (; o < 0; )
      o += i;
    for (; o > i; )
      o -= i;
    o < Number.EPSILON && (l ? o = 0 : o = i), this.aClockwise === !0 && !l && (o === i ? o = -i : o = o - i);
    const u = this.aStartAngle + e * o;
    let h = this.aX + this.xRadius * Math.cos(u), p = this.aY + this.yRadius * Math.sin(u);
    if (this.aRotation !== 0) {
      const y = Math.cos(this.aRotation), _ = Math.sin(this.aRotation), E = h - this.aX, w = p - this.aY;
      h = E * y - w * _ + this.aX, p = E * _ + w * y + this.aY;
    }
    return r.set(h, p);
  }
  copy(e) {
    return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
  }
}
class D4 extends KR {
  constructor(e, t, r, i, o, l) {
    super(e, t, r, r, i, o, l), this.isArcCurve = !0, this.type = "ArcCurve";
  }
}
function CP() {
  let n = 0, e = 0, t = 0, r = 0;
  function i(o, l, u, h) {
    n = o, e = u, t = -3 * o + 3 * l - 2 * u - h, r = 2 * o - 2 * l + u + h;
  }
  return {
    initCatmullRom: function(o, l, u, h, p) {
      i(l, u, p * (u - o), p * (h - l));
    },
    initNonuniformCatmullRom: function(o, l, u, h, p, y, _) {
      let E = (l - o) / p - (u - o) / (p + y) + (u - l) / y, w = (u - l) / y - (h - l) / (y + _) + (h - u) / _;
      E *= y, w *= y, i(l, u, E, w);
    },
    calc: function(o) {
      const l = o * o, u = l * o;
      return n + e * o + t * l + r * u;
    }
  };
}
const CC = /* @__PURE__ */ new Re(), VD = /* @__PURE__ */ new CP(), GD = /* @__PURE__ */ new CP(), WD = /* @__PURE__ */ new CP();
class L4 extends hm {
  constructor(e = [], t = !1, r = "centripetal", i = 0.5) {
    super(), this.isCatmullRomCurve3 = !0, this.type = "CatmullRomCurve3", this.points = e, this.closed = t, this.curveType = r, this.tension = i;
  }
  getPoint(e, t = new Re()) {
    const r = t, i = this.points, o = i.length, l = (o - (this.closed ? 0 : 1)) * e;
    let u = Math.floor(l), h = l - u;
    this.closed ? u += u > 0 ? 0 : (Math.floor(Math.abs(u) / o) + 1) * o : h === 0 && u === o - 1 && (u = o - 2, h = 1);
    let p, y;
    this.closed || u > 0 ? p = i[(u - 1) % o] : (CC.subVectors(i[0], i[1]).add(i[0]), p = CC);
    const _ = i[u % o], E = i[(u + 1) % o];
    if (this.closed || u + 2 < o ? y = i[(u + 2) % o] : (CC.subVectors(i[o - 1], i[o - 2]).add(i[o - 1]), y = CC), this.curveType === "centripetal" || this.curveType === "chordal") {
      const w = this.curveType === "chordal" ? 0.5 : 0.25;
      let R = Math.pow(p.distanceToSquared(_), w), U = Math.pow(_.distanceToSquared(E), w), L = Math.pow(E.distanceToSquared(y), w);
      U < 1e-4 && (U = 1), R < 1e-4 && (R = U), L < 1e-4 && (L = U), VD.initNonuniformCatmullRom(p.x, _.x, E.x, y.x, R, U, L), GD.initNonuniformCatmullRom(p.y, _.y, E.y, y.y, R, U, L), WD.initNonuniformCatmullRom(p.z, _.z, E.z, y.z, R, U, L);
    } else
      this.curveType === "catmullrom" && (VD.initCatmullRom(p.x, _.x, E.x, y.x, this.tension), GD.initCatmullRom(p.y, _.y, E.y, y.y, this.tension), WD.initCatmullRom(p.z, _.z, E.z, y.z, this.tension));
    return r.set(
      VD.calc(h),
      GD.calc(h),
      WD.calc(h)
    ), r;
  }
  copy(e) {
    super.copy(e), this.points = [];
    for (let t = 0, r = e.points.length; t < r; t++) {
      const i = e.points[t];
      this.points.push(i.clone());
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let t = 0, r = this.points.length; t < r; t++) {
      const i = this.points[t];
      e.points.push(i.toArray());
    }
    return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
  }
  fromJSON(e) {
    super.fromJSON(e), this.points = [];
    for (let t = 0, r = e.points.length; t < r; t++) {
      const i = e.points[t];
      this.points.push(new Re().fromArray(i));
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
  }
}
function mk(n, e, t, r, i) {
  const o = (r - e) * 0.5, l = (i - t) * 0.5, u = n * n, h = n * u;
  return (2 * t - 2 * r + o + l) * h + (-3 * t + 3 * r - 2 * o - l) * u + o * n + t;
}
function W$(n, e) {
  const t = 1 - n;
  return t * t * e;
}
function j$(n, e) {
  return 2 * (1 - n) * n * e;
}
function $$(n, e) {
  return n * n * e;
}
function ST(n, e, t, r) {
  return W$(n, e) + j$(n, t) + $$(n, r);
}
function Y$(n, e) {
  const t = 1 - n;
  return t * t * t * e;
}
function X$(n, e) {
  const t = 1 - n;
  return 3 * t * t * n * e;
}
function q$(n, e) {
  return 3 * (1 - n) * n * n * e;
}
function K$(n, e) {
  return n * n * n * e;
}
function _T(n, e, t, r, i) {
  return Y$(n, e) + X$(n, t) + q$(n, r) + K$(n, i);
}
class RP extends hm {
  constructor(e = new $t(), t = new $t(), r = new $t(), i = new $t()) {
    super(), this.isCubicBezierCurve = !0, this.type = "CubicBezierCurve", this.v0 = e, this.v1 = t, this.v2 = r, this.v3 = i;
  }
  getPoint(e, t = new $t()) {
    const r = t, i = this.v0, o = this.v1, l = this.v2, u = this.v3;
    return r.set(
      _T(e, i.x, o.x, l.x, u.x),
      _T(e, i.y, o.y, l.y, u.y)
    ), r;
  }
  copy(e) {
    return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
  }
}
class O4 extends hm {
  constructor(e = new Re(), t = new Re(), r = new Re(), i = new Re()) {
    super(), this.isCubicBezierCurve3 = !0, this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = r, this.v3 = i;
  }
  getPoint(e, t = new Re()) {
    const r = t, i = this.v0, o = this.v1, l = this.v2, u = this.v3;
    return r.set(
      _T(e, i.x, o.x, l.x, u.x),
      _T(e, i.y, o.y, l.y, u.y),
      _T(e, i.z, o.z, l.z, u.z)
    ), r;
  }
  copy(e) {
    return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
  }
}
class QR extends hm {
  constructor(e = new $t(), t = new $t()) {
    super(), this.isLineCurve = !0, this.type = "LineCurve", this.v1 = e, this.v2 = t;
  }
  getPoint(e, t = new $t()) {
    const r = t;
    return e === 1 ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;
  }
  // Line curve is linear, so we can overwrite default getPointAt
  getPointAt(e, t) {
    return this.getPoint(e, t);
  }
  getTangent(e, t = new $t()) {
    return t.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, t) {
    return this.getTangent(e, t);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }
}
class P4 extends hm {
  constructor(e = new Re(), t = new Re()) {
    super(), this.isLineCurve3 = !0, this.type = "LineCurve3", this.v1 = e, this.v2 = t;
  }
  getPoint(e, t = new Re()) {
    const r = t;
    return e === 1 ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;
  }
  // Line curve is linear, so we can overwrite default getPointAt
  getPointAt(e, t) {
    return this.getPoint(e, t);
  }
  getTangent(e, t = new Re()) {
    return t.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, t) {
    return this.getTangent(e, t);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }
}
class AP extends hm {
  constructor(e = new $t(), t = new $t(), r = new $t()) {
    super(), this.isQuadraticBezierCurve = !0, this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = t, this.v2 = r;
  }
  getPoint(e, t = new $t()) {
    const r = t, i = this.v0, o = this.v1, l = this.v2;
    return r.set(
      ST(e, i.x, o.x, l.x),
      ST(e, i.y, o.y, l.y)
    ), r;
  }
  copy(e) {
    return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }
}
class DP extends hm {
  constructor(e = new Re(), t = new Re(), r = new Re()) {
    super(), this.isQuadraticBezierCurve3 = !0, this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = r;
  }
  getPoint(e, t = new Re()) {
    const r = t, i = this.v0, o = this.v1, l = this.v2;
    return r.set(
      ST(e, i.x, o.x, l.x),
      ST(e, i.y, o.y, l.y),
      ST(e, i.z, o.z, l.z)
    ), r;
  }
  copy(e) {
    return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }
}
class LP extends hm {
  constructor(e = []) {
    super(), this.isSplineCurve = !0, this.type = "SplineCurve", this.points = e;
  }
  getPoint(e, t = new $t()) {
    const r = t, i = this.points, o = (i.length - 1) * e, l = Math.floor(o), u = o - l, h = i[l === 0 ? l : l - 1], p = i[l], y = i[l > i.length - 2 ? i.length - 1 : l + 1], _ = i[l > i.length - 3 ? i.length - 1 : l + 2];
    return r.set(
      mk(u, h.x, p.x, y.x, _.x),
      mk(u, h.y, p.y, y.y, _.y)
    ), r;
  }
  copy(e) {
    super.copy(e), this.points = [];
    for (let t = 0, r = e.points.length; t < r; t++) {
      const i = e.points[t];
      this.points.push(i.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let t = 0, r = this.points.length; t < r; t++) {
      const i = this.points[t];
      e.points.push(i.toArray());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), this.points = [];
    for (let t = 0, r = e.points.length; t < r; t++) {
      const i = e.points[t];
      this.points.push(new $t().fromArray(i));
    }
    return this;
  }
}
var OP = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ArcCurve: D4,
  CatmullRomCurve3: L4,
  CubicBezierCurve: RP,
  CubicBezierCurve3: O4,
  EllipseCurve: KR,
  LineCurve: QR,
  LineCurve3: P4,
  QuadraticBezierCurve: AP,
  QuadraticBezierCurve3: DP,
  SplineCurve: LP
});
class U4 extends hm {
  constructor() {
    super(), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
  }
  add(e) {
    this.curves.push(e);
  }
  closePath() {
    const e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new QR(t, e));
  }
  // To get accurate point with reference to
  // entire path distance at time t,
  // following has to be done:
  // 1. Length of each sub path have to be known
  // 2. Locate and identify type of curve
  // 3. Get t for the curve
  // 4. Return curve.getPointAt(t')
  getPoint(e, t) {
    const r = e * this.getLength(), i = this.getCurveLengths();
    let o = 0;
    for (; o < i.length; ) {
      if (i[o] >= r) {
        const l = i[o] - r, u = this.curves[o], h = u.getLength(), p = h === 0 ? 0 : 1 - l / h;
        return u.getPointAt(p, t);
      }
      o++;
    }
    return null;
  }
  // We cannot use the default THREE.Curve getPoint() with getLength() because in
  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
  // getPoint() depends on getLength
  getLength() {
    const e = this.getCurveLengths();
    return e[e.length - 1];
  }
  // cacheLengths must be recalculated.
  updateArcLengths() {
    this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
  }
  // Compute lengths and cache them
  // We cannot overwrite getLengths() because UtoT mapping uses it.
  getCurveLengths() {
    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
      return this.cacheLengths;
    const e = [];
    let t = 0;
    for (let r = 0, i = this.curves.length; r < i; r++)
      t += this.curves[r].getLength(), e.push(t);
    return this.cacheLengths = e, e;
  }
  getSpacedPoints(e = 40) {
    const t = [];
    for (let r = 0; r <= e; r++)
      t.push(this.getPoint(r / e));
    return this.autoClose && t.push(t[0]), t;
  }
  getPoints(e = 12) {
    const t = [];
    let r;
    for (let i = 0, o = this.curves; i < o.length; i++) {
      const l = o[i], u = l.isEllipseCurve ? e * 2 : l.isLineCurve || l.isLineCurve3 ? 1 : l.isSplineCurve ? e * l.points.length : e, h = l.getPoints(u);
      for (let p = 0; p < h.length; p++) {
        const y = h[p];
        r && r.equals(y) || (t.push(y), r = y);
      }
    }
    return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]), t;
  }
  copy(e) {
    super.copy(e), this.curves = [];
    for (let t = 0, r = e.curves.length; t < r; t++) {
      const i = e.curves[t];
      this.curves.push(i.clone());
    }
    return this.autoClose = e.autoClose, this;
  }
  toJSON() {
    const e = super.toJSON();
    e.autoClose = this.autoClose, e.curves = [];
    for (let t = 0, r = this.curves.length; t < r; t++) {
      const i = this.curves[t];
      e.curves.push(i.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
    for (let t = 0, r = e.curves.length; t < r; t++) {
      const i = e.curves[t];
      this.curves.push(new OP[i.type]().fromJSON(i));
    }
    return this;
  }
}
class kT extends U4 {
  constructor(e) {
    super(), this.type = "Path", this.currentPoint = new $t(), e && this.setFromPoints(e);
  }
  setFromPoints(e) {
    this.moveTo(e[0].x, e[0].y);
    for (let t = 1, r = e.length; t < r; t++)
      this.lineTo(e[t].x, e[t].y);
    return this;
  }
  moveTo(e, t) {
    return this.currentPoint.set(e, t), this;
  }
  lineTo(e, t) {
    const r = new QR(this.currentPoint.clone(), new $t(e, t));
    return this.curves.push(r), this.currentPoint.set(e, t), this;
  }
  quadraticCurveTo(e, t, r, i) {
    const o = new AP(
      this.currentPoint.clone(),
      new $t(e, t),
      new $t(r, i)
    );
    return this.curves.push(o), this.currentPoint.set(r, i), this;
  }
  bezierCurveTo(e, t, r, i, o, l) {
    const u = new RP(
      this.currentPoint.clone(),
      new $t(e, t),
      new $t(r, i),
      new $t(o, l)
    );
    return this.curves.push(u), this.currentPoint.set(o, l), this;
  }
  splineThru(e) {
    const t = [this.currentPoint.clone()].concat(e), r = new LP(t);
    return this.curves.push(r), this.currentPoint.copy(e[e.length - 1]), this;
  }
  arc(e, t, r, i, o, l) {
    const u = this.currentPoint.x, h = this.currentPoint.y;
    return this.absarc(
      e + u,
      t + h,
      r,
      i,
      o,
      l
    ), this;
  }
  absarc(e, t, r, i, o, l) {
    return this.absellipse(e, t, r, r, i, o, l), this;
  }
  ellipse(e, t, r, i, o, l, u, h) {
    const p = this.currentPoint.x, y = this.currentPoint.y;
    return this.absellipse(e + p, t + y, r, i, o, l, u, h), this;
  }
  absellipse(e, t, r, i, o, l, u, h) {
    const p = new KR(e, t, r, i, o, l, u, h);
    if (this.curves.length > 0) {
      const _ = p.getPoint(0);
      _.equals(this.currentPoint) || this.lineTo(_.x, _.y);
    }
    this.curves.push(p);
    const y = p.getPoint(1);
    return this.currentPoint.copy(y), this;
  }
  copy(e) {
    return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.currentPoint = this.currentPoint.toArray(), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
  }
}
class ew extends Ei {
  constructor(e = [new $t(0, -0.5), new $t(0.5, 0), new $t(0, 0.5)], t = 12, r = 0, i = Math.PI * 2) {
    super(), this.type = "LatheGeometry", this.parameters = {
      points: e,
      segments: t,
      phiStart: r,
      phiLength: i
    }, t = Math.floor(t), i = Gs(i, 0, Math.PI * 2);
    const o = [], l = [], u = [], h = [], p = [], y = 1 / t, _ = new Re(), E = new $t(), w = new Re(), R = new Re(), U = new Re();
    let L = 0, A = 0;
    for (let k = 0; k <= e.length - 1; k++)
      switch (k) {
        case 0:
          L = e[k + 1].x - e[k].x, A = e[k + 1].y - e[k].y, w.x = A * 1, w.y = -L, w.z = A * 0, U.copy(w), w.normalize(), h.push(w.x, w.y, w.z);
          break;
        case e.length - 1:
          h.push(U.x, U.y, U.z);
          break;
        default:
          L = e[k + 1].x - e[k].x, A = e[k + 1].y - e[k].y, w.x = A * 1, w.y = -L, w.z = A * 0, R.copy(w), w.x += U.x, w.y += U.y, w.z += U.z, w.normalize(), h.push(w.x, w.y, w.z), U.copy(R);
      }
    for (let k = 0; k <= t; k++) {
      const F = r + k * y * i, H = Math.sin(F), B = Math.cos(F);
      for (let j = 0; j <= e.length - 1; j++) {
        _.x = e[j].x * H, _.y = e[j].y, _.z = e[j].x * B, l.push(_.x, _.y, _.z), E.x = k / t, E.y = j / (e.length - 1), u.push(E.x, E.y);
        const Y = h[3 * j + 0] * H, ee = h[3 * j + 1], Z = h[3 * j + 0] * B;
        p.push(Y, ee, Z);
      }
    }
    for (let k = 0; k < t; k++)
      for (let F = 0; F < e.length - 1; F++) {
        const H = F + k * e.length, B = H, j = H + e.length, Y = H + e.length + 1, ee = H + 1;
        o.push(B, j, ee), o.push(Y, ee, j);
      }
    this.setIndex(o), this.setAttribute("position", new nr(l, 3)), this.setAttribute("uv", new nr(u, 2)), this.setAttribute("normal", new nr(p, 3));
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new ew(e.points, e.segments, e.phiStart, e.phiLength);
  }
}
class ZR extends ew {
  constructor(e = 1, t = 1, r = 4, i = 8) {
    const o = new kT();
    o.absarc(0, -t / 2, e, Math.PI * 1.5, 0), o.absarc(0, t / 2, e, 0, Math.PI * 0.5), super(o.getPoints(r), i), this.type = "CapsuleGeometry", this.parameters = {
      radius: e,
      length: t,
      capSegments: r,
      radialSegments: i
    };
  }
  static fromJSON(e) {
    return new ZR(e.radius, e.length, e.capSegments, e.radialSegments);
  }
}
class JR extends Ei {
  constructor(e = 1, t = 32, r = 0, i = Math.PI * 2) {
    super(), this.type = "CircleGeometry", this.parameters = {
      radius: e,
      segments: t,
      thetaStart: r,
      thetaLength: i
    }, t = Math.max(3, t);
    const o = [], l = [], u = [], h = [], p = new Re(), y = new $t();
    l.push(0, 0, 0), u.push(0, 0, 1), h.push(0.5, 0.5);
    for (let _ = 0, E = 3; _ <= t; _++, E += 3) {
      const w = r + _ / t * i;
      p.x = e * Math.cos(w), p.y = e * Math.sin(w), l.push(p.x, p.y, p.z), u.push(0, 0, 1), y.x = (l[E] / e + 1) / 2, y.y = (l[E + 1] / e + 1) / 2, h.push(y.x, y.y);
    }
    for (let _ = 1; _ <= t; _++)
      o.push(_, _ + 1, 0);
    this.setIndex(o), this.setAttribute("position", new nr(l, 3)), this.setAttribute("normal", new nr(u, 3)), this.setAttribute("uv", new nr(h, 2));
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new JR(e.radius, e.segments, e.thetaStart, e.thetaLength);
  }
}
class X1 extends Ei {
  constructor(e = 1, t = 1, r = 1, i = 32, o = 1, l = !1, u = 0, h = Math.PI * 2) {
    super(), this.type = "CylinderGeometry", this.parameters = {
      radiusTop: e,
      radiusBottom: t,
      height: r,
      radialSegments: i,
      heightSegments: o,
      openEnded: l,
      thetaStart: u,
      thetaLength: h
    };
    const p = this;
    i = Math.floor(i), o = Math.floor(o);
    const y = [], _ = [], E = [], w = [];
    let R = 0;
    const U = [], L = r / 2;
    let A = 0;
    k(), l === !1 && (e > 0 && F(!0), t > 0 && F(!1)), this.setIndex(y), this.setAttribute("position", new nr(_, 3)), this.setAttribute("normal", new nr(E, 3)), this.setAttribute("uv", new nr(w, 2));
    function k() {
      const H = new Re(), B = new Re();
      let j = 0;
      const Y = (t - e) / r;
      for (let ee = 0; ee <= o; ee++) {
        const Z = [], K = ee / o, fe = K * (t - e) + e;
        for (let se = 0; se <= i; se++) {
          const he = se / i, me = he * h + u, Ee = Math.sin(me), be = Math.cos(me);
          B.x = fe * Ee, B.y = -K * r + L, B.z = fe * be, _.push(B.x, B.y, B.z), H.set(Ee, Y, be).normalize(), E.push(H.x, H.y, H.z), w.push(he, 1 - K), Z.push(R++);
        }
        U.push(Z);
      }
      for (let ee = 0; ee < i; ee++)
        for (let Z = 0; Z < o; Z++) {
          const K = U[Z][ee], fe = U[Z + 1][ee], se = U[Z + 1][ee + 1], he = U[Z][ee + 1];
          y.push(K, fe, he), y.push(fe, se, he), j += 6;
        }
      p.addGroup(A, j, 0), A += j;
    }
    function F(H) {
      const B = R, j = new $t(), Y = new Re();
      let ee = 0;
      const Z = H === !0 ? e : t, K = H === !0 ? 1 : -1;
      for (let se = 1; se <= i; se++)
        _.push(0, L * K, 0), E.push(0, K, 0), w.push(0.5, 0.5), R++;
      const fe = R;
      for (let se = 0; se <= i; se++) {
        const me = se / i * h + u, Ee = Math.cos(me), be = Math.sin(me);
        Y.x = Z * be, Y.y = L * K, Y.z = Z * Ee, _.push(Y.x, Y.y, Y.z), E.push(0, K, 0), j.x = Ee * 0.5 + 0.5, j.y = be * 0.5 * K + 0.5, w.push(j.x, j.y), R++;
      }
      for (let se = 0; se < i; se++) {
        const he = B + se, me = fe + se;
        H === !0 ? y.push(me, me + 1, he) : y.push(me + 1, me, he), ee += 3;
      }
      p.addGroup(A, ee, H === !0 ? 1 : 2), A += ee;
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new X1(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
  }
}
class e2 extends X1 {
  constructor(e = 1, t = 1, r = 32, i = 1, o = !1, l = 0, u = Math.PI * 2) {
    super(0, e, t, r, i, o, l, u), this.type = "ConeGeometry", this.parameters = {
      radius: e,
      height: t,
      radialSegments: r,
      heightSegments: i,
      openEnded: o,
      thetaStart: l,
      thetaLength: u
    };
  }
  static fromJSON(e) {
    return new e2(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
  }
}
class E0 extends Ei {
  constructor(e = [], t = [], r = 1, i = 0) {
    super(), this.type = "PolyhedronGeometry", this.parameters = {
      vertices: e,
      indices: t,
      radius: r,
      detail: i
    };
    const o = [], l = [];
    u(i), p(r), y(), this.setAttribute("position", new nr(o, 3)), this.setAttribute("normal", new nr(o.slice(), 3)), this.setAttribute("uv", new nr(l, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
    function u(k) {
      const F = new Re(), H = new Re(), B = new Re();
      for (let j = 0; j < t.length; j += 3)
        w(t[j + 0], F), w(t[j + 1], H), w(t[j + 2], B), h(F, H, B, k);
    }
    function h(k, F, H, B) {
      const j = B + 1, Y = [];
      for (let ee = 0; ee <= j; ee++) {
        Y[ee] = [];
        const Z = k.clone().lerp(H, ee / j), K = F.clone().lerp(H, ee / j), fe = j - ee;
        for (let se = 0; se <= fe; se++)
          se === 0 && ee === j ? Y[ee][se] = Z : Y[ee][se] = Z.clone().lerp(K, se / fe);
      }
      for (let ee = 0; ee < j; ee++)
        for (let Z = 0; Z < 2 * (j - ee) - 1; Z++) {
          const K = Math.floor(Z / 2);
          Z % 2 === 0 ? (E(Y[ee][K + 1]), E(Y[ee + 1][K]), E(Y[ee][K])) : (E(Y[ee][K + 1]), E(Y[ee + 1][K + 1]), E(Y[ee + 1][K]));
        }
    }
    function p(k) {
      const F = new Re();
      for (let H = 0; H < o.length; H += 3)
        F.x = o[H + 0], F.y = o[H + 1], F.z = o[H + 2], F.normalize().multiplyScalar(k), o[H + 0] = F.x, o[H + 1] = F.y, o[H + 2] = F.z;
    }
    function y() {
      const k = new Re();
      for (let F = 0; F < o.length; F += 3) {
        k.x = o[F + 0], k.y = o[F + 1], k.z = o[F + 2];
        const H = L(k) / 2 / Math.PI + 0.5, B = A(k) / Math.PI + 0.5;
        l.push(H, 1 - B);
      }
      R(), _();
    }
    function _() {
      for (let k = 0; k < l.length; k += 6) {
        const F = l[k + 0], H = l[k + 2], B = l[k + 4], j = Math.max(F, H, B), Y = Math.min(F, H, B);
        j > 0.9 && Y < 0.1 && (F < 0.2 && (l[k + 0] += 1), H < 0.2 && (l[k + 2] += 1), B < 0.2 && (l[k + 4] += 1));
      }
    }
    function E(k) {
      o.push(k.x, k.y, k.z);
    }
    function w(k, F) {
      const H = k * 3;
      F.x = e[H + 0], F.y = e[H + 1], F.z = e[H + 2];
    }
    function R() {
      const k = new Re(), F = new Re(), H = new Re(), B = new Re(), j = new $t(), Y = new $t(), ee = new $t();
      for (let Z = 0, K = 0; Z < o.length; Z += 9, K += 6) {
        k.set(o[Z + 0], o[Z + 1], o[Z + 2]), F.set(o[Z + 3], o[Z + 4], o[Z + 5]), H.set(o[Z + 6], o[Z + 7], o[Z + 8]), j.set(l[K + 0], l[K + 1]), Y.set(l[K + 2], l[K + 3]), ee.set(l[K + 4], l[K + 5]), B.copy(k).add(F).add(H).divideScalar(3);
        const fe = L(B);
        U(j, K + 0, k, fe), U(Y, K + 2, F, fe), U(ee, K + 4, H, fe);
      }
    }
    function U(k, F, H, B) {
      B < 0 && k.x === 1 && (l[F] = k.x - 1), H.x === 0 && H.z === 0 && (l[F] = B / 2 / Math.PI + 0.5);
    }
    function L(k) {
      return Math.atan2(k.z, -k.x);
    }
    function A(k) {
      return Math.atan2(-k.y, Math.sqrt(k.x * k.x + k.z * k.z));
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new E0(e.vertices, e.indices, e.radius, e.details);
  }
}
class t2 extends E0 {
  constructor(e = 1, t = 0) {
    const r = (1 + Math.sqrt(5)) / 2, i = 1 / r, o = [
      // (±1, ±1, ±1)
      -1,
      -1,
      -1,
      -1,
      -1,
      1,
      -1,
      1,
      -1,
      -1,
      1,
      1,
      1,
      -1,
      -1,
      1,
      -1,
      1,
      1,
      1,
      -1,
      1,
      1,
      1,
      // (0, ±1/φ, ±φ)
      0,
      -i,
      -r,
      0,
      -i,
      r,
      0,
      i,
      -r,
      0,
      i,
      r,
      // (±1/φ, ±φ, 0)
      -i,
      -r,
      0,
      -i,
      r,
      0,
      i,
      -r,
      0,
      i,
      r,
      0,
      // (±φ, 0, ±1/φ)
      -r,
      0,
      -i,
      r,
      0,
      -i,
      -r,
      0,
      i,
      r,
      0,
      i
    ], l = [
      3,
      11,
      7,
      3,
      7,
      15,
      3,
      15,
      13,
      7,
      19,
      17,
      7,
      17,
      6,
      7,
      6,
      15,
      17,
      4,
      8,
      17,
      8,
      10,
      17,
      10,
      6,
      8,
      0,
      16,
      8,
      16,
      2,
      8,
      2,
      10,
      0,
      12,
      1,
      0,
      1,
      18,
      0,
      18,
      16,
      6,
      10,
      2,
      6,
      2,
      13,
      6,
      13,
      15,
      2,
      16,
      18,
      2,
      18,
      3,
      2,
      3,
      13,
      18,
      1,
      9,
      18,
      9,
      11,
      18,
      11,
      3,
      4,
      14,
      12,
      4,
      12,
      0,
      4,
      0,
      8,
      11,
      9,
      5,
      11,
      5,
      19,
      11,
      19,
      7,
      19,
      5,
      14,
      19,
      14,
      4,
      19,
      4,
      17,
      1,
      12,
      14,
      1,
      14,
      5,
      1,
      5,
      9
    ];
    super(o, l, e, t), this.type = "DodecahedronGeometry", this.parameters = {
      radius: e,
      detail: t
    };
  }
  static fromJSON(e) {
    return new t2(e.radius, e.detail);
  }
}
const RC = /* @__PURE__ */ new Re(), AC = /* @__PURE__ */ new Re(), jD = /* @__PURE__ */ new Re(), DC = /* @__PURE__ */ new yd();
class N4 extends Ei {
  constructor(e = null, t = 1) {
    if (super(), this.type = "EdgesGeometry", this.parameters = {
      geometry: e,
      thresholdAngle: t
    }, e !== null) {
      const i = Math.pow(10, 4), o = Math.cos(r_ * t), l = e.getIndex(), u = e.getAttribute("position"), h = l ? l.count : u.count, p = [0, 0, 0], y = ["a", "b", "c"], _ = new Array(3), E = {}, w = [];
      for (let R = 0; R < h; R += 3) {
        l ? (p[0] = l.getX(R), p[1] = l.getX(R + 1), p[2] = l.getX(R + 2)) : (p[0] = R, p[1] = R + 1, p[2] = R + 2);
        const { a: U, b: L, c: A } = DC;
        if (U.fromBufferAttribute(u, p[0]), L.fromBufferAttribute(u, p[1]), A.fromBufferAttribute(u, p[2]), DC.getNormal(jD), _[0] = `${Math.round(U.x * i)},${Math.round(U.y * i)},${Math.round(U.z * i)}`, _[1] = `${Math.round(L.x * i)},${Math.round(L.y * i)},${Math.round(L.z * i)}`, _[2] = `${Math.round(A.x * i)},${Math.round(A.y * i)},${Math.round(A.z * i)}`, !(_[0] === _[1] || _[1] === _[2] || _[2] === _[0]))
          for (let k = 0; k < 3; k++) {
            const F = (k + 1) % 3, H = _[k], B = _[F], j = DC[y[k]], Y = DC[y[F]], ee = `${H}_${B}`, Z = `${B}_${H}`;
            Z in E && E[Z] ? (jD.dot(E[Z].normal) <= o && (w.push(j.x, j.y, j.z), w.push(Y.x, Y.y, Y.z)), E[Z] = null) : ee in E || (E[ee] = {
              index0: p[k],
              index1: p[F],
              normal: jD.clone()
            });
          }
      }
      for (const R in E)
        if (E[R]) {
          const { index0: U, index1: L } = E[R];
          RC.fromBufferAttribute(u, U), AC.fromBufferAttribute(u, L), w.push(RC.x, RC.y, RC.z), w.push(AC.x, AC.y, AC.z);
        }
      this.setAttribute("position", new nr(w, 3));
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
}
class a_ extends kT {
  constructor(e) {
    super(e), this.uuid = mh(), this.type = "Shape", this.holes = [];
  }
  getPointsHoles(e) {
    const t = [];
    for (let r = 0, i = this.holes.length; r < i; r++)
      t[r] = this.holes[r].getPoints(e);
    return t;
  }
  // get points of shape and holes (keypoints based on segments parameter)
  extractPoints(e) {
    return {
      shape: this.getPoints(e),
      holes: this.getPointsHoles(e)
    };
  }
  copy(e) {
    super.copy(e), this.holes = [];
    for (let t = 0, r = e.holes.length; t < r; t++) {
      const i = e.holes[t];
      this.holes.push(i.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    e.uuid = this.uuid, e.holes = [];
    for (let t = 0, r = this.holes.length; t < r; t++) {
      const i = this.holes[t];
      e.holes.push(i.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
    for (let t = 0, r = e.holes.length; t < r; t++) {
      const i = e.holes[t];
      this.holes.push(new kT().fromJSON(i));
    }
    return this;
  }
}
const Q$ = {
  triangulate: function(n, e, t = 2) {
    const r = e && e.length, i = r ? e[0] * t : n.length;
    let o = k4(n, 0, i, t, !0);
    const l = [];
    if (!o || o.next === o.prev)
      return l;
    let u, h, p, y, _, E, w;
    if (r && (o = nY(n, e, o, t)), n.length > 80 * t) {
      u = p = n[0], h = y = n[1];
      for (let R = t; R < i; R += t)
        _ = n[R], E = n[R + 1], _ < u && (u = _), E < h && (h = E), _ > p && (p = _), E > y && (y = E);
      w = Math.max(p - u, y - h), w = w !== 0 ? 32767 / w : 0;
    }
    return FT(o, l, t, u, h, w, 0), l;
  }
};
function k4(n, e, t, r, i) {
  let o, l;
  if (i === hY(n, e, t, r) > 0)
    for (o = e; o < t; o += r)
      l = vk(o, n[o], n[o + 1], l);
  else
    for (o = t - r; o >= e; o -= r)
      l = vk(o, n[o], n[o + 1], l);
  return l && n2(l, l.next) && (IT(l), l = l.next), l;
}
function d_(n, e) {
  if (!n)
    return n;
  e || (e = n);
  let t = n, r;
  do
    if (r = !1, !t.steiner && (n2(t, t.next) || _s(t.prev, t, t.next) === 0)) {
      if (IT(t), t = e = t.prev, t === t.next)
        break;
      r = !0;
    } else
      t = t.next;
  while (r || t !== e);
  return e;
}
function FT(n, e, t, r, i, o, l) {
  if (!n)
    return;
  !l && o && sY(n, r, i, o);
  let u = n, h, p;
  for (; n.prev !== n.next; ) {
    if (h = n.prev, p = n.next, o ? J$(n, r, i, o) : Z$(n)) {
      e.push(h.i / t | 0), e.push(n.i / t | 0), e.push(p.i / t | 0), IT(n), n = p.next, u = p.next;
      continue;
    }
    if (n = p, n === u) {
      l ? l === 1 ? (n = eY(d_(n), e, t), FT(n, e, t, r, i, o, 2)) : l === 2 && tY(n, e, t, r, i, o) : FT(d_(n), e, t, r, i, o, 1);
      break;
    }
  }
}
function Z$(n) {
  const e = n.prev, t = n, r = n.next;
  if (_s(e, t, r) >= 0)
    return !1;
  const i = e.x, o = t.x, l = r.x, u = e.y, h = t.y, p = r.y, y = i < o ? i < l ? i : l : o < l ? o : l, _ = u < h ? u < p ? u : p : h < p ? h : p, E = i > o ? i > l ? i : l : o > l ? o : l, w = u > h ? u > p ? u : p : h > p ? h : p;
  let R = r.next;
  for (; R !== e; ) {
    if (R.x >= y && R.x <= E && R.y >= _ && R.y <= w && D1(i, u, o, h, l, p, R.x, R.y) && _s(R.prev, R, R.next) >= 0)
      return !1;
    R = R.next;
  }
  return !0;
}
function J$(n, e, t, r) {
  const i = n.prev, o = n, l = n.next;
  if (_s(i, o, l) >= 0)
    return !1;
  const u = i.x, h = o.x, p = l.x, y = i.y, _ = o.y, E = l.y, w = u < h ? u < p ? u : p : h < p ? h : p, R = y < _ ? y < E ? y : E : _ < E ? _ : E, U = u > h ? u > p ? u : p : h > p ? h : p, L = y > _ ? y > E ? y : E : _ > E ? _ : E, A = mO(w, R, e, t, r), k = mO(U, L, e, t, r);
  let F = n.prevZ, H = n.nextZ;
  for (; F && F.z >= A && H && H.z <= k; ) {
    if (F.x >= w && F.x <= U && F.y >= R && F.y <= L && F !== i && F !== l && D1(u, y, h, _, p, E, F.x, F.y) && _s(F.prev, F, F.next) >= 0 || (F = F.prevZ, H.x >= w && H.x <= U && H.y >= R && H.y <= L && H !== i && H !== l && D1(u, y, h, _, p, E, H.x, H.y) && _s(H.prev, H, H.next) >= 0))
      return !1;
    H = H.nextZ;
  }
  for (; F && F.z >= A; ) {
    if (F.x >= w && F.x <= U && F.y >= R && F.y <= L && F !== i && F !== l && D1(u, y, h, _, p, E, F.x, F.y) && _s(F.prev, F, F.next) >= 0)
      return !1;
    F = F.prevZ;
  }
  for (; H && H.z <= k; ) {
    if (H.x >= w && H.x <= U && H.y >= R && H.y <= L && H !== i && H !== l && D1(u, y, h, _, p, E, H.x, H.y) && _s(H.prev, H, H.next) >= 0)
      return !1;
    H = H.nextZ;
  }
  return !0;
}
function eY(n, e, t) {
  let r = n;
  do {
    const i = r.prev, o = r.next.next;
    !n2(i, o) && F4(i, r, r.next, o) && zT(i, o) && zT(o, i) && (e.push(i.i / t | 0), e.push(r.i / t | 0), e.push(o.i / t | 0), IT(r), IT(r.next), r = n = o), r = r.next;
  } while (r !== n);
  return d_(r);
}
function tY(n, e, t, r, i, o) {
  let l = n;
  do {
    let u = l.next.next;
    for (; u !== l.prev; ) {
      if (l.i !== u.i && cY(l, u)) {
        let h = z4(l, u);
        l = d_(l, l.next), h = d_(h, h.next), FT(l, e, t, r, i, o, 0), FT(h, e, t, r, i, o, 0);
        return;
      }
      u = u.next;
    }
    l = l.next;
  } while (l !== n);
}
function nY(n, e, t, r) {
  const i = [];
  let o, l, u, h, p;
  for (o = 0, l = e.length; o < l; o++)
    u = e[o] * r, h = o < l - 1 ? e[o + 1] * r : n.length, p = k4(n, u, h, r, !1), p === p.next && (p.steiner = !0), i.push(uY(p));
  for (i.sort(rY), o = 0; o < i.length; o++)
    t = iY(i[o], t);
  return t;
}
function rY(n, e) {
  return n.x - e.x;
}
function iY(n, e) {
  const t = aY(n, e);
  if (!t)
    return e;
  const r = z4(t, n);
  return d_(r, r.next), d_(t, t.next);
}
function aY(n, e) {
  let t = e, r = -1 / 0, i;
  const o = n.x, l = n.y;
  do {
    if (l <= t.y && l >= t.next.y && t.next.y !== t.y) {
      const E = t.x + (l - t.y) * (t.next.x - t.x) / (t.next.y - t.y);
      if (E <= o && E > r && (r = E, i = t.x < t.next.x ? t : t.next, E === o))
        return i;
    }
    t = t.next;
  } while (t !== e);
  if (!i)
    return null;
  const u = i, h = i.x, p = i.y;
  let y = 1 / 0, _;
  t = i;
  do
    o >= t.x && t.x >= h && o !== t.x && D1(l < p ? o : r, l, h, p, l < p ? r : o, l, t.x, t.y) && (_ = Math.abs(l - t.y) / (o - t.x), zT(t, n) && (_ < y || _ === y && (t.x > i.x || t.x === i.x && oY(i, t))) && (i = t, y = _)), t = t.next;
  while (t !== u);
  return i;
}
function oY(n, e) {
  return _s(n.prev, n, e.prev) < 0 && _s(e.next, n, n.next) < 0;
}
function sY(n, e, t, r) {
  let i = n;
  do
    i.z === 0 && (i.z = mO(i.x, i.y, e, t, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
  while (i !== n);
  i.prevZ.nextZ = null, i.prevZ = null, lY(i);
}
function lY(n) {
  let e, t, r, i, o, l, u, h, p = 1;
  do {
    for (t = n, n = null, o = null, l = 0; t; ) {
      for (l++, r = t, u = 0, e = 0; e < p && (u++, r = r.nextZ, !!r); e++)
        ;
      for (h = p; u > 0 || h > 0 && r; )
        u !== 0 && (h === 0 || !r || t.z <= r.z) ? (i = t, t = t.nextZ, u--) : (i = r, r = r.nextZ, h--), o ? o.nextZ = i : n = i, i.prevZ = o, o = i;
      t = r;
    }
    o.nextZ = null, p *= 2;
  } while (l > 1);
  return n;
}
function mO(n, e, t, r, i) {
  return n = (n - t) * i | 0, e = (e - r) * i | 0, n = (n | n << 8) & 16711935, n = (n | n << 4) & 252645135, n = (n | n << 2) & 858993459, n = (n | n << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, n | e << 1;
}
function uY(n) {
  let e = n, t = n;
  do
    (e.x < t.x || e.x === t.x && e.y < t.y) && (t = e), e = e.next;
  while (e !== n);
  return t;
}
function D1(n, e, t, r, i, o, l, u) {
  return (i - l) * (e - u) >= (n - l) * (o - u) && (n - l) * (r - u) >= (t - l) * (e - u) && (t - l) * (o - u) >= (i - l) * (r - u);
}
function cY(n, e) {
  return n.next.i !== e.i && n.prev.i !== e.i && !fY(n, e) && // dones't intersect other edges
  (zT(n, e) && zT(e, n) && dY(n, e) && // locally visible
  (_s(n.prev, n, e.prev) || _s(n, e.prev, e)) || // does not create opposite-facing sectors
  n2(n, e) && _s(n.prev, n, n.next) > 0 && _s(e.prev, e, e.next) > 0);
}
function _s(n, e, t) {
  return (e.y - n.y) * (t.x - e.x) - (e.x - n.x) * (t.y - e.y);
}
function n2(n, e) {
  return n.x === e.x && n.y === e.y;
}
function F4(n, e, t, r) {
  const i = OC(_s(n, e, t)), o = OC(_s(n, e, r)), l = OC(_s(t, r, n)), u = OC(_s(t, r, e));
  return !!(i !== o && l !== u || i === 0 && LC(n, t, e) || o === 0 && LC(n, r, e) || l === 0 && LC(t, n, r) || u === 0 && LC(t, e, r));
}
function LC(n, e, t) {
  return e.x <= Math.max(n.x, t.x) && e.x >= Math.min(n.x, t.x) && e.y <= Math.max(n.y, t.y) && e.y >= Math.min(n.y, t.y);
}
function OC(n) {
  return n > 0 ? 1 : n < 0 ? -1 : 0;
}
function fY(n, e) {
  let t = n;
  do {
    if (t.i !== n.i && t.next.i !== n.i && t.i !== e.i && t.next.i !== e.i && F4(t, t.next, n, e))
      return !0;
    t = t.next;
  } while (t !== n);
  return !1;
}
function zT(n, e) {
  return _s(n.prev, n, n.next) < 0 ? _s(n, e, n.next) >= 0 && _s(n, n.prev, e) >= 0 : _s(n, e, n.prev) < 0 || _s(n, n.next, e) < 0;
}
function dY(n, e) {
  let t = n, r = !1;
  const i = (n.x + e.x) / 2, o = (n.y + e.y) / 2;
  do
    t.y > o != t.next.y > o && t.next.y !== t.y && i < (t.next.x - t.x) * (o - t.y) / (t.next.y - t.y) + t.x && (r = !r), t = t.next;
  while (t !== n);
  return r;
}
function z4(n, e) {
  const t = new vO(n.i, n.x, n.y), r = new vO(e.i, e.x, e.y), i = n.next, o = e.prev;
  return n.next = e, e.prev = n, t.next = i, i.prev = t, r.next = t, t.prev = r, o.next = r, r.prev = o, r;
}
function vk(n, e, t, r) {
  const i = new vO(n, e, t);
  return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i;
}
function IT(n) {
  n.next.prev = n.prev, n.prev.next = n.next, n.prevZ && (n.prevZ.nextZ = n.nextZ), n.nextZ && (n.nextZ.prevZ = n.prevZ);
}
function vO(n, e, t) {
  this.i = n, this.x = e, this.y = t, this.prev = null, this.next = null, this.z = 0, this.prevZ = null, this.nextZ = null, this.steiner = !1;
}
function hY(n, e, t, r) {
  let i = 0;
  for (let o = e, l = t - r; o < t; o += r)
    i += (n[l] - n[o]) * (n[o + 1] + n[l + 1]), l = o;
  return i;
}
class _v {
  // calculate area of the contour polygon
  static area(e) {
    const t = e.length;
    let r = 0;
    for (let i = t - 1, o = 0; o < t; i = o++)
      r += e[i].x * e[o].y - e[o].x * e[i].y;
    return r * 0.5;
  }
  static isClockWise(e) {
    return _v.area(e) < 0;
  }
  static triangulateShape(e, t) {
    const r = [], i = [], o = [];
    gk(e), yk(r, e);
    let l = e.length;
    t.forEach(gk);
    for (let h = 0; h < t.length; h++)
      i.push(l), l += t[h].length, yk(r, t[h]);
    const u = Q$.triangulate(r, i);
    for (let h = 0; h < u.length; h += 3)
      o.push(u.slice(h, h + 3));
    return o;
  }
}
function gk(n) {
  const e = n.length;
  e > 2 && n[e - 1].equals(n[0]) && n.pop();
}
function yk(n, e) {
  for (let t = 0; t < e.length; t++)
    n.push(e[t].x), n.push(e[t].y);
}
class r2 extends Ei {
  constructor(e = new a_([new $t(0.5, 0.5), new $t(-0.5, 0.5), new $t(-0.5, -0.5), new $t(0.5, -0.5)]), t = {}) {
    super(), this.type = "ExtrudeGeometry", this.parameters = {
      shapes: e,
      options: t
    }, e = Array.isArray(e) ? e : [e];
    const r = this, i = [], o = [];
    for (let u = 0, h = e.length; u < h; u++) {
      const p = e[u];
      l(p);
    }
    this.setAttribute("position", new nr(i, 3)), this.setAttribute("uv", new nr(o, 2)), this.computeVertexNormals();
    function l(u) {
      const h = [], p = t.curveSegments !== void 0 ? t.curveSegments : 12, y = t.steps !== void 0 ? t.steps : 1, _ = t.depth !== void 0 ? t.depth : 1;
      let E = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0, w = t.bevelThickness !== void 0 ? t.bevelThickness : 0.2, R = t.bevelSize !== void 0 ? t.bevelSize : w - 0.1, U = t.bevelOffset !== void 0 ? t.bevelOffset : 0, L = t.bevelSegments !== void 0 ? t.bevelSegments : 3;
      const A = t.extrudePath, k = t.UVGenerator !== void 0 ? t.UVGenerator : pY;
      let F, H = !1, B, j, Y, ee;
      A && (F = A.getSpacedPoints(y), H = !0, E = !1, B = A.computeFrenetFrames(y, !1), j = new Re(), Y = new Re(), ee = new Re()), E || (L = 0, w = 0, R = 0, U = 0);
      const Z = u.extractPoints(p);
      let K = Z.shape;
      const fe = Z.holes;
      if (!_v.isClockWise(K)) {
        K = K.reverse();
        for (let oe = 0, rt = fe.length; oe < rt; oe++) {
          const qe = fe[oe];
          _v.isClockWise(qe) && (fe[oe] = qe.reverse());
        }
      }
      const he = _v.triangulateShape(K, fe), me = K;
      for (let oe = 0, rt = fe.length; oe < rt; oe++) {
        const qe = fe[oe];
        K = K.concat(qe);
      }
      function Ee(oe, rt, qe) {
        return rt || console.error("THREE.ExtrudeGeometry: vec does not exist"), oe.clone().addScaledVector(rt, qe);
      }
      const be = K.length, we = he.length;
      function de(oe, rt, qe) {
        let $e, Ye, zt;
        const ot = oe.x - rt.x, Dt = oe.y - rt.y, kt = qe.x - oe.x, mt = qe.y - oe.y, rn = ot * ot + Dt * Dt, ae = ot * mt - Dt * kt;
        if (Math.abs(ae) > Number.EPSILON) {
          const re = Math.sqrt(rn), ze = Math.sqrt(kt * kt + mt * mt), xt = rt.x - Dt / re, ut = rt.y + ot / re, lt = qe.x - mt / ze, Yt = qe.y + kt / ze, Nt = ((lt - xt) * mt - (Yt - ut) * kt) / (ot * mt - Dt * kt);
          $e = xt + ot * Nt - oe.x, Ye = ut + Dt * Nt - oe.y;
          const xe = $e * $e + Ye * Ye;
          if (xe <= 2)
            return new $t($e, Ye);
          zt = Math.sqrt(xe / 2);
        } else {
          let re = !1;
          ot > Number.EPSILON ? kt > Number.EPSILON && (re = !0) : ot < -Number.EPSILON ? kt < -Number.EPSILON && (re = !0) : Math.sign(Dt) === Math.sign(mt) && (re = !0), re ? ($e = -Dt, Ye = ot, zt = Math.sqrt(rn)) : ($e = ot, Ye = Dt, zt = Math.sqrt(rn / 2));
        }
        return new $t($e / zt, Ye / zt);
      }
      const ye = [];
      for (let oe = 0, rt = me.length, qe = rt - 1, $e = oe + 1; oe < rt; oe++, qe++, $e++)
        qe === rt && (qe = 0), $e === rt && ($e = 0), ye[oe] = de(me[oe], me[qe], me[$e]);
      const X = [];
      let q, ue = ye.concat();
      for (let oe = 0, rt = fe.length; oe < rt; oe++) {
        const qe = fe[oe];
        q = [];
        for (let $e = 0, Ye = qe.length, zt = Ye - 1, ot = $e + 1; $e < Ye; $e++, zt++, ot++)
          zt === Ye && (zt = 0), ot === Ye && (ot = 0), q[$e] = de(qe[$e], qe[zt], qe[ot]);
        X.push(q), ue = ue.concat(q);
      }
      for (let oe = 0; oe < L; oe++) {
        const rt = oe / L, qe = w * Math.cos(rt * Math.PI / 2), $e = R * Math.sin(rt * Math.PI / 2) + U;
        for (let Ye = 0, zt = me.length; Ye < zt; Ye++) {
          const ot = Ee(me[Ye], ye[Ye], $e);
          Pe(ot.x, ot.y, -qe);
        }
        for (let Ye = 0, zt = fe.length; Ye < zt; Ye++) {
          const ot = fe[Ye];
          q = X[Ye];
          for (let Dt = 0, kt = ot.length; Dt < kt; Dt++) {
            const mt = Ee(ot[Dt], q[Dt], $e);
            Pe(mt.x, mt.y, -qe);
          }
        }
      }
      const Ce = R + U;
      for (let oe = 0; oe < be; oe++) {
        const rt = E ? Ee(K[oe], ue[oe], Ce) : K[oe];
        H ? (Y.copy(B.normals[0]).multiplyScalar(rt.x), j.copy(B.binormals[0]).multiplyScalar(rt.y), ee.copy(F[0]).add(Y).add(j), Pe(ee.x, ee.y, ee.z)) : Pe(rt.x, rt.y, 0);
      }
      for (let oe = 1; oe <= y; oe++)
        for (let rt = 0; rt < be; rt++) {
          const qe = E ? Ee(K[rt], ue[rt], Ce) : K[rt];
          H ? (Y.copy(B.normals[oe]).multiplyScalar(qe.x), j.copy(B.binormals[oe]).multiplyScalar(qe.y), ee.copy(F[oe]).add(Y).add(j), Pe(ee.x, ee.y, ee.z)) : Pe(qe.x, qe.y, _ / y * oe);
        }
      for (let oe = L - 1; oe >= 0; oe--) {
        const rt = oe / L, qe = w * Math.cos(rt * Math.PI / 2), $e = R * Math.sin(rt * Math.PI / 2) + U;
        for (let Ye = 0, zt = me.length; Ye < zt; Ye++) {
          const ot = Ee(me[Ye], ye[Ye], $e);
          Pe(ot.x, ot.y, _ + qe);
        }
        for (let Ye = 0, zt = fe.length; Ye < zt; Ye++) {
          const ot = fe[Ye];
          q = X[Ye];
          for (let Dt = 0, kt = ot.length; Dt < kt; Dt++) {
            const mt = Ee(ot[Dt], q[Dt], $e);
            H ? Pe(mt.x, mt.y + F[y - 1].y, F[y - 1].x + qe) : Pe(mt.x, mt.y, _ + qe);
          }
        }
      }
      Ae(), De();
      function Ae() {
        const oe = i.length / 3;
        if (E) {
          let rt = 0, qe = be * rt;
          for (let $e = 0; $e < we; $e++) {
            const Ye = he[$e];
            Fe(Ye[2] + qe, Ye[1] + qe, Ye[0] + qe);
          }
          rt = y + L * 2, qe = be * rt;
          for (let $e = 0; $e < we; $e++) {
            const Ye = he[$e];
            Fe(Ye[0] + qe, Ye[1] + qe, Ye[2] + qe);
          }
        } else {
          for (let rt = 0; rt < we; rt++) {
            const qe = he[rt];
            Fe(qe[2], qe[1], qe[0]);
          }
          for (let rt = 0; rt < we; rt++) {
            const qe = he[rt];
            Fe(qe[0] + be * y, qe[1] + be * y, qe[2] + be * y);
          }
        }
        r.addGroup(oe, i.length / 3 - oe, 0);
      }
      function De() {
        const oe = i.length / 3;
        let rt = 0;
        Ne(me, rt), rt += me.length;
        for (let qe = 0, $e = fe.length; qe < $e; qe++) {
          const Ye = fe[qe];
          Ne(Ye, rt), rt += Ye.length;
        }
        r.addGroup(oe, i.length / 3 - oe, 1);
      }
      function Ne(oe, rt) {
        let qe = oe.length;
        for (; --qe >= 0; ) {
          const $e = qe;
          let Ye = qe - 1;
          Ye < 0 && (Ye = oe.length - 1);
          for (let zt = 0, ot = y + L * 2; zt < ot; zt++) {
            const Dt = be * zt, kt = be * (zt + 1), mt = rt + $e + Dt, rn = rt + Ye + Dt, ae = rt + Ye + kt, re = rt + $e + kt;
            it(mt, rn, ae, re);
          }
        }
      }
      function Pe(oe, rt, qe) {
        h.push(oe), h.push(rt), h.push(qe);
      }
      function Fe(oe, rt, qe) {
        Ot(oe), Ot(rt), Ot(qe);
        const $e = i.length / 3, Ye = k.generateTopUV(r, i, $e - 3, $e - 2, $e - 1);
        st(Ye[0]), st(Ye[1]), st(Ye[2]);
      }
      function it(oe, rt, qe, $e) {
        Ot(oe), Ot(rt), Ot($e), Ot(rt), Ot(qe), Ot($e);
        const Ye = i.length / 3, zt = k.generateSideWallUV(r, i, Ye - 6, Ye - 3, Ye - 2, Ye - 1);
        st(zt[0]), st(zt[1]), st(zt[3]), st(zt[1]), st(zt[2]), st(zt[3]);
      }
      function Ot(oe) {
        i.push(h[oe * 3 + 0]), i.push(h[oe * 3 + 1]), i.push(h[oe * 3 + 2]);
      }
      function st(oe) {
        o.push(oe.x), o.push(oe.y);
      }
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  toJSON() {
    const e = super.toJSON(), t = this.parameters.shapes, r = this.parameters.options;
    return mY(t, r, e);
  }
  static fromJSON(e, t) {
    const r = [];
    for (let o = 0, l = e.shapes.length; o < l; o++) {
      const u = t[e.shapes[o]];
      r.push(u);
    }
    const i = e.options.extrudePath;
    return i !== void 0 && (e.options.extrudePath = new OP[i.type]().fromJSON(i)), new r2(r, e.options);
  }
}
const pY = {
  generateTopUV: function(n, e, t, r, i) {
    const o = e[t * 3], l = e[t * 3 + 1], u = e[r * 3], h = e[r * 3 + 1], p = e[i * 3], y = e[i * 3 + 1];
    return [
      new $t(o, l),
      new $t(u, h),
      new $t(p, y)
    ];
  },
  generateSideWallUV: function(n, e, t, r, i, o) {
    const l = e[t * 3], u = e[t * 3 + 1], h = e[t * 3 + 2], p = e[r * 3], y = e[r * 3 + 1], _ = e[r * 3 + 2], E = e[i * 3], w = e[i * 3 + 1], R = e[i * 3 + 2], U = e[o * 3], L = e[o * 3 + 1], A = e[o * 3 + 2];
    return Math.abs(u - y) < Math.abs(l - p) ? [
      new $t(l, 1 - h),
      new $t(p, 1 - _),
      new $t(E, 1 - R),
      new $t(U, 1 - A)
    ] : [
      new $t(u, 1 - h),
      new $t(y, 1 - _),
      new $t(w, 1 - R),
      new $t(L, 1 - A)
    ];
  }
};
function mY(n, e, t) {
  if (t.shapes = [], Array.isArray(n))
    for (let r = 0, i = n.length; r < i; r++) {
      const o = n[r];
      t.shapes.push(o.uuid);
    }
  else
    t.shapes.push(n.uuid);
  return t.options = Object.assign({}, e), e.extrudePath !== void 0 && (t.options.extrudePath = e.extrudePath.toJSON()), t;
}
class i2 extends E0 {
  constructor(e = 1, t = 0) {
    const r = (1 + Math.sqrt(5)) / 2, i = [
      -1,
      r,
      0,
      1,
      r,
      0,
      -1,
      -r,
      0,
      1,
      -r,
      0,
      0,
      -1,
      r,
      0,
      1,
      r,
      0,
      -1,
      -r,
      0,
      1,
      -r,
      r,
      0,
      -1,
      r,
      0,
      1,
      -r,
      0,
      -1,
      -r,
      0,
      1
    ], o = [
      0,
      11,
      5,
      0,
      5,
      1,
      0,
      1,
      7,
      0,
      7,
      10,
      0,
      10,
      11,
      1,
      5,
      9,
      5,
      11,
      4,
      11,
      10,
      2,
      10,
      7,
      6,
      7,
      1,
      8,
      3,
      9,
      4,
      3,
      4,
      2,
      3,
      2,
      6,
      3,
      6,
      8,
      3,
      8,
      9,
      4,
      9,
      5,
      2,
      4,
      11,
      6,
      2,
      10,
      8,
      6,
      7,
      9,
      8,
      1
    ];
    super(i, o, e, t), this.type = "IcosahedronGeometry", this.parameters = {
      radius: e,
      detail: t
    };
  }
  static fromJSON(e) {
    return new i2(e.radius, e.detail);
  }
}
class tw extends E0 {
  constructor(e = 1, t = 0) {
    const r = [
      1,
      0,
      0,
      -1,
      0,
      0,
      0,
      1,
      0,
      0,
      -1,
      0,
      0,
      0,
      1,
      0,
      0,
      -1
    ], i = [
      0,
      2,
      4,
      0,
      4,
      3,
      0,
      3,
      5,
      0,
      5,
      2,
      1,
      2,
      5,
      1,
      5,
      3,
      1,
      3,
      4,
      1,
      4,
      2
    ];
    super(r, i, e, t), this.type = "OctahedronGeometry", this.parameters = {
      radius: e,
      detail: t
    };
  }
  static fromJSON(e) {
    return new tw(e.radius, e.detail);
  }
}
class a2 extends Ei {
  constructor(e = 0.5, t = 1, r = 32, i = 1, o = 0, l = Math.PI * 2) {
    super(), this.type = "RingGeometry", this.parameters = {
      innerRadius: e,
      outerRadius: t,
      thetaSegments: r,
      phiSegments: i,
      thetaStart: o,
      thetaLength: l
    }, r = Math.max(3, r), i = Math.max(1, i);
    const u = [], h = [], p = [], y = [];
    let _ = e;
    const E = (t - e) / i, w = new Re(), R = new $t();
    for (let U = 0; U <= i; U++) {
      for (let L = 0; L <= r; L++) {
        const A = o + L / r * l;
        w.x = _ * Math.cos(A), w.y = _ * Math.sin(A), h.push(w.x, w.y, w.z), p.push(0, 0, 1), R.x = (w.x / t + 1) / 2, R.y = (w.y / t + 1) / 2, y.push(R.x, R.y);
      }
      _ += E;
    }
    for (let U = 0; U < i; U++) {
      const L = U * (r + 1);
      for (let A = 0; A < r; A++) {
        const k = A + L, F = k, H = k + r + 1, B = k + r + 2, j = k + 1;
        u.push(F, H, j), u.push(H, B, j);
      }
    }
    this.setIndex(u), this.setAttribute("position", new nr(h, 3)), this.setAttribute("normal", new nr(p, 3)), this.setAttribute("uv", new nr(y, 2));
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new a2(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
  }
}
class o2 extends Ei {
  constructor(e = new a_([new $t(0, 0.5), new $t(-0.5, -0.5), new $t(0.5, -0.5)]), t = 12) {
    super(), this.type = "ShapeGeometry", this.parameters = {
      shapes: e,
      curveSegments: t
    };
    const r = [], i = [], o = [], l = [];
    let u = 0, h = 0;
    if (Array.isArray(e) === !1)
      p(e);
    else
      for (let y = 0; y < e.length; y++)
        p(e[y]), this.addGroup(u, h, y), u += h, h = 0;
    this.setIndex(r), this.setAttribute("position", new nr(i, 3)), this.setAttribute("normal", new nr(o, 3)), this.setAttribute("uv", new nr(l, 2));
    function p(y) {
      const _ = i.length / 3, E = y.extractPoints(t);
      let w = E.shape;
      const R = E.holes;
      _v.isClockWise(w) === !1 && (w = w.reverse());
      for (let L = 0, A = R.length; L < A; L++) {
        const k = R[L];
        _v.isClockWise(k) === !0 && (R[L] = k.reverse());
      }
      const U = _v.triangulateShape(w, R);
      for (let L = 0, A = R.length; L < A; L++) {
        const k = R[L];
        w = w.concat(k);
      }
      for (let L = 0, A = w.length; L < A; L++) {
        const k = w[L];
        i.push(k.x, k.y, 0), o.push(0, 0, 1), l.push(k.x, k.y);
      }
      for (let L = 0, A = U.length; L < A; L++) {
        const k = U[L], F = k[0] + _, H = k[1] + _, B = k[2] + _;
        r.push(F, H, B), h += 3;
      }
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  toJSON() {
    const e = super.toJSON(), t = this.parameters.shapes;
    return vY(t, e);
  }
  static fromJSON(e, t) {
    const r = [];
    for (let i = 0, o = e.shapes.length; i < o; i++) {
      const l = t[e.shapes[i]];
      r.push(l);
    }
    return new o2(r, e.curveSegments);
  }
}
function vY(n, e) {
  if (e.shapes = [], Array.isArray(n))
    for (let t = 0, r = n.length; t < r; t++) {
      const i = n[t];
      e.shapes.push(i.uuid);
    }
  else
    e.shapes.push(n.uuid);
  return e;
}
class nw extends Ei {
  constructor(e = 1, t = 32, r = 16, i = 0, o = Math.PI * 2, l = 0, u = Math.PI) {
    super(), this.type = "SphereGeometry", this.parameters = {
      radius: e,
      widthSegments: t,
      heightSegments: r,
      phiStart: i,
      phiLength: o,
      thetaStart: l,
      thetaLength: u
    }, t = Math.max(3, Math.floor(t)), r = Math.max(2, Math.floor(r));
    const h = Math.min(l + u, Math.PI);
    let p = 0;
    const y = [], _ = new Re(), E = new Re(), w = [], R = [], U = [], L = [];
    for (let A = 0; A <= r; A++) {
      const k = [], F = A / r;
      let H = 0;
      A === 0 && l === 0 ? H = 0.5 / t : A === r && h === Math.PI && (H = -0.5 / t);
      for (let B = 0; B <= t; B++) {
        const j = B / t;
        _.x = -e * Math.cos(i + j * o) * Math.sin(l + F * u), _.y = e * Math.cos(l + F * u), _.z = e * Math.sin(i + j * o) * Math.sin(l + F * u), R.push(_.x, _.y, _.z), E.copy(_).normalize(), U.push(E.x, E.y, E.z), L.push(j + H, 1 - F), k.push(p++);
      }
      y.push(k);
    }
    for (let A = 0; A < r; A++)
      for (let k = 0; k < t; k++) {
        const F = y[A][k + 1], H = y[A][k], B = y[A + 1][k], j = y[A + 1][k + 1];
        (A !== 0 || l > 0) && w.push(F, H, j), (A !== r - 1 || h < Math.PI) && w.push(H, B, j);
      }
    this.setIndex(w), this.setAttribute("position", new nr(R, 3)), this.setAttribute("normal", new nr(U, 3)), this.setAttribute("uv", new nr(L, 2));
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new nw(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
  }
}
class s2 extends E0 {
  constructor(e = 1, t = 0) {
    const r = [
      1,
      1,
      1,
      -1,
      -1,
      1,
      -1,
      1,
      -1,
      1,
      -1,
      -1
    ], i = [
      2,
      1,
      0,
      0,
      3,
      2,
      1,
      3,
      0,
      2,
      3,
      1
    ];
    super(r, i, e, t), this.type = "TetrahedronGeometry", this.parameters = {
      radius: e,
      detail: t
    };
  }
  static fromJSON(e) {
    return new s2(e.radius, e.detail);
  }
}
class l2 extends Ei {
  constructor(e = 1, t = 0.4, r = 12, i = 48, o = Math.PI * 2) {
    super(), this.type = "TorusGeometry", this.parameters = {
      radius: e,
      tube: t,
      radialSegments: r,
      tubularSegments: i,
      arc: o
    }, r = Math.floor(r), i = Math.floor(i);
    const l = [], u = [], h = [], p = [], y = new Re(), _ = new Re(), E = new Re();
    for (let w = 0; w <= r; w++)
      for (let R = 0; R <= i; R++) {
        const U = R / i * o, L = w / r * Math.PI * 2;
        _.x = (e + t * Math.cos(L)) * Math.cos(U), _.y = (e + t * Math.cos(L)) * Math.sin(U), _.z = t * Math.sin(L), u.push(_.x, _.y, _.z), y.x = e * Math.cos(U), y.y = e * Math.sin(U), E.subVectors(_, y).normalize(), h.push(E.x, E.y, E.z), p.push(R / i), p.push(w / r);
      }
    for (let w = 1; w <= r; w++)
      for (let R = 1; R <= i; R++) {
        const U = (i + 1) * w + R - 1, L = (i + 1) * (w - 1) + R - 1, A = (i + 1) * (w - 1) + R, k = (i + 1) * w + R;
        l.push(U, L, k), l.push(L, A, k);
      }
    this.setIndex(l), this.setAttribute("position", new nr(u, 3)), this.setAttribute("normal", new nr(h, 3)), this.setAttribute("uv", new nr(p, 2));
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new l2(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
  }
}
class u2 extends Ei {
  constructor(e = 1, t = 0.4, r = 64, i = 8, o = 2, l = 3) {
    super(), this.type = "TorusKnotGeometry", this.parameters = {
      radius: e,
      tube: t,
      tubularSegments: r,
      radialSegments: i,
      p: o,
      q: l
    }, r = Math.floor(r), i = Math.floor(i);
    const u = [], h = [], p = [], y = [], _ = new Re(), E = new Re(), w = new Re(), R = new Re(), U = new Re(), L = new Re(), A = new Re();
    for (let F = 0; F <= r; ++F) {
      const H = F / r * o * Math.PI * 2;
      k(H, o, l, e, w), k(H + 0.01, o, l, e, R), L.subVectors(R, w), A.addVectors(R, w), U.crossVectors(L, A), A.crossVectors(U, L), U.normalize(), A.normalize();
      for (let B = 0; B <= i; ++B) {
        const j = B / i * Math.PI * 2, Y = -t * Math.cos(j), ee = t * Math.sin(j);
        _.x = w.x + (Y * A.x + ee * U.x), _.y = w.y + (Y * A.y + ee * U.y), _.z = w.z + (Y * A.z + ee * U.z), h.push(_.x, _.y, _.z), E.subVectors(_, w).normalize(), p.push(E.x, E.y, E.z), y.push(F / r), y.push(B / i);
      }
    }
    for (let F = 1; F <= r; F++)
      for (let H = 1; H <= i; H++) {
        const B = (i + 1) * (F - 1) + (H - 1), j = (i + 1) * F + (H - 1), Y = (i + 1) * F + H, ee = (i + 1) * (F - 1) + H;
        u.push(B, j, ee), u.push(j, Y, ee);
      }
    this.setIndex(u), this.setAttribute("position", new nr(h, 3)), this.setAttribute("normal", new nr(p, 3)), this.setAttribute("uv", new nr(y, 2));
    function k(F, H, B, j, Y) {
      const ee = Math.cos(F), Z = Math.sin(F), K = B / H * F, fe = Math.cos(K);
      Y.x = j * (2 + fe) * 0.5 * ee, Y.y = j * (2 + fe) * Z * 0.5, Y.z = j * Math.sin(K) * 0.5;
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  static fromJSON(e) {
    return new u2(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
  }
}
class c2 extends Ei {
  constructor(e = new DP(new Re(-1, -1, 0), new Re(-1, 1, 0), new Re(1, 1, 0)), t = 64, r = 1, i = 8, o = !1) {
    super(), this.type = "TubeGeometry", this.parameters = {
      path: e,
      tubularSegments: t,
      radius: r,
      radialSegments: i,
      closed: o
    };
    const l = e.computeFrenetFrames(t, o);
    this.tangents = l.tangents, this.normals = l.normals, this.binormals = l.binormals;
    const u = new Re(), h = new Re(), p = new $t();
    let y = new Re();
    const _ = [], E = [], w = [], R = [];
    U(), this.setIndex(R), this.setAttribute("position", new nr(_, 3)), this.setAttribute("normal", new nr(E, 3)), this.setAttribute("uv", new nr(w, 2));
    function U() {
      for (let F = 0; F < t; F++)
        L(F);
      L(o === !1 ? t : 0), k(), A();
    }
    function L(F) {
      y = e.getPointAt(F / t, y);
      const H = l.normals[F], B = l.binormals[F];
      for (let j = 0; j <= i; j++) {
        const Y = j / i * Math.PI * 2, ee = Math.sin(Y), Z = -Math.cos(Y);
        h.x = Z * H.x + ee * B.x, h.y = Z * H.y + ee * B.y, h.z = Z * H.z + ee * B.z, h.normalize(), E.push(h.x, h.y, h.z), u.x = y.x + r * h.x, u.y = y.y + r * h.y, u.z = y.z + r * h.z, _.push(u.x, u.y, u.z);
      }
    }
    function A() {
      for (let F = 1; F <= t; F++)
        for (let H = 1; H <= i; H++) {
          const B = (i + 1) * (F - 1) + (H - 1), j = (i + 1) * F + (H - 1), Y = (i + 1) * F + H, ee = (i + 1) * (F - 1) + H;
          R.push(B, j, ee), R.push(j, Y, ee);
        }
    }
    function k() {
      for (let F = 0; F <= t; F++)
        for (let H = 0; H <= i; H++)
          p.x = F / t, p.y = H / i, w.push(p.x, p.y);
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.path = this.parameters.path.toJSON(), e;
  }
  static fromJSON(e) {
    return new c2(
      new OP[e.path.type]().fromJSON(e.path),
      e.tubularSegments,
      e.radius,
      e.radialSegments,
      e.closed
    );
  }
}
class I4 extends Ei {
  constructor(e = null) {
    if (super(), this.type = "WireframeGeometry", this.parameters = {
      geometry: e
    }, e !== null) {
      const t = [], r = /* @__PURE__ */ new Set(), i = new Re(), o = new Re();
      if (e.index !== null) {
        const l = e.attributes.position, u = e.index;
        let h = e.groups;
        h.length === 0 && (h = [{ start: 0, count: u.count, materialIndex: 0 }]);
        for (let p = 0, y = h.length; p < y; ++p) {
          const _ = h[p], E = _.start, w = _.count;
          for (let R = E, U = E + w; R < U; R += 3)
            for (let L = 0; L < 3; L++) {
              const A = u.getX(R + L), k = u.getX(R + (L + 1) % 3);
              i.fromBufferAttribute(l, A), o.fromBufferAttribute(l, k), Sk(i, o, r) === !0 && (t.push(i.x, i.y, i.z), t.push(o.x, o.y, o.z));
            }
        }
      } else {
        const l = e.attributes.position;
        for (let u = 0, h = l.count / 3; u < h; u++)
          for (let p = 0; p < 3; p++) {
            const y = 3 * u + p, _ = 3 * u + (p + 1) % 3;
            i.fromBufferAttribute(l, y), o.fromBufferAttribute(l, _), Sk(i, o, r) === !0 && (t.push(i.x, i.y, i.z), t.push(o.x, o.y, o.z));
          }
      }
      this.setAttribute("position", new nr(t, 3));
    }
  }
  copy(e) {
    return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
  }
}
function Sk(n, e, t) {
  const r = `${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;
  return t.has(r) === !0 || t.has(i) === !0 ? !1 : (t.add(r), t.add(i), !0);
}
var _k = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  BoxGeometry: g_,
  CapsuleGeometry: ZR,
  CircleGeometry: JR,
  ConeGeometry: e2,
  CylinderGeometry: X1,
  DodecahedronGeometry: t2,
  EdgesGeometry: N4,
  ExtrudeGeometry: r2,
  IcosahedronGeometry: i2,
  LatheGeometry: ew,
  OctahedronGeometry: tw,
  PlaneGeometry: x0,
  PolyhedronGeometry: E0,
  RingGeometry: a2,
  ShapeGeometry: o2,
  SphereGeometry: nw,
  TetrahedronGeometry: s2,
  TorusGeometry: l2,
  TorusKnotGeometry: u2,
  TubeGeometry: c2,
  WireframeGeometry: I4
});
class B4 extends hc {
  constructor(e) {
    super(), this.isShadowMaterial = !0, this.type = "ShadowMaterial", this.color = new Pn(0), this.transparent = !0, this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.fog = e.fog, this;
  }
}
class H4 extends Ev {
  constructor(e) {
    super(e), this.isRawShaderMaterial = !0, this.type = "RawShaderMaterial";
  }
}
class PP extends hc {
  constructor(e) {
    super(), this.isMeshStandardMaterial = !0, this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new Pn(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Pn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = _0, this.normalScale = new $t(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.defines = { STANDARD: "" }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
  }
}
class V4 extends PP {
  constructor(e) {
    super(), this.isMeshPhysicalMaterial = !0, this.defines = {
      STANDARD: "",
      PHYSICAL: ""
    }, this.type = "MeshPhysicalMaterial", this.anisotropyRotation = 0, this.anisotropyMap = null, this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new $t(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
      get: function() {
        return Gs(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
      },
      set: function(t) {
        this.ior = (1 + 0.4 * t) / (1 - 0.4 * t);
      }
    }), this.iridescenceMap = null, this.iridescenceIOR = 1.3, this.iridescenceThicknessRange = [100, 400], this.iridescenceThicknessMap = null, this.sheenColor = new Pn(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 1 / 0, this.attenuationColor = new Pn(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new Pn(1, 1, 1), this.specularColorMap = null, this._anisotropy = 0, this._clearcoat = 0, this._iridescence = 0, this._sheen = 0, this._transmission = 0, this.setValues(e);
  }
  get anisotropy() {
    return this._anisotropy;
  }
  set anisotropy(e) {
    this._anisotropy > 0 != e > 0 && this.version++, this._anisotropy = e;
  }
  get clearcoat() {
    return this._clearcoat;
  }
  set clearcoat(e) {
    this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
  }
  get iridescence() {
    return this._iridescence;
  }
  set iridescence(e) {
    this._iridescence > 0 != e > 0 && this.version++, this._iridescence = e;
  }
  get sheen() {
    return this._sheen;
  }
  set sheen(e) {
    this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
  }
  get transmission() {
    return this._transmission;
  }
  set transmission(e) {
    this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
  }
  copy(e) {
    return super.copy(e), this.defines = {
      STANDARD: "",
      PHYSICAL: ""
    }, this.anisotropy = e.anisotropy, this.anisotropyRotation = e.anisotropyRotation, this.anisotropyMap = e.anisotropyMap, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.ior = e.ior, this.iridescence = e.iridescence, this.iridescenceMap = e.iridescenceMap, this.iridescenceIOR = e.iridescenceIOR, this.iridescenceThicknessRange = [...e.iridescenceThicknessRange], this.iridescenceThicknessMap = e.iridescenceThicknessMap, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
  }
}
class G4 extends hc {
  constructor(e) {
    super(), this.isMeshPhongMaterial = !0, this.type = "MeshPhongMaterial", this.color = new Pn(16777215), this.specular = new Pn(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Pn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = _0, this.normalScale = new $t(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = qT, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
  }
}
class W4 extends hc {
  constructor(e) {
    super(), this.isMeshToonMaterial = !0, this.defines = { TOON: "" }, this.type = "MeshToonMaterial", this.color = new Pn(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Pn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = _0, this.normalScale = new $t(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
  }
}
class j4 extends hc {
  constructor(e) {
    super(), this.isMeshNormalMaterial = !0, this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = _0, this.normalScale = new $t(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.flatShading = !1, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
  }
}
class $4 extends hc {
  constructor(e) {
    super(), this.isMeshLambertMaterial = !0, this.type = "MeshLambertMaterial", this.color = new Pn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Pn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = _0, this.normalScale = new $t(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = qT, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
  }
}
class Y4 extends hc {
  constructor(e) {
    super(), this.isMeshMatcapMaterial = !0, this.defines = { MATCAP: "" }, this.type = "MeshMatcapMaterial", this.color = new Pn(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = _0, this.normalScale = new $t(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.fog = !0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.defines = { MATCAP: "" }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this.fog = e.fog, this;
  }
}
class X4 extends Uf {
  constructor(e) {
    super(), this.isLineDashedMaterial = !0, this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
  }
}
function lp(n, e, t) {
  return UP(n) ? new n.constructor(n.subarray(e, t !== void 0 ? t : n.length)) : n.slice(e, t);
}
function e_(n, e, t) {
  return !n || // let 'undefined' and 'null' pass
  !t && n.constructor === e ? n : typeof e.BYTES_PER_ELEMENT == "number" ? new e(n) : Array.prototype.slice.call(n);
}
function UP(n) {
  return ArrayBuffer.isView(n) && !(n instanceof DataView);
}
function q4(n) {
  function e(i, o) {
    return n[i] - n[o];
  }
  const t = n.length, r = new Array(t);
  for (let i = 0; i !== t; ++i)
    r[i] = i;
  return r.sort(e), r;
}
function gO(n, e, t) {
  const r = n.length, i = new n.constructor(r);
  for (let o = 0, l = 0; l !== r; ++o) {
    const u = t[o] * e;
    for (let h = 0; h !== e; ++h)
      i[l++] = n[u + h];
  }
  return i;
}
function NP(n, e, t, r) {
  let i = 1, o = n[0];
  for (; o !== void 0 && o[r] === void 0; )
    o = n[i++];
  if (o === void 0)
    return;
  let l = o[r];
  if (l !== void 0)
    if (Array.isArray(l))
      do
        l = o[r], l !== void 0 && (e.push(o.time), t.push.apply(t, l)), o = n[i++];
      while (o !== void 0);
    else if (l.toArray !== void 0)
      do
        l = o[r], l !== void 0 && (e.push(o.time), l.toArray(t, t.length)), o = n[i++];
      while (o !== void 0);
    else
      do
        l = o[r], l !== void 0 && (e.push(o.time), t.push(l)), o = n[i++];
      while (o !== void 0);
}
function gY(n, e, t, r, i = 30) {
  const o = n.clone();
  o.name = e;
  const l = [];
  for (let h = 0; h < o.tracks.length; ++h) {
    const p = o.tracks[h], y = p.getValueSize(), _ = [], E = [];
    for (let w = 0; w < p.times.length; ++w) {
      const R = p.times[w] * i;
      if (!(R < t || R >= r)) {
        _.push(p.times[w]);
        for (let U = 0; U < y; ++U)
          E.push(p.values[w * y + U]);
      }
    }
    _.length !== 0 && (p.times = e_(_, p.times.constructor), p.values = e_(E, p.values.constructor), l.push(p));
  }
  o.tracks = l;
  let u = 1 / 0;
  for (let h = 0; h < o.tracks.length; ++h)
    u > o.tracks[h].times[0] && (u = o.tracks[h].times[0]);
  for (let h = 0; h < o.tracks.length; ++h)
    o.tracks[h].shift(-1 * u);
  return o.resetDuration(), o;
}
function yY(n, e = 0, t = n, r = 30) {
  r <= 0 && (r = 30);
  const i = t.tracks.length, o = e / r;
  for (let l = 0; l < i; ++l) {
    const u = t.tracks[l], h = u.ValueTypeName;
    if (h === "bool" || h === "string")
      continue;
    const p = n.tracks.find(function(A) {
      return A.name === u.name && A.ValueTypeName === h;
    });
    if (p === void 0)
      continue;
    let y = 0;
    const _ = u.getValueSize();
    u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (y = _ / 3);
    let E = 0;
    const w = p.getValueSize();
    p.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (E = w / 3);
    const R = u.times.length - 1;
    let U;
    if (o <= u.times[0]) {
      const A = y, k = _ - y;
      U = lp(u.values, A, k);
    } else if (o >= u.times[R]) {
      const A = R * _ + y, k = A + _ - y;
      U = lp(u.values, A, k);
    } else {
      const A = u.createInterpolant(), k = y, F = _ - y;
      A.evaluate(o), U = lp(A.resultBuffer, k, F);
    }
    h === "quaternion" && new jc().fromArray(U).normalize().conjugate().toArray(U);
    const L = p.times.length;
    for (let A = 0; A < L; ++A) {
      const k = A * w + E;
      if (h === "quaternion")
        jc.multiplyQuaternionsFlat(
          p.values,
          k,
          U,
          0,
          p.values,
          k
        );
      else {
        const F = w - E * 2;
        for (let H = 0; H < F; ++H)
          p.values[k + H] -= U[H];
      }
    }
  }
  return n.blendMode = hP, n;
}
const SY = {
  arraySlice: lp,
  convertArray: e_,
  isTypedArray: UP,
  getKeyframeOrder: q4,
  sortedArray: gO,
  flattenJSON: NP,
  subclip: gY,
  makeClipAdditive: yY
};
class rw {
  constructor(e, t, r, i) {
    this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new t.constructor(r), this.sampleValues = t, this.valueSize = r, this.settings = null, this.DefaultSettings_ = {};
  }
  evaluate(e) {
    const t = this.parameterPositions;
    let r = this._cachedIndex, i = t[r], o = t[r - 1];
    e: {
      t: {
        let l;
        n: {
          r:
            if (!(e < i)) {
              for (let u = r + 2; ; ) {
                if (i === void 0) {
                  if (e < o)
                    break r;
                  return r = t.length, this._cachedIndex = r, this.copySampleValue_(r - 1);
                }
                if (r === u)
                  break;
                if (o = i, i = t[++r], e < i)
                  break t;
              }
              l = t.length;
              break n;
            }
          if (!(e >= o)) {
            const u = t[1];
            e < u && (r = 2, o = u);
            for (let h = r - 2; ; ) {
              if (o === void 0)
                return this._cachedIndex = 0, this.copySampleValue_(0);
              if (r === h)
                break;
              if (i = o, o = t[--r - 1], e >= o)
                break t;
            }
            l = r, r = 0;
            break n;
          }
          break e;
        }
        for (; r < l; ) {
          const u = r + l >>> 1;
          e < t[u] ? l = u : r = u + 1;
        }
        if (i = t[r], o = t[r - 1], o === void 0)
          return this._cachedIndex = 0, this.copySampleValue_(0);
        if (i === void 0)
          return r = t.length, this._cachedIndex = r, this.copySampleValue_(r - 1);
      }
      this._cachedIndex = r, this.intervalChanged_(r, o, i);
    }
    return this.interpolate_(r, o, e, i);
  }
  getSettings_() {
    return this.settings || this.DefaultSettings_;
  }
  copySampleValue_(e) {
    const t = this.resultBuffer, r = this.sampleValues, i = this.valueSize, o = e * i;
    for (let l = 0; l !== i; ++l)
      t[l] = r[o + l];
    return t;
  }
  // Template methods for derived classes:
  interpolate_() {
    throw new Error("call to abstract method");
  }
  intervalChanged_() {
  }
}
class K4 extends rw {
  constructor(e, t, r, i) {
    super(e, t, r, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
      endingStart: QS,
      endingEnd: QS
    };
  }
  intervalChanged_(e, t, r) {
    const i = this.parameterPositions;
    let o = e - 2, l = e + 1, u = i[o], h = i[l];
    if (u === void 0)
      switch (this.getSettings_().endingStart) {
        case ZS:
          o = e, u = 2 * t - r;
          break;
        case OT:
          o = i.length - 2, u = t + i[o] - i[o + 1];
          break;
        default:
          o = e, u = r;
      }
    if (h === void 0)
      switch (this.getSettings_().endingEnd) {
        case ZS:
          l = e, h = 2 * r - t;
          break;
        case OT:
          l = 1, h = r + i[1] - i[0];
          break;
        default:
          l = e - 1, h = t;
      }
    const p = (r - t) * 0.5, y = this.valueSize;
    this._weightPrev = p / (t - u), this._weightNext = p / (h - r), this._offsetPrev = o * y, this._offsetNext = l * y;
  }
  interpolate_(e, t, r, i) {
    const o = this.resultBuffer, l = this.sampleValues, u = this.valueSize, h = e * u, p = h - u, y = this._offsetPrev, _ = this._offsetNext, E = this._weightPrev, w = this._weightNext, R = (r - t) / (i - t), U = R * R, L = U * R, A = -E * L + 2 * E * U - E * R, k = (1 + E) * L + (-1.5 - 2 * E) * U + (-0.5 + E) * R + 1, F = (-1 - w) * L + (1.5 + w) * U + 0.5 * R, H = w * L - w * U;
    for (let B = 0; B !== u; ++B)
      o[B] = A * l[y + B] + k * l[p + B] + F * l[h + B] + H * l[_ + B];
    return o;
  }
}
class kP extends rw {
  constructor(e, t, r, i) {
    super(e, t, r, i);
  }
  interpolate_(e, t, r, i) {
    const o = this.resultBuffer, l = this.sampleValues, u = this.valueSize, h = e * u, p = h - u, y = (r - t) / (i - t), _ = 1 - y;
    for (let E = 0; E !== u; ++E)
      o[E] = l[p + E] * _ + l[h + E] * y;
    return o;
  }
}
class Q4 extends rw {
  constructor(e, t, r, i) {
    super(e, t, r, i);
  }
  interpolate_(e) {
    return this.copySampleValue_(e - 1);
  }
}
class pm {
  constructor(e, t, r, i) {
    if (e === void 0)
      throw new Error("THREE.KeyframeTrack: track name is undefined");
    if (t === void 0 || t.length === 0)
      throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
    this.name = e, this.times = e_(t, this.TimeBufferType), this.values = e_(r, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
  }
  // Serialization (in static context, because of constructor invocation
  // and automatic invocation of .toJSON):
  static toJSON(e) {
    const t = e.constructor;
    let r;
    if (t.toJSON !== this.toJSON)
      r = t.toJSON(e);
    else {
      r = {
        name: e.name,
        times: e_(e.times, Array),
        values: e_(e.values, Array)
      };
      const i = e.getInterpolation();
      i !== e.DefaultInterpolation && (r.interpolation = i);
    }
    return r.type = e.ValueTypeName, r;
  }
  InterpolantFactoryMethodDiscrete(e) {
    return new Q4(this.times, this.values, this.getValueSize(), e);
  }
  InterpolantFactoryMethodLinear(e) {
    return new kP(this.times, this.values, this.getValueSize(), e);
  }
  InterpolantFactoryMethodSmooth(e) {
    return new K4(this.times, this.values, this.getValueSize(), e);
  }
  setInterpolation(e) {
    let t;
    switch (e) {
      case DT:
        t = this.InterpolantFactoryMethodDiscrete;
        break;
      case LT:
        t = this.InterpolantFactoryMethodLinear;
        break;
      case oR:
        t = this.InterpolantFactoryMethodSmooth;
        break;
    }
    if (t === void 0) {
      const r = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
      if (this.createInterpolant === void 0)
        if (e !== this.DefaultInterpolation)
          this.setInterpolation(this.DefaultInterpolation);
        else
          throw new Error(r);
      return console.warn("THREE.KeyframeTrack:", r), this;
    }
    return this.createInterpolant = t, this;
  }
  getInterpolation() {
    switch (this.createInterpolant) {
      case this.InterpolantFactoryMethodDiscrete:
        return DT;
      case this.InterpolantFactoryMethodLinear:
        return LT;
      case this.InterpolantFactoryMethodSmooth:
        return oR;
    }
  }
  getValueSize() {
    return this.values.length / this.times.length;
  }
  // move all keyframes either forwards or backwards in time
  shift(e) {
    if (e !== 0) {
      const t = this.times;
      for (let r = 0, i = t.length; r !== i; ++r)
        t[r] += e;
    }
    return this;
  }
  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)
  scale(e) {
    if (e !== 1) {
      const t = this.times;
      for (let r = 0, i = t.length; r !== i; ++r)
        t[r] *= e;
    }
    return this;
  }
  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].
  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
  trim(e, t) {
    const r = this.times, i = r.length;
    let o = 0, l = i - 1;
    for (; o !== i && r[o] < e; )
      ++o;
    for (; l !== -1 && r[l] > t; )
      --l;
    if (++l, o !== 0 || l !== i) {
      o >= l && (l = Math.max(l, 1), o = l - 1);
      const u = this.getValueSize();
      this.times = lp(r, o, l), this.values = lp(this.values, o * u, l * u);
    }
    return this;
  }
  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
  validate() {
    let e = !0;
    const t = this.getValueSize();
    t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
    const r = this.times, i = this.values, o = r.length;
    o === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
    let l = null;
    for (let u = 0; u !== o; u++) {
      const h = r[u];
      if (typeof h == "number" && isNaN(h)) {
        console.error("THREE.KeyframeTrack: Time is not a valid number.", this, u, h), e = !1;
        break;
      }
      if (l !== null && l > h) {
        console.error("THREE.KeyframeTrack: Out of order keys.", this, u, h, l), e = !1;
        break;
      }
      l = h;
    }
    if (i !== void 0 && UP(i))
      for (let u = 0, h = i.length; u !== h; ++u) {
        const p = i[u];
        if (isNaN(p)) {
          console.error("THREE.KeyframeTrack: Value is not a valid number.", this, u, p), e = !1;
          break;
        }
      }
    return e;
  }
  // removes equivalent sequential keys as common in morph target sequences
  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
  optimize() {
    const e = lp(this.times), t = lp(this.values), r = this.getValueSize(), i = this.getInterpolation() === oR, o = e.length - 1;
    let l = 1;
    for (let u = 1; u < o; ++u) {
      let h = !1;
      const p = e[u], y = e[u + 1];
      if (p !== y && (u !== 1 || p !== e[0]))
        if (i)
          h = !0;
        else {
          const _ = u * r, E = _ - r, w = _ + r;
          for (let R = 0; R !== r; ++R) {
            const U = t[_ + R];
            if (U !== t[E + R] || U !== t[w + R]) {
              h = !0;
              break;
            }
          }
        }
      if (h) {
        if (u !== l) {
          e[l] = e[u];
          const _ = u * r, E = l * r;
          for (let w = 0; w !== r; ++w)
            t[E + w] = t[_ + w];
        }
        ++l;
      }
    }
    if (o > 0) {
      e[l] = e[o];
      for (let u = o * r, h = l * r, p = 0; p !== r; ++p)
        t[h + p] = t[u + p];
      ++l;
    }
    return l !== e.length ? (this.times = lp(e, 0, l), this.values = lp(t, 0, l * r)) : (this.times = e, this.values = t), this;
  }
  clone() {
    const e = lp(this.times, 0), t = lp(this.values, 0), r = this.constructor, i = new r(this.name, e, t);
    return i.createInterpolant = this.createInterpolant, i;
  }
}
pm.prototype.TimeBufferType = Float32Array;
pm.prototype.ValueBufferType = Float32Array;
pm.prototype.DefaultInterpolation = LT;
class y_ extends pm {
}
y_.prototype.ValueTypeName = "bool";
y_.prototype.ValueBufferType = Array;
y_.prototype.DefaultInterpolation = DT;
y_.prototype.InterpolantFactoryMethodLinear = void 0;
y_.prototype.InterpolantFactoryMethodSmooth = void 0;
class FP extends pm {
}
FP.prototype.ValueTypeName = "color";
class BT extends pm {
}
BT.prototype.ValueTypeName = "number";
class Z4 extends rw {
  constructor(e, t, r, i) {
    super(e, t, r, i);
  }
  interpolate_(e, t, r, i) {
    const o = this.resultBuffer, l = this.sampleValues, u = this.valueSize, h = (r - t) / (i - t);
    let p = e * u;
    for (let y = p + u; p !== y; p += 4)
      jc.slerpFlat(o, 0, l, p - u, l, p, h);
    return o;
  }
}
class q1 extends pm {
  InterpolantFactoryMethodLinear(e) {
    return new Z4(this.times, this.values, this.getValueSize(), e);
  }
}
q1.prototype.ValueTypeName = "quaternion";
q1.prototype.DefaultInterpolation = LT;
q1.prototype.InterpolantFactoryMethodSmooth = void 0;
class S_ extends pm {
}
S_.prototype.ValueTypeName = "string";
S_.prototype.ValueBufferType = Array;
S_.prototype.DefaultInterpolation = DT;
S_.prototype.InterpolantFactoryMethodLinear = void 0;
S_.prototype.InterpolantFactoryMethodSmooth = void 0;
class HT extends pm {
}
HT.prototype.ValueTypeName = "vector";
class VT {
  constructor(e, t = -1, r, i = IR) {
    this.name = e, this.tracks = r, this.duration = t, this.blendMode = i, this.uuid = mh(), this.duration < 0 && this.resetDuration();
  }
  static parse(e) {
    const t = [], r = e.tracks, i = 1 / (e.fps || 1);
    for (let l = 0, u = r.length; l !== u; ++l)
      t.push(xY(r[l]).scale(i));
    const o = new this(e.name, e.duration, t, e.blendMode);
    return o.uuid = e.uuid, o;
  }
  static toJSON(e) {
    const t = [], r = e.tracks, i = {
      name: e.name,
      duration: e.duration,
      tracks: t,
      uuid: e.uuid,
      blendMode: e.blendMode
    };
    for (let o = 0, l = r.length; o !== l; ++o)
      t.push(pm.toJSON(r[o]));
    return i;
  }
  static CreateFromMorphTargetSequence(e, t, r, i) {
    const o = t.length, l = [];
    for (let u = 0; u < o; u++) {
      let h = [], p = [];
      h.push(
        (u + o - 1) % o,
        u,
        (u + 1) % o
      ), p.push(0, 1, 0);
      const y = q4(h);
      h = gO(h, 1, y), p = gO(p, 1, y), !i && h[0] === 0 && (h.push(o), p.push(p[0])), l.push(
        new BT(
          ".morphTargetInfluences[" + t[u].name + "]",
          h,
          p
        ).scale(1 / r)
      );
    }
    return new this(e, -1, l);
  }
  static findByName(e, t) {
    let r = e;
    if (!Array.isArray(e)) {
      const i = e;
      r = i.geometry && i.geometry.animations || i.animations;
    }
    for (let i = 0; i < r.length; i++)
      if (r[i].name === t)
        return r[i];
    return null;
  }
  static CreateClipsFromMorphTargetSequences(e, t, r) {
    const i = {}, o = /^([\w-]*?)([\d]+)$/;
    for (let u = 0, h = e.length; u < h; u++) {
      const p = e[u], y = p.name.match(o);
      if (y && y.length > 1) {
        const _ = y[1];
        let E = i[_];
        E || (i[_] = E = []), E.push(p);
      }
    }
    const l = [];
    for (const u in i)
      l.push(this.CreateFromMorphTargetSequence(u, i[u], t, r));
    return l;
  }
  // parse the animation.hierarchy format
  static parseAnimation(e, t) {
    if (!e)
      return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
    const r = function(_, E, w, R, U) {
      if (w.length !== 0) {
        const L = [], A = [];
        NP(w, L, A, R), L.length !== 0 && U.push(new _(E, L, A));
      }
    }, i = [], o = e.name || "default", l = e.fps || 30, u = e.blendMode;
    let h = e.length || -1;
    const p = e.hierarchy || [];
    for (let _ = 0; _ < p.length; _++) {
      const E = p[_].keys;
      if (!(!E || E.length === 0))
        if (E[0].morphTargets) {
          const w = {};
          let R;
          for (R = 0; R < E.length; R++)
            if (E[R].morphTargets)
              for (let U = 0; U < E[R].morphTargets.length; U++)
                w[E[R].morphTargets[U]] = -1;
          for (const U in w) {
            const L = [], A = [];
            for (let k = 0; k !== E[R].morphTargets.length; ++k) {
              const F = E[R];
              L.push(F.time), A.push(F.morphTarget === U ? 1 : 0);
            }
            i.push(new BT(".morphTargetInfluence[" + U + "]", L, A));
          }
          h = w.length * l;
        } else {
          const w = ".bones[" + t[_].name + "]";
          r(
            HT,
            w + ".position",
            E,
            "pos",
            i
          ), r(
            q1,
            w + ".quaternion",
            E,
            "rot",
            i
          ), r(
            HT,
            w + ".scale",
            E,
            "scl",
            i
          );
        }
    }
    return i.length === 0 ? null : new this(o, h, i, u);
  }
  resetDuration() {
    const e = this.tracks;
    let t = 0;
    for (let r = 0, i = e.length; r !== i; ++r) {
      const o = this.tracks[r];
      t = Math.max(t, o.times[o.times.length - 1]);
    }
    return this.duration = t, this;
  }
  trim() {
    for (let e = 0; e < this.tracks.length; e++)
      this.tracks[e].trim(0, this.duration);
    return this;
  }
  validate() {
    let e = !0;
    for (let t = 0; t < this.tracks.length; t++)
      e = e && this.tracks[t].validate();
    return e;
  }
  optimize() {
    for (let e = 0; e < this.tracks.length; e++)
      this.tracks[e].optimize();
    return this;
  }
  clone() {
    const e = [];
    for (let t = 0; t < this.tracks.length; t++)
      e.push(this.tracks[t].clone());
    return new this.constructor(this.name, this.duration, e, this.blendMode);
  }
  toJSON() {
    return this.constructor.toJSON(this);
  }
}
function _Y(n) {
  switch (n.toLowerCase()) {
    case "scalar":
    case "double":
    case "float":
    case "number":
    case "integer":
      return BT;
    case "vector":
    case "vector2":
    case "vector3":
    case "vector4":
      return HT;
    case "color":
      return FP;
    case "quaternion":
      return q1;
    case "bool":
    case "boolean":
      return y_;
    case "string":
      return S_;
  }
  throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + n);
}
function xY(n) {
  if (n.type === void 0)
    throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
  const e = _Y(n.type);
  if (n.times === void 0) {
    const t = [], r = [];
    NP(n.keys, t, r, "value"), n.times = t, n.values = r;
  }
  return e.parse !== void 0 ? e.parse(n) : new e(n.name, n.times, n.values, n.interpolation);
}
const h_ = {
  enabled: !1,
  files: {},
  add: function(n, e) {
    this.enabled !== !1 && (this.files[n] = e);
  },
  get: function(n) {
    if (this.enabled !== !1)
      return this.files[n];
  },
  remove: function(n) {
    delete this.files[n];
  },
  clear: function() {
    this.files = {};
  }
};
class zP {
  constructor(e, t, r) {
    const i = this;
    let o = !1, l = 0, u = 0, h;
    const p = [];
    this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = r, this.itemStart = function(y) {
      u++, o === !1 && i.onStart !== void 0 && i.onStart(y, l, u), o = !0;
    }, this.itemEnd = function(y) {
      l++, i.onProgress !== void 0 && i.onProgress(y, l, u), l === u && (o = !1, i.onLoad !== void 0 && i.onLoad());
    }, this.itemError = function(y) {
      i.onError !== void 0 && i.onError(y);
    }, this.resolveURL = function(y) {
      return h ? h(y) : y;
    }, this.setURLModifier = function(y) {
      return h = y, this;
    }, this.addHandler = function(y, _) {
      return p.push(y, _), this;
    }, this.removeHandler = function(y) {
      const _ = p.indexOf(y);
      return _ !== -1 && p.splice(_, 2), this;
    }, this.getHandler = function(y) {
      for (let _ = 0, E = p.length; _ < E; _ += 2) {
        const w = p[_], R = p[_ + 1];
        if (w.global && (w.lastIndex = 0), w.test(y))
          return R;
      }
      return null;
    };
  }
}
const J4 = /* @__PURE__ */ new zP();
class Ed {
  constructor(e) {
    this.manager = e !== void 0 ? e : J4, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
  }
  load() {
  }
  loadAsync(e, t) {
    const r = this;
    return new Promise(function(i, o) {
      r.load(e, i, t, o);
    });
  }
  parse() {
  }
  setCrossOrigin(e) {
    return this.crossOrigin = e, this;
  }
  setWithCredentials(e) {
    return this.withCredentials = e, this;
  }
  setPath(e) {
    return this.path = e, this;
  }
  setResourcePath(e) {
    return this.resourcePath = e, this;
  }
  setRequestHeader(e) {
    return this.requestHeader = e, this;
  }
}
Ed.DEFAULT_MATERIAL_NAME = "__DEFAULT";
const Dg = {};
class EY extends Error {
  constructor(e, t) {
    super(e), this.response = t;
  }
}
class Hg extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
    const o = h_.get(e);
    if (o !== void 0)
      return this.manager.itemStart(e), setTimeout(() => {
        t && t(o), this.manager.itemEnd(e);
      }, 0), o;
    if (Dg[e] !== void 0) {
      Dg[e].push({
        onLoad: t,
        onProgress: r,
        onError: i
      });
      return;
    }
    Dg[e] = [], Dg[e].push({
      onLoad: t,
      onProgress: r,
      onError: i
    });
    const l = new Request(e, {
      headers: new Headers(this.requestHeader),
      credentials: this.withCredentials ? "include" : "same-origin"
      // An abort controller could be added within a future PR
    }), u = this.mimeType, h = this.responseType;
    fetch(l).then((p) => {
      if (p.status === 200 || p.status === 0) {
        if (p.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || p.body === void 0 || p.body.getReader === void 0)
          return p;
        const y = Dg[e], _ = p.body.getReader(), E = p.headers.get("Content-Length") || p.headers.get("X-File-Size"), w = E ? parseInt(E) : 0, R = w !== 0;
        let U = 0;
        const L = new ReadableStream({
          start(A) {
            k();
            function k() {
              _.read().then(({ done: F, value: H }) => {
                if (F)
                  A.close();
                else {
                  U += H.byteLength;
                  const B = new ProgressEvent("progress", { lengthComputable: R, loaded: U, total: w });
                  for (let j = 0, Y = y.length; j < Y; j++) {
                    const ee = y[j];
                    ee.onProgress && ee.onProgress(B);
                  }
                  A.enqueue(H), k();
                }
              });
            }
          }
        });
        return new Response(L);
      } else
        throw new EY(`fetch for "${p.url}" responded with ${p.status}: ${p.statusText}`, p);
    }).then((p) => {
      switch (h) {
        case "arraybuffer":
          return p.arrayBuffer();
        case "blob":
          return p.blob();
        case "document":
          return p.text().then((y) => new DOMParser().parseFromString(y, u));
        case "json":
          return p.json();
        default:
          if (u === void 0)
            return p.text();
          {
            const _ = /charset="?([^;"\s]*)"?/i.exec(u), E = _ && _[1] ? _[1].toLowerCase() : void 0, w = new TextDecoder(E);
            return p.arrayBuffer().then((R) => w.decode(R));
          }
      }
    }).then((p) => {
      h_.add(e, p);
      const y = Dg[e];
      delete Dg[e];
      for (let _ = 0, E = y.length; _ < E; _++) {
        const w = y[_];
        w.onLoad && w.onLoad(p);
      }
    }).catch((p) => {
      const y = Dg[e];
      if (y === void 0)
        throw this.manager.itemError(e), p;
      delete Dg[e];
      for (let _ = 0, E = y.length; _ < E; _++) {
        const w = y[_];
        w.onError && w.onError(p);
      }
      this.manager.itemError(e);
    }).finally(() => {
      this.manager.itemEnd(e);
    }), this.manager.itemStart(e);
  }
  setResponseType(e) {
    return this.responseType = e, this;
  }
  setMimeType(e) {
    return this.mimeType = e, this;
  }
}
class bY extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = this, l = new Hg(this.manager);
    l.setPath(this.path), l.setRequestHeader(this.requestHeader), l.setWithCredentials(this.withCredentials), l.load(e, function(u) {
      try {
        t(o.parse(JSON.parse(u)));
      } catch (h) {
        i ? i(h) : console.error(h), o.manager.itemError(e);
      }
    }, r, i);
  }
  parse(e) {
    const t = [];
    for (let r = 0; r < e.length; r++) {
      const i = VT.parse(e[r]);
      t.push(i);
    }
    return t;
  }
}
class TY extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = this, l = [], u = new qR(), h = new Hg(this.manager);
    h.setPath(this.path), h.setResponseType("arraybuffer"), h.setRequestHeader(this.requestHeader), h.setWithCredentials(o.withCredentials);
    let p = 0;
    function y(_) {
      h.load(e[_], function(E) {
        const w = o.parse(E, !0);
        l[_] = {
          width: w.width,
          height: w.height,
          format: w.format,
          mipmaps: w.mipmaps
        }, p += 1, p === 6 && (w.mipmapCount === 1 && (u.minFilter = Ss), u.image = l, u.format = w.format, u.needsUpdate = !0, t && t(u));
      }, r, i);
    }
    if (Array.isArray(e))
      for (let _ = 0, E = e.length; _ < E; ++_)
        y(_);
    else
      h.load(e, function(_) {
        const E = o.parse(_, !0);
        if (E.isCubemap) {
          const w = E.mipmaps.length / E.mipmapCount;
          for (let R = 0; R < w; R++) {
            l[R] = { mipmaps: [] };
            for (let U = 0; U < E.mipmapCount; U++)
              l[R].mipmaps.push(E.mipmaps[R * E.mipmapCount + U]), l[R].format = E.format, l[R].width = E.width, l[R].height = E.height;
          }
          u.image = l;
        } else
          u.image.width = E.width, u.image.height = E.height, u.mipmaps = E.mipmaps;
        E.mipmapCount === 1 && (u.minFilter = Ss), u.format = E.format, u.needsUpdate = !0, t && t(u);
      }, r, i);
    return u;
  }
}
class GT extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
    const o = this, l = h_.get(e);
    if (l !== void 0)
      return o.manager.itemStart(e), setTimeout(function() {
        t && t(l), o.manager.itemEnd(e);
      }, 0), l;
    const u = NT("img");
    function h() {
      y(), h_.add(e, this), t && t(this), o.manager.itemEnd(e);
    }
    function p(_) {
      y(), i && i(_), o.manager.itemError(e), o.manager.itemEnd(e);
    }
    function y() {
      u.removeEventListener("load", h, !1), u.removeEventListener("error", p, !1);
    }
    return u.addEventListener("load", h, !1), u.addEventListener("error", p, !1), e.slice(0, 5) !== "data:" && this.crossOrigin !== void 0 && (u.crossOrigin = this.crossOrigin), o.manager.itemStart(e), u.src = e, u;
  }
}
class wY extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = new JT();
    o.colorSpace = Mo;
    const l = new GT(this.manager);
    l.setCrossOrigin(this.crossOrigin), l.setPath(this.path);
    let u = 0;
    function h(p) {
      l.load(e[p], function(y) {
        o.images[p] = y, u++, u === 6 && (o.needsUpdate = !0, t && t(o));
      }, void 0, i);
    }
    for (let p = 0; p < e.length; ++p)
      h(p);
    return o;
  }
}
class MY extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = this, l = new N1(), u = new Hg(this.manager);
    return u.setResponseType("arraybuffer"), u.setRequestHeader(this.requestHeader), u.setPath(this.path), u.setWithCredentials(o.withCredentials), u.load(e, function(h) {
      let p;
      try {
        p = o.parse(h);
      } catch (y) {
        if (i !== void 0)
          i(y);
        else {
          console.error(y);
          return;
        }
      }
      p.image !== void 0 ? l.image = p.image : p.data !== void 0 && (l.image.width = p.width, l.image.height = p.height, l.image.data = p.data), l.wrapS = p.wrapS !== void 0 ? p.wrapS : Vc, l.wrapT = p.wrapT !== void 0 ? p.wrapT : Vc, l.magFilter = p.magFilter !== void 0 ? p.magFilter : Ss, l.minFilter = p.minFilter !== void 0 ? p.minFilter : Ss, l.anisotropy = p.anisotropy !== void 0 ? p.anisotropy : 1, p.colorSpace !== void 0 ? l.colorSpace = p.colorSpace : p.encoding !== void 0 && (l.encoding = p.encoding), p.flipY !== void 0 && (l.flipY = p.flipY), p.format !== void 0 && (l.format = p.format), p.type !== void 0 && (l.type = p.type), p.mipmaps !== void 0 && (l.mipmaps = p.mipmaps, l.minFilter = p0), p.mipmapCount === 1 && (l.minFilter = Ss), p.generateMipmaps !== void 0 && (l.generateMipmaps = p.generateMipmaps), l.needsUpdate = !0, t && t(l, p);
    }, r, i), l;
  }
}
class CY extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = new Es(), l = new GT(this.manager);
    return l.setCrossOrigin(this.crossOrigin), l.setPath(this.path), l.load(e, function(u) {
      o.image = u, o.needsUpdate = !0, t !== void 0 && t(o);
    }, r, i), o;
  }
}
class b0 extends xa {
  constructor(e, t = 1) {
    super(), this.isLight = !0, this.type = "Light", this.color = new Pn(e), this.intensity = t;
  }
  dispose() {
  }
  copy(e, t) {
    return super.copy(e, t), this.color.copy(e.color), this.intensity = e.intensity, this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, this.groundColor !== void 0 && (t.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (t.object.distance = this.distance), this.angle !== void 0 && (t.object.angle = this.angle), this.decay !== void 0 && (t.object.decay = this.decay), this.penumbra !== void 0 && (t.object.penumbra = this.penumbra), this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()), t;
  }
}
class eB extends b0 {
  constructor(e, t, r) {
    super(e, r), this.isHemisphereLight = !0, this.type = "HemisphereLight", this.position.copy(xa.DEFAULT_UP), this.updateMatrix(), this.groundColor = new Pn(t);
  }
  copy(e, t) {
    return super.copy(e, t), this.groundColor.copy(e.groundColor), this;
  }
}
const $D = /* @__PURE__ */ new ri(), xk = /* @__PURE__ */ new Re(), Ek = /* @__PURE__ */ new Re();
class IP {
  constructor(e) {
    this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new $t(512, 512), this.map = null, this.mapPass = null, this.matrix = new ri(), this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new HR(), this._frameExtents = new $t(1, 1), this._viewportCount = 1, this._viewports = [
      new Ma(0, 0, 1, 1)
    ];
  }
  getViewportCount() {
    return this._viewportCount;
  }
  getFrustum() {
    return this._frustum;
  }
  updateMatrices(e) {
    const t = this.camera, r = this.matrix;
    xk.setFromMatrixPosition(e.matrixWorld), t.position.copy(xk), Ek.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(Ek), t.updateMatrixWorld(), $D.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix($D), r.set(
      0.5,
      0,
      0,
      0.5,
      0,
      0.5,
      0,
      0.5,
      0,
      0,
      0.5,
      0.5,
      0,
      0,
      0,
      1
    ), r.multiply($D);
  }
  getViewport(e) {
    return this._viewports[e];
  }
  getFrameExtents() {
    return this._frameExtents;
  }
  dispose() {
    this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
  }
  copy(e) {
    return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  toJSON() {
    const e = {};
    return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
  }
}
class RY extends IP {
  constructor() {
    super(new Ws(50, 1, 0.5, 500)), this.isSpotLightShadow = !0, this.focus = 1;
  }
  updateMatrices(e) {
    const t = this.camera, r = I1 * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, o = e.distance || t.far;
    (r !== t.fov || i !== t.aspect || o !== t.far) && (t.fov = r, t.aspect = i, t.far = o, t.updateProjectionMatrix()), super.updateMatrices(e);
  }
  copy(e) {
    return super.copy(e), this.focus = e.focus, this;
  }
}
class tB extends b0 {
  constructor(e, t, r = 0, i = Math.PI / 3, o = 0, l = 2) {
    super(e, t), this.isSpotLight = !0, this.type = "SpotLight", this.position.copy(xa.DEFAULT_UP), this.updateMatrix(), this.target = new xa(), this.distance = r, this.angle = i, this.penumbra = o, this.decay = l, this.map = null, this.shadow = new RY();
  }
  get power() {
    return this.intensity * Math.PI;
  }
  set power(e) {
    this.intensity = e / Math.PI;
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e, t) {
    return super.copy(e, t), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
  }
}
const bk = /* @__PURE__ */ new ri(), rT = /* @__PURE__ */ new Re(), YD = /* @__PURE__ */ new Re();
class AY extends IP {
  constructor() {
    super(new Ws(90, 1, 0.5, 500)), this.isPointLightShadow = !0, this._frameExtents = new $t(4, 2), this._viewportCount = 6, this._viewports = [
      // These viewports map a cube-map onto a 2D texture with the
      // following orientation:
      //
      //  xzXZ
      //   y Y
      //
      // X - Positive x direction
      // x - Negative x direction
      // Y - Positive y direction
      // y - Negative y direction
      // Z - Positive z direction
      // z - Negative z direction
      // positive X
      new Ma(2, 1, 1, 1),
      // negative X
      new Ma(0, 1, 1, 1),
      // positive Z
      new Ma(3, 1, 1, 1),
      // negative Z
      new Ma(1, 1, 1, 1),
      // positive Y
      new Ma(3, 0, 1, 1),
      // negative Y
      new Ma(1, 0, 1, 1)
    ], this._cubeDirections = [
      new Re(1, 0, 0),
      new Re(-1, 0, 0),
      new Re(0, 0, 1),
      new Re(0, 0, -1),
      new Re(0, 1, 0),
      new Re(0, -1, 0)
    ], this._cubeUps = [
      new Re(0, 1, 0),
      new Re(0, 1, 0),
      new Re(0, 1, 0),
      new Re(0, 1, 0),
      new Re(0, 0, 1),
      new Re(0, 0, -1)
    ];
  }
  updateMatrices(e, t = 0) {
    const r = this.camera, i = this.matrix, o = e.distance || r.far;
    o !== r.far && (r.far = o, r.updateProjectionMatrix()), rT.setFromMatrixPosition(e.matrixWorld), r.position.copy(rT), YD.copy(r.position), YD.add(this._cubeDirections[t]), r.up.copy(this._cubeUps[t]), r.lookAt(YD), r.updateMatrixWorld(), i.makeTranslation(-rT.x, -rT.y, -rT.z), bk.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse), this._frustum.setFromProjectionMatrix(bk);
  }
}
class nB extends b0 {
  constructor(e, t, r = 0, i = 2) {
    super(e, t), this.isPointLight = !0, this.type = "PointLight", this.distance = r, this.decay = i, this.shadow = new AY();
  }
  get power() {
    return this.intensity * 4 * Math.PI;
  }
  set power(e) {
    this.intensity = e / (4 * Math.PI);
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e, t) {
    return super.copy(e, t), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
  }
}
class DY extends IP {
  constructor() {
    super(new Fg(-5, 5, 5, -5, 0.5, 500)), this.isDirectionalLightShadow = !0;
  }
}
class rB extends b0 {
  constructor(e, t) {
    super(e, t), this.isDirectionalLight = !0, this.type = "DirectionalLight", this.position.copy(xa.DEFAULT_UP), this.updateMatrix(), this.target = new xa(), this.shadow = new DY();
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e) {
    return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
  }
}
class iB extends b0 {
  constructor(e, t) {
    super(e, t), this.isAmbientLight = !0, this.type = "AmbientLight";
  }
}
class aB extends b0 {
  constructor(e, t, r = 10, i = 10) {
    super(e, t), this.isRectAreaLight = !0, this.type = "RectAreaLight", this.width = r, this.height = i;
  }
  get power() {
    return this.intensity * this.width * this.height * Math.PI;
  }
  set power(e) {
    this.intensity = e / (this.width * this.height * Math.PI);
  }
  copy(e) {
    return super.copy(e), this.width = e.width, this.height = e.height, this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return t.object.width = this.width, t.object.height = this.height, t;
  }
}
class oB {
  constructor() {
    this.isSphericalHarmonics3 = !0, this.coefficients = [];
    for (let e = 0; e < 9; e++)
      this.coefficients.push(new Re());
  }
  set(e) {
    for (let t = 0; t < 9; t++)
      this.coefficients[t].copy(e[t]);
    return this;
  }
  zero() {
    for (let e = 0; e < 9; e++)
      this.coefficients[e].set(0, 0, 0);
    return this;
  }
  // get the radiance in the direction of the normal
  // target is a Vector3
  getAt(e, t) {
    const r = e.x, i = e.y, o = e.z, l = this.coefficients;
    return t.copy(l[0]).multiplyScalar(0.282095), t.addScaledVector(l[1], 0.488603 * i), t.addScaledVector(l[2], 0.488603 * o), t.addScaledVector(l[3], 0.488603 * r), t.addScaledVector(l[4], 1.092548 * (r * i)), t.addScaledVector(l[5], 1.092548 * (i * o)), t.addScaledVector(l[6], 0.315392 * (3 * o * o - 1)), t.addScaledVector(l[7], 1.092548 * (r * o)), t.addScaledVector(l[8], 0.546274 * (r * r - i * i)), t;
  }
  // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal
  // target is a Vector3
  // https://graphics.stanford.edu/papers/envmap/envmap.pdf
  getIrradianceAt(e, t) {
    const r = e.x, i = e.y, o = e.z, l = this.coefficients;
    return t.copy(l[0]).multiplyScalar(0.886227), t.addScaledVector(l[1], 2 * 0.511664 * i), t.addScaledVector(l[2], 2 * 0.511664 * o), t.addScaledVector(l[3], 2 * 0.511664 * r), t.addScaledVector(l[4], 2 * 0.429043 * r * i), t.addScaledVector(l[5], 2 * 0.429043 * i * o), t.addScaledVector(l[6], 0.743125 * o * o - 0.247708), t.addScaledVector(l[7], 2 * 0.429043 * r * o), t.addScaledVector(l[8], 0.429043 * (r * r - i * i)), t;
  }
  add(e) {
    for (let t = 0; t < 9; t++)
      this.coefficients[t].add(e.coefficients[t]);
    return this;
  }
  addScaledSH(e, t) {
    for (let r = 0; r < 9; r++)
      this.coefficients[r].addScaledVector(e.coefficients[r], t);
    return this;
  }
  scale(e) {
    for (let t = 0; t < 9; t++)
      this.coefficients[t].multiplyScalar(e);
    return this;
  }
  lerp(e, t) {
    for (let r = 0; r < 9; r++)
      this.coefficients[r].lerp(e.coefficients[r], t);
    return this;
  }
  equals(e) {
    for (let t = 0; t < 9; t++)
      if (!this.coefficients[t].equals(e.coefficients[t]))
        return !1;
    return !0;
  }
  copy(e) {
    return this.set(e.coefficients);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  fromArray(e, t = 0) {
    const r = this.coefficients;
    for (let i = 0; i < 9; i++)
      r[i].fromArray(e, t + i * 3);
    return this;
  }
  toArray(e = [], t = 0) {
    const r = this.coefficients;
    for (let i = 0; i < 9; i++)
      r[i].toArray(e, t + i * 3);
    return e;
  }
  // evaluate the basis functions
  // shBasis is an Array[ 9 ]
  static getBasisAt(e, t) {
    const r = e.x, i = e.y, o = e.z;
    t[0] = 0.282095, t[1] = 0.488603 * i, t[2] = 0.488603 * o, t[3] = 0.488603 * r, t[4] = 1.092548 * r * i, t[5] = 1.092548 * i * o, t[6] = 0.315392 * (3 * o * o - 1), t[7] = 1.092548 * r * o, t[8] = 0.546274 * (r * r - i * i);
  }
}
class f2 extends b0 {
  constructor(e = new oB(), t = 1) {
    super(void 0, t), this.isLightProbe = !0, this.sh = e;
  }
  copy(e) {
    return super.copy(e), this.sh.copy(e.sh), this;
  }
  fromJSON(e) {
    return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return t.object.sh = this.sh.toArray(), t;
  }
}
class d2 extends Ed {
  constructor(e) {
    super(e), this.textures = {};
  }
  load(e, t, r, i) {
    const o = this, l = new Hg(o.manager);
    l.setPath(o.path), l.setRequestHeader(o.requestHeader), l.setWithCredentials(o.withCredentials), l.load(e, function(u) {
      try {
        t(o.parse(JSON.parse(u)));
      } catch (h) {
        i ? i(h) : console.error(h), o.manager.itemError(e);
      }
    }, r, i);
  }
  parse(e) {
    const t = this.textures;
    function r(o) {
      return t[o] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", o), t[o];
    }
    const i = d2.createMaterialFromType(e.type);
    if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new Pn().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.iridescence !== void 0 && (i.iridescence = e.iridescence), e.iridescenceIOR !== void 0 && (i.iridescenceIOR = e.iridescenceIOR), e.iridescenceThicknessRange !== void 0 && (i.iridescenceThicknessRange = e.iridescenceThicknessRange), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.anisotropy !== void 0 && (i.anisotropy = e.anisotropy), e.anisotropyRotation !== void 0 && (i.anisotropyRotation = e.anisotropyRotation), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.alphaHash !== void 0 && (i.alphaHash = e.alphaHash), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== 1 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.forceSinglePass !== void 0 && (i.forceSinglePass = e.forceSinglePass), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0)
      for (const o in e.uniforms) {
        const l = e.uniforms[o];
        switch (i.uniforms[o] = {}, l.type) {
          case "t":
            i.uniforms[o].value = r(l.value);
            break;
          case "c":
            i.uniforms[o].value = new Pn().setHex(l.value);
            break;
          case "v2":
            i.uniforms[o].value = new $t().fromArray(l.value);
            break;
          case "v3":
            i.uniforms[o].value = new Re().fromArray(l.value);
            break;
          case "v4":
            i.uniforms[o].value = new Ma().fromArray(l.value);
            break;
          case "m3":
            i.uniforms[o].value = new _i().fromArray(l.value);
            break;
          case "m4":
            i.uniforms[o].value = new ri().fromArray(l.value);
            break;
          default:
            i.uniforms[o].value = l.value;
        }
      }
    if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.glslVersion !== void 0 && (i.glslVersion = e.glslVersion), e.extensions !== void 0)
      for (const o in e.extensions)
        i.extensions[o] = e.extensions[o];
    if (e.lights !== void 0 && (i.lights = e.lights), e.clipping !== void 0 && (i.clipping = e.clipping), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = r(e.map)), e.matcap !== void 0 && (i.matcap = r(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = r(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = r(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = r(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
      let o = e.normalScale;
      Array.isArray(o) === !1 && (o = [o, o]), i.normalScale = new $t().fromArray(o);
    }
    return e.displacementMap !== void 0 && (i.displacementMap = r(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = r(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = r(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = r(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = r(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = r(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = r(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = r(e.envMap)), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = r(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = r(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = r(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = r(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = r(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = r(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new $t().fromArray(e.clearcoatNormalScale)), e.iridescenceMap !== void 0 && (i.iridescenceMap = r(e.iridescenceMap)), e.iridescenceThicknessMap !== void 0 && (i.iridescenceThicknessMap = r(e.iridescenceThicknessMap)), e.transmissionMap !== void 0 && (i.transmissionMap = r(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = r(e.thicknessMap)), e.anisotropyMap !== void 0 && (i.anisotropyMap = r(e.anisotropyMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = r(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = r(e.sheenRoughnessMap)), i;
  }
  setTextures(e) {
    return this.textures = e, this;
  }
  static createMaterialFromType(e) {
    const t = {
      ShadowMaterial: B4,
      SpriteMaterial: TP,
      RawShaderMaterial: H4,
      ShaderMaterial: Ev,
      PointsMaterial: MP,
      MeshPhysicalMaterial: V4,
      MeshStandardMaterial: PP,
      MeshPhongMaterial: G4,
      MeshToonMaterial: W4,
      MeshNormalMaterial: j4,
      MeshLambertMaterial: $4,
      MeshDepthMaterial: GR,
      MeshDistanceMaterial: WR,
      MeshBasicMaterial: $g,
      MeshMatcapMaterial: Y4,
      LineDashedMaterial: X4,
      LineBasicMaterial: Uf,
      Material: hc
    };
    return new t[e]();
  }
}
class yO {
  static decodeText(e) {
    if (typeof TextDecoder < "u")
      return new TextDecoder().decode(e);
    let t = "";
    for (let r = 0, i = e.length; r < i; r++)
      t += String.fromCharCode(e[r]);
    try {
      return decodeURIComponent(escape(t));
    } catch {
      return t;
    }
  }
  static extractUrlBase(e) {
    const t = e.lastIndexOf("/");
    return t === -1 ? "./" : e.slice(0, t + 1);
  }
  static resolveURL(e, t) {
    return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e);
  }
}
class BP extends Ei {
  constructor() {
    super(), this.isInstancedBufferGeometry = !0, this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
  }
  copy(e) {
    return super.copy(e), this.instanceCount = e.instanceCount, this;
  }
  toJSON() {
    const e = super.toJSON();
    return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
  }
}
class sB extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = this, l = new Hg(o.manager);
    l.setPath(o.path), l.setRequestHeader(o.requestHeader), l.setWithCredentials(o.withCredentials), l.load(e, function(u) {
      try {
        t(o.parse(JSON.parse(u)));
      } catch (h) {
        i ? i(h) : console.error(h), o.manager.itemError(e);
      }
    }, r, i);
  }
  parse(e) {
    const t = {}, r = {};
    function i(w, R) {
      if (t[R] !== void 0)
        return t[R];
      const L = w.interleavedBuffers[R], A = o(w, L.buffer), k = C1(L.type, A), F = new YR(k, L.stride);
      return F.uuid = L.uuid, t[R] = F, F;
    }
    function o(w, R) {
      if (r[R] !== void 0)
        return r[R];
      const L = w.arrayBuffers[R], A = new Uint32Array(L).buffer;
      return r[R] = A, A;
    }
    const l = e.isInstancedBufferGeometry ? new BP() : new Ei(), u = e.data.index;
    if (u !== void 0) {
      const w = C1(u.type, u.array);
      l.setIndex(new mo(w, 1));
    }
    const h = e.data.attributes;
    for (const w in h) {
      const R = h[w];
      let U;
      if (R.isInterleavedBufferAttribute) {
        const L = i(e.data, R.data);
        U = new c_(L, R.itemSize, R.offset, R.normalized);
      } else {
        const L = C1(R.type, R.array), A = R.isInstancedBufferAttribute ? f_ : mo;
        U = new A(L, R.itemSize, R.normalized);
      }
      R.name !== void 0 && (U.name = R.name), R.usage !== void 0 && U.setUsage(R.usage), R.updateRange !== void 0 && (U.updateRange.offset = R.updateRange.offset, U.updateRange.count = R.updateRange.count), l.setAttribute(w, U);
    }
    const p = e.data.morphAttributes;
    if (p)
      for (const w in p) {
        const R = p[w], U = [];
        for (let L = 0, A = R.length; L < A; L++) {
          const k = R[L];
          let F;
          if (k.isInterleavedBufferAttribute) {
            const H = i(e.data, k.data);
            F = new c_(H, k.itemSize, k.offset, k.normalized);
          } else {
            const H = C1(k.type, k.array);
            F = new mo(H, k.itemSize, k.normalized);
          }
          k.name !== void 0 && (F.name = k.name), U.push(F);
        }
        l.morphAttributes[w] = U;
      }
    e.data.morphTargetsRelative && (l.morphTargetsRelative = !0);
    const _ = e.data.groups || e.data.drawcalls || e.data.offsets;
    if (_ !== void 0)
      for (let w = 0, R = _.length; w !== R; ++w) {
        const U = _[w];
        l.addGroup(U.start, U.count, U.materialIndex);
      }
    const E = e.data.boundingSphere;
    if (E !== void 0) {
      const w = new Re();
      E.center !== void 0 && w.fromArray(E.center), l.boundingSphere = new pp(w, E.radius);
    }
    return e.name && (l.name = e.name), e.userData && (l.userData = e.userData), l;
  }
}
class LY extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = this, l = this.path === "" ? yO.extractUrlBase(e) : this.path;
    this.resourcePath = this.resourcePath || l;
    const u = new Hg(this.manager);
    u.setPath(this.path), u.setRequestHeader(this.requestHeader), u.setWithCredentials(this.withCredentials), u.load(e, function(h) {
      let p = null;
      try {
        p = JSON.parse(h);
      } catch (_) {
        i !== void 0 && i(_), console.error("THREE:ObjectLoader: Can't parse " + e + ".", _.message);
        return;
      }
      const y = p.metadata;
      if (y === void 0 || y.type === void 0 || y.type.toLowerCase() === "geometry") {
        i !== void 0 && i(new Error("THREE.ObjectLoader: Can't load " + e)), console.error("THREE.ObjectLoader: Can't load " + e);
        return;
      }
      o.parse(p, t);
    }, r, i);
  }
  async loadAsync(e, t) {
    const r = this, i = this.path === "" ? yO.extractUrlBase(e) : this.path;
    this.resourcePath = this.resourcePath || i;
    const o = new Hg(this.manager);
    o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials);
    const l = await o.loadAsync(e, t), u = JSON.parse(l), h = u.metadata;
    if (h === void 0 || h.type === void 0 || h.type.toLowerCase() === "geometry")
      throw new Error("THREE.ObjectLoader: Can't load " + e);
    return await r.parseAsync(u);
  }
  parse(e, t) {
    const r = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), o = this.parseGeometries(e.geometries, i), l = this.parseImages(e.images, function() {
      t !== void 0 && t(p);
    }), u = this.parseTextures(e.textures, l), h = this.parseMaterials(e.materials, u), p = this.parseObject(e.object, o, h, u, r), y = this.parseSkeletons(e.skeletons, p);
    if (this.bindSkeletons(p, y), t !== void 0) {
      let _ = !1;
      for (const E in l)
        if (l[E].data instanceof HTMLImageElement) {
          _ = !0;
          break;
        }
      _ === !1 && t(p);
    }
    return p;
  }
  async parseAsync(e) {
    const t = this.parseAnimations(e.animations), r = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, r), o = await this.parseImagesAsync(e.images), l = this.parseTextures(e.textures, o), u = this.parseMaterials(e.materials, l), h = this.parseObject(e.object, i, u, l, t), p = this.parseSkeletons(e.skeletons, h);
    return this.bindSkeletons(h, p), h;
  }
  parseShapes(e) {
    const t = {};
    if (e !== void 0)
      for (let r = 0, i = e.length; r < i; r++) {
        const o = new a_().fromJSON(e[r]);
        t[o.uuid] = o;
      }
    return t;
  }
  parseSkeletons(e, t) {
    const r = {}, i = {};
    if (t.traverse(function(o) {
      o.isBone && (i[o.uuid] = o);
    }), e !== void 0)
      for (let o = 0, l = e.length; o < l; o++) {
        const u = new XR().fromJSON(e[o], i);
        r[u.uuid] = u;
      }
    return r;
  }
  parseGeometries(e, t) {
    const r = {};
    if (e !== void 0) {
      const i = new sB();
      for (let o = 0, l = e.length; o < l; o++) {
        let u;
        const h = e[o];
        switch (h.type) {
          case "BufferGeometry":
          case "InstancedBufferGeometry":
            u = i.parse(h);
            break;
          default:
            h.type in _k ? u = _k[h.type].fromJSON(h, t) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`);
        }
        u.uuid = h.uuid, h.name !== void 0 && (u.name = h.name), h.userData !== void 0 && (u.userData = h.userData), r[h.uuid] = u;
      }
    }
    return r;
  }
  parseMaterials(e, t) {
    const r = {}, i = {};
    if (e !== void 0) {
      const o = new d2();
      o.setTextures(t);
      for (let l = 0, u = e.length; l < u; l++) {
        const h = e[l];
        r[h.uuid] === void 0 && (r[h.uuid] = o.parse(h)), i[h.uuid] = r[h.uuid];
      }
    }
    return i;
  }
  parseAnimations(e) {
    const t = {};
    if (e !== void 0)
      for (let r = 0; r < e.length; r++) {
        const i = e[r], o = VT.parse(i);
        t[o.uuid] = o;
      }
    return t;
  }
  parseImages(e, t) {
    const r = this, i = {};
    let o;
    function l(h) {
      return r.manager.itemStart(h), o.load(h, function() {
        r.manager.itemEnd(h);
      }, void 0, function() {
        r.manager.itemError(h), r.manager.itemEnd(h);
      });
    }
    function u(h) {
      if (typeof h == "string") {
        const p = h, y = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(p) ? p : r.resourcePath + p;
        return l(y);
      } else
        return h.data ? {
          data: C1(h.type, h.data),
          width: h.width,
          height: h.height
        } : null;
    }
    if (e !== void 0 && e.length > 0) {
      const h = new zP(t);
      o = new GT(h), o.setCrossOrigin(this.crossOrigin);
      for (let p = 0, y = e.length; p < y; p++) {
        const _ = e[p], E = _.url;
        if (Array.isArray(E)) {
          const w = [];
          for (let R = 0, U = E.length; R < U; R++) {
            const L = E[R], A = u(L);
            A !== null && (A instanceof HTMLImageElement ? w.push(A) : w.push(new N1(A.data, A.width, A.height)));
          }
          i[_.uuid] = new JS(w);
        } else {
          const w = u(_.url);
          i[_.uuid] = new JS(w);
        }
      }
    }
    return i;
  }
  async parseImagesAsync(e) {
    const t = this, r = {};
    let i;
    async function o(l) {
      if (typeof l == "string") {
        const u = l, h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(u) ? u : t.resourcePath + u;
        return await i.loadAsync(h);
      } else
        return l.data ? {
          data: C1(l.type, l.data),
          width: l.width,
          height: l.height
        } : null;
    }
    if (e !== void 0 && e.length > 0) {
      i = new GT(this.manager), i.setCrossOrigin(this.crossOrigin);
      for (let l = 0, u = e.length; l < u; l++) {
        const h = e[l], p = h.url;
        if (Array.isArray(p)) {
          const y = [];
          for (let _ = 0, E = p.length; _ < E; _++) {
            const w = p[_], R = await o(w);
            R !== null && (R instanceof HTMLImageElement ? y.push(R) : y.push(new N1(R.data, R.width, R.height)));
          }
          r[h.uuid] = new JS(y);
        } else {
          const y = await o(h.url);
          r[h.uuid] = new JS(y);
        }
      }
    }
    return r;
  }
  parseTextures(e, t) {
    function r(o, l) {
      return typeof o == "number" ? o : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", o), l[o]);
    }
    const i = {};
    if (e !== void 0)
      for (let o = 0, l = e.length; o < l; o++) {
        const u = e[o];
        u.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', u.uuid), t[u.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", u.image);
        const h = t[u.image], p = h.data;
        let y;
        Array.isArray(p) ? (y = new JT(), p.length === 6 && (y.needsUpdate = !0)) : (p && p.data ? y = new N1() : y = new Es(), p && (y.needsUpdate = !0)), y.source = h, y.uuid = u.uuid, u.name !== void 0 && (y.name = u.name), u.mapping !== void 0 && (y.mapping = r(u.mapping, OY)), u.channel !== void 0 && (y.channel = u.channel), u.offset !== void 0 && y.offset.fromArray(u.offset), u.repeat !== void 0 && y.repeat.fromArray(u.repeat), u.center !== void 0 && y.center.fromArray(u.center), u.rotation !== void 0 && (y.rotation = u.rotation), u.wrap !== void 0 && (y.wrapS = r(u.wrap[0], Tk), y.wrapT = r(u.wrap[1], Tk)), u.format !== void 0 && (y.format = u.format), u.internalFormat !== void 0 && (y.internalFormat = u.internalFormat), u.type !== void 0 && (y.type = u.type), u.colorSpace !== void 0 && (y.colorSpace = u.colorSpace), u.encoding !== void 0 && (y.encoding = u.encoding), u.minFilter !== void 0 && (y.minFilter = r(u.minFilter, wk)), u.magFilter !== void 0 && (y.magFilter = r(u.magFilter, wk)), u.anisotropy !== void 0 && (y.anisotropy = u.anisotropy), u.flipY !== void 0 && (y.flipY = u.flipY), u.generateMipmaps !== void 0 && (y.generateMipmaps = u.generateMipmaps), u.premultiplyAlpha !== void 0 && (y.premultiplyAlpha = u.premultiplyAlpha), u.unpackAlignment !== void 0 && (y.unpackAlignment = u.unpackAlignment), u.compareFunction !== void 0 && (y.compareFunction = u.compareFunction), u.userData !== void 0 && (y.userData = u.userData), i[u.uuid] = y;
      }
    return i;
  }
  parseObject(e, t, r, i, o) {
    let l;
    function u(E) {
      return t[E] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", E), t[E];
    }
    function h(E) {
      if (E !== void 0) {
        if (Array.isArray(E)) {
          const w = [];
          for (let R = 0, U = E.length; R < U; R++) {
            const L = E[R];
            r[L] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", L), w.push(r[L]);
          }
          return w;
        }
        return r[E] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", E), r[E];
      }
    }
    function p(E) {
      return i[E] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", E), i[E];
    }
    let y, _;
    switch (e.type) {
      case "Scene":
        l = new gR(), e.background !== void 0 && (Number.isInteger(e.background) ? l.background = new Pn(e.background) : l.background = p(e.background)), e.environment !== void 0 && (l.environment = p(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? l.fog = new $R(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (l.fog = new jR(e.fog.color, e.fog.density))), e.backgroundBlurriness !== void 0 && (l.backgroundBlurriness = e.backgroundBlurriness), e.backgroundIntensity !== void 0 && (l.backgroundIntensity = e.backgroundIntensity);
        break;
      case "PerspectiveCamera":
        l = new Ws(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (l.focus = e.focus), e.zoom !== void 0 && (l.zoom = e.zoom), e.filmGauge !== void 0 && (l.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (l.filmOffset = e.filmOffset), e.view !== void 0 && (l.view = Object.assign({}, e.view));
        break;
      case "OrthographicCamera":
        l = new Fg(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (l.zoom = e.zoom), e.view !== void 0 && (l.view = Object.assign({}, e.view));
        break;
      case "AmbientLight":
        l = new iB(e.color, e.intensity);
        break;
      case "DirectionalLight":
        l = new rB(e.color, e.intensity);
        break;
      case "PointLight":
        l = new nB(e.color, e.intensity, e.distance, e.decay);
        break;
      case "RectAreaLight":
        l = new aB(e.color, e.intensity, e.width, e.height);
        break;
      case "SpotLight":
        l = new tB(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
        break;
      case "HemisphereLight":
        l = new eB(e.color, e.groundColor, e.intensity);
        break;
      case "LightProbe":
        l = new f2().fromJSON(e);
        break;
      case "SkinnedMesh":
        y = u(e.geometry), _ = h(e.material), l = new M4(y, _), e.bindMode !== void 0 && (l.bindMode = e.bindMode), e.bindMatrix !== void 0 && l.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (l.skeleton = e.skeleton);
        break;
      case "Mesh":
        y = u(e.geometry), _ = h(e.material), l = new Nl(y, _);
        break;
      case "InstancedMesh":
        y = u(e.geometry), _ = h(e.material);
        const E = e.count, w = e.instanceMatrix, R = e.instanceColor;
        l = new C4(y, _, E), l.instanceMatrix = new f_(new Float32Array(w.array), 16), R !== void 0 && (l.instanceColor = new f_(new Float32Array(R.array), R.itemSize));
        break;
      case "LOD":
        l = new w4();
        break;
      case "Line":
        l = new m0(u(e.geometry), h(e.material));
        break;
      case "LineLoop":
        l = new R4(u(e.geometry), h(e.material));
        break;
      case "LineSegments":
        l = new Mv(u(e.geometry), h(e.material));
        break;
      case "PointCloud":
      case "Points":
        l = new A4(u(e.geometry), h(e.material));
        break;
      case "Sprite":
        l = new T4(h(e.material));
        break;
      case "Group":
        l = new A1();
        break;
      case "Bone":
        l = new wP();
        break;
      default:
        l = new xa();
    }
    if (l.uuid = e.uuid, e.name !== void 0 && (l.name = e.name), e.matrix !== void 0 ? (l.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (l.matrixAutoUpdate = e.matrixAutoUpdate), l.matrixAutoUpdate && l.matrix.decompose(l.position, l.quaternion, l.scale)) : (e.position !== void 0 && l.position.fromArray(e.position), e.rotation !== void 0 && l.rotation.fromArray(e.rotation), e.quaternion !== void 0 && l.quaternion.fromArray(e.quaternion), e.scale !== void 0 && l.scale.fromArray(e.scale)), e.up !== void 0 && l.up.fromArray(e.up), e.castShadow !== void 0 && (l.castShadow = e.castShadow), e.receiveShadow !== void 0 && (l.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.bias !== void 0 && (l.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (l.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (l.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && l.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (l.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (l.visible = e.visible), e.frustumCulled !== void 0 && (l.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (l.renderOrder = e.renderOrder), e.userData !== void 0 && (l.userData = e.userData), e.layers !== void 0 && (l.layers.mask = e.layers), e.children !== void 0) {
      const E = e.children;
      for (let w = 0; w < E.length; w++)
        l.add(this.parseObject(E[w], t, r, i, o));
    }
    if (e.animations !== void 0) {
      const E = e.animations;
      for (let w = 0; w < E.length; w++) {
        const R = E[w];
        l.animations.push(o[R]);
      }
    }
    if (e.type === "LOD") {
      e.autoUpdate !== void 0 && (l.autoUpdate = e.autoUpdate);
      const E = e.levels;
      for (let w = 0; w < E.length; w++) {
        const R = E[w], U = l.getObjectByProperty("uuid", R.object);
        U !== void 0 && l.addLevel(U, R.distance, R.hysteresis);
      }
    }
    return l;
  }
  bindSkeletons(e, t) {
    Object.keys(t).length !== 0 && e.traverse(function(r) {
      if (r.isSkinnedMesh === !0 && r.skeleton !== void 0) {
        const i = t[r.skeleton];
        i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", r.skeleton) : r.bind(i, r.bindMatrix);
      }
    });
  }
}
const OY = {
  UVMapping: FR,
  CubeReflectionMapping: Bg,
  CubeRefractionMapping: h0,
  EquirectangularReflectionMapping: MT,
  EquirectangularRefractionMapping: CT,
  CubeUVReflectionMapping: $1
}, Tk = {
  RepeatWrapping: RT,
  ClampToEdgeWrapping: Vc,
  MirroredRepeatWrapping: AT
}, wk = {
  NearestFilter: pl,
  NearestMipmapNearestFilter: pR,
  NearestMipmapLinearFilter: vT,
  LinearFilter: Ss,
  LinearMipmapNearestFilter: oP,
  LinearMipmapLinearFilter: p0
};
class PY extends Ed {
  constructor(e) {
    super(e), this.isImageBitmapLoader = !0, typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = { premultiplyAlpha: "none" };
  }
  setOptions(e) {
    return this.options = e, this;
  }
  load(e, t, r, i) {
    e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
    const o = this, l = h_.get(e);
    if (l !== void 0)
      return o.manager.itemStart(e), setTimeout(function() {
        t && t(l), o.manager.itemEnd(e);
      }, 0), l;
    const u = {};
    u.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", u.headers = this.requestHeader, fetch(e, u).then(function(h) {
      return h.blob();
    }).then(function(h) {
      return createImageBitmap(h, Object.assign(o.options, { colorSpaceConversion: "none" }));
    }).then(function(h) {
      h_.add(e, h), t && t(h), o.manager.itemEnd(e);
    }).catch(function(h) {
      i && i(h), o.manager.itemError(e), o.manager.itemEnd(e);
    }), o.manager.itemStart(e);
  }
}
let PC;
class HP {
  static getContext() {
    return PC === void 0 && (PC = new (window.AudioContext || window.webkitAudioContext)()), PC;
  }
  static setContext(e) {
    PC = e;
  }
}
class UY extends Ed {
  constructor(e) {
    super(e);
  }
  load(e, t, r, i) {
    const o = this, l = new Hg(this.manager);
    l.setResponseType("arraybuffer"), l.setPath(this.path), l.setRequestHeader(this.requestHeader), l.setWithCredentials(this.withCredentials), l.load(e, function(h) {
      try {
        const p = h.slice(0);
        HP.getContext().decodeAudioData(p, function(_) {
          t(_);
        }, u);
      } catch (p) {
        u(p);
      }
    }, r, i);
    function u(h) {
      i ? i(h) : console.error(h), o.manager.itemError(e);
    }
  }
}
class NY extends f2 {
  constructor(e, t, r = 1) {
    super(void 0, r), this.isHemisphereLightProbe = !0;
    const i = new Pn().set(e), o = new Pn().set(t), l = new Re(i.r, i.g, i.b), u = new Re(o.r, o.g, o.b), h = Math.sqrt(Math.PI), p = h * Math.sqrt(0.75);
    this.sh.coefficients[0].copy(l).add(u).multiplyScalar(h), this.sh.coefficients[1].copy(l).sub(u).multiplyScalar(p);
  }
}
class kY extends f2 {
  constructor(e, t = 1) {
    super(void 0, t), this.isAmbientLightProbe = !0;
    const r = new Pn().set(e);
    this.sh.coefficients[0].set(r.r, r.g, r.b).multiplyScalar(2 * Math.sqrt(Math.PI));
  }
}
const Mk = /* @__PURE__ */ new ri(), Ck = /* @__PURE__ */ new ri(), BS = /* @__PURE__ */ new ri();
class FY {
  constructor() {
    this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new Ws(), this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new Ws(), this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
      focus: null,
      fov: null,
      aspect: null,
      near: null,
      far: null,
      zoom: null,
      eyeSep: null
    };
  }
  update(e) {
    const t = this._cache;
    if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
      t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep, BS.copy(e.projectionMatrix);
      const i = t.eyeSep / 2, o = i * t.near / t.focus, l = t.near * Math.tan(r_ * t.fov * 0.5) / t.zoom;
      let u, h;
      Ck.elements[12] = -i, Mk.elements[12] = i, u = -l * t.aspect + o, h = l * t.aspect + o, BS.elements[0] = 2 * t.near / (h - u), BS.elements[8] = (h + u) / (h - u), this.cameraL.projectionMatrix.copy(BS), u = -l * t.aspect - o, h = l * t.aspect - o, BS.elements[0] = 2 * t.near / (h - u), BS.elements[8] = (h + u) / (h - u), this.cameraR.projectionMatrix.copy(BS);
    }
    this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ck), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Mk);
  }
}
class VP {
  constructor(e = !0) {
    this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
  }
  start() {
    this.startTime = Rk(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
  }
  stop() {
    this.getElapsedTime(), this.running = !1, this.autoStart = !1;
  }
  getElapsedTime() {
    return this.getDelta(), this.elapsedTime;
  }
  getDelta() {
    let e = 0;
    if (this.autoStart && !this.running)
      return this.start(), 0;
    if (this.running) {
      const t = Rk();
      e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
    }
    return e;
  }
}
function Rk() {
  return (typeof performance > "u" ? Date : performance).now();
}
const HS = /* @__PURE__ */ new Re(), Ak = /* @__PURE__ */ new jc(), zY = /* @__PURE__ */ new Re(), VS = /* @__PURE__ */ new Re();
class IY extends xa {
  constructor() {
    super(), this.type = "AudioListener", this.context = HP.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new VP();
  }
  getInput() {
    return this.gain;
  }
  removeFilter() {
    return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
  }
  getFilter() {
    return this.filter;
  }
  setFilter(e) {
    return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
  }
  getMasterVolume() {
    return this.gain.gain.value;
  }
  setMasterVolume(e) {
    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this;
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e);
    const t = this.context.listener, r = this.up;
    if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(HS, Ak, zY), VS.set(0, 0, -1).applyQuaternion(Ak), t.positionX) {
      const i = this.context.currentTime + this.timeDelta;
      t.positionX.linearRampToValueAtTime(HS.x, i), t.positionY.linearRampToValueAtTime(HS.y, i), t.positionZ.linearRampToValueAtTime(HS.z, i), t.forwardX.linearRampToValueAtTime(VS.x, i), t.forwardY.linearRampToValueAtTime(VS.y, i), t.forwardZ.linearRampToValueAtTime(VS.z, i), t.upX.linearRampToValueAtTime(r.x, i), t.upY.linearRampToValueAtTime(r.y, i), t.upZ.linearRampToValueAtTime(r.z, i);
    } else
      t.setPosition(HS.x, HS.y, HS.z), t.setOrientation(VS.x, VS.y, VS.z, r.x, r.y, r.z);
  }
}
class lB extends xa {
  constructor(e) {
    super(), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
  }
  getOutput() {
    return this.gain;
  }
  setNodeSource(e) {
    return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
  }
  setMediaElementSource(e) {
    return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
  }
  setMediaStreamSource(e) {
    return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
  }
  setBuffer(e) {
    return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
  }
  play(e = 0) {
    if (this.isPlaying === !0) {
      console.warn("THREE.Audio: Audio is already playing.");
      return;
    }
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    this._startedAt = this.context.currentTime + e;
    const t = this.context.createBufferSource();
    return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
  }
  pause() {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
  }
  stop() {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return this._progress = 0, this.source !== null && (this.source.stop(), this.source.onended = null), this.isPlaying = !1, this;
  }
  connect() {
    if (this.filters.length > 0) {
      this.source.connect(this.filters[0]);
      for (let e = 1, t = this.filters.length; e < t; e++)
        this.filters[e - 1].connect(this.filters[e]);
      this.filters[this.filters.length - 1].connect(this.getOutput());
    } else
      this.source.connect(this.getOutput());
    return this._connected = !0, this;
  }
  disconnect() {
    if (this._connected !== !1) {
      if (this.filters.length > 0) {
        this.source.disconnect(this.filters[0]);
        for (let e = 1, t = this.filters.length; e < t; e++)
          this.filters[e - 1].disconnect(this.filters[e]);
        this.filters[this.filters.length - 1].disconnect(this.getOutput());
      } else
        this.source.disconnect(this.getOutput());
      return this._connected = !1, this;
    }
  }
  getFilters() {
    return this.filters;
  }
  setFilters(e) {
    return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
  }
  setDetune(e) {
    if (this.detune = e, this.source.detune !== void 0)
      return this.isPlaying === !0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01), this;
  }
  getDetune() {
    return this.detune;
  }
  getFilter() {
    return this.getFilters()[0];
  }
  setFilter(e) {
    return this.setFilters(e ? [e] : []);
  }
  setPlaybackRate(e) {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01), this;
  }
  getPlaybackRate() {
    return this.playbackRate;
  }
  onEnded() {
    this.isPlaying = !1;
  }
  getLoop() {
    return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
  }
  setLoop(e) {
    if (this.hasPlaybackControl === !1) {
      console.warn("THREE.Audio: this Audio has no playback control.");
      return;
    }
    return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
  }
  setLoopStart(e) {
    return this.loopStart = e, this;
  }
  setLoopEnd(e) {
    return this.loopEnd = e, this;
  }
  getVolume() {
    return this.gain.gain.value;
  }
  setVolume(e) {
    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this;
  }
}
const GS = /* @__PURE__ */ new Re(), Dk = /* @__PURE__ */ new jc(), BY = /* @__PURE__ */ new Re(), WS = /* @__PURE__ */ new Re();
class HY extends lB {
  constructor(e) {
    super(e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
  }
  connect() {
    super.connect(), this.panner.connect(this.gain);
  }
  disconnect() {
    super.disconnect(), this.panner.disconnect(this.gain);
  }
  getOutput() {
    return this.panner;
  }
  getRefDistance() {
    return this.panner.refDistance;
  }
  setRefDistance(e) {
    return this.panner.refDistance = e, this;
  }
  getRolloffFactor() {
    return this.panner.rolloffFactor;
  }
  setRolloffFactor(e) {
    return this.panner.rolloffFactor = e, this;
  }
  getDistanceModel() {
    return this.panner.distanceModel;
  }
  setDistanceModel(e) {
    return this.panner.distanceModel = e, this;
  }
  getMaxDistance() {
    return this.panner.maxDistance;
  }
  setMaxDistance(e) {
    return this.panner.maxDistance = e, this;
  }
  setDirectionalCone(e, t, r) {
    return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = r, this;
  }
  updateMatrixWorld(e) {
    if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1)
      return;
    this.matrixWorld.decompose(GS, Dk, BY), WS.set(0, 0, 1).applyQuaternion(Dk);
    const t = this.panner;
    if (t.positionX) {
      const r = this.context.currentTime + this.listener.timeDelta;
      t.positionX.linearRampToValueAtTime(GS.x, r), t.positionY.linearRampToValueAtTime(GS.y, r), t.positionZ.linearRampToValueAtTime(GS.z, r), t.orientationX.linearRampToValueAtTime(WS.x, r), t.orientationY.linearRampToValueAtTime(WS.y, r), t.orientationZ.linearRampToValueAtTime(WS.z, r);
    } else
      t.setPosition(GS.x, GS.y, GS.z), t.setOrientation(WS.x, WS.y, WS.z);
  }
}
class VY {
  constructor(e, t = 2048) {
    this.analyser = e.context.createAnalyser(), this.analyser.fftSize = t, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
  }
  getFrequencyData() {
    return this.analyser.getByteFrequencyData(this.data), this.data;
  }
  getAverageFrequency() {
    let e = 0;
    const t = this.getFrequencyData();
    for (let r = 0; r < t.length; r++)
      e += t[r];
    return e / t.length;
  }
}
class uB {
  constructor(e, t, r) {
    this.binding = e, this.valueSize = r;
    let i, o, l;
    switch (t) {
      case "quaternion":
        i = this._slerp, o = this._slerpAdditive, l = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(r * 6), this._workIndex = 5;
        break;
      case "string":
      case "bool":
        i = this._select, o = this._select, l = this._setAdditiveIdentityOther, this.buffer = new Array(r * 5);
        break;
      default:
        i = this._lerp, o = this._lerpAdditive, l = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(r * 5);
    }
    this._mixBufferRegion = i, this._mixBufferRegionAdditive = o, this._setIdentity = l, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
  }
  // accumulate data in the 'incoming' region into 'accu<i>'
  accumulate(e, t) {
    const r = this.buffer, i = this.valueSize, o = e * i + i;
    let l = this.cumulativeWeight;
    if (l === 0) {
      for (let u = 0; u !== i; ++u)
        r[o + u] = r[u];
      l = t;
    } else {
      l += t;
      const u = t / l;
      this._mixBufferRegion(r, o, 0, u, i);
    }
    this.cumulativeWeight = l;
  }
  // accumulate data in the 'incoming' region into 'add'
  accumulateAdditive(e) {
    const t = this.buffer, r = this.valueSize, i = r * this._addIndex;
    this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(t, i, 0, e, r), this.cumulativeWeightAdditive += e;
  }
  // apply the state of 'accu<i>' to the binding when accus differ
  apply(e) {
    const t = this.valueSize, r = this.buffer, i = e * t + t, o = this.cumulativeWeight, l = this.cumulativeWeightAdditive, u = this.binding;
    if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, o < 1) {
      const h = t * this._origIndex;
      this._mixBufferRegion(
        r,
        i,
        h,
        1 - o,
        t
      );
    }
    l > 0 && this._mixBufferRegionAdditive(r, i, this._addIndex * t, 1, t);
    for (let h = t, p = t + t; h !== p; ++h)
      if (r[h] !== r[h + t]) {
        u.setValue(r, i);
        break;
      }
  }
  // remember the state of the bound property and copy it to both accus
  saveOriginalState() {
    const e = this.binding, t = this.buffer, r = this.valueSize, i = r * this._origIndex;
    e.getValue(t, i);
    for (let o = r, l = i; o !== l; ++o)
      t[o] = t[i + o % r];
    this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
  }
  // apply the state previously taken via 'saveOriginalState' to the binding
  restoreOriginalState() {
    const e = this.valueSize * 3;
    this.binding.setValue(this.buffer, e);
  }
  _setAdditiveIdentityNumeric() {
    const e = this._addIndex * this.valueSize, t = e + this.valueSize;
    for (let r = e; r < t; r++)
      this.buffer[r] = 0;
  }
  _setAdditiveIdentityQuaternion() {
    this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
  }
  _setAdditiveIdentityOther() {
    const e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize;
    for (let r = 0; r < this.valueSize; r++)
      this.buffer[t + r] = this.buffer[e + r];
  }
  // mix functions
  _select(e, t, r, i, o) {
    if (i >= 0.5)
      for (let l = 0; l !== o; ++l)
        e[t + l] = e[r + l];
  }
  _slerp(e, t, r, i) {
    jc.slerpFlat(e, t, e, t, e, r, i);
  }
  _slerpAdditive(e, t, r, i, o) {
    const l = this._workIndex * o;
    jc.multiplyQuaternionsFlat(e, l, e, t, e, r), jc.slerpFlat(e, t, e, t, e, l, i);
  }
  _lerp(e, t, r, i, o) {
    const l = 1 - i;
    for (let u = 0; u !== o; ++u) {
      const h = t + u;
      e[h] = e[h] * l + e[r + u] * i;
    }
  }
  _lerpAdditive(e, t, r, i, o) {
    for (let l = 0; l !== o; ++l) {
      const u = t + l;
      e[u] = e[u] + e[r + l] * i;
    }
  }
}
const GP = "\\[\\]\\.:\\/", GY = new RegExp("[" + GP + "]", "g"), WP = "[^" + GP + "]", WY = "[^" + GP.replace("\\.", "") + "]", jY = /* @__PURE__ */ /((?:WC+[\/:])*)/.source.replace("WC", WP), $Y = /* @__PURE__ */ /(WCOD+)?/.source.replace("WCOD", WY), YY = /* @__PURE__ */ /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", WP), XY = /* @__PURE__ */ /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", WP), qY = new RegExp(
  "^" + jY + $Y + YY + XY + "$"
), KY = ["material", "materials", "bones", "map"];
class QY {
  constructor(e, t, r) {
    const i = r || da.parseTrackName(t);
    this._targetGroup = e, this._bindings = e.subscribe_(t, i);
  }
  getValue(e, t) {
    this.bind();
    const r = this._targetGroup.nCachedObjects_, i = this._bindings[r];
    i !== void 0 && i.getValue(e, t);
  }
  setValue(e, t) {
    const r = this._bindings;
    for (let i = this._targetGroup.nCachedObjects_, o = r.length; i !== o; ++i)
      r[i].setValue(e, t);
  }
  bind() {
    const e = this._bindings;
    for (let t = this._targetGroup.nCachedObjects_, r = e.length; t !== r; ++t)
      e[t].bind();
  }
  unbind() {
    const e = this._bindings;
    for (let t = this._targetGroup.nCachedObjects_, r = e.length; t !== r; ++t)
      e[t].unbind();
  }
}
class da {
  constructor(e, t, r) {
    this.path = t, this.parsedPath = r || da.parseTrackName(t), this.node = da.findNode(e, this.parsedPath.nodeName), this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
  }
  static create(e, t, r) {
    return e && e.isAnimationObjectGroup ? new da.Composite(e, t, r) : new da(e, t, r);
  }
  /**
   * Replaces spaces with underscores and removes unsupported characters from
   * node names, to ensure compatibility with parseTrackName().
   *
   * @param {string} name Node name to be sanitized.
   * @return {string}
   */
  static sanitizeNodeName(e) {
    return e.replace(/\s/g, "_").replace(GY, "");
  }
  static parseTrackName(e) {
    const t = qY.exec(e);
    if (t === null)
      throw new Error("PropertyBinding: Cannot parse trackName: " + e);
    const r = {
      // directoryName: matches[ 1 ], // (tschw) currently unused
      nodeName: t[2],
      objectName: t[3],
      objectIndex: t[4],
      propertyName: t[5],
      // required
      propertyIndex: t[6]
    }, i = r.nodeName && r.nodeName.lastIndexOf(".");
    if (i !== void 0 && i !== -1) {
      const o = r.nodeName.substring(i + 1);
      KY.indexOf(o) !== -1 && (r.nodeName = r.nodeName.substring(0, i), r.objectName = o);
    }
    if (r.propertyName === null || r.propertyName.length === 0)
      throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
    return r;
  }
  static findNode(e, t) {
    if (t === void 0 || t === "" || t === "." || t === -1 || t === e.name || t === e.uuid)
      return e;
    if (e.skeleton) {
      const r = e.skeleton.getBoneByName(t);
      if (r !== void 0)
        return r;
    }
    if (e.children) {
      const r = function(o) {
        for (let l = 0; l < o.length; l++) {
          const u = o[l];
          if (u.name === t || u.uuid === t)
            return u;
          const h = r(u.children);
          if (h)
            return h;
        }
        return null;
      }, i = r(e.children);
      if (i)
        return i;
    }
    return null;
  }
  // these are used to "bind" a nonexistent property
  _getValue_unavailable() {
  }
  _setValue_unavailable() {
  }
  // Getters
  _getValue_direct(e, t) {
    e[t] = this.targetObject[this.propertyName];
  }
  _getValue_array(e, t) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i)
      e[t++] = r[i];
  }
  _getValue_arrayElement(e, t) {
    e[t] = this.resolvedProperty[this.propertyIndex];
  }
  _getValue_toArray(e, t) {
    this.resolvedProperty.toArray(e, t);
  }
  // Direct
  _setValue_direct(e, t) {
    this.targetObject[this.propertyName] = e[t];
  }
  _setValue_direct_setNeedsUpdate(e, t) {
    this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;
  }
  _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
    this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
  }
  // EntireArray
  _setValue_array(e, t) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i)
      r[i] = e[t++];
  }
  _setValue_array_setNeedsUpdate(e, t) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i)
      r[i] = e[t++];
    this.targetObject.needsUpdate = !0;
  }
  _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
    const r = this.resolvedProperty;
    for (let i = 0, o = r.length; i !== o; ++i)
      r[i] = e[t++];
    this.targetObject.matrixWorldNeedsUpdate = !0;
  }
  // ArrayElement
  _setValue_arrayElement(e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t];
  }
  _setValue_arrayElement_setNeedsUpdate(e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;
  }
  _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
  }
  // HasToFromArray
  _setValue_fromArray(e, t) {
    this.resolvedProperty.fromArray(e, t);
  }
  _setValue_fromArray_setNeedsUpdate(e, t) {
    this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;
  }
  _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
    this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;
  }
  _getValue_unbound(e, t) {
    this.bind(), this.getValue(e, t);
  }
  _setValue_unbound(e, t) {
    this.bind(), this.setValue(e, t);
  }
  // create getter / setter pair for a property in the scene graph
  bind() {
    let e = this.node;
    const t = this.parsedPath, r = t.objectName, i = t.propertyName;
    let o = t.propertyIndex;
    if (e || (e = da.findNode(this.rootNode, t.nodeName), this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
      console.warn("THREE.PropertyBinding: No target node found for track: " + this.path + ".");
      return;
    }
    if (r) {
      let p = t.objectIndex;
      switch (r) {
        case "materials":
          if (!e.material) {
            console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
            return;
          }
          if (!e.material.materials) {
            console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
            return;
          }
          e = e.material.materials;
          break;
        case "bones":
          if (!e.skeleton) {
            console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
            return;
          }
          e = e.skeleton.bones;
          for (let y = 0; y < e.length; y++)
            if (e[y].name === p) {
              p = y;
              break;
            }
          break;
        case "map":
          if ("map" in e) {
            e = e.map;
            break;
          }
          if (!e.material) {
            console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
            return;
          }
          if (!e.material.map) {
            console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.", this);
            return;
          }
          e = e.material.map;
          break;
        default:
          if (e[r] === void 0) {
            console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
            return;
          }
          e = e[r];
      }
      if (p !== void 0) {
        if (e[p] === void 0) {
          console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
          return;
        }
        e = e[p];
      }
    }
    const l = e[i];
    if (l === void 0) {
      const p = t.nodeName;
      console.error("THREE.PropertyBinding: Trying to update property for track: " + p + "." + i + " but it wasn't found.", e);
      return;
    }
    let u = this.Versioning.None;
    this.targetObject = e, e.needsUpdate !== void 0 ? u = this.Versioning.NeedsUpdate : e.matrixWorldNeedsUpdate !== void 0 && (u = this.Versioning.MatrixWorldNeedsUpdate);
    let h = this.BindingType.Direct;
    if (o !== void 0) {
      if (i === "morphTargetInfluences") {
        if (!e.geometry) {
          console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
          return;
        }
        if (!e.geometry.morphAttributes) {
          console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
          return;
        }
        e.morphTargetDictionary[o] !== void 0 && (o = e.morphTargetDictionary[o]);
      }
      h = this.BindingType.ArrayElement, this.resolvedProperty = l, this.propertyIndex = o;
    } else
      l.fromArray !== void 0 && l.toArray !== void 0 ? (h = this.BindingType.HasFromToArray, this.resolvedProperty = l) : Array.isArray(l) ? (h = this.BindingType.EntireArray, this.resolvedProperty = l) : this.propertyName = i;
    this.getValue = this.GetterByBindingType[h], this.setValue = this.SetterByBindingTypeAndVersioning[h][u];
  }
  unbind() {
    this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
  }
}
da.Composite = QY;
da.prototype.BindingType = {
  Direct: 0,
  EntireArray: 1,
  ArrayElement: 2,
  HasFromToArray: 3
};
da.prototype.Versioning = {
  None: 0,
  NeedsUpdate: 1,
  MatrixWorldNeedsUpdate: 2
};
da.prototype.GetterByBindingType = [
  da.prototype._getValue_direct,
  da.prototype._getValue_array,
  da.prototype._getValue_arrayElement,
  da.prototype._getValue_toArray
];
da.prototype.SetterByBindingTypeAndVersioning = [
  [
    // Direct
    da.prototype._setValue_direct,
    da.prototype._setValue_direct_setNeedsUpdate,
    da.prototype._setValue_direct_setMatrixWorldNeedsUpdate
  ],
  [
    // EntireArray
    da.prototype._setValue_array,
    da.prototype._setValue_array_setNeedsUpdate,
    da.prototype._setValue_array_setMatrixWorldNeedsUpdate
  ],
  [
    // ArrayElement
    da.prototype._setValue_arrayElement,
    da.prototype._setValue_arrayElement_setNeedsUpdate,
    da.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
  ],
  [
    // HasToFromArray
    da.prototype._setValue_fromArray,
    da.prototype._setValue_fromArray_setNeedsUpdate,
    da.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
  ]
];
class ZY {
  constructor() {
    this.isAnimationObjectGroup = !0, this.uuid = mh(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
    const e = {};
    this._indicesByUUID = e;
    for (let r = 0, i = arguments.length; r !== i; ++r)
      e[arguments[r].uuid] = r;
    this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
    const t = this;
    this.stats = {
      objects: {
        get total() {
          return t._objects.length;
        },
        get inUse() {
          return this.total - t.nCachedObjects_;
        }
      },
      get bindingsPerObject() {
        return t._bindings.length;
      }
    };
  }
  add() {
    const e = this._objects, t = this._indicesByUUID, r = this._paths, i = this._parsedPaths, o = this._bindings, l = o.length;
    let u, h = e.length, p = this.nCachedObjects_;
    for (let y = 0, _ = arguments.length; y !== _; ++y) {
      const E = arguments[y], w = E.uuid;
      let R = t[w];
      if (R === void 0) {
        R = h++, t[w] = R, e.push(E);
        for (let U = 0, L = l; U !== L; ++U)
          o[U].push(new da(E, r[U], i[U]));
      } else if (R < p) {
        u = e[R];
        const U = --p, L = e[U];
        t[L.uuid] = R, e[R] = L, t[w] = U, e[U] = E;
        for (let A = 0, k = l; A !== k; ++A) {
          const F = o[A], H = F[U];
          let B = F[R];
          F[R] = H, B === void 0 && (B = new da(E, r[A], i[A])), F[U] = B;
        }
      } else
        e[R] !== u && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
    }
    this.nCachedObjects_ = p;
  }
  remove() {
    const e = this._objects, t = this._indicesByUUID, r = this._bindings, i = r.length;
    let o = this.nCachedObjects_;
    for (let l = 0, u = arguments.length; l !== u; ++l) {
      const h = arguments[l], p = h.uuid, y = t[p];
      if (y !== void 0 && y >= o) {
        const _ = o++, E = e[_];
        t[E.uuid] = y, e[y] = E, t[p] = _, e[_] = h;
        for (let w = 0, R = i; w !== R; ++w) {
          const U = r[w], L = U[_], A = U[y];
          U[y] = L, U[_] = A;
        }
      }
    }
    this.nCachedObjects_ = o;
  }
  // remove & forget
  uncache() {
    const e = this._objects, t = this._indicesByUUID, r = this._bindings, i = r.length;
    let o = this.nCachedObjects_, l = e.length;
    for (let u = 0, h = arguments.length; u !== h; ++u) {
      const p = arguments[u], y = p.uuid, _ = t[y];
      if (_ !== void 0)
        if (delete t[y], _ < o) {
          const E = --o, w = e[E], R = --l, U = e[R];
          t[w.uuid] = _, e[_] = w, t[U.uuid] = E, e[E] = U, e.pop();
          for (let L = 0, A = i; L !== A; ++L) {
            const k = r[L], F = k[E], H = k[R];
            k[_] = F, k[E] = H, k.pop();
          }
        } else {
          const E = --l, w = e[E];
          E > 0 && (t[w.uuid] = _), e[_] = w, e.pop();
          for (let R = 0, U = i; R !== U; ++R) {
            const L = r[R];
            L[_] = L[E], L.pop();
          }
        }
    }
    this.nCachedObjects_ = o;
  }
  // Internal interface used by befriended PropertyBinding.Composite:
  subscribe_(e, t) {
    const r = this._bindingsIndicesByPath;
    let i = r[e];
    const o = this._bindings;
    if (i !== void 0)
      return o[i];
    const l = this._paths, u = this._parsedPaths, h = this._objects, p = h.length, y = this.nCachedObjects_, _ = new Array(p);
    i = o.length, r[e] = i, l.push(e), u.push(t), o.push(_);
    for (let E = y, w = h.length; E !== w; ++E) {
      const R = h[E];
      _[E] = new da(R, e, t);
    }
    return _;
  }
  unsubscribe_(e) {
    const t = this._bindingsIndicesByPath, r = t[e];
    if (r !== void 0) {
      const i = this._paths, o = this._parsedPaths, l = this._bindings, u = l.length - 1, h = l[u], p = e[u];
      t[p] = r, l[r] = h, l.pop(), o[r] = o[u], o.pop(), i[r] = i[u], i.pop();
    }
  }
}
class cB {
  constructor(e, t, r = null, i = t.blendMode) {
    this._mixer = e, this._clip = t, this._localRoot = r, this.blendMode = i;
    const o = t.tracks, l = o.length, u = new Array(l), h = {
      endingStart: QS,
      endingEnd: QS
    };
    for (let p = 0; p !== l; ++p) {
      const y = o[p].createInterpolant(null);
      u[p] = y, y.settings = h;
    }
    this._interpolantSettings = h, this._interpolants = u, this._propertyBindings = new Array(l), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = $I, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
  }
  // State & Scheduling
  play() {
    return this._mixer._activateAction(this), this;
  }
  stop() {
    return this._mixer._deactivateAction(this), this.reset();
  }
  reset() {
    return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
  }
  isRunning() {
    return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
  }
  // return true when play has been called
  isScheduled() {
    return this._mixer._isActiveAction(this);
  }
  startAt(e) {
    return this._startTime = e, this;
  }
  setLoop(e, t) {
    return this.loop = e, this.repetitions = t, this;
  }
  // Weight
  // set the weight stopping any scheduled fading
  // although .enabled = false yields an effective weight of zero, this
  // method does *not* change .enabled, because it would be confusing
  setEffectiveWeight(e) {
    return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
  }
  // return the weight considering fading and .enabled
  getEffectiveWeight() {
    return this._effectiveWeight;
  }
  fadeIn(e) {
    return this._scheduleFading(e, 0, 1);
  }
  fadeOut(e) {
    return this._scheduleFading(e, 1, 0);
  }
  crossFadeFrom(e, t, r) {
    if (e.fadeOut(t), this.fadeIn(t), r) {
      const i = this._clip.duration, o = e._clip.duration, l = o / i, u = i / o;
      e.warp(1, l, t), this.warp(u, 1, t);
    }
    return this;
  }
  crossFadeTo(e, t, r) {
    return e.crossFadeFrom(this, t, r);
  }
  stopFading() {
    const e = this._weightInterpolant;
    return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
  }
  // Time Scale Control
  // set the time scale stopping any scheduled warping
  // although .paused = true yields an effective time scale of zero, this
  // method does *not* change .paused, because it would be confusing
  setEffectiveTimeScale(e) {
    return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
  }
  // return the time scale considering warping and .paused
  getEffectiveTimeScale() {
    return this._effectiveTimeScale;
  }
  setDuration(e) {
    return this.timeScale = this._clip.duration / e, this.stopWarping();
  }
  syncWith(e) {
    return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
  }
  halt(e) {
    return this.warp(this._effectiveTimeScale, 0, e);
  }
  warp(e, t, r) {
    const i = this._mixer, o = i.time, l = this.timeScale;
    let u = this._timeScaleInterpolant;
    u === null && (u = i._lendControlInterpolant(), this._timeScaleInterpolant = u);
    const h = u.parameterPositions, p = u.sampleValues;
    return h[0] = o, h[1] = o + r, p[0] = e / l, p[1] = t / l, this;
  }
  stopWarping() {
    const e = this._timeScaleInterpolant;
    return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
  }
  // Object Accessors
  getMixer() {
    return this._mixer;
  }
  getClip() {
    return this._clip;
  }
  getRoot() {
    return this._localRoot || this._mixer._root;
  }
  // Interna
  _update(e, t, r, i) {
    if (!this.enabled) {
      this._updateWeight(e);
      return;
    }
    const o = this._startTime;
    if (o !== null) {
      const h = (e - o) * r;
      h < 0 || r === 0 ? t = 0 : (this._startTime = null, t = r * h);
    }
    t *= this._updateTimeScale(e);
    const l = this._updateTime(t), u = this._updateWeight(e);
    if (u > 0) {
      const h = this._interpolants, p = this._propertyBindings;
      switch (this.blendMode) {
        case hP:
          for (let y = 0, _ = h.length; y !== _; ++y)
            h[y].evaluate(l), p[y].accumulateAdditive(u);
          break;
        case IR:
        default:
          for (let y = 0, _ = h.length; y !== _; ++y)
            h[y].evaluate(l), p[y].accumulate(i, u);
      }
    }
  }
  _updateWeight(e) {
    let t = 0;
    if (this.enabled) {
      t = this.weight;
      const r = this._weightInterpolant;
      if (r !== null) {
        const i = r.evaluate(e)[0];
        t *= i, e > r.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
      }
    }
    return this._effectiveWeight = t, t;
  }
  _updateTimeScale(e) {
    let t = 0;
    if (!this.paused) {
      t = this.timeScale;
      const r = this._timeScaleInterpolant;
      if (r !== null) {
        const i = r.evaluate(e)[0];
        t *= i, e > r.parameterPositions[1] && (this.stopWarping(), t === 0 ? this.paused = !0 : this.timeScale = t);
      }
    }
    return this._effectiveTimeScale = t, t;
  }
  _updateTime(e) {
    const t = this._clip.duration, r = this.loop;
    let i = this.time + e, o = this._loopCount;
    const l = r === YI;
    if (e === 0)
      return o === -1 ? i : l && (o & 1) === 1 ? t - i : i;
    if (r === jI) {
      o === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
      e: {
        if (i >= t)
          i = t;
        else if (i < 0)
          i = 0;
        else {
          this.time = i;
          break e;
        }
        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
          type: "finished",
          action: this,
          direction: e < 0 ? -1 : 1
        });
      }
    } else {
      if (o === -1 && (e >= 0 ? (o = 0, this._setEndings(!0, this.repetitions === 0, l)) : this._setEndings(this.repetitions === 0, !0, l)), i >= t || i < 0) {
        const u = Math.floor(i / t);
        i -= t * u, o += Math.abs(u);
        const h = this.repetitions - o;
        if (h <= 0)
          this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
            type: "finished",
            action: this,
            direction: e > 0 ? 1 : -1
          });
        else {
          if (h === 1) {
            const p = e < 0;
            this._setEndings(p, !p, l);
          } else
            this._setEndings(!1, !1, l);
          this._loopCount = o, this.time = i, this._mixer.dispatchEvent({
            type: "loop",
            action: this,
            loopDelta: u
          });
        }
      } else
        this.time = i;
      if (l && (o & 1) === 1)
        return t - i;
    }
    return i;
  }
  _setEndings(e, t, r) {
    const i = this._interpolantSettings;
    r ? (i.endingStart = ZS, i.endingEnd = ZS) : (e ? i.endingStart = this.zeroSlopeAtStart ? ZS : QS : i.endingStart = OT, t ? i.endingEnd = this.zeroSlopeAtEnd ? ZS : QS : i.endingEnd = OT);
  }
  _scheduleFading(e, t, r) {
    const i = this._mixer, o = i.time;
    let l = this._weightInterpolant;
    l === null && (l = i._lendControlInterpolant(), this._weightInterpolant = l);
    const u = l.parameterPositions, h = l.sampleValues;
    return u[0] = o, h[0] = t, u[1] = o + e, h[1] = r, this;
  }
}
const JY = new Float32Array(1);
class eX extends wv {
  constructor(e) {
    super(), this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
  }
  _bindAction(e, t) {
    const r = e._localRoot || this._root, i = e._clip.tracks, o = i.length, l = e._propertyBindings, u = e._interpolants, h = r.uuid, p = this._bindingsByRootAndName;
    let y = p[h];
    y === void 0 && (y = {}, p[h] = y);
    for (let _ = 0; _ !== o; ++_) {
      const E = i[_], w = E.name;
      let R = y[w];
      if (R !== void 0)
        ++R.referenceCount, l[_] = R;
      else {
        if (R = l[_], R !== void 0) {
          R._cacheIndex === null && (++R.referenceCount, this._addInactiveBinding(R, h, w));
          continue;
        }
        const U = t && t._propertyBindings[_].binding.parsedPath;
        R = new uB(
          da.create(r, w, U),
          E.ValueTypeName,
          E.getValueSize()
        ), ++R.referenceCount, this._addInactiveBinding(R, h, w), l[_] = R;
      }
      u[_].resultBuffer = R.buffer;
    }
  }
  _activateAction(e) {
    if (!this._isActiveAction(e)) {
      if (e._cacheIndex === null) {
        const r = (e._localRoot || this._root).uuid, i = e._clip.uuid, o = this._actionsByClip[i];
        this._bindAction(
          e,
          o && o.knownActions[0]
        ), this._addInactiveAction(e, i, r);
      }
      const t = e._propertyBindings;
      for (let r = 0, i = t.length; r !== i; ++r) {
        const o = t[r];
        o.useCount++ === 0 && (this._lendBinding(o), o.saveOriginalState());
      }
      this._lendAction(e);
    }
  }
  _deactivateAction(e) {
    if (this._isActiveAction(e)) {
      const t = e._propertyBindings;
      for (let r = 0, i = t.length; r !== i; ++r) {
        const o = t[r];
        --o.useCount === 0 && (o.restoreOriginalState(), this._takeBackBinding(o));
      }
      this._takeBackAction(e);
    }
  }
  // Memory manager
  _initMemoryManager() {
    this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
    const e = this;
    this.stats = {
      actions: {
        get total() {
          return e._actions.length;
        },
        get inUse() {
          return e._nActiveActions;
        }
      },
      bindings: {
        get total() {
          return e._bindings.length;
        },
        get inUse() {
          return e._nActiveBindings;
        }
      },
      controlInterpolants: {
        get total() {
          return e._controlInterpolants.length;
        },
        get inUse() {
          return e._nActiveControlInterpolants;
        }
      }
    };
  }
  // Memory management for AnimationAction objects
  _isActiveAction(e) {
    const t = e._cacheIndex;
    return t !== null && t < this._nActiveActions;
  }
  _addInactiveAction(e, t, r) {
    const i = this._actions, o = this._actionsByClip;
    let l = o[t];
    if (l === void 0)
      l = {
        knownActions: [e],
        actionByRoot: {}
      }, e._byClipCacheIndex = 0, o[t] = l;
    else {
      const u = l.knownActions;
      e._byClipCacheIndex = u.length, u.push(e);
    }
    e._cacheIndex = i.length, i.push(e), l.actionByRoot[r] = e;
  }
  _removeInactiveAction(e) {
    const t = this._actions, r = t[t.length - 1], i = e._cacheIndex;
    r._cacheIndex = i, t[i] = r, t.pop(), e._cacheIndex = null;
    const o = e._clip.uuid, l = this._actionsByClip, u = l[o], h = u.knownActions, p = h[h.length - 1], y = e._byClipCacheIndex;
    p._byClipCacheIndex = y, h[y] = p, h.pop(), e._byClipCacheIndex = null;
    const _ = u.actionByRoot, E = (e._localRoot || this._root).uuid;
    delete _[E], h.length === 0 && delete l[o], this._removeInactiveBindingsForAction(e);
  }
  _removeInactiveBindingsForAction(e) {
    const t = e._propertyBindings;
    for (let r = 0, i = t.length; r !== i; ++r) {
      const o = t[r];
      --o.referenceCount === 0 && this._removeInactiveBinding(o);
    }
  }
  _lendAction(e) {
    const t = this._actions, r = e._cacheIndex, i = this._nActiveActions++, o = t[i];
    e._cacheIndex = i, t[i] = e, o._cacheIndex = r, t[r] = o;
  }
  _takeBackAction(e) {
    const t = this._actions, r = e._cacheIndex, i = --this._nActiveActions, o = t[i];
    e._cacheIndex = i, t[i] = e, o._cacheIndex = r, t[r] = o;
  }
  // Memory management for PropertyMixer objects
  _addInactiveBinding(e, t, r) {
    const i = this._bindingsByRootAndName, o = this._bindings;
    let l = i[t];
    l === void 0 && (l = {}, i[t] = l), l[r] = e, e._cacheIndex = o.length, o.push(e);
  }
  _removeInactiveBinding(e) {
    const t = this._bindings, r = e.binding, i = r.rootNode.uuid, o = r.path, l = this._bindingsByRootAndName, u = l[i], h = t[t.length - 1], p = e._cacheIndex;
    h._cacheIndex = p, t[p] = h, t.pop(), delete u[o], Object.keys(u).length === 0 && delete l[i];
  }
  _lendBinding(e) {
    const t = this._bindings, r = e._cacheIndex, i = this._nActiveBindings++, o = t[i];
    e._cacheIndex = i, t[i] = e, o._cacheIndex = r, t[r] = o;
  }
  _takeBackBinding(e) {
    const t = this._bindings, r = e._cacheIndex, i = --this._nActiveBindings, o = t[i];
    e._cacheIndex = i, t[i] = e, o._cacheIndex = r, t[r] = o;
  }
  // Memory management of Interpolants for weight and time scale
  _lendControlInterpolant() {
    const e = this._controlInterpolants, t = this._nActiveControlInterpolants++;
    let r = e[t];
    return r === void 0 && (r = new kP(
      new Float32Array(2),
      new Float32Array(2),
      1,
      JY
    ), r.__cacheIndex = t, e[t] = r), r;
  }
  _takeBackControlInterpolant(e) {
    const t = this._controlInterpolants, r = e.__cacheIndex, i = --this._nActiveControlInterpolants, o = t[i];
    e.__cacheIndex = i, t[i] = e, o.__cacheIndex = r, t[r] = o;
  }
  // return an action for a clip optionally using a custom root target
  // object (this method allocates a lot of dynamic memory in case a
  // previously unknown clip/root combination is specified)
  clipAction(e, t, r) {
    const i = t || this._root, o = i.uuid;
    let l = typeof e == "string" ? VT.findByName(i, e) : e;
    const u = l !== null ? l.uuid : e, h = this._actionsByClip[u];
    let p = null;
    if (r === void 0 && (l !== null ? r = l.blendMode : r = IR), h !== void 0) {
      const _ = h.actionByRoot[o];
      if (_ !== void 0 && _.blendMode === r)
        return _;
      p = h.knownActions[0], l === null && (l = p._clip);
    }
    if (l === null)
      return null;
    const y = new cB(this, l, t, r);
    return this._bindAction(y, p), this._addInactiveAction(y, u, o), y;
  }
  // get an existing action
  existingAction(e, t) {
    const r = t || this._root, i = r.uuid, o = typeof e == "string" ? VT.findByName(r, e) : e, l = o ? o.uuid : e, u = this._actionsByClip[l];
    return u !== void 0 && u.actionByRoot[i] || null;
  }
  // deactivates all previously scheduled actions
  stopAllAction() {
    const e = this._actions, t = this._nActiveActions;
    for (let r = t - 1; r >= 0; --r)
      e[r].stop();
    return this;
  }
  // advance the time and update apply the animation
  update(e) {
    e *= this.timeScale;
    const t = this._actions, r = this._nActiveActions, i = this.time += e, o = Math.sign(e), l = this._accuIndex ^= 1;
    for (let p = 0; p !== r; ++p)
      t[p]._update(i, e, o, l);
    const u = this._bindings, h = this._nActiveBindings;
    for (let p = 0; p !== h; ++p)
      u[p].apply(l);
    return this;
  }
  // Allows you to seek to a specific time in an animation.
  setTime(e) {
    this.time = 0;
    for (let t = 0; t < this._actions.length; t++)
      this._actions[t].time = 0;
    return this.update(e);
  }
  // return this mixer's root target object
  getRoot() {
    return this._root;
  }
  // free all resources specific to a particular clip
  uncacheClip(e) {
    const t = this._actions, r = e.uuid, i = this._actionsByClip, o = i[r];
    if (o !== void 0) {
      const l = o.knownActions;
      for (let u = 0, h = l.length; u !== h; ++u) {
        const p = l[u];
        this._deactivateAction(p);
        const y = p._cacheIndex, _ = t[t.length - 1];
        p._cacheIndex = null, p._byClipCacheIndex = null, _._cacheIndex = y, t[y] = _, t.pop(), this._removeInactiveBindingsForAction(p);
      }
      delete i[r];
    }
  }
  // free all resources specific to a particular root target object
  uncacheRoot(e) {
    const t = e.uuid, r = this._actionsByClip;
    for (const l in r) {
      const u = r[l].actionByRoot, h = u[t];
      h !== void 0 && (this._deactivateAction(h), this._removeInactiveAction(h));
    }
    const i = this._bindingsByRootAndName, o = i[t];
    if (o !== void 0)
      for (const l in o) {
        const u = o[l];
        u.restoreOriginalState(), this._removeInactiveBinding(u);
      }
  }
  // remove a targeted clip from the cache
  uncacheAction(e, t) {
    const r = this.existingAction(e, t);
    r !== null && (this._deactivateAction(r), this._removeInactiveAction(r));
  }
}
class jP {
  constructor(e) {
    this.value = e;
  }
  clone() {
    return new jP(this.value.clone === void 0 ? this.value : this.value.clone());
  }
}
let tX = 0;
class nX extends wv {
  constructor() {
    super(), this.isUniformsGroup = !0, Object.defineProperty(this, "id", { value: tX++ }), this.name = "", this.usage = PT, this.uniforms = [];
  }
  add(e) {
    return this.uniforms.push(e), this;
  }
  remove(e) {
    const t = this.uniforms.indexOf(e);
    return t !== -1 && this.uniforms.splice(t, 1), this;
  }
  setName(e) {
    return this.name = e, this;
  }
  setUsage(e) {
    return this.usage = e, this;
  }
  dispose() {
    return this.dispatchEvent({ type: "dispose" }), this;
  }
  copy(e) {
    this.name = e.name, this.usage = e.usage;
    const t = e.uniforms;
    this.uniforms.length = 0;
    for (let r = 0, i = t.length; r < i; r++)
      this.uniforms.push(t[r].clone());
    return this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class rX extends YR {
  constructor(e, t, r = 1) {
    super(e, t), this.isInstancedInterleavedBuffer = !0, this.meshPerAttribute = r;
  }
  copy(e) {
    return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
  }
  clone(e) {
    const t = super.clone(e);
    return t.meshPerAttribute = this.meshPerAttribute, t;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t;
  }
}
class iX {
  constructor(e, t, r, i, o) {
    this.isGLBufferAttribute = !0, this.name = "", this.buffer = e, this.type = t, this.itemSize = r, this.elementSize = i, this.count = o, this.version = 0;
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setBuffer(e) {
    return this.buffer = e, this;
  }
  setType(e, t) {
    return this.type = e, this.elementSize = t, this;
  }
  setItemSize(e) {
    return this.itemSize = e, this;
  }
  setCount(e) {
    return this.count = e, this;
  }
}
class fB {
  constructor(e, t, r = 0, i = 1 / 0) {
    this.ray = new v_(e, t), this.near = r, this.far = i, this.camera = null, this.layers = new i_(), this.params = {
      Mesh: {},
      Line: { threshold: 1 },
      LOD: {},
      Points: { threshold: 1 },
      Sprite: {}
    };
  }
  set(e, t) {
    this.ray.set(e, t);
  }
  setFromCamera(e, t) {
    t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, 0.5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
  }
  intersectObject(e, t = !0, r = []) {
    return SO(e, this, r, t), r.sort(Lk), r;
  }
  intersectObjects(e, t = !0, r = []) {
    for (let i = 0, o = e.length; i < o; i++)
      SO(e[i], this, r, t);
    return r.sort(Lk), r;
  }
}
function Lk(n, e) {
  return n.distance - e.distance;
}
function SO(n, e, t, r) {
  if (n.layers.test(e.layers) && n.raycast(e, t), r === !0) {
    const i = n.children;
    for (let o = 0, l = i.length; o < l; o++)
      SO(i[o], e, t, !0);
  }
}
class _O {
  constructor(e = 1, t = 0, r = 0) {
    return this.radius = e, this.phi = t, this.theta = r, this;
  }
  set(e, t, r) {
    return this.radius = e, this.phi = t, this.theta = r, this;
  }
  copy(e) {
    return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
  }
  // restrict phi to be between EPS and PI-EPS
  makeSafe() {
    return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
  }
  setFromVector3(e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }
  setFromCartesianCoords(e, t, r) {
    return this.radius = Math.sqrt(e * e + t * t + r * r), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, r), this.phi = Math.acos(Gs(t / this.radius, -1, 1))), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class aX {
  constructor(e = 1, t = 0, r = 0) {
    return this.radius = e, this.theta = t, this.y = r, this;
  }
  set(e, t, r) {
    return this.radius = e, this.theta = t, this.y = r, this;
  }
  copy(e) {
    return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
  }
  setFromVector3(e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }
  setFromCartesianCoords(e, t, r) {
    return this.radius = Math.sqrt(e * e + r * r), this.theta = Math.atan2(e, r), this.y = t, this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Ok = /* @__PURE__ */ new $t();
class oX {
  constructor(e = new $t(1 / 0, 1 / 0), t = new $t(-1 / 0, -1 / 0)) {
    this.isBox2 = !0, this.min = e, this.max = t;
  }
  set(e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let t = 0, r = e.length; t < r; t++)
      this.expandByPoint(e[t]);
    return this;
  }
  setFromCenterAndSize(e, t) {
    const r = Ok.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }
  makeEmpty() {
    return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
  }
  isEmpty() {
    return this.max.x < this.min.x || this.max.y < this.min.y;
  }
  getCenter(e) {
    return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return this.min.min(e), this.max.max(e), this;
  }
  expandByVector(e) {
    return this.min.sub(e), this.max.add(e), this;
  }
  expandByScalar(e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }
  containsPoint(e) {
    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
  }
  containsBox(e) {
    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
  }
  getParameter(e, t) {
    return t.set(
      (e.x - this.min.x) / (this.max.x - this.min.x),
      (e.y - this.min.y) / (this.max.y - this.min.y)
    );
  }
  intersectsBox(e) {
    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
  }
  clampPoint(e, t) {
    return t.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return this.clampPoint(e, Ok).distanceTo(e);
  }
  intersect(e) {
    return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
  }
  union(e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }
  translate(e) {
    return this.min.add(e), this.max.add(e), this;
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const Pk = /* @__PURE__ */ new Re(), UC = /* @__PURE__ */ new Re();
class sX {
  constructor(e = new Re(), t = new Re()) {
    this.start = e, this.end = t;
  }
  set(e, t) {
    return this.start.copy(e), this.end.copy(t), this;
  }
  copy(e) {
    return this.start.copy(e.start), this.end.copy(e.end), this;
  }
  getCenter(e) {
    return e.addVectors(this.start, this.end).multiplyScalar(0.5);
  }
  delta(e) {
    return e.subVectors(this.end, this.start);
  }
  distanceSq() {
    return this.start.distanceToSquared(this.end);
  }
  distance() {
    return this.start.distanceTo(this.end);
  }
  at(e, t) {
    return this.delta(t).multiplyScalar(e).add(this.start);
  }
  closestPointToPointParameter(e, t) {
    Pk.subVectors(e, this.start), UC.subVectors(this.end, this.start);
    const r = UC.dot(UC);
    let o = UC.dot(Pk) / r;
    return t && (o = Gs(o, 0, 1)), o;
  }
  closestPointToPoint(e, t, r) {
    const i = this.closestPointToPointParameter(e, t);
    return this.delta(r).multiplyScalar(i).add(this.start);
  }
  applyMatrix4(e) {
    return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
  }
  equals(e) {
    return e.start.equals(this.start) && e.end.equals(this.end);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Uk = /* @__PURE__ */ new Re();
class lX extends xa {
  constructor(e, t) {
    super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t, this.type = "SpotLightHelper";
    const r = new Ei(), i = [
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      -1,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      1,
      0,
      0,
      0,
      0,
      -1,
      1
    ];
    for (let l = 0, u = 1, h = 32; l < h; l++, u++) {
      const p = l / h * Math.PI * 2, y = u / h * Math.PI * 2;
      i.push(
        Math.cos(p),
        Math.sin(p),
        1,
        Math.cos(y),
        Math.sin(y),
        1
      );
    }
    r.setAttribute("position", new nr(i, 3));
    const o = new Uf({ fog: !1, toneMapped: !1 });
    this.cone = new Mv(r, o), this.add(this.cone), this.update();
  }
  dispose() {
    this.cone.geometry.dispose(), this.cone.material.dispose();
  }
  update() {
    this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1);
    const e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
    this.cone.scale.set(t, t, e), Uk.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Uk), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
  }
}
const a0 = /* @__PURE__ */ new Re(), NC = /* @__PURE__ */ new ri(), XD = /* @__PURE__ */ new ri();
class uX extends Mv {
  constructor(e) {
    const t = dB(e), r = new Ei(), i = [], o = [], l = new Pn(0, 0, 1), u = new Pn(0, 1, 0);
    for (let p = 0; p < t.length; p++) {
      const y = t[p];
      y.parent && y.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), o.push(l.r, l.g, l.b), o.push(u.r, u.g, u.b));
    }
    r.setAttribute("position", new nr(i, 3)), r.setAttribute("color", new nr(o, 3));
    const h = new Uf({ vertexColors: !0, depthTest: !1, depthWrite: !1, toneMapped: !1, transparent: !0 });
    super(r, h), this.isSkeletonHelper = !0, this.type = "SkeletonHelper", this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
  }
  updateMatrixWorld(e) {
    const t = this.bones, r = this.geometry, i = r.getAttribute("position");
    XD.copy(this.root.matrixWorld).invert();
    for (let o = 0, l = 0; o < t.length; o++) {
      const u = t[o];
      u.parent && u.parent.isBone && (NC.multiplyMatrices(XD, u.matrixWorld), a0.setFromMatrixPosition(NC), i.setXYZ(l, a0.x, a0.y, a0.z), NC.multiplyMatrices(XD, u.parent.matrixWorld), a0.setFromMatrixPosition(NC), i.setXYZ(l + 1, a0.x, a0.y, a0.z), l += 2);
    }
    r.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
function dB(n) {
  const e = [];
  n.isBone === !0 && e.push(n);
  for (let t = 0; t < n.children.length; t++)
    e.push.apply(e, dB(n.children[t]));
  return e;
}
class cX extends Nl {
  constructor(e, t, r) {
    const i = new nw(t, 4, 2), o = new $g({ wireframe: !0, fog: !1, toneMapped: !1 });
    super(i, o), this.light = e, this.color = r, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
  update() {
    this.light.updateWorldMatrix(!0, !1), this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
  }
}
const fX = /* @__PURE__ */ new Re(), Nk = /* @__PURE__ */ new Pn(), kk = /* @__PURE__ */ new Pn();
class dX extends xa {
  constructor(e, t, r) {
    super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r, this.type = "HemisphereLightHelper";
    const i = new tw(t);
    i.rotateY(Math.PI * 0.5), this.material = new $g({ wireframe: !0, fog: !1, toneMapped: !1 }), this.color === void 0 && (this.material.vertexColors = !0);
    const o = i.getAttribute("position"), l = new Float32Array(o.count * 3);
    i.setAttribute("color", new mo(l, 3)), this.add(new Nl(i, this.material)), this.update();
  }
  dispose() {
    this.children[0].geometry.dispose(), this.children[0].material.dispose();
  }
  update() {
    const e = this.children[0];
    if (this.color !== void 0)
      this.material.color.set(this.color);
    else {
      const t = e.geometry.getAttribute("color");
      Nk.copy(this.light.color), kk.copy(this.light.groundColor);
      for (let r = 0, i = t.count; r < i; r++) {
        const o = r < i / 2 ? Nk : kk;
        t.setXYZ(r, o.r, o.g, o.b);
      }
      t.needsUpdate = !0;
    }
    this.light.updateWorldMatrix(!0, !1), e.lookAt(fX.setFromMatrixPosition(this.light.matrixWorld).negate());
  }
}
class hX extends Mv {
  constructor(e = 10, t = 10, r = 4473924, i = 8947848) {
    r = new Pn(r), i = new Pn(i);
    const o = t / 2, l = e / t, u = e / 2, h = [], p = [];
    for (let E = 0, w = 0, R = -u; E <= t; E++, R += l) {
      h.push(-u, 0, R, u, 0, R), h.push(R, 0, -u, R, 0, u);
      const U = E === o ? r : i;
      U.toArray(p, w), w += 3, U.toArray(p, w), w += 3, U.toArray(p, w), w += 3, U.toArray(p, w), w += 3;
    }
    const y = new Ei();
    y.setAttribute("position", new nr(h, 3)), y.setAttribute("color", new nr(p, 3));
    const _ = new Uf({ vertexColors: !0, toneMapped: !1 });
    super(y, _), this.type = "GridHelper";
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class pX extends Mv {
  constructor(e = 10, t = 16, r = 8, i = 64, o = 4473924, l = 8947848) {
    o = new Pn(o), l = new Pn(l);
    const u = [], h = [];
    if (t > 1)
      for (let _ = 0; _ < t; _++) {
        const E = _ / t * (Math.PI * 2), w = Math.sin(E) * e, R = Math.cos(E) * e;
        u.push(0, 0, 0), u.push(w, 0, R);
        const U = _ & 1 ? o : l;
        h.push(U.r, U.g, U.b), h.push(U.r, U.g, U.b);
      }
    for (let _ = 0; _ < r; _++) {
      const E = _ & 1 ? o : l, w = e - e / r * _;
      for (let R = 0; R < i; R++) {
        let U = R / i * (Math.PI * 2), L = Math.sin(U) * w, A = Math.cos(U) * w;
        u.push(L, 0, A), h.push(E.r, E.g, E.b), U = (R + 1) / i * (Math.PI * 2), L = Math.sin(U) * w, A = Math.cos(U) * w, u.push(L, 0, A), h.push(E.r, E.g, E.b);
      }
    }
    const p = new Ei();
    p.setAttribute("position", new nr(u, 3)), p.setAttribute("color", new nr(h, 3));
    const y = new Uf({ vertexColors: !0, toneMapped: !1 });
    super(p, y), this.type = "PolarGridHelper";
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
const Fk = /* @__PURE__ */ new Re(), kC = /* @__PURE__ */ new Re(), zk = /* @__PURE__ */ new Re();
class mX extends xa {
  constructor(e, t, r) {
    super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r, this.type = "DirectionalLightHelper", t === void 0 && (t = 1);
    let i = new Ei();
    i.setAttribute("position", new nr([
      -t,
      t,
      0,
      t,
      t,
      0,
      t,
      -t,
      0,
      -t,
      -t,
      0,
      -t,
      t,
      0
    ], 3));
    const o = new Uf({ fog: !1, toneMapped: !1 });
    this.lightPlane = new m0(i, o), this.add(this.lightPlane), i = new Ei(), i.setAttribute("position", new nr([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new m0(i, o), this.add(this.targetLine), this.update();
  }
  dispose() {
    this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
  }
  update() {
    this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1), Fk.setFromMatrixPosition(this.light.matrixWorld), kC.setFromMatrixPosition(this.light.target.matrixWorld), zk.subVectors(kC, Fk), this.lightPlane.lookAt(kC), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(kC), this.targetLine.scale.z = zk.length();
  }
}
const FC = /* @__PURE__ */ new Re(), Vs = /* @__PURE__ */ new ZT();
class vX extends Mv {
  constructor(e) {
    const t = new Ei(), r = new Uf({ color: 16777215, vertexColors: !0, toneMapped: !1 }), i = [], o = [], l = {};
    u("n1", "n2"), u("n2", "n4"), u("n4", "n3"), u("n3", "n1"), u("f1", "f2"), u("f2", "f4"), u("f4", "f3"), u("f3", "f1"), u("n1", "f1"), u("n2", "f2"), u("n3", "f3"), u("n4", "f4"), u("p", "n1"), u("p", "n2"), u("p", "n3"), u("p", "n4"), u("u1", "u2"), u("u2", "u3"), u("u3", "u1"), u("c", "t"), u("p", "c"), u("cn1", "cn2"), u("cn3", "cn4"), u("cf1", "cf2"), u("cf3", "cf4");
    function u(R, U) {
      h(R), h(U);
    }
    function h(R) {
      i.push(0, 0, 0), o.push(0, 0, 0), l[R] === void 0 && (l[R] = []), l[R].push(i.length / 3 - 1);
    }
    t.setAttribute("position", new nr(i, 3)), t.setAttribute("color", new nr(o, 3)), super(t, r), this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = l, this.update();
    const p = new Pn(16755200), y = new Pn(16711680), _ = new Pn(43775), E = new Pn(16777215), w = new Pn(3355443);
    this.setColors(p, y, _, E, w);
  }
  setColors(e, t, r, i, o) {
    const u = this.geometry.getAttribute("color");
    u.setXYZ(0, e.r, e.g, e.b), u.setXYZ(1, e.r, e.g, e.b), u.setXYZ(2, e.r, e.g, e.b), u.setXYZ(3, e.r, e.g, e.b), u.setXYZ(4, e.r, e.g, e.b), u.setXYZ(5, e.r, e.g, e.b), u.setXYZ(6, e.r, e.g, e.b), u.setXYZ(7, e.r, e.g, e.b), u.setXYZ(8, e.r, e.g, e.b), u.setXYZ(9, e.r, e.g, e.b), u.setXYZ(10, e.r, e.g, e.b), u.setXYZ(11, e.r, e.g, e.b), u.setXYZ(12, e.r, e.g, e.b), u.setXYZ(13, e.r, e.g, e.b), u.setXYZ(14, e.r, e.g, e.b), u.setXYZ(15, e.r, e.g, e.b), u.setXYZ(16, e.r, e.g, e.b), u.setXYZ(17, e.r, e.g, e.b), u.setXYZ(18, e.r, e.g, e.b), u.setXYZ(19, e.r, e.g, e.b), u.setXYZ(20, e.r, e.g, e.b), u.setXYZ(21, e.r, e.g, e.b), u.setXYZ(22, e.r, e.g, e.b), u.setXYZ(23, e.r, e.g, e.b), u.setXYZ(24, t.r, t.g, t.b), u.setXYZ(25, t.r, t.g, t.b), u.setXYZ(26, t.r, t.g, t.b), u.setXYZ(27, t.r, t.g, t.b), u.setXYZ(28, t.r, t.g, t.b), u.setXYZ(29, t.r, t.g, t.b), u.setXYZ(30, t.r, t.g, t.b), u.setXYZ(31, t.r, t.g, t.b), u.setXYZ(32, r.r, r.g, r.b), u.setXYZ(33, r.r, r.g, r.b), u.setXYZ(34, r.r, r.g, r.b), u.setXYZ(35, r.r, r.g, r.b), u.setXYZ(36, r.r, r.g, r.b), u.setXYZ(37, r.r, r.g, r.b), u.setXYZ(38, i.r, i.g, i.b), u.setXYZ(39, i.r, i.g, i.b), u.setXYZ(40, o.r, o.g, o.b), u.setXYZ(41, o.r, o.g, o.b), u.setXYZ(42, o.r, o.g, o.b), u.setXYZ(43, o.r, o.g, o.b), u.setXYZ(44, o.r, o.g, o.b), u.setXYZ(45, o.r, o.g, o.b), u.setXYZ(46, o.r, o.g, o.b), u.setXYZ(47, o.r, o.g, o.b), u.setXYZ(48, o.r, o.g, o.b), u.setXYZ(49, o.r, o.g, o.b), u.needsUpdate = !0;
  }
  update() {
    const e = this.geometry, t = this.pointMap, r = 1, i = 1;
    Vs.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), hl("c", t, e, Vs, 0, 0, -1), hl("t", t, e, Vs, 0, 0, 1), hl("n1", t, e, Vs, -r, -i, -1), hl("n2", t, e, Vs, r, -i, -1), hl("n3", t, e, Vs, -r, i, -1), hl("n4", t, e, Vs, r, i, -1), hl("f1", t, e, Vs, -r, -i, 1), hl("f2", t, e, Vs, r, -i, 1), hl("f3", t, e, Vs, -r, i, 1), hl("f4", t, e, Vs, r, i, 1), hl("u1", t, e, Vs, r * 0.7, i * 1.1, -1), hl("u2", t, e, Vs, -r * 0.7, i * 1.1, -1), hl("u3", t, e, Vs, 0, i * 2, -1), hl("cf1", t, e, Vs, -r, 0, 1), hl("cf2", t, e, Vs, r, 0, 1), hl("cf3", t, e, Vs, 0, -i, 1), hl("cf4", t, e, Vs, 0, i, 1), hl("cn1", t, e, Vs, -r, 0, -1), hl("cn2", t, e, Vs, r, 0, -1), hl("cn3", t, e, Vs, 0, -i, -1), hl("cn4", t, e, Vs, 0, i, -1), e.getAttribute("position").needsUpdate = !0;
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
function hl(n, e, t, r, i, o, l) {
  FC.set(i, o, l).unproject(r);
  const u = e[n];
  if (u !== void 0) {
    const h = t.getAttribute("position");
    for (let p = 0, y = u.length; p < y; p++)
      h.setXYZ(u[p], FC.x, FC.y, FC.z);
  }
}
const zC = /* @__PURE__ */ new dm();
class gX extends Mv {
  constructor(e, t = 16776960) {
    const r = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), i = new Float32Array(8 * 3), o = new Ei();
    o.setIndex(new mo(r, 1)), o.setAttribute("position", new mo(i, 3)), super(o, new Uf({ color: t, toneMapped: !1 })), this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
  }
  update(e) {
    if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && zC.setFromObject(this.object), zC.isEmpty())
      return;
    const t = zC.min, r = zC.max, i = this.geometry.attributes.position, o = i.array;
    o[0] = r.x, o[1] = r.y, o[2] = r.z, o[3] = t.x, o[4] = r.y, o[5] = r.z, o[6] = t.x, o[7] = t.y, o[8] = r.z, o[9] = r.x, o[10] = t.y, o[11] = r.z, o[12] = r.x, o[13] = r.y, o[14] = t.z, o[15] = t.x, o[16] = r.y, o[17] = t.z, o[18] = t.x, o[19] = t.y, o[20] = t.z, o[21] = r.x, o[22] = t.y, o[23] = t.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
  }
  setFromObject(e) {
    return this.object = e, this.update(), this;
  }
  copy(e, t) {
    return super.copy(e, t), this.object = e.object, this;
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class yX extends Mv {
  constructor(e, t = 16776960) {
    const r = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), i = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], o = new Ei();
    o.setIndex(new mo(r, 1)), o.setAttribute("position", new nr(i, 3)), super(o, new Uf({ color: t, toneMapped: !1 })), this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
  }
  updateMatrixWorld(e) {
    const t = this.box;
    t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(0.5), super.updateMatrixWorld(e));
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class SX extends m0 {
  constructor(e, t = 1, r = 16776960) {
    const i = r, o = [1, -1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0], l = new Ei();
    l.setAttribute("position", new nr(o, 3)), l.computeBoundingSphere(), super(l, new Uf({ color: i, toneMapped: !1 })), this.type = "PlaneHelper", this.plane = e, this.size = t;
    const u = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0], h = new Ei();
    h.setAttribute("position", new nr(u, 3)), h.computeBoundingSphere(), this.add(new Nl(h, new $g({ color: i, opacity: 0.2, transparent: !0, depthWrite: !1, toneMapped: !1 })));
  }
  updateMatrixWorld(e) {
    this.position.set(0, 0, 0), this.scale.set(0.5 * this.size, 0.5 * this.size, 1), this.lookAt(this.plane.normal), this.translateZ(-this.plane.constant), super.updateMatrixWorld(e);
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose(), this.children[0].geometry.dispose(), this.children[0].material.dispose();
  }
}
const Ik = /* @__PURE__ */ new Re();
let IC, qD;
class _X extends xa {
  // dir is assumed to be normalized
  constructor(e = new Re(0, 0, 1), t = new Re(0, 0, 0), r = 1, i = 16776960, o = r * 0.2, l = o * 0.2) {
    super(), this.type = "ArrowHelper", IC === void 0 && (IC = new Ei(), IC.setAttribute("position", new nr([0, 0, 0, 0, 1, 0], 3)), qD = new X1(0, 0.5, 1, 5, 1), qD.translate(0, -0.5, 0)), this.position.copy(t), this.line = new m0(IC, new Uf({ color: i, toneMapped: !1 })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Nl(qD, new $g({ color: i, toneMapped: !1 })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(r, o, l);
  }
  setDirection(e) {
    if (e.y > 0.99999)
      this.quaternion.set(0, 0, 0, 1);
    else if (e.y < -0.99999)
      this.quaternion.set(1, 0, 0, 0);
    else {
      Ik.set(e.z, 0, -e.x).normalize();
      const t = Math.acos(e.y);
      this.quaternion.setFromAxisAngle(Ik, t);
    }
  }
  setLength(e, t = e * 0.2, r = t * 0.2) {
    this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(r, t, r), this.cone.position.y = e, this.cone.updateMatrix();
  }
  setColor(e) {
    this.line.material.color.set(e), this.cone.material.color.set(e);
  }
  copy(e) {
    return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
  }
  dispose() {
    this.line.geometry.dispose(), this.line.material.dispose(), this.cone.geometry.dispose(), this.cone.material.dispose();
  }
}
class xX extends Mv {
  constructor(e = 1) {
    const t = [
      0,
      0,
      0,
      e,
      0,
      0,
      0,
      0,
      0,
      0,
      e,
      0,
      0,
      0,
      0,
      0,
      0,
      e
    ], r = [
      1,
      0,
      0,
      1,
      0.6,
      0,
      0,
      1,
      0,
      0.6,
      1,
      0,
      0,
      0,
      1,
      0,
      0.6,
      1
    ], i = new Ei();
    i.setAttribute("position", new nr(t, 3)), i.setAttribute("color", new nr(r, 3));
    const o = new Uf({ vertexColors: !0, toneMapped: !1 });
    super(i, o), this.type = "AxesHelper";
  }
  setColors(e, t, r) {
    const i = new Pn(), o = this.geometry.attributes.color.array;
    return i.set(e), i.toArray(o, 0), i.toArray(o, 3), i.set(t), i.toArray(o, 6), i.toArray(o, 9), i.set(r), i.toArray(o, 12), i.toArray(o, 15), this.geometry.attributes.color.needsUpdate = !0, this;
  }
  dispose() {
    this.geometry.dispose(), this.material.dispose();
  }
}
class EX {
  constructor() {
    this.type = "ShapePath", this.color = new Pn(), this.subPaths = [], this.currentPath = null;
  }
  moveTo(e, t) {
    return this.currentPath = new kT(), this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this;
  }
  lineTo(e, t) {
    return this.currentPath.lineTo(e, t), this;
  }
  quadraticCurveTo(e, t, r, i) {
    return this.currentPath.quadraticCurveTo(e, t, r, i), this;
  }
  bezierCurveTo(e, t, r, i, o, l) {
    return this.currentPath.bezierCurveTo(e, t, r, i, o, l), this;
  }
  splineThru(e) {
    return this.currentPath.splineThru(e), this;
  }
  toShapes(e) {
    function t(A) {
      const k = [];
      for (let F = 0, H = A.length; F < H; F++) {
        const B = A[F], j = new a_();
        j.curves = B.curves, k.push(j);
      }
      return k;
    }
    function r(A, k) {
      const F = k.length;
      let H = !1;
      for (let B = F - 1, j = 0; j < F; B = j++) {
        let Y = k[B], ee = k[j], Z = ee.x - Y.x, K = ee.y - Y.y;
        if (Math.abs(K) > Number.EPSILON) {
          if (K < 0 && (Y = k[j], Z = -Z, ee = k[B], K = -K), A.y < Y.y || A.y > ee.y)
            continue;
          if (A.y === Y.y) {
            if (A.x === Y.x)
              return !0;
          } else {
            const fe = K * (A.x - Y.x) - Z * (A.y - Y.y);
            if (fe === 0)
              return !0;
            if (fe < 0)
              continue;
            H = !H;
          }
        } else {
          if (A.y !== Y.y)
            continue;
          if (ee.x <= A.x && A.x <= Y.x || Y.x <= A.x && A.x <= ee.x)
            return !0;
        }
      }
      return H;
    }
    const i = _v.isClockWise, o = this.subPaths;
    if (o.length === 0)
      return [];
    let l, u, h;
    const p = [];
    if (o.length === 1)
      return u = o[0], h = new a_(), h.curves = u.curves, p.push(h), p;
    let y = !i(o[0].getPoints());
    y = e ? !y : y;
    const _ = [], E = [];
    let w = [], R = 0, U;
    E[R] = void 0, w[R] = [];
    for (let A = 0, k = o.length; A < k; A++)
      u = o[A], U = u.getPoints(), l = i(U), l = e ? !l : l, l ? (!y && E[R] && R++, E[R] = { s: new a_(), p: U }, E[R].s.curves = u.curves, y && R++, w[R] = []) : w[R].push({ h: u, p: U[0] });
    if (!E[0])
      return t(o);
    if (E.length > 1) {
      let A = !1, k = 0;
      for (let F = 0, H = E.length; F < H; F++)
        _[F] = [];
      for (let F = 0, H = E.length; F < H; F++) {
        const B = w[F];
        for (let j = 0; j < B.length; j++) {
          const Y = B[j];
          let ee = !0;
          for (let Z = 0; Z < E.length; Z++)
            r(Y.p, E[Z].p) && (F !== Z && k++, ee ? (ee = !1, _[Z].push(Y)) : A = !0);
          ee && _[F].push(Y);
        }
      }
      k > 0 && A === !1 && (w = _);
    }
    let L;
    for (let A = 0, k = E.length; A < k; A++) {
      h = E[A].s, p.push(h), L = w[A];
      for (let F = 0, H = L.length; F < H; F++)
        h.holes.push(L[F].h);
    }
    return p;
  }
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: {
  revision: NR
} }));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = NR);
const bX = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ACESFilmicToneMapping: aP,
  AddEquation: qS,
  AddOperation: LI,
  AdditiveAnimationBlendMode: hP,
  AdditiveBlending: UL,
  AlphaFormat: zI,
  AlwaysCompare: i4,
  AlwaysDepth: TI,
  AlwaysStencilFunc: KI,
  AmbientLight: iB,
  AmbientLightProbe: kY,
  AnimationAction: cB,
  AnimationClip: VT,
  AnimationLoader: bY,
  AnimationMixer: eX,
  AnimationObjectGroup: ZY,
  AnimationUtils: SY,
  ArcCurve: D4,
  ArrayCamera: _4,
  ArrowHelper: _X,
  Audio: lB,
  AudioAnalyser: VY,
  AudioContext: HP,
  AudioListener: IY,
  AudioLoader: UY,
  AxesHelper: xX,
  BackSide: Wc,
  BasicDepthPacking: XI,
  BasicShadowMap: cI,
  Bone: wP,
  BooleanKeyframeTrack: y_,
  Box2: oX,
  Box3: dm,
  Box3Helper: yX,
  BoxGeometry: g_,
  BoxHelper: gX,
  BufferAttribute: mo,
  BufferGeometry: Ei,
  BufferGeometryLoader: sB,
  ByteType: kI,
  Cache: h_,
  Camera: ZT,
  CameraHelper: vX,
  CanvasTexture: G$,
  CapsuleGeometry: ZR,
  CatmullRomCurve3: L4,
  CineonToneMapping: UI,
  CircleGeometry: JR,
  ClampToEdgeWrapping: Vc,
  Clock: VP,
  Color: Pn,
  ColorKeyframeTrack: FP,
  ColorManagement: sp,
  CompressedArrayTexture: H$,
  CompressedCubeTexture: V$,
  CompressedTexture: qR,
  CompressedTextureLoader: TY,
  ConeGeometry: e2,
  CubeCamera: d4,
  CubeReflectionMapping: Bg,
  CubeRefractionMapping: h0,
  CubeTexture: JT,
  CubeTextureLoader: wY,
  CubeUVReflectionMapping: $1,
  CubicBezierCurve: RP,
  CubicBezierCurve3: O4,
  CubicInterpolant: K4,
  CullFaceBack: PL,
  CullFaceFront: uI,
  CullFaceFrontBack: U8,
  CullFaceNone: lI,
  Curve: hm,
  CurvePath: U4,
  CustomBlending: fI,
  CustomToneMapping: NI,
  CylinderGeometry: X1,
  Cylindrical: aX,
  Data3DTexture: yP,
  DataArrayTexture: BR,
  DataTexture: N1,
  DataTextureLoader: MY,
  DataUtils: XG,
  DecrementStencilOp: Y8,
  DecrementWrapStencilOp: q8,
  DefaultLoadingManager: J4,
  DepthFormat: c0,
  DepthStencilFormat: u_,
  DepthTexture: x4,
  DirectionalLight: rB,
  DirectionalLightHelper: mX,
  DiscreteInterpolant: Q4,
  DisplayP3ColorSpace: KT,
  DodecahedronGeometry: t2,
  DoubleSide: cp,
  DstAlphaFactor: yI,
  DstColorFactor: _I,
  DynamicCopyUsage: cG,
  DynamicDrawUsage: iG,
  DynamicReadUsage: sG,
  EdgesGeometry: N4,
  EllipseCurve: KR,
  EqualCompare: JI,
  EqualDepth: MI,
  EqualStencilFunc: J8,
  EquirectangularReflectionMapping: MT,
  EquirectangularRefractionMapping: CT,
  Euler: QT,
  EventDispatcher: wv,
  ExtrudeGeometry: r2,
  FileLoader: Hg,
  Float16BufferAttribute: eW,
  Float32BufferAttribute: nr,
  Float64BufferAttribute: tW,
  FloatType: vv,
  Fog: $R,
  FogExp2: jR,
  FramebufferTexture: B$,
  FrontSide: xv,
  Frustum: HR,
  GLBufferAttribute: iX,
  GLSL1: dG,
  GLSL3: cO,
  GreaterCompare: t4,
  GreaterDepth: RI,
  GreaterEqualCompare: r4,
  GreaterEqualDepth: CI,
  GreaterEqualStencilFunc: rG,
  GreaterStencilFunc: tG,
  GridHelper: hX,
  Group: A1,
  HalfFloatType: z1,
  HemisphereLight: eB,
  HemisphereLightHelper: dX,
  HemisphereLightProbe: NY,
  IcosahedronGeometry: i2,
  ImageBitmapLoader: PY,
  ImageLoader: GT,
  ImageUtils: gP,
  IncrementStencilOp: $8,
  IncrementWrapStencilOp: X8,
  InstancedBufferAttribute: f_,
  InstancedBufferGeometry: BP,
  InstancedInterleavedBuffer: rX,
  InstancedMesh: C4,
  Int16BufferAttribute: ZG,
  Int32BufferAttribute: JG,
  Int8BufferAttribute: qG,
  IntType: sP,
  InterleavedBuffer: YR,
  InterleavedBufferAttribute: c_,
  Interpolant: rw,
  InterpolateDiscrete: DT,
  InterpolateLinear: LT,
  InterpolateSmooth: oR,
  InvertStencilOp: K8,
  KeepStencilOp: sR,
  KeyframeTrack: pm,
  LOD: w4,
  LatheGeometry: ew,
  Layers: i_,
  LessCompare: ZI,
  LessDepth: wI,
  LessEqualCompare: e4,
  LessEqualDepth: hR,
  LessEqualStencilFunc: eG,
  LessStencilFunc: Z8,
  Light: b0,
  LightProbe: f2,
  Line: m0,
  Line3: sX,
  LineBasicMaterial: Uf,
  LineCurve: QR,
  LineCurve3: P4,
  LineDashedMaterial: X4,
  LineLoop: R4,
  LineSegments: Mv,
  LinearDisplayP3ColorSpace: G8,
  LinearEncoding: pP,
  LinearFilter: Ss,
  LinearInterpolant: kP,
  LinearMipMapLinearFilter: I8,
  LinearMipMapNearestFilter: z8,
  LinearMipmapLinearFilter: p0,
  LinearMipmapNearestFilter: oP,
  LinearSRGBColorSpace: um,
  LinearToneMapping: OI,
  Loader: Ed,
  LoaderUtils: yO,
  LoadingManager: zP,
  LoopOnce: jI,
  LoopPingPong: YI,
  LoopRepeat: $I,
  LuminanceAlphaFormat: BI,
  LuminanceFormat: II,
  MOUSE: $S,
  Material: hc,
  MaterialLoader: d2,
  MathUtils: o4,
  Matrix3: _i,
  Matrix4: ri,
  MaxEquation: zL,
  Mesh: Nl,
  MeshBasicMaterial: $g,
  MeshDepthMaterial: GR,
  MeshDistanceMaterial: WR,
  MeshLambertMaterial: $4,
  MeshMatcapMaterial: Y4,
  MeshNormalMaterial: j4,
  MeshPhongMaterial: G4,
  MeshPhysicalMaterial: V4,
  MeshStandardMaterial: PP,
  MeshToonMaterial: W4,
  MinEquation: FL,
  MirroredRepeatWrapping: AT,
  MixOperation: DI,
  MultiplyBlending: kL,
  MultiplyOperation: qT,
  NearestFilter: pl,
  NearestMipMapLinearFilter: F8,
  NearestMipMapNearestFilter: k8,
  NearestMipmapLinearFilter: vT,
  NearestMipmapNearestFilter: pR,
  NeverCompare: QI,
  NeverDepth: bI,
  NeverStencilFunc: Q8,
  NoBlending: zg,
  NoColorSpace: d0,
  NoToneMapping: yv,
  NormalAnimationBlendMode: IR,
  NormalBlending: n_,
  NotEqualCompare: n4,
  NotEqualDepth: AI,
  NotEqualStencilFunc: nG,
  NumberKeyframeTrack: BT,
  Object3D: xa,
  ObjectLoader: LY,
  ObjectSpaceNormalMap: qI,
  OctahedronGeometry: tw,
  OneFactor: mI,
  OneMinusDstAlphaFactor: SI,
  OneMinusDstColorFactor: xI,
  OneMinusSrcAlphaFactor: iP,
  OneMinusSrcColorFactor: gI,
  OrthographicCamera: Fg,
  PCFShadowMap: kR,
  PCFSoftShadowMap: mT,
  PMREMGenerator: dO,
  Path: kT,
  PerspectiveCamera: Ws,
  Plane: Og,
  PlaneGeometry: x0,
  PlaneHelper: SX,
  PointLight: nB,
  PointLightHelper: cX,
  Points: A4,
  PointsMaterial: MP,
  PolarGridHelper: pX,
  PolyhedronGeometry: E0,
  PositionalAudio: HY,
  PropertyBinding: da,
  PropertyMixer: uB,
  QuadraticBezierCurve: AP,
  QuadraticBezierCurve3: DP,
  Quaternion: jc,
  QuaternionKeyframeTrack: q1,
  QuaternionLinearInterpolant: Z4,
  RED_GREEN_RGTC2_Format: lO,
  RED_RGTC1_Format: WI,
  REVISION: NR,
  RGBADepthPacking: mP,
  RGBAFormat: Sd,
  RGBAIntegerFormat: dP,
  RGBA_ASTC_10x10_Format: nO,
  RGBA_ASTC_10x5_Format: JL,
  RGBA_ASTC_10x6_Format: eO,
  RGBA_ASTC_10x8_Format: tO,
  RGBA_ASTC_12x10_Format: rO,
  RGBA_ASTC_12x12_Format: iO,
  RGBA_ASTC_4x4_Format: jL,
  RGBA_ASTC_5x4_Format: $L,
  RGBA_ASTC_5x5_Format: YL,
  RGBA_ASTC_6x5_Format: XL,
  RGBA_ASTC_6x6_Format: qL,
  RGBA_ASTC_8x5_Format: KL,
  RGBA_ASTC_8x6_Format: QL,
  RGBA_ASTC_8x8_Format: ZL,
  RGBA_BPTC_Format: aR,
  RGBA_ETC2_EAC_Format: WL,
  RGBA_PVRTC_2BPPV1_Format: VL,
  RGBA_PVRTC_4BPPV1_Format: HL,
  RGBA_S3TC_DXT1_Format: nR,
  RGBA_S3TC_DXT3_Format: rR,
  RGBA_S3TC_DXT5_Format: iR,
  RGB_BPTC_SIGNED_Format: aO,
  RGB_BPTC_UNSIGNED_Format: oO,
  RGB_ETC1_Format: GI,
  RGB_ETC2_Format: GL,
  RGB_PVRTC_2BPPV1_Format: BL,
  RGB_PVRTC_4BPPV1_Format: IL,
  RGB_S3TC_DXT1_Format: tR,
  RGFormat: VI,
  RGIntegerFormat: fP,
  RawShaderMaterial: H4,
  Ray: v_,
  Raycaster: fB,
  RectAreaLight: aB,
  RedFormat: HI,
  RedIntegerFormat: cP,
  ReinhardToneMapping: PI,
  RenderTarget: u4,
  RepeatWrapping: RT,
  ReplaceStencilOp: j8,
  ReverseSubtractEquation: hI,
  RingGeometry: a2,
  SIGNED_RED_GREEN_RGTC2_Format: uO,
  SIGNED_RED_RGTC1_Format: sO,
  SRGBColorSpace: Mo,
  Scene: gR,
  ShaderChunk: pi,
  ShaderLib: lm,
  ShaderMaterial: Ev,
  ShadowMaterial: B4,
  Shape: a_,
  ShapeGeometry: o2,
  ShapePath: EX,
  ShapeUtils: _v,
  ShortType: FI,
  Skeleton: XR,
  SkeletonHelper: uX,
  SkinnedMesh: M4,
  Source: JS,
  Sphere: pp,
  SphereGeometry: nw,
  Spherical: _O,
  SphericalHarmonics3: oB,
  SplineCurve: LP,
  SpotLight: tB,
  SpotLightHelper: lX,
  Sprite: T4,
  SpriteMaterial: TP,
  SrcAlphaFactor: rP,
  SrcAlphaSaturateFactor: EI,
  SrcColorFactor: vI,
  StaticCopyUsage: uG,
  StaticDrawUsage: PT,
  StaticReadUsage: oG,
  StereoCamera: FY,
  StreamCopyUsage: fG,
  StreamDrawUsage: aG,
  StreamReadUsage: lG,
  StringKeyframeTrack: S_,
  SubtractEquation: dI,
  SubtractiveBlending: NL,
  TOUCH: YS,
  TangentSpaceNormalMap: _0,
  TetrahedronGeometry: s2,
  Texture: Es,
  TextureLoader: CY,
  TorusGeometry: l2,
  TorusKnotGeometry: u2,
  Triangle: yd,
  TriangleFanDrawMode: V8,
  TriangleStripDrawMode: H8,
  TrianglesDrawMode: B8,
  TubeGeometry: c2,
  TwoPassDoubleSide: N8,
  UVMapping: FR,
  Uint16BufferAttribute: SP,
  Uint32BufferAttribute: _P,
  Uint8BufferAttribute: KG,
  Uint8ClampedBufferAttribute: QG,
  Uniform: jP,
  UniformsGroup: nX,
  UniformsLib: Cn,
  UniformsUtils: xP,
  UnsignedByteType: Sv,
  UnsignedInt248Type: u0,
  UnsignedIntType: kg,
  UnsignedShort4444Type: lP,
  UnsignedShort5551Type: uP,
  UnsignedShortType: zR,
  VSMShadowMap: om,
  Vector2: $t,
  Vector3: Re,
  Vector4: Ma,
  VectorKeyframeTrack: HT,
  VideoTexture: I$,
  WebGL1Renderer: E4,
  WebGL3DRenderTarget: kG,
  WebGLArrayRenderTarget: NG,
  WebGLCoordinateSystem: gv,
  WebGLCubeRenderTarget: h4,
  WebGLMultipleRenderTargets: FG,
  WebGLRenderTarget: cm,
  WebGLRenderer: bP,
  WebGLUtils: S4,
  WebGPUCoordinateSystem: UT,
  WireframeGeometry: I4,
  WrapAroundEnding: OT,
  ZeroCurvatureEnding: QS,
  ZeroFactor: pI,
  ZeroSlopeEnding: ZS,
  ZeroStencilOp: W8,
  _SRGBAFormat: mR,
  createCanvasElement: l4,
  sRGBEncoding: f0
}, Symbol.toStringTag, { value: "Module" }));
var xO = { exports: {} }, o0 = {};
/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Bk;
function TX() {
  return Bk || (Bk = 1, o0.ConcurrentRoot = 1, o0.ContinuousEventPriority = 4, o0.DefaultEventPriority = 16, o0.DiscreteEventPriority = 1, o0.IdleEventPriority = 536870912, o0.LegacyRoot = 0), o0;
}
var s0 = {};
/**
 * @license React
 * react-reconciler-constants.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Hk;
function wX() {
  return Hk || (Hk = 1, process.env.NODE_ENV !== "production" && function() {
    var n = (
      /*                        */
      1
    ), e = (
      /*            */
      4
    ), t = (
      /*                    */
      16
    ), r = (
      /*                       */
      536870912
    ), i = n, o = e, l = t, u = r, h = 0, p = 1;
    s0.ConcurrentRoot = p, s0.ContinuousEventPriority = o, s0.DefaultEventPriority = l, s0.DiscreteEventPriority = i, s0.IdleEventPriority = u, s0.LegacyRoot = h;
  }()), s0;
}
process.env.NODE_ENV === "production" ? xO.exports = TX() : xO.exports = wX();
var L1 = xO.exports;
function MX(n) {
  let e;
  const t = /* @__PURE__ */ new Set(), r = (p, y) => {
    const _ = typeof p == "function" ? p(e) : p;
    if (_ !== e) {
      const E = e;
      e = y ? _ : Object.assign({}, e, _), t.forEach((w) => w(e, E));
    }
  }, i = () => e, o = (p, y = i, _ = Object.is) => {
    console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
    let E = y(e);
    function w() {
      const R = y(e);
      if (!_(E, R)) {
        const U = E;
        p(E = R, U);
      }
    }
    return t.add(w), () => t.delete(w);
  }, h = { setState: r, getState: i, subscribe: (p, y, _) => y || _ ? o(p, y, _) : (t.add(p), () => t.delete(p)), destroy: () => t.clear() };
  return e = n(r, i, h), h;
}
const CX = typeof window > "u" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent), Vk = CX ? le.useEffect : le.useLayoutEffect;
function hB(n) {
  const e = typeof n == "function" ? MX(n) : n, t = (r = e.getState, i = Object.is) => {
    const [, o] = le.useReducer((L) => L + 1, 0), l = e.getState(), u = le.useRef(l), h = le.useRef(r), p = le.useRef(i), y = le.useRef(!1), _ = le.useRef();
    _.current === void 0 && (_.current = r(l));
    let E, w = !1;
    (u.current !== l || h.current !== r || p.current !== i || y.current) && (E = r(l), w = !i(_.current, E)), Vk(() => {
      w && (_.current = E), u.current = l, h.current = r, p.current = i, y.current = !1;
    });
    const R = le.useRef(l);
    Vk(() => {
      const L = () => {
        try {
          const k = e.getState(), F = h.current(k);
          p.current(_.current, F) || (u.current = k, _.current = F, o());
        } catch {
          y.current = !0, o();
        }
      }, A = e.subscribe(L);
      return e.getState() !== R.current && L(), A;
    }, []);
    const U = w ? E : _.current;
    return le.useDebugValue(U), U;
  };
  return Object.assign(t, e), t[Symbol.iterator] = function() {
    console.warn("[useStore, api] = create() is deprecated and will be removed in v4");
    const r = [t, e];
    return {
      next() {
        const i = r.length <= 0;
        return { value: r.shift(), done: i };
      }
    };
  }, t;
}
var EO = { exports: {} }, bO = { exports: {} }, KD = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Gk;
function RX() {
  return Gk || (Gk = 1, function(n) {
    function e(de, ye) {
      var X = de.length;
      de.push(ye);
      e:
        for (; 0 < X; ) {
          var q = X - 1 >>> 1, ue = de[q];
          if (0 < i(ue, ye))
            de[q] = ye, de[X] = ue, X = q;
          else
            break e;
        }
    }
    function t(de) {
      return de.length === 0 ? null : de[0];
    }
    function r(de) {
      if (de.length === 0)
        return null;
      var ye = de[0], X = de.pop();
      if (X !== ye) {
        de[0] = X;
        e:
          for (var q = 0, ue = de.length, Ce = ue >>> 1; q < Ce; ) {
            var Ae = 2 * (q + 1) - 1, De = de[Ae], Ne = Ae + 1, Pe = de[Ne];
            if (0 > i(De, X))
              Ne < ue && 0 > i(Pe, De) ? (de[q] = Pe, de[Ne] = X, q = Ne) : (de[q] = De, de[Ae] = X, q = Ae);
            else if (Ne < ue && 0 > i(Pe, X))
              de[q] = Pe, de[Ne] = X, q = Ne;
            else
              break e;
          }
      }
      return ye;
    }
    function i(de, ye) {
      var X = de.sortIndex - ye.sortIndex;
      return X !== 0 ? X : de.id - ye.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var o = performance;
      n.unstable_now = function() {
        return o.now();
      };
    } else {
      var l = Date, u = l.now();
      n.unstable_now = function() {
        return l.now() - u;
      };
    }
    var h = [], p = [], y = 1, _ = null, E = 3, w = !1, R = !1, U = !1, L = typeof setTimeout == "function" ? setTimeout : null, A = typeof clearTimeout == "function" ? clearTimeout : null, k = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function F(de) {
      for (var ye = t(p); ye !== null; ) {
        if (ye.callback === null)
          r(p);
        else if (ye.startTime <= de)
          r(p), ye.sortIndex = ye.expirationTime, e(h, ye);
        else
          break;
        ye = t(p);
      }
    }
    function H(de) {
      if (U = !1, F(de), !R)
        if (t(h) !== null)
          R = !0, be(B);
        else {
          var ye = t(p);
          ye !== null && we(H, ye.startTime - de);
        }
    }
    function B(de, ye) {
      R = !1, U && (U = !1, A(ee), ee = -1), w = !0;
      var X = E;
      try {
        for (F(ye), _ = t(h); _ !== null && (!(_.expirationTime > ye) || de && !fe()); ) {
          var q = _.callback;
          if (typeof q == "function") {
            _.callback = null, E = _.priorityLevel;
            var ue = q(_.expirationTime <= ye);
            ye = n.unstable_now(), typeof ue == "function" ? _.callback = ue : _ === t(h) && r(h), F(ye);
          } else
            r(h);
          _ = t(h);
        }
        if (_ !== null)
          var Ce = !0;
        else {
          var Ae = t(p);
          Ae !== null && we(H, Ae.startTime - ye), Ce = !1;
        }
        return Ce;
      } finally {
        _ = null, E = X, w = !1;
      }
    }
    var j = !1, Y = null, ee = -1, Z = 5, K = -1;
    function fe() {
      return !(n.unstable_now() - K < Z);
    }
    function se() {
      if (Y !== null) {
        var de = n.unstable_now();
        K = de;
        var ye = !0;
        try {
          ye = Y(!0, de);
        } finally {
          ye ? he() : (j = !1, Y = null);
        }
      } else
        j = !1;
    }
    var he;
    if (typeof k == "function")
      he = function() {
        k(se);
      };
    else if (typeof MessageChannel < "u") {
      var me = new MessageChannel(), Ee = me.port2;
      me.port1.onmessage = se, he = function() {
        Ee.postMessage(null);
      };
    } else
      he = function() {
        L(se, 0);
      };
    function be(de) {
      Y = de, j || (j = !0, he());
    }
    function we(de, ye) {
      ee = L(function() {
        de(n.unstable_now());
      }, ye);
    }
    n.unstable_IdlePriority = 5, n.unstable_ImmediatePriority = 1, n.unstable_LowPriority = 4, n.unstable_NormalPriority = 3, n.unstable_Profiling = null, n.unstable_UserBlockingPriority = 2, n.unstable_cancelCallback = function(de) {
      de.callback = null;
    }, n.unstable_continueExecution = function() {
      R || w || (R = !0, be(B));
    }, n.unstable_forceFrameRate = function(de) {
      0 > de || 125 < de ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : Z = 0 < de ? Math.floor(1e3 / de) : 5;
    }, n.unstable_getCurrentPriorityLevel = function() {
      return E;
    }, n.unstable_getFirstCallbackNode = function() {
      return t(h);
    }, n.unstable_next = function(de) {
      switch (E) {
        case 1:
        case 2:
        case 3:
          var ye = 3;
          break;
        default:
          ye = E;
      }
      var X = E;
      E = ye;
      try {
        return de();
      } finally {
        E = X;
      }
    }, n.unstable_pauseExecution = function() {
    }, n.unstable_requestPaint = function() {
    }, n.unstable_runWithPriority = function(de, ye) {
      switch (de) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          de = 3;
      }
      var X = E;
      E = de;
      try {
        return ye();
      } finally {
        E = X;
      }
    }, n.unstable_scheduleCallback = function(de, ye, X) {
      var q = n.unstable_now();
      switch (typeof X == "object" && X !== null ? (X = X.delay, X = typeof X == "number" && 0 < X ? q + X : q) : X = q, de) {
        case 1:
          var ue = -1;
          break;
        case 2:
          ue = 250;
          break;
        case 5:
          ue = 1073741823;
          break;
        case 4:
          ue = 1e4;
          break;
        default:
          ue = 5e3;
      }
      return ue = X + ue, de = { id: y++, callback: ye, priorityLevel: de, startTime: X, expirationTime: ue, sortIndex: -1 }, X > q ? (de.sortIndex = X, e(p, de), t(h) === null && de === t(p) && (U ? (A(ee), ee = -1) : U = !0, we(H, X - q))) : (de.sortIndex = ue, e(h, de), R || w || (R = !0, be(B))), de;
    }, n.unstable_shouldYield = fe, n.unstable_wrapCallback = function(de) {
      var ye = E;
      return function() {
        var X = E;
        E = ye;
        try {
          return de.apply(this, arguments);
        } finally {
          E = X;
        }
      };
    };
  }(KD)), KD;
}
var QD = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Wk;
function AX() {
  return Wk || (Wk = 1, function(n) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var e = !1, t = !1, r = 5;
      function i(xe, We) {
        var ft = xe.length;
        xe.push(We), u(xe, We, ft);
      }
      function o(xe) {
        return xe.length === 0 ? null : xe[0];
      }
      function l(xe) {
        if (xe.length === 0)
          return null;
        var We = xe[0], ft = xe.pop();
        return ft !== We && (xe[0] = ft, h(xe, ft, 0)), We;
      }
      function u(xe, We, ft) {
        for (var Et = ft; Et > 0; ) {
          var Ze = Et - 1 >>> 1, Te = xe[Ze];
          if (p(Te, We) > 0)
            xe[Ze] = We, xe[Et] = Te, Et = Ze;
          else
            return;
        }
      }
      function h(xe, We, ft) {
        for (var Et = ft, Ze = xe.length, Te = Ze >>> 1; Et < Te; ) {
          var tt = (Et + 1) * 2 - 1, pt = xe[tt], ve = tt + 1, Pt = xe[ve];
          if (p(pt, We) < 0)
            ve < Ze && p(Pt, pt) < 0 ? (xe[Et] = Pt, xe[ve] = We, Et = ve) : (xe[Et] = pt, xe[tt] = We, Et = tt);
          else if (ve < Ze && p(Pt, We) < 0)
            xe[Et] = Pt, xe[ve] = We, Et = ve;
          else
            return;
        }
      }
      function p(xe, We) {
        var ft = xe.sortIndex - We.sortIndex;
        return ft !== 0 ? ft : xe.id - We.id;
      }
      var y = 1, _ = 2, E = 3, w = 4, R = 5;
      function U(xe, We) {
      }
      var L = typeof performance == "object" && typeof performance.now == "function";
      if (L) {
        var A = performance;
        n.unstable_now = function() {
          return A.now();
        };
      } else {
        var k = Date, F = k.now();
        n.unstable_now = function() {
          return k.now() - F;
        };
      }
      var H = 1073741823, B = -1, j = 250, Y = 5e3, ee = 1e4, Z = H, K = [], fe = [], se = 1, he = null, me = E, Ee = !1, be = !1, we = !1, de = typeof setTimeout == "function" ? setTimeout : null, ye = typeof clearTimeout == "function" ? clearTimeout : null, X = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function q(xe) {
        for (var We = o(fe); We !== null; ) {
          if (We.callback === null)
            l(fe);
          else if (We.startTime <= xe)
            l(fe), We.sortIndex = We.expirationTime, i(K, We);
          else
            return;
          We = o(fe);
        }
      }
      function ue(xe) {
        if (we = !1, q(xe), !be)
          if (o(K) !== null)
            be = !0, xt(Ce);
          else {
            var We = o(fe);
            We !== null && ut(ue, We.startTime - xe);
          }
      }
      function Ce(xe, We) {
        be = !1, we && (we = !1, lt()), Ee = !0;
        var ft = me;
        try {
          var Et;
          if (!t)
            return Ae(xe, We);
        } finally {
          he = null, me = ft, Ee = !1;
        }
      }
      function Ae(xe, We) {
        var ft = We;
        for (q(ft), he = o(K); he !== null && !e && !(he.expirationTime > ft && (!xe || Dt())); ) {
          var Et = he.callback;
          if (typeof Et == "function") {
            he.callback = null, me = he.priorityLevel;
            var Ze = he.expirationTime <= ft, Te = Et(Ze);
            ft = n.unstable_now(), typeof Te == "function" ? he.callback = Te : he === o(K) && l(K), q(ft);
          } else
            l(K);
          he = o(K);
        }
        if (he !== null)
          return !0;
        var tt = o(fe);
        return tt !== null && ut(ue, tt.startTime - ft), !1;
      }
      function De(xe, We) {
        switch (xe) {
          case y:
          case _:
          case E:
          case w:
          case R:
            break;
          default:
            xe = E;
        }
        var ft = me;
        me = xe;
        try {
          return We();
        } finally {
          me = ft;
        }
      }
      function Ne(xe) {
        var We;
        switch (me) {
          case y:
          case _:
          case E:
            We = E;
            break;
          default:
            We = me;
            break;
        }
        var ft = me;
        me = We;
        try {
          return xe();
        } finally {
          me = ft;
        }
      }
      function Pe(xe) {
        var We = me;
        return function() {
          var ft = me;
          me = We;
          try {
            return xe.apply(this, arguments);
          } finally {
            me = ft;
          }
        };
      }
      function Fe(xe, We, ft) {
        var Et = n.unstable_now(), Ze;
        if (typeof ft == "object" && ft !== null) {
          var Te = ft.delay;
          typeof Te == "number" && Te > 0 ? Ze = Et + Te : Ze = Et;
        } else
          Ze = Et;
        var tt;
        switch (xe) {
          case y:
            tt = B;
            break;
          case _:
            tt = j;
            break;
          case R:
            tt = Z;
            break;
          case w:
            tt = ee;
            break;
          case E:
          default:
            tt = Y;
            break;
        }
        var pt = Ze + tt, ve = {
          id: se++,
          callback: We,
          priorityLevel: xe,
          startTime: Ze,
          expirationTime: pt,
          sortIndex: -1
        };
        return Ze > Et ? (ve.sortIndex = Ze, i(fe, ve), o(K) === null && ve === o(fe) && (we ? lt() : we = !0, ut(ue, Ze - Et))) : (ve.sortIndex = pt, i(K, ve), !be && !Ee && (be = !0, xt(Ce))), ve;
      }
      function it() {
      }
      function Ot() {
        !be && !Ee && (be = !0, xt(Ce));
      }
      function st() {
        return o(K);
      }
      function oe(xe) {
        xe.callback = null;
      }
      function rt() {
        return me;
      }
      var qe = !1, $e = null, Ye = -1, zt = r, ot = -1;
      function Dt() {
        var xe = n.unstable_now() - ot;
        return !(xe < zt);
      }
      function kt() {
      }
      function mt(xe) {
        if (xe < 0 || xe > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        xe > 0 ? zt = Math.floor(1e3 / xe) : zt = r;
      }
      var rn = function() {
        if ($e !== null) {
          var xe = n.unstable_now();
          ot = xe;
          var We = !0, ft = !0;
          try {
            ft = $e(We, xe);
          } finally {
            ft ? ae() : (qe = !1, $e = null);
          }
        } else
          qe = !1;
      }, ae;
      if (typeof X == "function")
        ae = function() {
          X(rn);
        };
      else if (typeof MessageChannel < "u") {
        var re = new MessageChannel(), ze = re.port2;
        re.port1.onmessage = rn, ae = function() {
          ze.postMessage(null);
        };
      } else
        ae = function() {
          de(rn, 0);
        };
      function xt(xe) {
        $e = xe, qe || (qe = !0, ae());
      }
      function ut(xe, We) {
        Ye = de(function() {
          xe(n.unstable_now());
        }, We);
      }
      function lt() {
        ye(Ye), Ye = -1;
      }
      var Yt = kt, Nt = null;
      n.unstable_IdlePriority = R, n.unstable_ImmediatePriority = y, n.unstable_LowPriority = w, n.unstable_NormalPriority = E, n.unstable_Profiling = Nt, n.unstable_UserBlockingPriority = _, n.unstable_cancelCallback = oe, n.unstable_continueExecution = Ot, n.unstable_forceFrameRate = mt, n.unstable_getCurrentPriorityLevel = rt, n.unstable_getFirstCallbackNode = st, n.unstable_next = Ne, n.unstable_pauseExecution = it, n.unstable_requestPaint = Yt, n.unstable_runWithPriority = De, n.unstable_scheduleCallback = Fe, n.unstable_shouldYield = Dt, n.unstable_wrapCallback = Pe, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(QD)), QD;
}
process.env.NODE_ENV === "production" ? bO.exports = RX() : bO.exports = AX();
var yR = bO.exports;
/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ZD, jk;
function DX() {
  return jk || (jk = 1, ZD = function(e) {
    var t = {}, r = le, i = yR, o = Object.assign;
    function l(g) {
      for (var S = "https://reactjs.org/docs/error-decoder.html?invariant=" + g, D = 1; D < arguments.length; D++)
        S += "&args[]=" + encodeURIComponent(arguments[D]);
      return "Minified React error #" + g + "; visit " + S + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var u = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, h = Symbol.for("react.element"), p = Symbol.for("react.portal"), y = Symbol.for("react.fragment"), _ = Symbol.for("react.strict_mode"), E = Symbol.for("react.profiler"), w = Symbol.for("react.provider"), R = Symbol.for("react.context"), U = Symbol.for("react.forward_ref"), L = Symbol.for("react.suspense"), A = Symbol.for("react.suspense_list"), k = Symbol.for("react.memo"), F = Symbol.for("react.lazy"), H = Symbol.for("react.offscreen"), B = Symbol.iterator;
    function j(g) {
      return g === null || typeof g != "object" ? null : (g = B && g[B] || g["@@iterator"], typeof g == "function" ? g : null);
    }
    function Y(g) {
      if (g == null)
        return null;
      if (typeof g == "function")
        return g.displayName || g.name || null;
      if (typeof g == "string")
        return g;
      switch (g) {
        case y:
          return "Fragment";
        case p:
          return "Portal";
        case E:
          return "Profiler";
        case _:
          return "StrictMode";
        case L:
          return "Suspense";
        case A:
          return "SuspenseList";
      }
      if (typeof g == "object")
        switch (g.$$typeof) {
          case R:
            return (g.displayName || "Context") + ".Consumer";
          case w:
            return (g._context.displayName || "Context") + ".Provider";
          case U:
            var S = g.render;
            return g = g.displayName, g || (g = S.displayName || S.name || "", g = g !== "" ? "ForwardRef(" + g + ")" : "ForwardRef"), g;
          case k:
            return S = g.displayName || null, S !== null ? S : Y(g.type) || "Memo";
          case F:
            S = g._payload, g = g._init;
            try {
              return Y(g(S));
            } catch {
            }
        }
      return null;
    }
    function ee(g) {
      var S = g.type;
      switch (g.tag) {
        case 24:
          return "Cache";
        case 9:
          return (S.displayName || "Context") + ".Consumer";
        case 10:
          return (S._context.displayName || "Context") + ".Provider";
        case 18:
          return "DehydratedFragment";
        case 11:
          return g = S.render, g = g.displayName || g.name || "", S.displayName || (g !== "" ? "ForwardRef(" + g + ")" : "ForwardRef");
        case 7:
          return "Fragment";
        case 5:
          return S;
        case 4:
          return "Portal";
        case 3:
          return "Root";
        case 6:
          return "Text";
        case 16:
          return Y(S);
        case 8:
          return S === _ ? "StrictMode" : "Mode";
        case 22:
          return "Offscreen";
        case 12:
          return "Profiler";
        case 21:
          return "Scope";
        case 13:
          return "Suspense";
        case 19:
          return "SuspenseList";
        case 25:
          return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
          if (typeof S == "function")
            return S.displayName || S.name || null;
          if (typeof S == "string")
            return S;
      }
      return null;
    }
    function Z(g) {
      var S = g, D = g;
      if (g.alternate)
        for (; S.return; )
          S = S.return;
      else {
        g = S;
        do
          S = g, S.flags & 4098 && (D = S.return), g = S.return;
        while (g);
      }
      return S.tag === 3 ? D : null;
    }
    function K(g) {
      if (Z(g) !== g)
        throw Error(l(188));
    }
    function fe(g) {
      var S = g.alternate;
      if (!S) {
        if (S = Z(g), S === null)
          throw Error(l(188));
        return S !== g ? null : g;
      }
      for (var D = g, z = S; ; ) {
        var W = D.return;
        if (W === null)
          break;
        var te = W.alternate;
        if (te === null) {
          if (z = W.return, z !== null) {
            D = z;
            continue;
          }
          break;
        }
        if (W.child === te.child) {
          for (te = W.child; te; ) {
            if (te === D)
              return K(W), g;
            if (te === z)
              return K(W), S;
            te = te.sibling;
          }
          throw Error(l(188));
        }
        if (D.return !== z.return)
          D = W, z = te;
        else {
          for (var Le = !1, nt = W.child; nt; ) {
            if (nt === D) {
              Le = !0, D = W, z = te;
              break;
            }
            if (nt === z) {
              Le = !0, z = W, D = te;
              break;
            }
            nt = nt.sibling;
          }
          if (!Le) {
            for (nt = te.child; nt; ) {
              if (nt === D) {
                Le = !0, D = te, z = W;
                break;
              }
              if (nt === z) {
                Le = !0, z = te, D = W;
                break;
              }
              nt = nt.sibling;
            }
            if (!Le)
              throw Error(l(189));
          }
        }
        if (D.alternate !== z)
          throw Error(l(190));
      }
      if (D.tag !== 3)
        throw Error(l(188));
      return D.stateNode.current === D ? g : S;
    }
    function se(g) {
      return g = fe(g), g !== null ? he(g) : null;
    }
    function he(g) {
      if (g.tag === 5 || g.tag === 6)
        return g;
      for (g = g.child; g !== null; ) {
        var S = he(g);
        if (S !== null)
          return S;
        g = g.sibling;
      }
      return null;
    }
    function me(g) {
      if (g.tag === 5 || g.tag === 6)
        return g;
      for (g = g.child; g !== null; ) {
        if (g.tag !== 4) {
          var S = me(g);
          if (S !== null)
            return S;
        }
        g = g.sibling;
      }
      return null;
    }
    var Ee = Array.isArray, be = e.getPublicInstance, we = e.getRootHostContext, de = e.getChildHostContext, ye = e.prepareForCommit, X = e.resetAfterCommit, q = e.createInstance, ue = e.appendInitialChild, Ce = e.finalizeInitialChildren, Ae = e.prepareUpdate, De = e.shouldSetTextContent, Ne = e.createTextInstance, Pe = e.scheduleTimeout, Fe = e.cancelTimeout, it = e.noTimeout, Ot = e.isPrimaryRenderer, st = e.supportsMutation, oe = e.supportsPersistence, rt = e.supportsHydration, qe = e.getInstanceFromNode, $e = e.preparePortalMount, Ye = e.getCurrentEventPriority, zt = e.detachDeletedInstance, ot = e.supportsMicrotasks, Dt = e.scheduleMicrotask, kt = e.supportsTestSelectors, mt = e.findFiberRoot, rn = e.getBoundingRect, ae = e.getTextContent, re = e.isHiddenSubtree, ze = e.matchAccessibilityRole, xt = e.setFocusIfFocusable, ut = e.setupIntersectionObserver, lt = e.appendChild, Yt = e.appendChildToContainer, Nt = e.commitTextUpdate, xe = e.commitMount, We = e.commitUpdate, ft = e.insertBefore, Et = e.insertInContainerBefore, Ze = e.removeChild, Te = e.removeChildFromContainer, tt = e.resetTextContent, pt = e.hideInstance, ve = e.hideTextInstance, Pt = e.unhideInstance, He = e.unhideTextInstance, dt = e.clearContainer, ln = e.cloneInstance, Un = e.createContainerChildSet, jn = e.appendChildToContainerChildSet, cr = e.finalizeContainerChildren, En = e.replaceContainerChildren, tr = e.cloneHiddenInstance, fr = e.cloneHiddenTextInstance, Hn = e.canHydrateInstance, mi = e.canHydrateTextInstance, Vr = e.canHydrateSuspenseInstance, Gr = e.isSuspenseInstancePending, Or = e.isSuspenseInstanceFallback, Ui = e.registerSuspenseInstanceRetry, fi = e.getNextHydratableSibling, ke = e.getFirstHydratableChild, Ht = e.getFirstHydratableChildWithinContainer, Jt = e.getFirstHydratableChildWithinSuspenseInstance, pn = e.hydrateInstance, _e = e.hydrateTextInstance, Qe = e.hydrateSuspenseInstance, at = e.getNextHydratableInstanceAfterSuspenseInstance, je = e.commitHydratedContainer, vt = e.commitHydratedSuspenseInstance, sn = e.clearSuspenseBoundary, vn = e.clearSuspenseBoundaryFromContainer, Mn = e.shouldDeleteUnhydratedTailInstances, zn = e.didNotMatchHydratedContainerTextInstance, pr = e.didNotMatchHydratedTextInstance, Mt;
    function dr(g) {
      if (Mt === void 0)
        try {
          throw Error();
        } catch (D) {
          var S = D.stack.trim().match(/\n( *(at )?)/);
          Mt = S && S[1] || "";
        }
      return `
` + Mt + g;
    }
    var Wr = !1;
    function Rn(g, S) {
      if (!g || Wr)
        return "";
      Wr = !0;
      var D = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      try {
        if (S)
          if (S = function() {
            throw Error();
          }, Object.defineProperty(S.prototype, "props", { set: function() {
            throw Error();
          } }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(S, []);
            } catch (on) {
              var z = on;
            }
            Reflect.construct(g, [], S);
          } else {
            try {
              S.call();
            } catch (on) {
              z = on;
            }
            g.call(S.prototype);
          }
        else {
          try {
            throw Error();
          } catch (on) {
            z = on;
          }
          g();
        }
      } catch (on) {
        if (on && z && typeof on.stack == "string") {
          for (var W = on.stack.split(`
`), te = z.stack.split(`
`), Le = W.length - 1, nt = te.length - 1; 1 <= Le && 0 <= nt && W[Le] !== te[nt]; )
            nt--;
          for (; 1 <= Le && 0 <= nt; Le--, nt--)
            if (W[Le] !== te[nt]) {
              if (Le !== 1 || nt !== 1)
                do
                  if (Le--, nt--, 0 > nt || W[Le] !== te[nt]) {
                    var It = `
` + W[Le].replace(" at new ", " at ");
                    return g.displayName && It.includes("<anonymous>") && (It = It.replace("<anonymous>", g.displayName)), It;
                  }
                while (1 <= Le && 0 <= nt);
              break;
            }
        }
      } finally {
        Wr = !1, Error.prepareStackTrace = D;
      }
      return (g = g ? g.displayName || g.name : "") ? dr(g) : "";
    }
    var Ji = Object.prototype.hasOwnProperty, Ca = [], li = -1;
    function qn(g) {
      return { current: g };
    }
    function br(g) {
      0 > li || (g.current = Ca[li], Ca[li] = null, li--);
    }
    function hr(g, S) {
      li++, Ca[li] = g.current, g.current = S;
    }
    var di = {}, ha = qn(di), Kr = qn(!1), Co = di;
    function Ri(g, S) {
      var D = g.type.contextTypes;
      if (!D)
        return di;
      var z = g.stateNode;
      if (z && z.__reactInternalMemoizedUnmaskedChildContext === S)
        return z.__reactInternalMemoizedMaskedChildContext;
      var W = {}, te;
      for (te in D)
        W[te] = S[te];
      return z && (g = g.stateNode, g.__reactInternalMemoizedUnmaskedChildContext = S, g.__reactInternalMemoizedMaskedChildContext = W), W;
    }
    function Ai(g) {
      return g = g.childContextTypes, g != null;
    }
    function Ea() {
      br(Kr), br(ha);
    }
    function bi(g, S, D) {
      if (ha.current !== di)
        throw Error(l(168));
      hr(ha, S), hr(Kr, D);
    }
    function ns(g, S, D) {
      var z = g.stateNode;
      if (S = S.childContextTypes, typeof z.getChildContext != "function")
        return D;
      z = z.getChildContext();
      for (var W in z)
        if (!(W in S))
          throw Error(l(108, ee(g) || "Unknown", W));
      return o({}, D, z);
    }
    function Ro(g) {
      return g = (g = g.stateNode) && g.__reactInternalMemoizedMergedChildContext || di, Co = ha.current, hr(ha, g), hr(Kr, Kr.current), !0;
    }
    function Ra(g, S, D) {
      var z = g.stateNode;
      if (!z)
        throw Error(l(169));
      D ? (g = ns(g, S, Co), z.__reactInternalMemoizedMergedChildContext = g, br(Kr), br(ha), hr(ha, g)) : br(Kr), hr(Kr, D);
    }
    var Ao = Math.clz32 ? Math.clz32 : bd, kl = Math.log, Ts = Math.LN2;
    function bd(g) {
      return g >>>= 0, g === 0 ? 32 : 31 - (kl(g) / Ts | 0) | 0;
    }
    var Wo = 64, Br = 4194304;
    function rs(g) {
      switch (g & -g) {
        case 1:
          return 1;
        case 2:
          return 2;
        case 4:
          return 4;
        case 8:
          return 8;
        case 16:
          return 16;
        case 32:
          return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return g & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return g & 130023424;
        case 134217728:
          return 134217728;
        case 268435456:
          return 268435456;
        case 536870912:
          return 536870912;
        case 1073741824:
          return 1073741824;
        default:
          return g;
      }
    }
    function Fl(g, S) {
      var D = g.pendingLanes;
      if (D === 0)
        return 0;
      var z = 0, W = g.suspendedLanes, te = g.pingedLanes, Le = D & 268435455;
      if (Le !== 0) {
        var nt = Le & ~W;
        nt !== 0 ? z = rs(nt) : (te &= Le, te !== 0 && (z = rs(te)));
      } else
        Le = D & ~W, Le !== 0 ? z = rs(Le) : te !== 0 && (z = rs(te));
      if (z === 0)
        return 0;
      if (S !== 0 && S !== z && !(S & W) && (W = z & -z, te = S & -S, W >= te || W === 16 && (te & 4194240) !== 0))
        return S;
      if (z & 4 && (z |= D & 16), S = g.entangledLanes, S !== 0)
        for (g = g.entanglements, S &= z; 0 < S; )
          D = 31 - Ao(S), W = 1 << D, z |= g[D], S &= ~W;
      return z;
    }
    function Do(g, S) {
      switch (g) {
        case 1:
        case 2:
        case 4:
          return S + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return S + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
          return -1;
        default:
          return -1;
      }
    }
    function Hr(g, S) {
      for (var D = g.suspendedLanes, z = g.pingedLanes, W = g.expirationTimes, te = g.pendingLanes; 0 < te; ) {
        var Le = 31 - Ao(te), nt = 1 << Le, It = W[Le];
        It === -1 ? (!(nt & D) || nt & z) && (W[Le] = Do(nt, S)) : It <= S && (g.expiredLanes |= nt), te &= ~nt;
      }
    }
    function pa(g) {
      return g = g.pendingLanes & -1073741825, g !== 0 ? g : g & 1073741824 ? 1073741824 : 0;
    }
    function ku(g) {
      for (var S = [], D = 0; 31 > D; D++)
        S.push(g);
      return S;
    }
    function rr(g, S, D) {
      g.pendingLanes |= S, S !== 536870912 && (g.suspendedLanes = 0, g.pingedLanes = 0), g = g.eventTimes, S = 31 - Ao(S), g[S] = D;
    }
    function ml(g, S) {
      var D = g.pendingLanes & ~S;
      g.pendingLanes = S, g.suspendedLanes = 0, g.pingedLanes = 0, g.expiredLanes &= S, g.mutableReadLanes &= S, g.entangledLanes &= S, S = g.entanglements;
      var z = g.eventTimes;
      for (g = g.expirationTimes; 0 < D; ) {
        var W = 31 - Ao(D), te = 1 << W;
        S[W] = 0, z[W] = -1, g[W] = -1, D &= ~te;
      }
    }
    function Ni(g, S) {
      var D = g.entangledLanes |= S;
      for (g = g.entanglements; D; ) {
        var z = 31 - Ao(D), W = 1 << z;
        W & S | g[z] & S && (g[z] |= S), D &= ~W;
      }
    }
    var gr = 0;
    function Lo(g) {
      return g &= -g, 1 < g ? 4 < g ? g & 268435455 ? 16 : 536870912 : 4 : 1;
    }
    var oo = i.unstable_scheduleCallback, oa = i.unstable_cancelCallback, Ti = i.unstable_shouldYield, Td = i.unstable_requestPaint, Qr = i.unstable_now, Aa = i.unstable_ImmediatePriority, zl = i.unstable_UserBlockingPriority, jo = i.unstable_NormalPriority, Il = i.unstable_IdlePriority, vl = null, ws = null;
    function Ms(g) {
      if (ws && typeof ws.onCommitFiberRoot == "function")
        try {
          ws.onCommitFiberRoot(vl, g, void 0, (g.current.flags & 128) === 128);
        } catch {
        }
    }
    function Fu(g, S) {
      return g === S && (g !== 0 || 1 / g === 1 / S) || g !== g && S !== S;
    }
    var vo = typeof Object.is == "function" ? Object.is : Fu, ma = null, $s = !1, Oo = !1;
    function Bl(g) {
      ma === null ? ma = [g] : ma.push(g);
    }
    function zu(g) {
      $s = !0, Bl(g);
    }
    function Po() {
      if (!Oo && ma !== null) {
        Oo = !0;
        var g = 0, S = gr;
        try {
          var D = ma;
          for (gr = 1; g < D.length; g++) {
            var z = D[g];
            do
              z = z(!0);
            while (z !== null);
          }
          ma = null, $s = !1;
        } catch (W) {
          throw ma !== null && (ma = ma.slice(g + 1)), oo(Aa, Po), W;
        } finally {
          gr = S, Oo = !1;
        }
      }
      return null;
    }
    var Iu = u.ReactCurrentBatchConfig;
    function is(g, S) {
      if (vo(g, S))
        return !0;
      if (typeof g != "object" || g === null || typeof S != "object" || S === null)
        return !1;
      var D = Object.keys(g), z = Object.keys(S);
      if (D.length !== z.length)
        return !1;
      for (z = 0; z < D.length; z++) {
        var W = D[z];
        if (!Ji.call(S, W) || !vo(g[W], S[W]))
          return !1;
      }
      return !0;
    }
    function ie(g) {
      switch (g.tag) {
        case 5:
          return dr(g.type);
        case 16:
          return dr("Lazy");
        case 13:
          return dr("Suspense");
        case 19:
          return dr("SuspenseList");
        case 0:
        case 2:
        case 15:
          return g = Rn(g.type, !1), g;
        case 11:
          return g = Rn(g.type.render, !1), g;
        case 1:
          return g = Rn(g.type, !0), g;
        default:
          return "";
      }
    }
    function Ie(g, S) {
      if (g && g.defaultProps) {
        S = o({}, S), g = g.defaultProps;
        for (var D in g)
          S[D] === void 0 && (S[D] = g[D]);
        return S;
      }
      return S;
    }
    var ct = qn(null), Ut = null, tn = null, $n = null;
    function yn() {
      $n = tn = Ut = null;
    }
    function Zn(g, S, D) {
      Ot ? (hr(ct, S._currentValue), S._currentValue = D) : (hr(ct, S._currentValue2), S._currentValue2 = D);
    }
    function Jn(g) {
      var S = ct.current;
      br(ct), Ot ? g._currentValue = S : g._currentValue2 = S;
    }
    function Tr(g, S, D) {
      for (; g !== null; ) {
        var z = g.alternate;
        if ((g.childLanes & S) !== S ? (g.childLanes |= S, z !== null && (z.childLanes |= S)) : z !== null && (z.childLanes & S) !== S && (z.childLanes |= S), g === D)
          break;
        g = g.return;
      }
    }
    function Mr(g, S) {
      Ut = g, $n = tn = null, g = g.dependencies, g !== null && g.firstContext !== null && (g.lanes & S && (Jr = !0), g.firstContext = null);
    }
    function _r(g) {
      var S = Ot ? g._currentValue : g._currentValue2;
      if ($n !== g)
        if (g = { context: g, memoizedValue: S, next: null }, tn === null) {
          if (Ut === null)
            throw Error(l(308));
          tn = g, Ut.dependencies = { lanes: 0, firstContext: g };
        } else
          tn = tn.next = g;
      return S;
    }
    var Zr = null, vi = !1;
    function ii(g) {
      g.updateQueue = { baseState: g.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
    }
    function Hl(g, S) {
      g = g.updateQueue, S.updateQueue === g && (S.updateQueue = { baseState: g.baseState, firstBaseUpdate: g.firstBaseUpdate, lastBaseUpdate: g.lastBaseUpdate, shared: g.shared, effects: g.effects });
    }
    function gl(g, S) {
      return { eventTime: g, lane: S, tag: 0, payload: null, callback: null, next: null };
    }
    function pu(g, S) {
      var D = g.updateQueue;
      D !== null && (D = D.shared, ua !== null && g.mode & 1 && !($r & 2) ? (g = D.interleaved, g === null ? (S.next = S, Zr === null ? Zr = [D] : Zr.push(D)) : (S.next = g.next, g.next = S), D.interleaved = S) : (g = D.pending, g === null ? S.next = S : (S.next = g.next, g.next = S), D.pending = S));
    }
    function gh(g, S, D) {
      if (S = S.updateQueue, S !== null && (S = S.shared, (D & 4194240) !== 0)) {
        var z = S.lanes;
        z &= g.pendingLanes, D |= z, S.lanes = D, Ni(g, D);
      }
    }
    function mu(g, S) {
      var D = g.updateQueue, z = g.alternate;
      if (z !== null && (z = z.updateQueue, D === z)) {
        var W = null, te = null;
        if (D = D.firstBaseUpdate, D !== null) {
          do {
            var Le = { eventTime: D.eventTime, lane: D.lane, tag: D.tag, payload: D.payload, callback: D.callback, next: null };
            te === null ? W = te = Le : te = te.next = Le, D = D.next;
          } while (D !== null);
          te === null ? W = te = S : te = te.next = S;
        } else
          W = te = S;
        D = { baseState: z.baseState, firstBaseUpdate: W, lastBaseUpdate: te, shared: z.shared, effects: z.effects }, g.updateQueue = D;
        return;
      }
      g = D.lastBaseUpdate, g === null ? D.firstBaseUpdate = S : g.next = S, D.lastBaseUpdate = S;
    }
    function Nf(g, S, D, z) {
      var W = g.updateQueue;
      vi = !1;
      var te = W.firstBaseUpdate, Le = W.lastBaseUpdate, nt = W.shared.pending;
      if (nt !== null) {
        W.shared.pending = null;
        var It = nt, on = It.next;
        It.next = null, Le === null ? te = on : Le.next = on, Le = It;
        var mn = g.alternate;
        mn !== null && (mn = mn.updateQueue, nt = mn.lastBaseUpdate, nt !== Le && (nt === null ? mn.firstBaseUpdate = on : nt.next = on, mn.lastBaseUpdate = It));
      }
      if (te !== null) {
        var yr = W.baseState;
        Le = 0, mn = on = It = null, nt = te;
        do {
          var sr = nt.lane, ca = nt.eventTime;
          if ((z & sr) === sr) {
            mn !== null && (mn = mn.next = {
              eventTime: ca,
              lane: 0,
              tag: nt.tag,
              payload: nt.payload,
              callback: nt.callback,
              next: null
            });
            e: {
              var xn = g, Si = nt;
              switch (sr = S, ca = D, Si.tag) {
                case 1:
                  if (xn = Si.payload, typeof xn == "function") {
                    yr = xn.call(ca, yr, sr);
                    break e;
                  }
                  yr = xn;
                  break e;
                case 3:
                  xn.flags = xn.flags & -65537 | 128;
                case 0:
                  if (xn = Si.payload, sr = typeof xn == "function" ? xn.call(ca, yr, sr) : xn, sr == null)
                    break e;
                  yr = o({}, yr, sr);
                  break e;
                case 2:
                  vi = !0;
              }
            }
            nt.callback !== null && nt.lane !== 0 && (g.flags |= 64, sr = W.effects, sr === null ? W.effects = [nt] : sr.push(nt));
          } else
            ca = { eventTime: ca, lane: sr, tag: nt.tag, payload: nt.payload, callback: nt.callback, next: null }, mn === null ? (on = mn = ca, It = yr) : mn = mn.next = ca, Le |= sr;
          if (nt = nt.next, nt === null) {
            if (nt = W.shared.pending, nt === null)
              break;
            sr = nt, nt = sr.next, sr.next = null, W.lastBaseUpdate = sr, W.shared.pending = null;
          }
        } while (1);
        if (mn === null && (It = yr), W.baseState = It, W.firstBaseUpdate = on, W.lastBaseUpdate = mn, S = W.shared.interleaved, S !== null) {
          W = S;
          do
            Le |= W.lane, W = W.next;
          while (W !== S);
        } else
          te === null && (W.shared.lanes = 0);
        qu |= Le, g.lanes = Le, g.memoizedState = yr;
      }
    }
    function yh(g, S, D) {
      if (g = S.effects, S.effects = null, g !== null)
        for (S = 0; S < g.length; S++) {
          var z = g[S], W = z.callback;
          if (W !== null) {
            if (z.callback = null, z = D, typeof W != "function")
              throw Error(l(191, W));
            W.call(z);
          }
        }
    }
    var vm = new r.Component().refs;
    function gm(g, S, D, z) {
      S = g.memoizedState, D = D(z, S), D = D == null ? S : o({}, S, D), g.memoizedState = D, g.lanes === 0 && (g.updateQueue.baseState = D);
    }
    var ym = { isMounted: function(g) {
      return (g = g._reactInternals) ? Z(g) === g : !1;
    }, enqueueSetState: function(g, S, D) {
      g = g._reactInternals;
      var z = ai(), W = Fo(g), te = gl(z, W);
      te.payload = S, D != null && (te.callback = D), pu(g, te), S = il(g, W, z), S !== null && gh(S, g, W);
    }, enqueueReplaceState: function(g, S, D) {
      g = g._reactInternals;
      var z = ai(), W = Fo(g), te = gl(z, W);
      te.tag = 1, te.payload = S, D != null && (te.callback = D), pu(g, te), S = il(g, W, z), S !== null && gh(S, g, W);
    }, enqueueForceUpdate: function(g, S) {
      g = g._reactInternals;
      var D = ai(), z = Fo(g), W = gl(
        D,
        z
      );
      W.tag = 2, S != null && (W.callback = S), pu(g, W), S = il(g, z, D), S !== null && gh(S, g, z);
    } };
    function Sm(g, S, D, z, W, te, Le) {
      return g = g.stateNode, typeof g.shouldComponentUpdate == "function" ? g.shouldComponentUpdate(z, te, Le) : S.prototype && S.prototype.isPureReactComponent ? !is(D, z) || !is(W, te) : !0;
    }
    function _m(g, S, D) {
      var z = !1, W = di, te = S.contextType;
      return typeof te == "object" && te !== null ? te = _r(te) : (W = Ai(S) ? Co : ha.current, z = S.contextTypes, te = (z = z != null) ? Ri(g, W) : di), S = new S(D, te), g.memoizedState = S.state !== null && S.state !== void 0 ? S.state : null, S.updater = ym, g.stateNode = S, S._reactInternals = g, z && (g = g.stateNode, g.__reactInternalMemoizedUnmaskedChildContext = W, g.__reactInternalMemoizedMaskedChildContext = te), S;
    }
    function Cv(g, S, D, z) {
      g = S.state, typeof S.componentWillReceiveProps == "function" && S.componentWillReceiveProps(D, z), typeof S.UNSAFE_componentWillReceiveProps == "function" && S.UNSAFE_componentWillReceiveProps(D, z), S.state !== g && ym.enqueueReplaceState(S, S.state, null);
    }
    function xm(g, S, D, z) {
      var W = g.stateNode;
      W.props = D, W.state = g.memoizedState, W.refs = vm, ii(g);
      var te = S.contextType;
      typeof te == "object" && te !== null ? W.context = _r(te) : (te = Ai(S) ? Co : ha.current, W.context = Ri(g, te)), W.state = g.memoizedState, te = S.getDerivedStateFromProps, typeof te == "function" && (gm(g, S, te, D), W.state = g.memoizedState), typeof S.getDerivedStateFromProps == "function" || typeof W.getSnapshotBeforeUpdate == "function" || typeof W.UNSAFE_componentWillMount != "function" && typeof W.componentWillMount != "function" || (S = W.state, typeof W.componentWillMount == "function" && W.componentWillMount(), typeof W.UNSAFE_componentWillMount == "function" && W.UNSAFE_componentWillMount(), S !== W.state && ym.enqueueReplaceState(W, W.state, null), Nf(g, D, W, z), W.state = g.memoizedState), typeof W.componentDidMount == "function" && (g.flags |= 4194308);
    }
    var wd = [], kf = 0, vu = null, Em = 0, yl = [], Ys = 0, Yc = null, Xc = 1, gu = "";
    function Ff(g, S) {
      wd[kf++] = Em, wd[kf++] = vu, vu = g, Em = S;
    }
    function Xs(g, S, D) {
      yl[Ys++] = Xc, yl[Ys++] = gu, yl[Ys++] = Yc, Yc = g;
      var z = Xc;
      g = gu;
      var W = 32 - Ao(z) - 1;
      z &= ~(1 << W), D += 1;
      var te = 32 - Ao(S) + W;
      if (30 < te) {
        var Le = W - W % 5;
        te = (z & (1 << Le) - 1).toString(32), z >>= Le, W -= Le, Xc = 1 << 32 - Ao(S) + W | D << W | z, gu = te + g;
      } else
        Xc = 1 << te | D << W | z, gu = g;
    }
    function Bu(g) {
      g.return !== null && (Ff(g, 1), Xs(g, 1, 0));
    }
    function Wa(g) {
      for (; g === vu; )
        vu = wd[--kf], wd[kf] = null, Em = wd[--kf], wd[kf] = null;
      for (; g === Yc; )
        Yc = yl[--Ys], yl[Ys] = null, gu = yl[--Ys], yl[Ys] = null, Xc = yl[--Ys], yl[Ys] = null;
    }
    var Fa = null, za = null, ea = !1, Md = !1, as = null;
    function bm(g, S) {
      var D = Io(5, null, null, 0);
      D.elementType = "DELETED", D.stateNode = S, D.return = g, S = g.deletions, S === null ? (g.deletions = [D], g.flags |= 16) : S.push(D);
    }
    function Tm(g, S) {
      switch (g.tag) {
        case 5:
          return S = Hn(S, g.type, g.pendingProps), S !== null ? (g.stateNode = S, Fa = g, za = ke(S), !0) : !1;
        case 6:
          return S = mi(S, g.pendingProps), S !== null ? (g.stateNode = S, Fa = g, za = null, !0) : !1;
        case 13:
          if (S = Vr(S), S !== null) {
            var D = Yc !== null ? { id: Xc, overflow: gu } : null;
            return g.memoizedState = { dehydrated: S, treeContext: D, retryLane: 1073741824 }, D = Io(18, null, null, 0), D.stateNode = S, D.return = g, g.child = D, Fa = g, za = null, !0;
          }
          return !1;
        default:
          return !1;
      }
    }
    function Cd(g) {
      return (g.mode & 1) !== 0 && (g.flags & 128) === 0;
    }
    function qc(g) {
      if (ea) {
        var S = za;
        if (S) {
          var D = S;
          if (!Tm(g, S)) {
            if (Cd(g))
              throw Error(l(418));
            S = fi(D);
            var z = Fa;
            S && Tm(g, S) ? bm(z, D) : (g.flags = g.flags & -4097 | 2, ea = !1, Fa = g);
          }
        } else {
          if (Cd(g))
            throw Error(l(418));
          g.flags = g.flags & -4097 | 2, ea = !1, Fa = g;
        }
      }
    }
    function Rv(g) {
      for (g = g.return; g !== null && g.tag !== 5 && g.tag !== 3 && g.tag !== 13; )
        g = g.return;
      Fa = g;
    }
    function vp(g) {
      if (!rt || g !== Fa)
        return !1;
      if (!ea)
        return Rv(g), ea = !0, !1;
      if (g.tag !== 3 && (g.tag !== 5 || Mn(g.type) && !De(g.type, g.memoizedProps))) {
        var S = za;
        if (S) {
          if (Cd(g)) {
            for (g = za; g; )
              g = fi(g);
            throw Error(l(418));
          }
          for (; S; )
            bm(g, S), S = fi(S);
        }
      }
      if (Rv(g), g.tag === 13) {
        if (!rt)
          throw Error(l(316));
        if (g = g.memoizedState, g = g !== null ? g.dehydrated : null, !g)
          throw Error(l(317));
        za = at(g);
      } else
        za = Fa ? fi(g.stateNode) : null;
      return !0;
    }
    function Rd() {
      rt && (za = Fa = null, Md = ea = !1);
    }
    function Sh(g) {
      as === null ? as = [g] : as.push(g);
    }
    function zf(g, S, D) {
      if (g = D.ref, g !== null && typeof g != "function" && typeof g != "object") {
        if (D._owner) {
          if (D = D._owner, D) {
            if (D.tag !== 1)
              throw Error(l(309));
            var z = D.stateNode;
          }
          if (!z)
            throw Error(l(147, g));
          var W = z, te = "" + g;
          return S !== null && S.ref !== null && typeof S.ref == "function" && S.ref._stringRef === te ? S.ref : (S = function(Le) {
            var nt = W.refs;
            nt === vm && (nt = W.refs = {}), Le === null ? delete nt[te] : nt[te] = Le;
          }, S._stringRef = te, S);
        }
        if (typeof g != "string")
          throw Error(l(284));
        if (!D._owner)
          throw Error(l(290, g));
      }
      return g;
    }
    function qs(g, S) {
      throw g = Object.prototype.toString.call(S), Error(l(31, g === "[object Object]" ? "object with keys {" + Object.keys(S).join(", ") + "}" : g));
    }
    function Kc(g) {
      var S = g._init;
      return S(g._payload);
    }
    function pc(g) {
      function S(_t, Xe) {
        if (g) {
          var Lt = _t.deletions;
          Lt === null ? (_t.deletions = [Xe], _t.flags |= 16) : Lt.push(Xe);
        }
      }
      function D(_t, Xe) {
        if (!g)
          return null;
        for (; Xe !== null; )
          S(_t, Xe), Xe = Xe.sibling;
        return null;
      }
      function z(_t, Xe) {
        for (_t = /* @__PURE__ */ new Map(); Xe !== null; )
          Xe.key !== null ? _t.set(Xe.key, Xe) : _t.set(Xe.index, Xe), Xe = Xe.sibling;
        return _t;
      }
      function W(_t, Xe) {
        return _t = ls(_t, Xe), _t.index = 0, _t.sibling = null, _t;
      }
      function te(_t, Xe, Lt) {
        return _t.index = Lt, g ? (Lt = _t.alternate, Lt !== null ? (Lt = Lt.index, Lt < Xe ? (_t.flags |= 2, Xe) : Lt) : (_t.flags |= 2, Xe)) : (_t.flags |= 1048576, Xe);
      }
      function Le(_t) {
        return g && _t.alternate === null && (_t.flags |= 2), _t;
      }
      function nt(_t, Xe, Lt, Xt) {
        return Xe === null || Xe.tag !== 6 ? (Xe = pf(Lt, _t.mode, Xt), Xe.return = _t, Xe) : (Xe = W(Xe, Lt), Xe.return = _t, Xe);
      }
      function It(_t, Xe, Lt, Xt) {
        var Nn = Lt.type;
        return Nn === y ? mn(_t, Xe, Lt.props.children, Xt, Lt.key) : Xe !== null && (Xe.elementType === Nn || typeof Nn == "object" && Nn !== null && Nn.$$typeof === F && Kc(Nn) === Xe.type) ? (Xt = W(Xe, Lt.props), Xt.ref = zf(_t, Xe, Lt), Xt.return = _t, Xt) : (Xt = hf(Lt.type, Lt.key, Lt.props, null, _t.mode, Xt), Xt.ref = zf(_t, Xe, Lt), Xt.return = _t, Xt);
      }
      function on(_t, Xe, Lt, Xt) {
        return Xe === null || Xe.tag !== 4 || Xe.stateNode.containerInfo !== Lt.containerInfo || Xe.stateNode.implementation !== Lt.implementation ? (Xe = Ru(Lt, _t.mode, Xt), Xe.return = _t, Xe) : (Xe = W(Xe, Lt.children || []), Xe.return = _t, Xe);
      }
      function mn(_t, Xe, Lt, Xt, Nn) {
        return Xe === null || Xe.tag !== 7 ? (Xe = Kl(Lt, _t.mode, Xt, Nn), Xe.return = _t, Xe) : (Xe = W(Xe, Lt), Xe.return = _t, Xe);
      }
      function yr(_t, Xe, Lt) {
        if (typeof Xe == "string" && Xe !== "" || typeof Xe == "number")
          return Xe = pf("" + Xe, _t.mode, Lt), Xe.return = _t, Xe;
        if (typeof Xe == "object" && Xe !== null) {
          switch (Xe.$$typeof) {
            case h:
              return Lt = hf(Xe.type, Xe.key, Xe.props, null, _t.mode, Lt), Lt.ref = zf(_t, null, Xe), Lt.return = _t, Lt;
            case p:
              return Xe = Ru(Xe, _t.mode, Lt), Xe.return = _t, Xe;
            case F:
              var Xt = Xe._init;
              return yr(_t, Xt(Xe._payload), Lt);
          }
          if (Ee(Xe) || j(Xe))
            return Xe = Kl(Xe, _t.mode, Lt, null), Xe.return = _t, Xe;
          qs(_t, Xe);
        }
        return null;
      }
      function sr(_t, Xe, Lt, Xt) {
        var Nn = Xe !== null ? Xe.key : null;
        if (typeof Lt == "string" && Lt !== "" || typeof Lt == "number")
          return Nn !== null ? null : nt(_t, Xe, "" + Lt, Xt);
        if (typeof Lt == "object" && Lt !== null) {
          switch (Lt.$$typeof) {
            case h:
              return Lt.key === Nn ? It(_t, Xe, Lt, Xt) : null;
            case p:
              return Lt.key === Nn ? on(_t, Xe, Lt, Xt) : null;
            case F:
              return Nn = Lt._init, sr(
                _t,
                Xe,
                Nn(Lt._payload),
                Xt
              );
          }
          if (Ee(Lt) || j(Lt))
            return Nn !== null ? null : mn(_t, Xe, Lt, Xt, null);
          qs(_t, Lt);
        }
        return null;
      }
      function ca(_t, Xe, Lt, Xt, Nn) {
        if (typeof Xt == "string" && Xt !== "" || typeof Xt == "number")
          return _t = _t.get(Lt) || null, nt(Xe, _t, "" + Xt, Nn);
        if (typeof Xt == "object" && Xt !== null) {
          switch (Xt.$$typeof) {
            case h:
              return _t = _t.get(Xt.key === null ? Lt : Xt.key) || null, It(Xe, _t, Xt, Nn);
            case p:
              return _t = _t.get(Xt.key === null ? Lt : Xt.key) || null, on(Xe, _t, Xt, Nn);
            case F:
              var zr = Xt._init;
              return ca(_t, Xe, Lt, zr(Xt._payload), Nn);
          }
          if (Ee(Xt) || j(Xt))
            return _t = _t.get(Lt) || null, mn(Xe, _t, Xt, Nn, null);
          qs(Xe, Xt);
        }
        return null;
      }
      function xn(_t, Xe, Lt, Xt) {
        for (var Nn = null, zr = null, mr = Xe, ei = Xe = 0, Pa = null; mr !== null && ei < Lt.length; ei++) {
          mr.index > ei ? (Pa = mr, mr = null) : Pa = mr.sibling;
          var ti = sr(_t, mr, Lt[ei], Xt);
          if (ti === null) {
            mr === null && (mr = Pa);
            break;
          }
          g && mr && ti.alternate === null && S(_t, mr), Xe = te(ti, Xe, ei), zr === null ? Nn = ti : zr.sibling = ti, zr = ti, mr = Pa;
        }
        if (ei === Lt.length)
          return D(_t, mr), ea && Ff(_t, ei), Nn;
        if (mr === null) {
          for (; ei < Lt.length; ei++)
            mr = yr(_t, Lt[ei], Xt), mr !== null && (Xe = te(mr, Xe, ei), zr === null ? Nn = mr : zr.sibling = mr, zr = mr);
          return ea && Ff(_t, ei), Nn;
        }
        for (mr = z(_t, mr); ei < Lt.length; ei++)
          Pa = ca(mr, _t, ei, Lt[ei], Xt), Pa !== null && (g && Pa.alternate !== null && mr.delete(Pa.key === null ? ei : Pa.key), Xe = te(Pa, Xe, ei), zr === null ? Nn = Pa : zr.sibling = Pa, zr = Pa);
        return g && mr.forEach(function(wc) {
          return S(_t, wc);
        }), ea && Ff(_t, ei), Nn;
      }
      function Si(_t, Xe, Lt, Xt) {
        var Nn = j(Lt);
        if (typeof Nn != "function")
          throw Error(l(150));
        if (Lt = Nn.call(Lt), Lt == null)
          throw Error(l(151));
        for (var zr = Nn = null, mr = Xe, ei = Xe = 0, Pa = null, ti = Lt.next(); mr !== null && !ti.done; ei++, ti = Lt.next()) {
          mr.index > ei ? (Pa = mr, mr = null) : Pa = mr.sibling;
          var wc = sr(_t, mr, ti.value, Xt);
          if (wc === null) {
            mr === null && (mr = Pa);
            break;
          }
          g && mr && wc.alternate === null && S(_t, mr), Xe = te(wc, Xe, ei), zr === null ? Nn = wc : zr.sibling = wc, zr = wc, mr = Pa;
        }
        if (ti.done)
          return D(
            _t,
            mr
          ), ea && Ff(_t, ei), Nn;
        if (mr === null) {
          for (; !ti.done; ei++, ti = Lt.next())
            ti = yr(_t, ti.value, Xt), ti !== null && (Xe = te(ti, Xe, ei), zr === null ? Nn = ti : zr.sibling = ti, zr = ti);
          return ea && Ff(_t, ei), Nn;
        }
        for (mr = z(_t, mr); !ti.done; ei++, ti = Lt.next())
          ti = ca(mr, _t, ei, ti.value, Xt), ti !== null && (g && ti.alternate !== null && mr.delete(ti.key === null ? ei : ti.key), Xe = te(ti, Xe, ei), zr === null ? Nn = ti : zr.sibling = ti, zr = ti);
        return g && mr.forEach(function(Dh) {
          return S(_t, Dh);
        }), ea && Ff(_t, ei), Nn;
      }
      function qa(_t, Xe, Lt, Xt) {
        if (typeof Lt == "object" && Lt !== null && Lt.type === y && Lt.key === null && (Lt = Lt.props.children), typeof Lt == "object" && Lt !== null) {
          switch (Lt.$$typeof) {
            case h:
              e: {
                for (var Nn = Lt.key, zr = Xe; zr !== null; ) {
                  if (zr.key === Nn) {
                    if (Nn = Lt.type, Nn === y) {
                      if (zr.tag === 7) {
                        D(_t, zr.sibling), Xe = W(zr, Lt.props.children), Xe.return = _t, _t = Xe;
                        break e;
                      }
                    } else if (zr.elementType === Nn || typeof Nn == "object" && Nn !== null && Nn.$$typeof === F && Kc(Nn) === zr.type) {
                      D(_t, zr.sibling), Xe = W(zr, Lt.props), Xe.ref = zf(_t, zr, Lt), Xe.return = _t, _t = Xe;
                      break e;
                    }
                    D(_t, zr);
                    break;
                  } else
                    S(_t, zr);
                  zr = zr.sibling;
                }
                Lt.type === y ? (Xe = Kl(Lt.props.children, _t.mode, Xt, Lt.key), Xe.return = _t, _t = Xe) : (Xt = hf(Lt.type, Lt.key, Lt.props, null, _t.mode, Xt), Xt.ref = zf(_t, Xe, Lt), Xt.return = _t, _t = Xt);
              }
              return Le(_t);
            case p:
              e: {
                for (zr = Lt.key; Xe !== null; ) {
                  if (Xe.key === zr)
                    if (Xe.tag === 4 && Xe.stateNode.containerInfo === Lt.containerInfo && Xe.stateNode.implementation === Lt.implementation) {
                      D(_t, Xe.sibling), Xe = W(Xe, Lt.children || []), Xe.return = _t, _t = Xe;
                      break e;
                    } else {
                      D(_t, Xe);
                      break;
                    }
                  else
                    S(_t, Xe);
                  Xe = Xe.sibling;
                }
                Xe = Ru(Lt, _t.mode, Xt), Xe.return = _t, _t = Xe;
              }
              return Le(_t);
            case F:
              return zr = Lt._init, qa(_t, Xe, zr(Lt._payload), Xt);
          }
          if (Ee(Lt))
            return xn(_t, Xe, Lt, Xt);
          if (j(Lt))
            return Si(_t, Xe, Lt, Xt);
          qs(_t, Lt);
        }
        return typeof Lt == "string" && Lt !== "" || typeof Lt == "number" ? (Lt = "" + Lt, Xe !== null && Xe.tag === 6 ? (D(_t, Xe.sibling), Xe = W(Xe, Lt), Xe.return = _t, _t = Xe) : (D(_t, Xe), Xe = pf(Lt, _t.mode, Xt), Xe.return = _t, _t = Xe), Le(_t)) : D(_t, Xe);
      }
      return qa;
    }
    var Hu = pc(!0), gp = pc(!1), Ad = {}, Cs = qn(Ad), Dd = qn(Ad), Qc = qn(Ad);
    function yu(g) {
      if (g === Ad)
        throw Error(l(174));
      return g;
    }
    function yp(g, S) {
      hr(Qc, S), hr(Dd, g), hr(Cs, Ad), g = we(S), br(Cs), hr(Cs, g);
    }
    function Ld() {
      br(Cs), br(Dd), br(Qc);
    }
    function Sp(g) {
      var S = yu(Qc.current), D = yu(Cs.current);
      S = de(D, g.type, S), D !== S && (hr(Dd, g), hr(Cs, S));
    }
    function Vl(g) {
      Dd.current === g && (br(Cs), br(Dd));
    }
    var va = qn(0);
    function Od(g) {
      for (var S = g; S !== null; ) {
        if (S.tag === 13) {
          var D = S.memoizedState;
          if (D !== null && (D = D.dehydrated, D === null || Gr(D) || Or(D)))
            return S;
        } else if (S.tag === 19 && S.memoizedProps.revealOrder !== void 0) {
          if (S.flags & 128)
            return S;
        } else if (S.child !== null) {
          S.child.return = S, S = S.child;
          continue;
        }
        if (S === g)
          break;
        for (; S.sibling === null; ) {
          if (S.return === null || S.return === g)
            return null;
          S = S.return;
        }
        S.sibling.return = S.return, S = S.sibling;
      }
      return null;
    }
    var ja = [];
    function Sl() {
      for (var g = 0; g < ja.length; g++) {
        var S = ja[g];
        Ot ? S._workInProgressVersionPrimary = null : S._workInProgressVersionSecondary = null;
      }
      ja.length = 0;
    }
    var go = u.ReactCurrentDispatcher, qi = u.ReactCurrentBatchConfig, Zc = 0, ui = null, ki = null, Wi = null, Pd = !1, yo = !1, If = 0, mc = 0;
    function so() {
      throw Error(l(321));
    }
    function Gl(g, S) {
      if (S === null)
        return !1;
      for (var D = 0; D < S.length && D < g.length; D++)
        if (!vo(g[D], S[D]))
          return !1;
      return !0;
    }
    function Jc(g, S, D, z, W, te) {
      if (Zc = te, ui = S, S.memoizedState = null, S.updateQueue = null, S.lanes = 0, go.current = g === null || g.memoizedState === null ? ef : Fd, g = D(z, W), yo) {
        te = 0;
        do {
          if (yo = !1, If = 0, 25 <= te)
            throw Error(l(301));
          te += 1, Wi = ki = null, S.updateQueue = null, go.current = tf, g = D(z, W);
        } while (yo);
      }
      if (go.current = Vf, S = ki !== null && ki.next !== null, Zc = 0, Wi = ki = ui = null, Pd = !1, S)
        throw Error(l(300));
      return g;
    }
    function Vu() {
      var g = If !== 0;
      return If = 0, g;
    }
    function Su() {
      var g = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
      return Wi === null ? ui.memoizedState = Wi = g : Wi = Wi.next = g, Wi;
    }
    function Wl() {
      if (ki === null) {
        var g = ui.alternate;
        g = g !== null ? g.memoizedState : null;
      } else
        g = ki.next;
      var S = Wi === null ? ui.memoizedState : Wi.next;
      if (S !== null)
        Wi = S, ki = g;
      else {
        if (g === null)
          throw Error(l(310));
        ki = g, g = { memoizedState: ki.memoizedState, baseState: ki.baseState, baseQueue: ki.baseQueue, queue: ki.queue, next: null }, Wi === null ? ui.memoizedState = Wi = g : Wi = Wi.next = g;
      }
      return Wi;
    }
    function sa(g, S) {
      return typeof S == "function" ? S(g) : S;
    }
    function Ud(g) {
      var S = Wl(), D = S.queue;
      if (D === null)
        throw Error(l(311));
      D.lastRenderedReducer = g;
      var z = ki, W = z.baseQueue, te = D.pending;
      if (te !== null) {
        if (W !== null) {
          var Le = W.next;
          W.next = te.next, te.next = Le;
        }
        z.baseQueue = W = te, D.pending = null;
      }
      if (W !== null) {
        te = W.next, z = z.baseState;
        var nt = Le = null, It = null, on = te;
        do {
          var mn = on.lane;
          if ((Zc & mn) === mn)
            It !== null && (It = It.next = { lane: 0, action: on.action, hasEagerState: on.hasEagerState, eagerState: on.eagerState, next: null }), z = on.hasEagerState ? on.eagerState : g(z, on.action);
          else {
            var yr = {
              lane: mn,
              action: on.action,
              hasEagerState: on.hasEagerState,
              eagerState: on.eagerState,
              next: null
            };
            It === null ? (nt = It = yr, Le = z) : It = It.next = yr, ui.lanes |= mn, qu |= mn;
          }
          on = on.next;
        } while (on !== null && on !== te);
        It === null ? Le = z : It.next = nt, vo(z, S.memoizedState) || (Jr = !0), S.memoizedState = z, S.baseState = Le, S.baseQueue = It, D.lastRenderedState = z;
      }
      if (g = D.interleaved, g !== null) {
        W = g;
        do
          te = W.lane, ui.lanes |= te, qu |= te, W = W.next;
        while (W !== g);
      } else
        W === null && (D.lanes = 0);
      return [S.memoizedState, D.dispatch];
    }
    function _p(g) {
      var S = Wl(), D = S.queue;
      if (D === null)
        throw Error(l(311));
      D.lastRenderedReducer = g;
      var z = D.dispatch, W = D.pending, te = S.memoizedState;
      if (W !== null) {
        D.pending = null;
        var Le = W = W.next;
        do
          te = g(te, Le.action), Le = Le.next;
        while (Le !== W);
        vo(te, S.memoizedState) || (Jr = !0), S.memoizedState = te, S.baseQueue === null && (S.baseState = te), D.lastRenderedState = te;
      }
      return [te, z];
    }
    function Bf() {
    }
    function wm(g, S) {
      var D = ui, z = Wl(), W = S(), te = !vo(z.memoizedState, W);
      if (te && (z.memoizedState = W, Jr = !0), z = z.queue, Zt(jr.bind(null, D, z, g), [g]), z.getSnapshot !== S || te || Wi !== null && Wi.memoizedState.tag & 1) {
        if (D.flags |= 2048, _h(9, ji.bind(null, D, z, W, S), void 0, null), ua === null)
          throw Error(l(349));
        Zc & 30 || wr(D, S, W);
      }
      return W;
    }
    function wr(g, S, D) {
      g.flags |= 16384, g = { getSnapshot: S, value: D }, S = ui.updateQueue, S === null ? (S = { lastEffect: null, stores: null }, ui.updateQueue = S, S.stores = [g]) : (D = S.stores, D === null ? S.stores = [g] : D.push(g));
    }
    function ji(g, S, D, z) {
      S.value = D, S.getSnapshot = z, ba(S) && il(g, 1, -1);
    }
    function jr(g, S, D) {
      return D(function() {
        ba(S) && il(g, 1, -1);
      });
    }
    function ba(g) {
      var S = g.getSnapshot;
      g = g.value;
      try {
        var D = S();
        return !vo(g, D);
      } catch {
        return !0;
      }
    }
    function $o(g) {
      var S = Su();
      return typeof g == "function" && (g = g()), S.memoizedState = S.baseState = g, g = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: sa, lastRenderedState: g }, S.queue = g, g = g.dispatch = Ep.bind(null, ui, g), [S.memoizedState, g];
    }
    function _h(g, S, D, z) {
      return g = { tag: g, create: S, destroy: D, deps: z, next: null }, S = ui.updateQueue, S === null ? (S = { lastEffect: null, stores: null }, ui.updateQueue = S, S.lastEffect = g.next = g) : (D = S.lastEffect, D === null ? S.lastEffect = g.next = g : (z = D.next, D.next = g, g.next = z, S.lastEffect = g)), g;
    }
    function xh() {
      return Wl().memoizedState;
    }
    function Hf(g, S, D, z) {
      var W = Su();
      ui.flags |= g, W.memoizedState = _h(1 | S, D, void 0, z === void 0 ? null : z);
    }
    function Mm(g, S, D, z) {
      var W = Wl();
      z = z === void 0 ? null : z;
      var te = void 0;
      if (ki !== null) {
        var Le = ki.memoizedState;
        if (te = Le.destroy, z !== null && Gl(z, Le.deps)) {
          W.memoizedState = _h(S, D, te, z);
          return;
        }
      }
      ui.flags |= g, W.memoizedState = _h(1 | S, D, te, z);
    }
    function Eh(g, S) {
      return Hf(8390656, 8, g, S);
    }
    function Zt(g, S) {
      return Mm(2048, 8, g, S);
    }
    function Pr(g, S) {
      return Mm(4, 2, g, S);
    }
    function kr(g, S) {
      return Mm(4, 4, g, S);
    }
    function Ks(g, S) {
      if (typeof S == "function")
        return g = g(), S(g), function() {
          S(null);
        };
      if (S != null)
        return g = g(), S.current = g, function() {
          S.current = null;
        };
    }
    function _l(g, S, D) {
      return D = D != null ? D.concat([g]) : null, Mm(4, 4, Ks.bind(null, S, g), D);
    }
    function vc() {
    }
    function jl(g, S) {
      var D = Wl();
      S = S === void 0 ? null : S;
      var z = D.memoizedState;
      return z !== null && S !== null && Gl(S, z[1]) ? z[0] : (D.memoizedState = [g, S], g);
    }
    function gc(g, S) {
      var D = Wl();
      S = S === void 0 ? null : S;
      var z = D.memoizedState;
      return z !== null && S !== null && Gl(S, z[1]) ? z[0] : (g = g(), D.memoizedState = [g, S], g);
    }
    function yc(g, S) {
      var D = gr;
      gr = D !== 0 && 4 > D ? D : 4, g(!0);
      var z = qi.transition;
      qi.transition = {};
      try {
        g(!1), S();
      } finally {
        gr = D, qi.transition = z;
      }
    }
    function _u() {
      return Wl().memoizedState;
    }
    function xp(g, S, D) {
      var z = Fo(g);
      D = { lane: z, action: D, hasEagerState: !1, eagerState: null, next: null }, Cm(g) ? bh(S, D) : (Nd(g, S, D), D = ai(), g = il(g, z, D), g !== null && kd(g, S, z));
    }
    function Ep(g, S, D) {
      var z = Fo(g), W = { lane: z, action: D, hasEagerState: !1, eagerState: null, next: null };
      if (Cm(g))
        bh(S, W);
      else {
        Nd(g, S, W);
        var te = g.alternate;
        if (g.lanes === 0 && (te === null || te.lanes === 0) && (te = S.lastRenderedReducer, te !== null))
          try {
            var Le = S.lastRenderedState, nt = te(Le, D);
            if (W.hasEagerState = !0, W.eagerState = nt, vo(nt, Le))
              return;
          } catch {
          } finally {
          }
        D = ai(), g = il(g, z, D), g !== null && kd(g, S, z);
      }
    }
    function Cm(g) {
      var S = g.alternate;
      return g === ui || S !== null && S === ui;
    }
    function bh(g, S) {
      yo = Pd = !0;
      var D = g.pending;
      D === null ? S.next = S : (S.next = D.next, D.next = S), g.pending = S;
    }
    function Nd(g, S, D) {
      ua !== null && g.mode & 1 && !($r & 2) ? (g = S.interleaved, g === null ? (D.next = D, Zr === null ? Zr = [S] : Zr.push(S)) : (D.next = g.next, g.next = D), S.interleaved = D) : (g = S.pending, g === null ? D.next = D : (D.next = g.next, g.next = D), S.pending = D);
    }
    function kd(g, S, D) {
      if (D & 4194240) {
        var z = S.lanes;
        z &= g.pendingLanes, D |= z, S.lanes = D, Ni(g, D);
      }
    }
    var Vf = { readContext: _r, useCallback: so, useContext: so, useEffect: so, useImperativeHandle: so, useInsertionEffect: so, useLayoutEffect: so, useMemo: so, useReducer: so, useRef: so, useState: so, useDebugValue: so, useDeferredValue: so, useTransition: so, useMutableSource: so, useSyncExternalStore: so, useId: so, unstable_isNewReconciler: !1 }, ef = { readContext: _r, useCallback: function(g, S) {
      return Su().memoizedState = [g, S === void 0 ? null : S], g;
    }, useContext: _r, useEffect: Eh, useImperativeHandle: function(g, S, D) {
      return D = D != null ? D.concat([g]) : null, Hf(
        4194308,
        4,
        Ks.bind(null, S, g),
        D
      );
    }, useLayoutEffect: function(g, S) {
      return Hf(4194308, 4, g, S);
    }, useInsertionEffect: function(g, S) {
      return Hf(4, 2, g, S);
    }, useMemo: function(g, S) {
      var D = Su();
      return S = S === void 0 ? null : S, g = g(), D.memoizedState = [g, S], g;
    }, useReducer: function(g, S, D) {
      var z = Su();
      return S = D !== void 0 ? D(S) : S, z.memoizedState = z.baseState = S, g = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: g, lastRenderedState: S }, z.queue = g, g = g.dispatch = xp.bind(null, ui, g), [z.memoizedState, g];
    }, useRef: function(g) {
      var S = Su();
      return g = { current: g }, S.memoizedState = g;
    }, useState: $o, useDebugValue: vc, useDeferredValue: function(g) {
      var S = $o(g), D = S[0], z = S[1];
      return Eh(function() {
        var W = qi.transition;
        qi.transition = {};
        try {
          z(g);
        } finally {
          qi.transition = W;
        }
      }, [g]), D;
    }, useTransition: function() {
      var g = $o(!1), S = g[0];
      return g = yc.bind(null, g[1]), Su().memoizedState = g, [S, g];
    }, useMutableSource: function() {
    }, useSyncExternalStore: function(g, S, D) {
      var z = ui, W = Su();
      if (ea) {
        if (D === void 0)
          throw Error(l(407));
        D = D();
      } else {
        if (D = S(), ua === null)
          throw Error(l(349));
        Zc & 30 || wr(z, S, D);
      }
      W.memoizedState = D;
      var te = { value: D, getSnapshot: S };
      return W.queue = te, Eh(jr.bind(null, z, te, g), [g]), z.flags |= 2048, _h(9, ji.bind(null, z, te, D, S), void 0, null), D;
    }, useId: function() {
      var g = Su(), S = ua.identifierPrefix;
      if (ea) {
        var D = gu, z = Xc;
        D = (z & ~(1 << 32 - Ao(z) - 1)).toString(32) + D, S = ":" + S + "R" + D, D = If++, 0 < D && (S += "H" + D.toString(32)), S += ":";
      } else
        D = mc++, S = ":" + S + "r" + D.toString(32) + ":";
      return g.memoizedState = S;
    }, unstable_isNewReconciler: !1 }, Fd = {
      readContext: _r,
      useCallback: jl,
      useContext: _r,
      useEffect: Zt,
      useImperativeHandle: _l,
      useInsertionEffect: Pr,
      useLayoutEffect: kr,
      useMemo: gc,
      useReducer: Ud,
      useRef: xh,
      useState: function() {
        return Ud(sa);
      },
      useDebugValue: vc,
      useDeferredValue: function(g) {
        var S = Ud(sa), D = S[0], z = S[1];
        return Zt(function() {
          var W = qi.transition;
          qi.transition = {};
          try {
            z(g);
          } finally {
            qi.transition = W;
          }
        }, [g]), D;
      },
      useTransition: function() {
        var g = Ud(sa)[0], S = Wl().memoizedState;
        return [g, S];
      },
      useMutableSource: Bf,
      useSyncExternalStore: wm,
      useId: _u,
      unstable_isNewReconciler: !1
    }, tf = {
      readContext: _r,
      useCallback: jl,
      useContext: _r,
      useEffect: Zt,
      useImperativeHandle: _l,
      useInsertionEffect: Pr,
      useLayoutEffect: kr,
      useMemo: gc,
      useReducer: _p,
      useRef: xh,
      useState: function() {
        return _p(sa);
      },
      useDebugValue: vc,
      useDeferredValue: function(g) {
        var S = _p(sa), D = S[0], z = S[1];
        return Zt(function() {
          var W = qi.transition;
          qi.transition = {};
          try {
            z(g);
          } finally {
            qi.transition = W;
          }
        }, [g]), D;
      },
      useTransition: function() {
        var g = _p(sa)[0], S = Wl().memoizedState;
        return [g, S];
      },
      useMutableSource: Bf,
      useSyncExternalStore: wm,
      useId: _u,
      unstable_isNewReconciler: !1
    };
    function Th(g, S) {
      try {
        var D = "", z = S;
        do
          D += ie(z), z = z.return;
        while (z);
        var W = D;
      } catch (te) {
        W = `
Error generating stack: ` + te.message + `
` + te.stack;
      }
      return { value: g, source: S, stack: W };
    }
    function zd(g, S) {
      try {
        console.error(S.value);
      } catch (D) {
        setTimeout(function() {
          throw D;
        });
      }
    }
    var bp = typeof WeakMap == "function" ? WeakMap : Map;
    function Rm(g, S, D) {
      D = gl(-1, D), D.tag = 3, D.payload = { element: null };
      var z = S.value;
      return D.callback = function() {
        sf || (sf = !0, Tl = z), zd(g, S);
      }, D;
    }
    function Gu(g, S, D) {
      D = gl(-1, D), D.tag = 3;
      var z = g.type.getDerivedStateFromError;
      if (typeof z == "function") {
        var W = S.value;
        D.payload = function() {
          return z(W);
        }, D.callback = function() {
          zd(g, S);
        };
      }
      var te = g.stateNode;
      return te !== null && typeof te.componentDidCatch == "function" && (D.callback = function() {
        zd(g, S), typeof z != "function" && (wu === null ? wu = /* @__PURE__ */ new Set([this]) : wu.add(this));
        var Le = S.stack;
        this.componentDidCatch(S.value, { componentStack: Le !== null ? Le : "" });
      }), D;
    }
    function Qs(g, S, D) {
      var z = g.pingCache;
      if (z === null) {
        z = g.pingCache = new bp();
        var W = /* @__PURE__ */ new Set();
        z.set(S, W);
      } else
        W = z.get(S), W === void 0 && (W = /* @__PURE__ */ new Set(), z.set(S, W));
      W.has(D) || (W.add(D), g = Yl.bind(null, g, S, D), S.then(g, g));
    }
    function Wu(g) {
      do {
        var S;
        if ((S = g.tag === 13) && (S = g.memoizedState, S = S !== null ? S.dehydrated !== null : !0), S)
          return g;
        g = g.return;
      } while (g !== null);
      return null;
    }
    function ju(g, S, D, z, W) {
      return g.mode & 1 ? (g.flags |= 65536, g.lanes = W, g) : (g === S ? g.flags |= 65536 : (g.flags |= 128, D.flags |= 131072, D.flags &= -52805, D.tag === 1 && (D.alternate === null ? D.tag = 17 : (S = gl(-1, 1), S.tag = 2, pu(D, S))), D.lanes |= 1), g);
    }
    function lo(g) {
      g.flags |= 4;
    }
    function Sc(g, S) {
      if (g !== null && g.child === S.child)
        return !0;
      if (S.flags & 16)
        return !1;
      for (g = S.child; g !== null; ) {
        if (g.flags & 12854 || g.subtreeFlags & 12854)
          return !1;
        g = g.sibling;
      }
      return !0;
    }
    var Zs, Gf, Wf, Id;
    if (st)
      Zs = function(g, S) {
        for (var D = S.child; D !== null; ) {
          if (D.tag === 5 || D.tag === 6)
            ue(g, D.stateNode);
          else if (D.tag !== 4 && D.child !== null) {
            D.child.return = D, D = D.child;
            continue;
          }
          if (D === S)
            break;
          for (; D.sibling === null; ) {
            if (D.return === null || D.return === S)
              return;
            D = D.return;
          }
          D.sibling.return = D.return, D = D.sibling;
        }
      }, Gf = function() {
      }, Wf = function(g, S, D, z, W) {
        if (g = g.memoizedProps, g !== z) {
          var te = S.stateNode, Le = yu(Cs.current);
          D = Ae(te, D, g, z, W, Le), (S.updateQueue = D) && lo(S);
        }
      }, Id = function(g, S, D, z) {
        D !== z && lo(S);
      };
    else if (oe) {
      Zs = function(g, S, D, z) {
        for (var W = S.child; W !== null; ) {
          if (W.tag === 5) {
            var te = W.stateNode;
            D && z && (te = tr(te, W.type, W.memoizedProps, W)), ue(g, te);
          } else if (W.tag === 6)
            te = W.stateNode, D && z && (te = fr(te, W.memoizedProps, W)), ue(g, te);
          else if (W.tag !== 4) {
            if (W.tag === 22 && W.memoizedState !== null)
              te = W.child, te !== null && (te.return = W), Zs(g, W, !0, !0);
            else if (W.child !== null) {
              W.child.return = W, W = W.child;
              continue;
            }
          }
          if (W === S)
            break;
          for (; W.sibling === null; ) {
            if (W.return === null || W.return === S)
              return;
            W = W.return;
          }
          W.sibling.return = W.return, W = W.sibling;
        }
      };
      var os = function(g, S, D, z) {
        for (var W = S.child; W !== null; ) {
          if (W.tag === 5) {
            var te = W.stateNode;
            D && z && (te = tr(te, W.type, W.memoizedProps, W)), jn(g, te);
          } else if (W.tag === 6)
            te = W.stateNode, D && z && (te = fr(te, W.memoizedProps, W)), jn(g, te);
          else if (W.tag !== 4) {
            if (W.tag === 22 && W.memoizedState !== null)
              te = W.child, te !== null && (te.return = W), os(g, W, !0, !0);
            else if (W.child !== null) {
              W.child.return = W, W = W.child;
              continue;
            }
          }
          if (W === S)
            break;
          for (; W.sibling === null; ) {
            if (W.return === null || W.return === S)
              return;
            W = W.return;
          }
          W.sibling.return = W.return, W = W.sibling;
        }
      };
      Gf = function(g, S) {
        var D = S.stateNode;
        if (!Sc(g, S)) {
          g = D.containerInfo;
          var z = Un(g);
          os(z, S, !1, !1), D.pendingChildren = z, lo(S), cr(g, z);
        }
      }, Wf = function(g, S, D, z, W) {
        var te = g.stateNode, Le = g.memoizedProps;
        if ((g = Sc(g, S)) && Le === z)
          S.stateNode = te;
        else {
          var nt = S.stateNode, It = yu(Cs.current), on = null;
          Le !== z && (on = Ae(nt, D, Le, z, W, It)), g && on === null ? S.stateNode = te : (te = ln(te, on, D, Le, z, S, g, nt), Ce(te, D, z, W, It) && lo(S), S.stateNode = te, g ? lo(S) : Zs(te, S, !1, !1));
        }
      }, Id = function(g, S, D, z) {
        D !== z ? (g = yu(Qc.current), D = yu(Cs.current), S.stateNode = Ne(z, g, D, S), lo(S)) : S.stateNode = g.stateNode;
      };
    } else
      Gf = function() {
      }, Wf = function() {
      }, Id = function() {
      };
    function Js(g, S) {
      if (!ea)
        switch (g.tailMode) {
          case "hidden":
            S = g.tail;
            for (var D = null; S !== null; )
              S.alternate !== null && (D = S), S = S.sibling;
            D === null ? g.tail = null : D.sibling = null;
            break;
          case "collapsed":
            D = g.tail;
            for (var z = null; D !== null; )
              D.alternate !== null && (z = D), D = D.sibling;
            z === null ? S || g.tail === null ? g.tail = null : g.tail.sibling = null : z.sibling = null;
        }
    }
    function Di(g) {
      var S = g.alternate !== null && g.alternate.child === g.child, D = 0, z = 0;
      if (S)
        for (var W = g.child; W !== null; )
          D |= W.lanes | W.childLanes, z |= W.subtreeFlags & 14680064, z |= W.flags & 14680064, W.return = g, W = W.sibling;
      else
        for (W = g.child; W !== null; )
          D |= W.lanes | W.childLanes, z |= W.subtreeFlags, z |= W.flags, W.return = g, W = W.sibling;
      return g.subtreeFlags |= z, g.childLanes = D, S;
    }
    function ir(g, S, D) {
      var z = S.pendingProps;
      switch (Wa(S), S.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
          return Di(S), null;
        case 1:
          return Ai(S.type) && Ea(), Di(S), null;
        case 3:
          return z = S.stateNode, Ld(), br(Kr), br(ha), Sl(), z.pendingContext && (z.context = z.pendingContext, z.pendingContext = null), (g === null || g.child === null) && (vp(S) ? lo(S) : g === null || g.memoizedState.isDehydrated && !(S.flags & 256) || (S.flags |= 1024, as !== null && (Bt(as), as = null))), Gf(g, S), Di(S), null;
        case 5:
          Vl(S), D = yu(Qc.current);
          var W = S.type;
          if (g !== null && S.stateNode != null)
            Wf(g, S, W, z, D), g.ref !== S.ref && (S.flags |= 512, S.flags |= 2097152);
          else {
            if (!z) {
              if (S.stateNode === null)
                throw Error(l(166));
              return Di(S), null;
            }
            if (g = yu(Cs.current), vp(S)) {
              if (!rt)
                throw Error(l(175));
              g = pn(S.stateNode, S.type, S.memoizedProps, D, g, S, !Md), S.updateQueue = g, g !== null && lo(S);
            } else {
              var te = q(W, z, D, g, S);
              Zs(te, S, !1, !1), S.stateNode = te, Ce(te, W, z, D, g) && lo(S);
            }
            S.ref !== null && (S.flags |= 512, S.flags |= 2097152);
          }
          return Di(S), null;
        case 6:
          if (g && S.stateNode != null)
            Id(g, S, g.memoizedProps, z);
          else {
            if (typeof z != "string" && S.stateNode === null)
              throw Error(l(166));
            if (g = yu(Qc.current), D = yu(Cs.current), vp(S)) {
              if (!rt)
                throw Error(l(176));
              if (g = S.stateNode, z = S.memoizedProps, (D = _e(g, z, S, !Md)) && (W = Fa, W !== null))
                switch (te = (W.mode & 1) !== 0, W.tag) {
                  case 3:
                    zn(W.stateNode.containerInfo, g, z, te);
                    break;
                  case 5:
                    pr(W.type, W.memoizedProps, W.stateNode, g, z, te);
                }
              D && lo(S);
            } else
              S.stateNode = Ne(z, g, D, S);
          }
          return Di(S), null;
        case 13:
          if (br(va), z = S.memoizedState, ea && za !== null && S.mode & 1 && !(S.flags & 128)) {
            for (g = za; g; )
              g = fi(g);
            return Rd(), S.flags |= 98560, S;
          }
          if (z !== null && z.dehydrated !== null) {
            if (z = vp(S), g === null) {
              if (!z)
                throw Error(l(318));
              if (!rt)
                throw Error(l(344));
              if (g = S.memoizedState, g = g !== null ? g.dehydrated : null, !g)
                throw Error(l(317));
              Qe(g, S);
            } else
              Rd(), !(S.flags & 128) && (S.memoizedState = null), S.flags |= 4;
            return Di(S), null;
          }
          return as !== null && (Bt(as), as = null), S.flags & 128 ? (S.lanes = D, S) : (z = z !== null, D = !1, g === null ? vp(S) : D = g.memoizedState !== null, z && !D && (S.child.flags |= 8192, S.mode & 1 && (g === null || va.current & 1 ? xo === 0 && (xo = 3) : ff())), S.updateQueue !== null && (S.flags |= 4), Di(S), null);
        case 4:
          return Ld(), Gf(g, S), g === null && $e(S.stateNode.containerInfo), Di(S), null;
        case 10:
          return Jn(S.type._context), Di(S), null;
        case 17:
          return Ai(S.type) && Ea(), Di(S), null;
        case 19:
          if (br(va), W = S.memoizedState, W === null)
            return Di(S), null;
          if (z = (S.flags & 128) !== 0, te = W.rendering, te === null)
            if (z)
              Js(W, !1);
            else {
              if (xo !== 0 || g !== null && g.flags & 128)
                for (g = S.child; g !== null; ) {
                  if (te = Od(g), te !== null) {
                    for (S.flags |= 128, Js(W, !1), g = te.updateQueue, g !== null && (S.updateQueue = g, S.flags |= 4), S.subtreeFlags = 0, g = D, z = S.child; z !== null; )
                      D = z, W = g, D.flags &= 14680066, te = D.alternate, te === null ? (D.childLanes = 0, D.lanes = W, D.child = null, D.subtreeFlags = 0, D.memoizedProps = null, D.memoizedState = null, D.updateQueue = null, D.dependencies = null, D.stateNode = null) : (D.childLanes = te.childLanes, D.lanes = te.lanes, D.child = te.child, D.subtreeFlags = 0, D.deletions = null, D.memoizedProps = te.memoizedProps, D.memoizedState = te.memoizedState, D.updateQueue = te.updateQueue, D.type = te.type, W = te.dependencies, D.dependencies = W === null ? null : { lanes: W.lanes, firstContext: W.firstContext }), z = z.sibling;
                    return hr(va, va.current & 1 | 2), S.child;
                  }
                  g = g.sibling;
                }
              W.tail !== null && Qr() > Kf && (S.flags |= 128, z = !0, Js(W, !1), S.lanes = 4194304);
            }
          else {
            if (!z)
              if (g = Od(te), g !== null) {
                if (S.flags |= 128, z = !0, g = g.updateQueue, g !== null && (S.updateQueue = g, S.flags |= 4), Js(W, !0), W.tail === null && W.tailMode === "hidden" && !te.alternate && !ea)
                  return Di(S), null;
              } else
                2 * Qr() - W.renderingStartTime > Kf && D !== 1073741824 && (S.flags |= 128, z = !0, Js(W, !1), S.lanes = 4194304);
            W.isBackwards ? (te.sibling = S.child, S.child = te) : (g = W.last, g !== null ? g.sibling = te : S.child = te, W.last = te);
          }
          return W.tail !== null ? (S = W.tail, W.rendering = S, W.tail = S.sibling, W.renderingStartTime = Qr(), S.sibling = null, g = va.current, hr(va, z ? g & 1 | 2 : g & 1), S) : (Di(S), null);
        case 22:
        case 23:
          return Yo(), z = S.memoizedState !== null, g !== null && g.memoizedState !== null !== z && (S.flags |= 8192), z && S.mode & 1 ? nl & 1073741824 && (Di(S), st && S.subtreeFlags & 6 && (S.flags |= 8192)) : Di(S), null;
        case 24:
          return null;
        case 25:
          return null;
      }
      throw Error(l(156, S.tag));
    }
    var Li = u.ReactCurrentOwner, Jr = !1;
    function Yn(g, S, D, z) {
      S.child = g === null ? gp(S, null, D, z) : Hu(S, g.child, D, z);
    }
    function hi(g, S, D, z, W) {
      D = D.render;
      var te = S.ref;
      return Mr(S, W), z = Jc(g, S, D, z, te, W), D = Vu(), g !== null && !Jr ? (S.updateQueue = g.updateQueue, S.flags &= -2053, g.lanes &= ~W, Mi(g, S, W)) : (ea && D && Bu(S), S.flags |= 1, Yn(g, S, z, W), S.child);
    }
    function wi(g, S, D, z, W) {
      if (g === null) {
        var te = D.type;
        return typeof te == "function" && !Qu(te) && te.defaultProps === void 0 && D.compare === null && D.defaultProps === void 0 ? (S.tag = 15, S.type = te, $u(g, S, te, z, W)) : (g = hf(D.type, null, z, S, S.mode, W), g.ref = S.ref, g.return = S, S.child = g);
      }
      if (te = g.child, !(g.lanes & W)) {
        var Le = te.memoizedProps;
        if (D = D.compare, D = D !== null ? D : is, D(Le, z) && g.ref === S.ref)
          return Mi(g, S, W);
      }
      return S.flags |= 1, g = ls(te, z), g.ref = S.ref, g.return = S, S.child = g;
    }
    function $u(g, S, D, z, W) {
      if (g !== null && is(g.memoizedProps, z) && g.ref === S.ref)
        if (Jr = !1, (g.lanes & W) !== 0)
          g.flags & 131072 && (Jr = !0);
        else
          return S.lanes = g.lanes, Mi(g, S, W);
      return Rs(g, S, D, z, W);
    }
    function xr(g, S, D) {
      var z = S.pendingProps, W = z.children, te = g !== null ? g.memoizedState : null;
      if (z.mode === "hidden")
        if (!(S.mode & 1))
          S.memoizedState = { baseLanes: 0, cachePool: null }, hr(of, nl), nl |= D;
        else if (D & 1073741824)
          S.memoizedState = { baseLanes: 0, cachePool: null }, z = te !== null ? te.baseLanes : D, hr(of, nl), nl |= z;
        else
          return g = te !== null ? te.baseLanes | D : D, S.lanes = S.childLanes = 1073741824, S.memoizedState = { baseLanes: g, cachePool: null }, S.updateQueue = null, hr(of, nl), nl |= g, null;
      else
        te !== null ? (z = te.baseLanes | D, S.memoizedState = null) : z = D, hr(of, nl), nl |= z;
      return Yn(g, S, W, D), S.child;
    }
    function Ia(g, S) {
      var D = S.ref;
      (g === null && D !== null || g !== null && g.ref !== D) && (S.flags |= 512, S.flags |= 2097152);
    }
    function Rs(g, S, D, z, W) {
      var te = Ai(D) ? Co : ha.current;
      return te = Ri(S, te), Mr(S, W), D = Jc(g, S, D, z, te, W), z = Vu(), g !== null && !Jr ? (S.updateQueue = g.updateQueue, S.flags &= -2053, g.lanes &= ~W, Mi(g, S, W)) : (ea && z && Bu(S), S.flags |= 1, Yn(g, S, D, W), S.child);
    }
    function el(g, S, D, z, W) {
      if (Ai(D)) {
        var te = !0;
        Ro(S);
      } else
        te = !1;
      if (Mr(S, W), S.stateNode === null)
        g !== null && (g.alternate = null, S.alternate = null, S.flags |= 2), _m(S, D, z), xm(S, D, z, W), z = !0;
      else if (g === null) {
        var Le = S.stateNode, nt = S.memoizedProps;
        Le.props = nt;
        var It = Le.context, on = D.contextType;
        typeof on == "object" && on !== null ? on = _r(on) : (on = Ai(D) ? Co : ha.current, on = Ri(S, on));
        var mn = D.getDerivedStateFromProps, yr = typeof mn == "function" || typeof Le.getSnapshotBeforeUpdate == "function";
        yr || typeof Le.UNSAFE_componentWillReceiveProps != "function" && typeof Le.componentWillReceiveProps != "function" || (nt !== z || It !== on) && Cv(S, Le, z, on), vi = !1;
        var sr = S.memoizedState;
        Le.state = sr, Nf(S, z, Le, W), It = S.memoizedState, nt !== z || sr !== It || Kr.current || vi ? (typeof mn == "function" && (gm(S, D, mn, z), It = S.memoizedState), (nt = vi || Sm(S, D, nt, z, sr, It, on)) ? (yr || typeof Le.UNSAFE_componentWillMount != "function" && typeof Le.componentWillMount != "function" || (typeof Le.componentWillMount == "function" && Le.componentWillMount(), typeof Le.UNSAFE_componentWillMount == "function" && Le.UNSAFE_componentWillMount()), typeof Le.componentDidMount == "function" && (S.flags |= 4194308)) : (typeof Le.componentDidMount == "function" && (S.flags |= 4194308), S.memoizedProps = z, S.memoizedState = It), Le.props = z, Le.state = It, Le.context = on, z = nt) : (typeof Le.componentDidMount == "function" && (S.flags |= 4194308), z = !1);
      } else {
        Le = S.stateNode, Hl(g, S), nt = S.memoizedProps, on = S.type === S.elementType ? nt : Ie(S.type, nt), Le.props = on, yr = S.pendingProps, sr = Le.context, It = D.contextType, typeof It == "object" && It !== null ? It = _r(It) : (It = Ai(D) ? Co : ha.current, It = Ri(S, It));
        var ca = D.getDerivedStateFromProps;
        (mn = typeof ca == "function" || typeof Le.getSnapshotBeforeUpdate == "function") || typeof Le.UNSAFE_componentWillReceiveProps != "function" && typeof Le.componentWillReceiveProps != "function" || (nt !== yr || sr !== It) && Cv(S, Le, z, It), vi = !1, sr = S.memoizedState, Le.state = sr, Nf(S, z, Le, W);
        var xn = S.memoizedState;
        nt !== yr || sr !== xn || Kr.current || vi ? (typeof ca == "function" && (gm(S, D, ca, z), xn = S.memoizedState), (on = vi || Sm(S, D, on, z, sr, xn, It) || !1) ? (mn || typeof Le.UNSAFE_componentWillUpdate != "function" && typeof Le.componentWillUpdate != "function" || (typeof Le.componentWillUpdate == "function" && Le.componentWillUpdate(
          z,
          xn,
          It
        ), typeof Le.UNSAFE_componentWillUpdate == "function" && Le.UNSAFE_componentWillUpdate(z, xn, It)), typeof Le.componentDidUpdate == "function" && (S.flags |= 4), typeof Le.getSnapshotBeforeUpdate == "function" && (S.flags |= 1024)) : (typeof Le.componentDidUpdate != "function" || nt === g.memoizedProps && sr === g.memoizedState || (S.flags |= 4), typeof Le.getSnapshotBeforeUpdate != "function" || nt === g.memoizedProps && sr === g.memoizedState || (S.flags |= 1024), S.memoizedProps = z, S.memoizedState = xn), Le.props = z, Le.state = xn, Le.context = It, z = on) : (typeof Le.componentDidUpdate != "function" || nt === g.memoizedProps && sr === g.memoizedState || (S.flags |= 4), typeof Le.getSnapshotBeforeUpdate != "function" || nt === g.memoizedProps && sr === g.memoizedState || (S.flags |= 1024), z = !1);
      }
      return ga(g, S, D, z, te, W);
    }
    function ga(g, S, D, z, W, te) {
      Ia(g, S);
      var Le = (S.flags & 128) !== 0;
      if (!z && !Le)
        return W && Ra(S, D, !1), Mi(g, S, te);
      z = S.stateNode, Li.current = S;
      var nt = Le && typeof D.getDerivedStateFromError != "function" ? null : z.render();
      return S.flags |= 1, g !== null && Le ? (S.child = Hu(S, g.child, null, te), S.child = Hu(S, null, nt, te)) : Yn(g, S, nt, te), S.memoizedState = z.state, W && Ra(S, D, !0), S.child;
    }
    function tl(g) {
      var S = g.stateNode;
      S.pendingContext ? bi(g, S.pendingContext, S.pendingContext !== S.context) : S.context && bi(g, S.context, !1), yp(g, S.containerInfo);
    }
    function _c(g, S, D, z, W) {
      return Rd(), Sh(W), S.flags |= 256, Yn(g, S, D, z), S.child;
    }
    var jf = { dehydrated: null, treeContext: null, retryLane: 0 };
    function xc(g) {
      return { baseLanes: g, cachePool: null };
    }
    function Av(g, S, D) {
      var z = S.pendingProps, W = va.current, te = !1, Le = (S.flags & 128) !== 0, nt;
      if ((nt = Le) || (nt = g !== null && g.memoizedState === null ? !1 : (W & 2) !== 0), nt ? (te = !0, S.flags &= -129) : (g === null || g.memoizedState !== null) && (W |= 1), hr(va, W & 1), g === null)
        return qc(S), g = S.memoizedState, g !== null && (g = g.dehydrated, g !== null) ? (S.mode & 1 ? Or(g) ? S.lanes = 8 : S.lanes = 1073741824 : S.lanes = 1, null) : (W = z.children, g = z.fallback, te ? (z = S.mode, te = S.child, W = { mode: "hidden", children: W }, !(z & 1) && te !== null ? (te.childLanes = 0, te.pendingProps = W) : te = ed(W, z, 0, null), g = Kl(g, z, D, null), te.return = S, g.return = S, te.sibling = g, S.child = te, S.child.memoizedState = xc(D), S.memoizedState = jf, g) : As(S, W));
      if (W = g.memoizedState, W !== null) {
        if (nt = W.dehydrated, nt !== null) {
          if (Le)
            return S.flags & 256 ? (S.flags &= -257, xu(g, S, D, Error(l(422)))) : S.memoizedState !== null ? (S.child = g.child, S.flags |= 128, null) : (te = z.fallback, W = S.mode, z = ed({ mode: "visible", children: z.children }, W, 0, null), te = Kl(te, W, D, null), te.flags |= 2, z.return = S, te.return = S, z.sibling = te, S.child = z, S.mode & 1 && Hu(
              S,
              g.child,
              null,
              D
            ), S.child.memoizedState = xc(D), S.memoizedState = jf, te);
          if (!(S.mode & 1))
            S = xu(g, S, D, null);
          else if (Or(nt))
            S = xu(g, S, D, Error(l(419)));
          else if (z = (D & g.childLanes) !== 0, Jr || z) {
            if (z = ua, z !== null) {
              switch (D & -D) {
                case 4:
                  te = 2;
                  break;
                case 16:
                  te = 8;
                  break;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                  te = 32;
                  break;
                case 536870912:
                  te = 268435456;
                  break;
                default:
                  te = 0;
              }
              z = te & (z.suspendedLanes | D) ? 0 : te, z !== 0 && z !== W.retryLane && (W.retryLane = z, il(g, z, -1));
            }
            ff(), S = xu(g, S, D, Error(l(421)));
          } else
            Gr(nt) ? (S.flags |= 128, S.child = g.child, S = Nm.bind(null, g), Ui(nt, S), S = null) : (D = W.treeContext, rt && (za = Jt(nt), Fa = S, ea = !0, as = null, Md = !1, D !== null && (yl[Ys++] = Xc, yl[Ys++] = gu, yl[Ys++] = Yc, Xc = D.id, gu = D.overflow, Yc = S)), S = As(S, S.pendingProps.children), S.flags |= 4096);
          return S;
        }
        return te ? (z = wh(g, S, z.children, z.fallback, D), te = S.child, W = g.child.memoizedState, te.memoizedState = W === null ? xc(D) : { baseLanes: W.baseLanes | D, cachePool: null }, te.childLanes = g.childLanes & ~D, S.memoizedState = jf, z) : (D = Uo(g, S, z.children, D), S.memoizedState = null, D);
      }
      return te ? (z = wh(g, S, z.children, z.fallback, D), te = S.child, W = g.child.memoizedState, te.memoizedState = W === null ? xc(D) : { baseLanes: W.baseLanes | D, cachePool: null }, te.childLanes = g.childLanes & ~D, S.memoizedState = jf, z) : (D = Uo(g, S, z.children, D), S.memoizedState = null, D);
    }
    function As(g, S) {
      return S = ed({ mode: "visible", children: S }, g.mode, 0, null), S.return = g, g.child = S;
    }
    function Uo(g, S, D, z) {
      var W = g.child;
      return g = W.sibling, D = ls(W, { mode: "visible", children: D }), !(S.mode & 1) && (D.lanes = z), D.return = S, D.sibling = null, g !== null && (z = S.deletions, z === null ? (S.deletions = [g], S.flags |= 16) : z.push(g)), S.child = D;
    }
    function wh(g, S, D, z, W) {
      var te = S.mode;
      g = g.child;
      var Le = g.sibling, nt = { mode: "hidden", children: D };
      return !(te & 1) && S.child !== g ? (D = S.child, D.childLanes = 0, D.pendingProps = nt, S.deletions = null) : (D = ls(g, nt), D.subtreeFlags = g.subtreeFlags & 14680064), Le !== null ? z = ls(Le, z) : (z = Kl(z, te, W, null), z.flags |= 2), z.return = S, D.return = S, D.sibling = z, S.child = D, z;
    }
    function xu(g, S, D, z) {
      return z !== null && Sh(z), Hu(S, g.child, null, D), g = As(S, S.pendingProps.children), g.flags |= 2, S.memoizedState = null, g;
    }
    function $f(g, S, D) {
      g.lanes |= S;
      var z = g.alternate;
      z !== null && (z.lanes |= S), Tr(g.return, S, D);
    }
    function $a(g, S, D, z, W) {
      var te = g.memoizedState;
      te === null ? g.memoizedState = { isBackwards: S, rendering: null, renderingStartTime: 0, last: z, tail: D, tailMode: W } : (te.isBackwards = S, te.rendering = null, te.renderingStartTime = 0, te.last = z, te.tail = D, te.tailMode = W);
    }
    function Yu(g, S, D) {
      var z = S.pendingProps, W = z.revealOrder, te = z.tail;
      if (Yn(g, S, z.children, D), z = va.current, z & 2)
        z = z & 1 | 2, S.flags |= 128;
      else {
        if (g !== null && g.flags & 128)
          e:
            for (g = S.child; g !== null; ) {
              if (g.tag === 13)
                g.memoizedState !== null && $f(g, D, S);
              else if (g.tag === 19)
                $f(g, D, S);
              else if (g.child !== null) {
                g.child.return = g, g = g.child;
                continue;
              }
              if (g === S)
                break e;
              for (; g.sibling === null; ) {
                if (g.return === null || g.return === S)
                  break e;
                g = g.return;
              }
              g.sibling.return = g.return, g = g.sibling;
            }
        z &= 1;
      }
      if (hr(va, z), !(S.mode & 1))
        S.memoizedState = null;
      else
        switch (W) {
          case "forwards":
            for (D = S.child, W = null; D !== null; )
              g = D.alternate, g !== null && Od(g) === null && (W = D), D = D.sibling;
            D = W, D === null ? (W = S.child, S.child = null) : (W = D.sibling, D.sibling = null), $a(S, !1, W, D, te);
            break;
          case "backwards":
            for (D = null, W = S.child, S.child = null; W !== null; ) {
              if (g = W.alternate, g !== null && Od(g) === null) {
                S.child = W;
                break;
              }
              g = W.sibling, W.sibling = D, D = W, W = g;
            }
            $a(S, !0, D, null, te);
            break;
          case "together":
            $a(S, !1, null, null, void 0);
            break;
          default:
            S.memoizedState = null;
        }
      return S.child;
    }
    function Mi(g, S, D) {
      if (g !== null && (S.dependencies = g.dependencies), qu |= S.lanes, !(D & S.childLanes))
        return null;
      if (g !== null && S.child !== g.child)
        throw Error(l(153));
      if (S.child !== null) {
        for (g = S.child, D = ls(g, g.pendingProps), S.child = D, D.return = S; g.sibling !== null; )
          g = g.sibling, D = D.sibling = ls(g, g.pendingProps), D.return = S;
        D.sibling = null;
      }
      return S.child;
    }
    function Eu(g, S, D) {
      switch (S.tag) {
        case 3:
          tl(S), Rd();
          break;
        case 5:
          Sp(S);
          break;
        case 1:
          Ai(S.type) && Ro(S);
          break;
        case 4:
          yp(S, S.stateNode.containerInfo);
          break;
        case 10:
          Zn(S, S.type._context, S.memoizedProps.value);
          break;
        case 13:
          var z = S.memoizedState;
          if (z !== null)
            return z.dehydrated !== null ? (hr(va, va.current & 1), S.flags |= 128, null) : D & S.child.childLanes ? Av(g, S, D) : (hr(va, va.current & 1), g = Mi(g, S, D), g !== null ? g.sibling : null);
          hr(va, va.current & 1);
          break;
        case 19:
          if (z = (D & S.childLanes) !== 0, g.flags & 128) {
            if (z)
              return Yu(
                g,
                S,
                D
              );
            S.flags |= 128;
          }
          var W = S.memoizedState;
          if (W !== null && (W.rendering = null, W.tail = null, W.lastEffect = null), hr(va, va.current), z)
            break;
          return null;
        case 22:
        case 23:
          return S.lanes = 0, xr(g, S, D);
      }
      return Mi(g, S, D);
    }
    function Rr(g, S) {
      switch (Wa(S), S.tag) {
        case 1:
          return Ai(S.type) && Ea(), g = S.flags, g & 65536 ? (S.flags = g & -65537 | 128, S) : null;
        case 3:
          return Ld(), br(Kr), br(ha), Sl(), g = S.flags, g & 65536 && !(g & 128) ? (S.flags = g & -65537 | 128, S) : null;
        case 5:
          return Vl(S), null;
        case 13:
          if (br(va), g = S.memoizedState, g !== null && g.dehydrated !== null) {
            if (S.alternate === null)
              throw Error(l(340));
            Rd();
          }
          return g = S.flags, g & 65536 ? (S.flags = g & -65537 | 128, S) : null;
        case 19:
          return br(va), null;
        case 4:
          return Ld(), null;
        case 10:
          return Jn(S.type._context), null;
        case 22:
        case 23:
          return Yo(), null;
        case 24:
          return null;
        default:
          return null;
      }
    }
    var So = !1, Ba = !1, Xu = typeof WeakSet == "function" ? WeakSet : Set, cn = null;
    function xl(g, S) {
      var D = g.ref;
      if (D !== null)
        if (typeof D == "function")
          try {
            D(null);
          } catch (z) {
            Ci(g, S, z);
          }
        else
          D.current = null;
    }
    function No(g, S, D) {
      try {
        D();
      } catch (z) {
        Ci(g, S, z);
      }
    }
    var Am = !1;
    function Tp(g, S) {
      for (ye(g.containerInfo), cn = S; cn !== null; )
        if (g = cn, S = g.child, (g.subtreeFlags & 1028) !== 0 && S !== null)
          S.return = g, cn = S;
        else
          for (; cn !== null; ) {
            g = cn;
            try {
              var D = g.alternate;
              if (g.flags & 1024)
                switch (g.tag) {
                  case 0:
                  case 11:
                  case 15:
                    break;
                  case 1:
                    if (D !== null) {
                      var z = D.memoizedProps, W = D.memoizedState, te = g.stateNode, Le = te.getSnapshotBeforeUpdate(g.elementType === g.type ? z : Ie(g.type, z), W);
                      te.__reactInternalSnapshotBeforeUpdate = Le;
                    }
                    break;
                  case 3:
                    st && dt(g.stateNode.containerInfo);
                    break;
                  case 5:
                  case 6:
                  case 4:
                  case 17:
                    break;
                  default:
                    throw Error(l(163));
                }
            } catch (nt) {
              Ci(g, g.return, nt);
            }
            if (S = g.sibling, S !== null) {
              S.return = g.return, cn = S;
              break;
            }
            cn = g.return;
          }
      return D = Am, Am = !1, D;
    }
    function nf(g, S, D) {
      var z = S.updateQueue;
      if (z = z !== null ? z.lastEffect : null, z !== null) {
        var W = z = z.next;
        do {
          if ((W.tag & g) === g) {
            var te = W.destroy;
            W.destroy = void 0, te !== void 0 && No(S, D, te);
          }
          W = W.next;
        } while (W !== z);
      }
    }
    function ko(g, S) {
      if (S = S.updateQueue, S = S !== null ? S.lastEffect : null, S !== null) {
        var D = S = S.next;
        do {
          if ((D.tag & g) === g) {
            var z = D.create;
            D.destroy = z();
          }
          D = D.next;
        } while (D !== S);
      }
    }
    function Ds(g) {
      var S = g.ref;
      if (S !== null) {
        var D = g.stateNode;
        switch (g.tag) {
          case 5:
            g = be(D);
            break;
          default:
            g = D;
        }
        typeof S == "function" ? S(g) : S.current = g;
      }
    }
    function la(g, S, D) {
      if (ws && typeof ws.onCommitFiberUnmount == "function")
        try {
          ws.onCommitFiberUnmount(vl, S);
        } catch {
        }
      switch (S.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          if (g = S.updateQueue, g !== null && (g = g.lastEffect, g !== null)) {
            var z = g = g.next;
            do {
              var W = z, te = W.destroy;
              W = W.tag, te !== void 0 && (W & 2 || W & 4) && No(S, D, te), z = z.next;
            } while (z !== g);
          }
          break;
        case 1:
          if (xl(S, D), g = S.stateNode, typeof g.componentWillUnmount == "function")
            try {
              g.props = S.memoizedProps, g.state = S.memoizedState, g.componentWillUnmount();
            } catch (Le) {
              Ci(
                S,
                D,
                Le
              );
            }
          break;
        case 5:
          xl(S, D);
          break;
        case 4:
          st ? _o(g, S, D) : oe && oe && (S = S.stateNode.containerInfo, D = Un(S), En(S, D));
      }
    }
    function El(g, S, D) {
      for (var z = S; ; )
        if (la(g, z, D), z.child === null || st && z.tag === 4) {
          if (z === S)
            break;
          for (; z.sibling === null; ) {
            if (z.return === null || z.return === S)
              return;
            z = z.return;
          }
          z.sibling.return = z.return, z = z.sibling;
        } else
          z.child.return = z, z = z.child;
    }
    function $l(g) {
      var S = g.alternate;
      S !== null && (g.alternate = null, $l(S)), g.child = null, g.deletions = null, g.sibling = null, g.tag === 5 && (S = g.stateNode, S !== null && zt(S)), g.stateNode = null, g.return = null, g.dependencies = null, g.memoizedProps = null, g.memoizedState = null, g.pendingProps = null, g.stateNode = null, g.updateQueue = null;
    }
    function Bd(g) {
      return g.tag === 5 || g.tag === 3 || g.tag === 4;
    }
    function rf(g) {
      e:
        for (; ; ) {
          for (; g.sibling === null; ) {
            if (g.return === null || Bd(g.return))
              return null;
            g = g.return;
          }
          for (g.sibling.return = g.return, g = g.sibling; g.tag !== 5 && g.tag !== 6 && g.tag !== 18; ) {
            if (g.flags & 2 || g.child === null || g.tag === 4)
              continue e;
            g.child.return = g, g = g.child;
          }
          if (!(g.flags & 2))
            return g.stateNode;
        }
    }
    function Hd(g) {
      if (st) {
        e: {
          for (var S = g.return; S !== null; ) {
            if (Bd(S))
              break e;
            S = S.return;
          }
          throw Error(l(160));
        }
        var D = S;
        switch (D.tag) {
          case 5:
            S = D.stateNode, D.flags & 32 && (tt(S), D.flags &= -33), D = rf(g), Ls(g, D, S);
            break;
          case 3:
          case 4:
            S = D.stateNode.containerInfo, D = rf(g), Yf(g, D, S);
            break;
          default:
            throw Error(l(161));
        }
      }
    }
    function Yf(g, S, D) {
      var z = g.tag;
      if (z === 5 || z === 6)
        g = g.stateNode, S ? Et(D, g, S) : Yt(D, g);
      else if (z !== 4 && (g = g.child, g !== null))
        for (Yf(g, S, D), g = g.sibling; g !== null; )
          Yf(g, S, D), g = g.sibling;
    }
    function Ls(g, S, D) {
      var z = g.tag;
      if (z === 5 || z === 6)
        g = g.stateNode, S ? ft(D, g, S) : lt(D, g);
      else if (z !== 4 && (g = g.child, g !== null))
        for (Ls(g, S, D), g = g.sibling; g !== null; )
          Ls(g, S, D), g = g.sibling;
    }
    function _o(g, S, D) {
      for (var z = S, W = !1, te, Le; ; ) {
        if (!W) {
          W = z.return;
          e:
            for (; ; ) {
              if (W === null)
                throw Error(l(160));
              switch (te = W.stateNode, W.tag) {
                case 5:
                  Le = !1;
                  break e;
                case 3:
                  te = te.containerInfo, Le = !0;
                  break e;
                case 4:
                  te = te.containerInfo, Le = !0;
                  break e;
              }
              W = W.return;
            }
          W = !0;
        }
        if (z.tag === 5 || z.tag === 6)
          El(g, z, D), Le ? Te(te, z.stateNode) : Ze(te, z.stateNode);
        else if (z.tag === 18)
          Le ? vn(te, z.stateNode) : sn(te, z.stateNode);
        else if (z.tag === 4) {
          if (z.child !== null) {
            te = z.stateNode.containerInfo, Le = !0, z.child.return = z, z = z.child;
            continue;
          }
        } else if (la(g, z, D), z.child !== null) {
          z.child.return = z, z = z.child;
          continue;
        }
        if (z === S)
          break;
        for (; z.sibling === null; ) {
          if (z.return === null || z.return === S)
            return;
          z = z.return, z.tag === 4 && (W = !1);
        }
        z.sibling.return = z.return, z = z.sibling;
      }
    }
    function Ta(g, S) {
      if (st) {
        switch (S.tag) {
          case 0:
          case 11:
          case 14:
          case 15:
            nf(3, S, S.return), ko(3, S), nf(5, S, S.return);
            return;
          case 1:
            return;
          case 5:
            var D = S.stateNode;
            if (D != null) {
              var z = S.memoizedProps;
              g = g !== null ? g.memoizedProps : z;
              var W = S.type, te = S.updateQueue;
              S.updateQueue = null, te !== null && We(D, te, W, g, z, S);
            }
            return;
          case 6:
            if (S.stateNode === null)
              throw Error(l(162));
            D = S.memoizedProps, Nt(S.stateNode, g !== null ? g.memoizedProps : D, D);
            return;
          case 3:
            rt && g !== null && g.memoizedState.isDehydrated && je(S.stateNode.containerInfo);
            return;
          case 12:
            return;
          case 13:
            Mh(S);
            return;
          case 19:
            Mh(S);
            return;
          case 17:
            return;
        }
        throw Error(l(163));
      }
      switch (S.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          nf(3, S, S.return), ko(3, S), nf(5, S, S.return);
          return;
        case 12:
          return;
        case 13:
          Mh(S);
          return;
        case 19:
          Mh(S);
          return;
        case 3:
          rt && g !== null && g.memoizedState.isDehydrated && je(S.stateNode.containerInfo);
          break;
        case 22:
        case 23:
          return;
      }
      e:
        if (oe) {
          switch (S.tag) {
            case 1:
            case 5:
            case 6:
              break e;
            case 3:
            case 4:
              S = S.stateNode, En(S.containerInfo, S.pendingChildren);
              break e;
          }
          throw Error(l(163));
        }
    }
    function Mh(g) {
      var S = g.updateQueue;
      if (S !== null) {
        g.updateQueue = null;
        var D = g.stateNode;
        D === null && (D = g.stateNode = new Xu()), S.forEach(function(z) {
          var W = Xl.bind(null, g, z);
          D.has(z) || (D.add(z), z.then(W, W));
        });
      }
    }
    function Dm(g, S) {
      for (cn = S; cn !== null; ) {
        S = cn;
        var D = S.deletions;
        if (D !== null)
          for (var z = 0; z < D.length; z++) {
            var W = D[z];
            try {
              var te = g;
              st ? _o(te, W, S) : El(te, W, S);
              var Le = W.alternate;
              Le !== null && (Le.return = null), W.return = null;
            } catch (Nn) {
              Ci(W, S, Nn);
            }
          }
        if (D = S.child, S.subtreeFlags & 12854 && D !== null)
          D.return = S, cn = D;
        else
          for (; cn !== null; ) {
            S = cn;
            try {
              var nt = S.flags;
              if (nt & 32 && st && tt(S.stateNode), nt & 512) {
                var It = S.alternate;
                if (It !== null) {
                  var on = It.ref;
                  on !== null && (typeof on == "function" ? on(null) : on.current = null);
                }
              }
              if (nt & 8192)
                switch (S.tag) {
                  case 13:
                    if (S.memoizedState !== null) {
                      var mn = S.alternate;
                      (mn === null || mn.memoizedState === null) && (Pm = Qr());
                    }
                    break;
                  case 22:
                    var yr = S.memoizedState !== null, sr = S.alternate, ca = sr !== null && sr.memoizedState !== null;
                    if (D = S, st) {
                      e:
                        if (z = D, W = yr, te = null, st)
                          for (var xn = z; ; ) {
                            if (xn.tag === 5) {
                              if (te === null) {
                                te = xn;
                                var Si = xn.stateNode;
                                W ? pt(Si) : Pt(xn.stateNode, xn.memoizedProps);
                              }
                            } else if (xn.tag === 6) {
                              if (te === null) {
                                var qa = xn.stateNode;
                                W ? ve(qa) : He(qa, xn.memoizedProps);
                              }
                            } else if ((xn.tag !== 22 && xn.tag !== 23 || xn.memoizedState === null || xn === z) && xn.child !== null) {
                              xn.child.return = xn, xn = xn.child;
                              continue;
                            }
                            if (xn === z)
                              break;
                            for (; xn.sibling === null; ) {
                              if (xn.return === null || xn.return === z)
                                break e;
                              te === xn && (te = null), xn = xn.return;
                            }
                            te === xn && (te = null), xn.sibling.return = xn.return, xn = xn.sibling;
                          }
                    }
                    if (yr && !ca && D.mode & 1) {
                      cn = D;
                      for (var _t = D.child; _t !== null; ) {
                        for (D = cn = _t; cn !== null; ) {
                          z = cn;
                          var Xe = z.child;
                          switch (z.tag) {
                            case 0:
                            case 11:
                            case 14:
                            case 15:
                              nf(4, z, z.return);
                              break;
                            case 1:
                              xl(z, z.return);
                              var Lt = z.stateNode;
                              if (typeof Lt.componentWillUnmount == "function") {
                                var Xt = z.return;
                                try {
                                  Lt.props = z.memoizedProps, Lt.state = z.memoizedState, Lt.componentWillUnmount();
                                } catch (Nn) {
                                  Ci(
                                    z,
                                    Xt,
                                    Nn
                                  );
                                }
                              }
                              break;
                            case 5:
                              xl(z, z.return);
                              break;
                            case 22:
                              if (z.memoizedState !== null) {
                                af(D);
                                continue;
                              }
                          }
                          Xe !== null ? (Xe.return = z, cn = Xe) : af(D);
                        }
                        _t = _t.sibling;
                      }
                    }
                }
              switch (nt & 4102) {
                case 2:
                  Hd(S), S.flags &= -3;
                  break;
                case 6:
                  Hd(S), S.flags &= -3, Ta(S.alternate, S);
                  break;
                case 4096:
                  S.flags &= -4097;
                  break;
                case 4100:
                  S.flags &= -4097, Ta(S.alternate, S);
                  break;
                case 4:
                  Ta(S.alternate, S);
              }
            } catch (Nn) {
              Ci(S, S.return, Nn);
            }
            if (D = S.sibling, D !== null) {
              D.return = S.return, cn = D;
              break;
            }
            cn = S.return;
          }
      }
    }
    function bl(g, S, D) {
      cn = g, bu(g);
    }
    function bu(g, S, D) {
      for (var z = (g.mode & 1) !== 0; cn !== null; ) {
        var W = cn, te = W.child;
        if (W.tag === 22 && z) {
          var Le = W.memoizedState !== null || So;
          if (!Le) {
            var nt = W.alternate, It = nt !== null && nt.memoizedState !== null || Ba;
            nt = So;
            var on = Ba;
            if (So = Le, (Ba = It) && !on)
              for (cn = W; cn !== null; )
                Le = cn, It = Le.child, Le.tag === 22 && Le.memoizedState !== null ? Lm(W) : It !== null ? (It.return = Le, cn = It) : Lm(W);
            for (; te !== null; )
              cn = te, bu(te), te = te.sibling;
            cn = W, So = nt, Ba = on;
          }
          Ch(g);
        } else
          W.subtreeFlags & 8772 && te !== null ? (te.return = W, cn = te) : Ch(g);
      }
    }
    function Ch(g) {
      for (; cn !== null; ) {
        var S = cn;
        if (S.flags & 8772) {
          var D = S.alternate;
          try {
            if (S.flags & 8772)
              switch (S.tag) {
                case 0:
                case 11:
                case 15:
                  Ba || ko(5, S);
                  break;
                case 1:
                  var z = S.stateNode;
                  if (S.flags & 4 && !Ba)
                    if (D === null)
                      z.componentDidMount();
                    else {
                      var W = S.elementType === S.type ? D.memoizedProps : Ie(S.type, D.memoizedProps);
                      z.componentDidUpdate(W, D.memoizedState, z.__reactInternalSnapshotBeforeUpdate);
                    }
                  var te = S.updateQueue;
                  te !== null && yh(S, te, z);
                  break;
                case 3:
                  var Le = S.updateQueue;
                  if (Le !== null) {
                    if (D = null, S.child !== null)
                      switch (S.child.tag) {
                        case 5:
                          D = be(S.child.stateNode);
                          break;
                        case 1:
                          D = S.child.stateNode;
                      }
                    yh(S, Le, D);
                  }
                  break;
                case 5:
                  var nt = S.stateNode;
                  D === null && S.flags & 4 && xe(nt, S.type, S.memoizedProps, S);
                  break;
                case 6:
                  break;
                case 4:
                  break;
                case 12:
                  break;
                case 13:
                  if (rt && S.memoizedState === null) {
                    var It = S.alternate;
                    if (It !== null) {
                      var on = It.memoizedState;
                      if (on !== null) {
                        var mn = on.dehydrated;
                        mn !== null && vt(mn);
                      }
                    }
                  }
                  break;
                case 19:
                case 17:
                case 21:
                case 22:
                case 23:
                  break;
                default:
                  throw Error(l(163));
              }
            Ba || S.flags & 512 && Ds(S);
          } catch (yr) {
            Ci(S, S.return, yr);
          }
        }
        if (S === g) {
          cn = null;
          break;
        }
        if (D = S.sibling, D !== null) {
          D.return = S.return, cn = D;
          break;
        }
        cn = S.return;
      }
    }
    function af(g) {
      for (; cn !== null; ) {
        var S = cn;
        if (S === g) {
          cn = null;
          break;
        }
        var D = S.sibling;
        if (D !== null) {
          D.return = S.return, cn = D;
          break;
        }
        cn = S.return;
      }
    }
    function Lm(g) {
      for (; cn !== null; ) {
        var S = cn;
        try {
          switch (S.tag) {
            case 0:
            case 11:
            case 15:
              var D = S.return;
              try {
                ko(4, S);
              } catch (It) {
                Ci(S, D, It);
              }
              break;
            case 1:
              var z = S.stateNode;
              if (typeof z.componentDidMount == "function") {
                var W = S.return;
                try {
                  z.componentDidMount();
                } catch (It) {
                  Ci(S, W, It);
                }
              }
              var te = S.return;
              try {
                Ds(S);
              } catch (It) {
                Ci(S, te, It);
              }
              break;
            case 5:
              var Le = S.return;
              try {
                Ds(S);
              } catch (It) {
                Ci(S, Le, It);
              }
          }
        } catch (It) {
          Ci(S, S.return, It);
        }
        if (S === g) {
          cn = null;
          break;
        }
        var nt = S.sibling;
        if (nt !== null) {
          nt.return = S.return, cn = nt;
          break;
        }
        cn = S.return;
      }
    }
    var Rh = 0, ta = 1, Da = 2, gn = 3, Ki = 4;
    if (typeof Symbol == "function" && Symbol.for) {
      var Ya = Symbol.for;
      Rh = Ya("selector.component"), ta = Ya("selector.has_pseudo_class"), Da = Ya("selector.role"), gn = Ya("selector.test_id"), Ki = Ya("selector.text");
    }
    function wp(g) {
      var S = qe(g);
      if (S != null) {
        if (typeof S.memoizedProps["data-testname"] != "string")
          throw Error(l(364));
        return S;
      }
      if (g = mt(g), g === null)
        throw Error(l(362));
      return g.stateNode.current;
    }
    function Om(g, S) {
      switch (S.$$typeof) {
        case Rh:
          if (g.type === S.value)
            return !0;
          break;
        case ta:
          e: {
            S = S.value, g = [g, 0];
            for (var D = 0; D < g.length; ) {
              var z = g[D++], W = g[D++], te = S[W];
              if (z.tag !== 5 || !re(z)) {
                for (; te != null && Om(z, te); )
                  W++, te = S[W];
                if (W === S.length) {
                  S = !0;
                  break e;
                } else
                  for (z = z.child; z !== null; )
                    g.push(z, W), z = z.sibling;
              }
            }
            S = !1;
          }
          return S;
        case Da:
          if (g.tag === 5 && ze(g.stateNode, S.value))
            return !0;
          break;
        case Ki:
          if ((g.tag === 5 || g.tag === 6) && (g = ae(g), g !== null && 0 <= g.indexOf(S.value)))
            return !0;
          break;
        case gn:
          if (g.tag === 5 && (g = g.memoizedProps["data-testname"], typeof g == "string" && g.toLowerCase() === S.value.toLowerCase()))
            return !0;
          break;
        default:
          throw Error(l(365));
      }
      return !1;
    }
    function Os(g) {
      switch (g.$$typeof) {
        case Rh:
          return "<" + (Y(g.value) || "Unknown") + ">";
        case ta:
          return ":has(" + (Os(g) || "") + ")";
        case Da:
          return '[role="' + g.value + '"]';
        case Ki:
          return '"' + g.value + '"';
        case gn:
          return '[data-testname="' + g.value + '"]';
        default:
          throw Error(l(365));
      }
    }
    function La(g, S) {
      var D = [];
      g = [g, 0];
      for (var z = 0; z < g.length; ) {
        var W = g[z++], te = g[z++], Le = S[te];
        if (W.tag !== 5 || !re(W)) {
          for (; Le != null && Om(W, Le); )
            te++, Le = S[te];
          if (te === S.length)
            D.push(W);
          else
            for (W = W.child; W !== null; )
              g.push(W, te), W = W.sibling;
        }
      }
      return D;
    }
    function _n(g, S) {
      if (!kt)
        throw Error(l(363));
      g = wp(g), g = La(g, S), S = [], g = Array.from(g);
      for (var D = 0; D < g.length; ) {
        var z = g[D++];
        if (z.tag === 5)
          re(z) || S.push(z.stateNode);
        else
          for (z = z.child; z !== null; )
            g.push(z), z = z.sibling;
      }
      return S;
    }
    var na = Math.ceil, Xa = u.ReactCurrentDispatcher, Ec = u.ReactCurrentOwner, Oa = u.ReactCurrentBatchConfig, $r = 0, ua = null, ya = null, gi = 0, nl = 0, of = qn(0), xo = 0, Vd = null, qu = 0, Tu = 0, Xf = 0, qf = null, rl = null, Pm = 0, Kf = 1 / 0;
    function Gd() {
      Kf = Qr() + 500;
    }
    var sf = !1, Tl = null, wu = null, lf = !1, wl = null, Ah = 0, Mu = 0, ar = null, Fr = -1, or = 0;
    function ai() {
      return $r & 6 ? Qr() : Fr !== -1 ? Fr : Fr = Qr();
    }
    function Fo(g) {
      return g.mode & 1 ? $r & 2 && gi !== 0 ? gi & -gi : Iu.transition !== null ? (or === 0 && (g = Wo, Wo <<= 1, !(Wo & 4194240) && (Wo = 64), or = g), or) : (g = gr, g !== 0 ? g : Ye()) : 1;
    }
    function il(g, S, D) {
      if (50 < Mu)
        throw Mu = 0, ar = null, Error(l(185));
      var z = uf(g, S);
      return z === null ? null : (rr(z, S, D), (!($r & 2) || z !== ua) && (z === ua && (!($r & 2) && (Tu |= S), xo === 4 && Kn(z, gi)), Ps(z, D), S === 1 && $r === 0 && !(g.mode & 1) && (Gd(), $s && Po())), z);
    }
    function uf(g, S) {
      g.lanes |= S;
      var D = g.alternate;
      for (D !== null && (D.lanes |= S), D = g, g = g.return; g !== null; )
        g.childLanes |= S, D = g.alternate, D !== null && (D.childLanes |= S), D = g, g = g.return;
      return D.tag === 3 ? D.stateNode : null;
    }
    function Ps(g, S) {
      var D = g.callbackNode;
      Hr(g, S);
      var z = Fl(g, g === ua ? gi : 0);
      if (z === 0)
        D !== null && oa(D), g.callbackNode = null, g.callbackPriority = 0;
      else if (S = z & -z, g.callbackPriority !== S) {
        if (D != null && oa(D), S === 1)
          g.tag === 0 ? zu(Ku.bind(null, g)) : Bl(Ku.bind(null, g)), ot ? Dt(function() {
            $r === 0 && Po();
          }) : oo(Aa, Po), D = null;
        else {
          switch (Lo(z)) {
            case 1:
              D = Aa;
              break;
            case 4:
              D = zl;
              break;
            case 16:
              D = jo;
              break;
            case 536870912:
              D = Il;
              break;
            default:
              D = jo;
          }
          D = Cu(D, zo.bind(null, g));
        }
        g.callbackPriority = S, g.callbackNode = D;
      }
    }
    function zo(g, S) {
      if (Fr = -1, or = 0, $r & 6)
        throw Error(l(327));
      var D = g.callbackNode;
      if (bc() && g.callbackNode !== D)
        return null;
      var z = Fl(g, g === ua ? gi : 0);
      if (z === 0)
        return null;
      if (z & 30 || z & g.expiredLanes || S)
        S = Xo(g, z);
      else {
        S = z;
        var W = $r;
        $r |= 2;
        var te = cf();
        (ua !== g || gi !== S) && (Gd(), Fi(g, S));
        do
          try {
            Zf();
            break;
          } catch (nt) {
            Qf(g, nt);
          }
        while (1);
        yn(), Xa.current = te, $r = W, ya !== null ? S = 0 : (ua = null, gi = 0, S = xo);
      }
      if (S !== 0) {
        if (S === 2 && (W = pa(g), W !== 0 && (z = W, S = yi(g, W))), S === 1)
          throw D = Vd, Fi(g, 0), Kn(g, z), Ps(g, Qr()), D;
        if (S === 6)
          Kn(g, z);
        else {
          if (W = g.current.alternate, !(z & 30) && !ci(W) && (S = Xo(g, z), S === 2 && (te = pa(g), te !== 0 && (z = te, S = yi(g, te))), S === 1))
            throw D = Vd, Fi(g, 0), Kn(g, z), Ps(g, Qr()), D;
          switch (g.finishedWork = W, g.finishedLanes = z, S) {
            case 0:
            case 1:
              throw Error(l(345));
            case 2:
              Cl(g, rl);
              break;
            case 3:
              if (Kn(g, z), (z & 130023424) === z && (S = Pm + 500 - Qr(), 10 < S)) {
                if (Fl(g, 0) !== 0)
                  break;
                if (W = g.suspendedLanes, (W & z) !== z) {
                  ai(), g.pingedLanes |= g.suspendedLanes & W;
                  break;
                }
                g.timeoutHandle = Pe(Cl.bind(null, g, rl), S);
                break;
              }
              Cl(g, rl);
              break;
            case 4:
              if (Kn(g, z), (z & 4194240) === z)
                break;
              for (S = g.eventTimes, W = -1; 0 < z; ) {
                var Le = 31 - Ao(z);
                te = 1 << Le, Le = S[Le], Le > W && (W = Le), z &= ~te;
              }
              if (z = W, z = Qr() - z, z = (120 > z ? 120 : 480 > z ? 480 : 1080 > z ? 1080 : 1920 > z ? 1920 : 3e3 > z ? 3e3 : 4320 > z ? 4320 : 1960 * na(z / 1960)) - z, 10 < z) {
                g.timeoutHandle = Pe(Cl.bind(null, g, rl), z);
                break;
              }
              Cl(g, rl);
              break;
            case 5:
              Cl(g, rl);
              break;
            default:
              throw Error(l(329));
          }
        }
      }
      return Ps(g, Qr()), g.callbackNode === D ? zo.bind(null, g) : null;
    }
    function yi(g, S) {
      var D = qf;
      return g.current.memoizedState.isDehydrated && (Fi(g, S).flags |= 256), g = Xo(g, S), g !== 2 && (S = rl, rl = D, S !== null && Bt(S)), g;
    }
    function Bt(g) {
      rl === null ? rl = g : rl.push.apply(rl, g);
    }
    function ci(g) {
      for (var S = g; ; ) {
        if (S.flags & 16384) {
          var D = S.updateQueue;
          if (D !== null && (D = D.stores, D !== null))
            for (var z = 0; z < D.length; z++) {
              var W = D[z], te = W.getSnapshot;
              W = W.value;
              try {
                if (!vo(te(), W))
                  return !1;
              } catch {
                return !1;
              }
            }
        }
        if (D = S.child, S.subtreeFlags & 16384 && D !== null)
          D.return = S, S = D;
        else {
          if (S === g)
            break;
          for (; S.sibling === null; ) {
            if (S.return === null || S.return === g)
              return !0;
            S = S.return;
          }
          S.sibling.return = S.return, S = S.sibling;
        }
      }
      return !0;
    }
    function Kn(g, S) {
      for (S &= ~Xf, S &= ~Tu, g.suspendedLanes |= S, g.pingedLanes &= ~S, g = g.expirationTimes; 0 < S; ) {
        var D = 31 - Ao(S), z = 1 << D;
        g[D] = -1, S &= ~z;
      }
    }
    function Ku(g) {
      if ($r & 6)
        throw Error(l(327));
      bc();
      var S = Fl(g, 0);
      if (!(S & 1))
        return Ps(g, Qr()), null;
      var D = Xo(g, S);
      if (g.tag !== 0 && D === 2) {
        var z = pa(g);
        z !== 0 && (S = z, D = yi(g, z));
      }
      if (D === 1)
        throw D = Vd, Fi(g, 0), Kn(g, S), Ps(g, Qr()), D;
      if (D === 6)
        throw Error(l(345));
      return g.finishedWork = g.current.alternate, g.finishedLanes = S, Cl(g, rl), Ps(g, Qr()), null;
    }
    function al(g) {
      wl !== null && wl.tag === 0 && !($r & 6) && bc();
      var S = $r;
      $r |= 1;
      var D = Oa.transition, z = gr;
      try {
        if (Oa.transition = null, gr = 1, g)
          return g();
      } finally {
        gr = z, Oa.transition = D, $r = S, !($r & 6) && Po();
      }
    }
    function Yo() {
      nl = of.current, br(of);
    }
    function Fi(g, S) {
      g.finishedWork = null, g.finishedLanes = 0;
      var D = g.timeoutHandle;
      if (D !== it && (g.timeoutHandle = it, Fe(D)), ya !== null)
        for (D = ya.return; D !== null; ) {
          var z = D;
          switch (Wa(z), z.tag) {
            case 1:
              z = z.type.childContextTypes, z != null && Ea();
              break;
            case 3:
              Ld(), br(Kr), br(ha), Sl();
              break;
            case 5:
              Vl(z);
              break;
            case 4:
              Ld();
              break;
            case 13:
              br(va);
              break;
            case 19:
              br(va);
              break;
            case 10:
              Jn(z.type._context);
              break;
            case 22:
            case 23:
              Yo();
          }
          D = D.return;
        }
      if (ua = g, ya = g = ls(g.current, null), gi = nl = S, xo = 0, Vd = null, Xf = Tu = qu = 0, rl = qf = null, Zr !== null) {
        for (S = 0; S < Zr.length; S++)
          if (D = Zr[S], z = D.interleaved, z !== null) {
            D.interleaved = null;
            var W = z.next, te = D.pending;
            if (te !== null) {
              var Le = te.next;
              te.next = W, z.next = Le;
            }
            D.pending = z;
          }
        Zr = null;
      }
      return g;
    }
    function Qf(g, S) {
      do {
        var D = ya;
        try {
          if (yn(), go.current = Vf, Pd) {
            for (var z = ui.memoizedState; z !== null; ) {
              var W = z.queue;
              W !== null && (W.pending = null), z = z.next;
            }
            Pd = !1;
          }
          if (Zc = 0, Wi = ki = ui = null, yo = !1, If = 0, Ec.current = null, D === null || D.return === null) {
            xo = 1, Vd = S, ya = null;
            break;
          }
          e: {
            var te = g, Le = D.return, nt = D, It = S;
            if (S = gi, nt.flags |= 32768, It !== null && typeof It == "object" && typeof It.then == "function") {
              var on = It, mn = nt, yr = mn.tag;
              if (!(mn.mode & 1) && (yr === 0 || yr === 11 || yr === 15)) {
                var sr = mn.alternate;
                sr ? (mn.updateQueue = sr.updateQueue, mn.memoizedState = sr.memoizedState, mn.lanes = sr.lanes) : (mn.updateQueue = null, mn.memoizedState = null);
              }
              var ca = Wu(Le);
              if (ca !== null) {
                ca.flags &= -257, ju(ca, Le, nt, te, S), ca.mode & 1 && Qs(te, on, S), S = ca, It = on;
                var xn = S.updateQueue;
                if (xn === null) {
                  var Si = /* @__PURE__ */ new Set();
                  Si.add(It), S.updateQueue = Si;
                } else
                  xn.add(It);
                break e;
              } else {
                if (!(S & 1)) {
                  Qs(te, on, S), ff();
                  break e;
                }
                It = Error(l(426));
              }
            } else if (ea && nt.mode & 1) {
              var qa = Wu(Le);
              if (qa !== null) {
                !(qa.flags & 65536) && (qa.flags |= 256), ju(qa, Le, nt, te, S), Sh(It);
                break e;
              }
            }
            te = It, xo !== 4 && (xo = 2), qf === null ? qf = [te] : qf.push(te), It = Th(It, nt), nt = Le;
            do {
              switch (nt.tag) {
                case 3:
                  nt.flags |= 65536, S &= -S, nt.lanes |= S;
                  var _t = Rm(nt, It, S);
                  mu(nt, _t);
                  break e;
                case 1:
                  te = It;
                  var Xe = nt.type, Lt = nt.stateNode;
                  if (!(nt.flags & 128) && (typeof Xe.getDerivedStateFromError == "function" || Lt !== null && typeof Lt.componentDidCatch == "function" && (wu === null || !wu.has(Lt)))) {
                    nt.flags |= 65536, S &= -S, nt.lanes |= S;
                    var Xt = Gu(nt, te, S);
                    mu(nt, Xt);
                    break e;
                  }
              }
              nt = nt.return;
            } while (nt !== null);
          }
          ss(D);
        } catch (Nn) {
          S = Nn, ya === D && D !== null && (ya = D = D.return);
          continue;
        }
        break;
      } while (1);
    }
    function cf() {
      var g = Xa.current;
      return Xa.current = Vf, g === null ? Vf : g;
    }
    function ff() {
      (xo === 0 || xo === 3 || xo === 2) && (xo = 4), ua === null || !(qu & 268435455) && !(Tu & 268435455) || Kn(ua, gi);
    }
    function Xo(g, S) {
      var D = $r;
      $r |= 2;
      var z = cf();
      ua === g && gi === S || Fi(g, S);
      do
        try {
          Ml();
          break;
        } catch (W) {
          Qf(g, W);
        }
      while (1);
      if (yn(), $r = D, Xa.current = z, ya !== null)
        throw Error(l(261));
      return ua = null, gi = 0, xo;
    }
    function Ml() {
      for (; ya !== null; )
        Wd(ya);
    }
    function Zf() {
      for (; ya !== null && !Ti(); )
        Wd(ya);
    }
    function Wd(g) {
      var S = df(g.alternate, g, nl);
      g.memoizedProps = g.pendingProps, S === null ? ss(g) : ya = S, Ec.current = null;
    }
    function ss(g) {
      var S = g;
      do {
        var D = S.alternate;
        if (g = S.return, S.flags & 32768) {
          if (D = Rr(D, S), D !== null) {
            D.flags &= 32767, ya = D;
            return;
          }
          if (g !== null)
            g.flags |= 32768, g.subtreeFlags = 0, g.deletions = null;
          else {
            xo = 6, ya = null;
            return;
          }
        } else if (D = ir(D, S, nl), D !== null) {
          ya = D;
          return;
        }
        if (S = S.sibling, S !== null) {
          ya = S;
          return;
        }
        ya = S = g;
      } while (S !== null);
      xo === 0 && (xo = 5);
    }
    function Cl(g, S) {
      var D = gr, z = Oa.transition;
      try {
        Oa.transition = null, gr = 1, Um(g, S, D);
      } finally {
        Oa.transition = z, gr = D;
      }
      return null;
    }
    function Um(g, S, D) {
      do
        bc();
      while (wl !== null);
      if ($r & 6)
        throw Error(l(327));
      var z = g.finishedWork, W = g.finishedLanes;
      if (z === null)
        return null;
      if (g.finishedWork = null, g.finishedLanes = 0, z === g.current)
        throw Error(l(177));
      g.callbackNode = null, g.callbackPriority = 0;
      var te = z.lanes | z.childLanes;
      if (ml(g, te), g === ua && (ya = ua = null, gi = 0), !(z.subtreeFlags & 2064) && !(z.flags & 2064) || lf || (lf = !0, Cu(jo, function() {
        return bc(), null;
      })), te = (z.flags & 15990) !== 0, z.subtreeFlags & 15990 || te) {
        te = Oa.transition, Oa.transition = null;
        var Le = gr;
        gr = 1;
        var nt = $r;
        $r |= 4, Ec.current = null, Tp(g, z), Dm(g, z), X(g.containerInfo), g.current = z, bl(z), Td(), $r = nt, gr = Le, Oa.transition = te;
      } else
        g.current = z;
      if (lf && (lf = !1, wl = g, Ah = W), te = g.pendingLanes, te === 0 && (wu = null), Ms(z.stateNode), Ps(g, Qr()), S !== null)
        for (D = g.onRecoverableError, z = 0; z < S.length; z++)
          D(S[z]);
      if (sf)
        throw sf = !1, g = Tl, Tl = null, g;
      return Ah & 1 && g.tag !== 0 && bc(), te = g.pendingLanes, te & 1 ? g === ar ? Mu++ : (Mu = 0, ar = g) : Mu = 0, Po(), null;
    }
    function bc() {
      if (wl !== null) {
        var g = Lo(Ah), S = Oa.transition, D = gr;
        try {
          if (Oa.transition = null, gr = 16 > g ? 16 : g, wl === null)
            var z = !1;
          else {
            if (g = wl, wl = null, Ah = 0, $r & 6)
              throw Error(l(331));
            var W = $r;
            for ($r |= 4, cn = g.current; cn !== null; ) {
              var te = cn, Le = te.child;
              if (cn.flags & 16) {
                var nt = te.deletions;
                if (nt !== null) {
                  for (var It = 0; It < nt.length; It++) {
                    var on = nt[It];
                    for (cn = on; cn !== null; ) {
                      var mn = cn;
                      switch (mn.tag) {
                        case 0:
                        case 11:
                        case 15:
                          nf(8, mn, te);
                      }
                      var yr = mn.child;
                      if (yr !== null)
                        yr.return = mn, cn = yr;
                      else
                        for (; cn !== null; ) {
                          mn = cn;
                          var sr = mn.sibling, ca = mn.return;
                          if ($l(mn), mn === on) {
                            cn = null;
                            break;
                          }
                          if (sr !== null) {
                            sr.return = ca, cn = sr;
                            break;
                          }
                          cn = ca;
                        }
                    }
                  }
                  var xn = te.alternate;
                  if (xn !== null) {
                    var Si = xn.child;
                    if (Si !== null) {
                      xn.child = null;
                      do {
                        var qa = Si.sibling;
                        Si.sibling = null, Si = qa;
                      } while (Si !== null);
                    }
                  }
                  cn = te;
                }
              }
              if (te.subtreeFlags & 2064 && Le !== null)
                Le.return = te, cn = Le;
              else
                e:
                  for (; cn !== null; ) {
                    if (te = cn, te.flags & 2048)
                      switch (te.tag) {
                        case 0:
                        case 11:
                        case 15:
                          nf(9, te, te.return);
                      }
                    var _t = te.sibling;
                    if (_t !== null) {
                      _t.return = te.return, cn = _t;
                      break e;
                    }
                    cn = te.return;
                  }
            }
            var Xe = g.current;
            for (cn = Xe; cn !== null; ) {
              Le = cn;
              var Lt = Le.child;
              if (Le.subtreeFlags & 2064 && Lt !== null)
                Lt.return = Le, cn = Lt;
              else
                e:
                  for (Le = Xe; cn !== null; ) {
                    if (nt = cn, nt.flags & 2048)
                      try {
                        switch (nt.tag) {
                          case 0:
                          case 11:
                          case 15:
                            ko(9, nt);
                        }
                      } catch (Nn) {
                        Ci(nt, nt.return, Nn);
                      }
                    if (nt === Le) {
                      cn = null;
                      break e;
                    }
                    var Xt = nt.sibling;
                    if (Xt !== null) {
                      Xt.return = nt.return, cn = Xt;
                      break e;
                    }
                    cn = nt.return;
                  }
            }
            if ($r = W, Po(), ws && typeof ws.onPostCommitFiberRoot == "function")
              try {
                ws.onPostCommitFiberRoot(vl, g);
              } catch {
              }
            z = !0;
          }
          return z;
        } finally {
          gr = D, Oa.transition = S;
        }
      }
      return !1;
    }
    function Eo(g, S, D) {
      S = Th(D, S), S = Rm(g, S, 1), pu(g, S), S = ai(), g = uf(g, 1), g !== null && (rr(g, 1, S), Ps(g, S));
    }
    function Ci(g, S, D) {
      if (g.tag === 3)
        Eo(g, g, D);
      else
        for (; S !== null; ) {
          if (S.tag === 3) {
            Eo(S, g, D);
            break;
          } else if (S.tag === 1) {
            var z = S.stateNode;
            if (typeof S.type.getDerivedStateFromError == "function" || typeof z.componentDidCatch == "function" && (wu === null || !wu.has(z))) {
              g = Th(D, g), g = Gu(S, g, 1), pu(S, g), g = ai(), S = uf(S, 1), S !== null && (rr(S, 1, g), Ps(S, g));
              break;
            }
          }
          S = S.return;
        }
    }
    function Yl(g, S, D) {
      var z = g.pingCache;
      z !== null && z.delete(S), S = ai(), g.pingedLanes |= g.suspendedLanes & D, ua === g && (gi & D) === D && (xo === 4 || xo === 3 && (gi & 130023424) === gi && 500 > Qr() - Pm ? Fi(g, 0) : Xf |= D), Ps(g, S);
    }
    function ol(g, S) {
      S === 0 && (g.mode & 1 ? (S = Br, Br <<= 1, !(Br & 130023424) && (Br = 4194304)) : S = 1);
      var D = ai();
      g = uf(g, S), g !== null && (rr(g, S, D), Ps(g, D));
    }
    function Nm(g) {
      var S = g.memoizedState, D = 0;
      S !== null && (D = S.retryLane), ol(g, D);
    }
    function Xl(g, S) {
      var D = 0;
      switch (g.tag) {
        case 13:
          var z = g.stateNode, W = g.memoizedState;
          W !== null && (D = W.retryLane);
          break;
        case 19:
          z = g.stateNode;
          break;
        default:
          throw Error(l(314));
      }
      z !== null && z.delete(S), ol(g, D);
    }
    var df;
    df = function(g, S, D) {
      if (g !== null)
        if (g.memoizedProps !== S.pendingProps || Kr.current)
          Jr = !0;
        else {
          if (!(g.lanes & D) && !(S.flags & 128))
            return Jr = !1, Eu(g, S, D);
          Jr = !!(g.flags & 131072);
        }
      else
        Jr = !1, ea && S.flags & 1048576 && Xs(S, Em, S.index);
      switch (S.lanes = 0, S.tag) {
        case 2:
          var z = S.type;
          g !== null && (g.alternate = null, S.alternate = null, S.flags |= 2), g = S.pendingProps;
          var W = Ri(S, ha.current);
          Mr(S, D), W = Jc(null, S, z, g, W, D);
          var te = Vu();
          return S.flags |= 1, typeof W == "object" && W !== null && typeof W.render == "function" && W.$$typeof === void 0 ? (S.tag = 1, S.memoizedState = null, S.updateQueue = null, Ai(z) ? (te = !0, Ro(S)) : te = !1, S.memoizedState = W.state !== null && W.state !== void 0 ? W.state : null, ii(S), W.updater = ym, S.stateNode = W, W._reactInternals = S, xm(S, z, g, D), S = ga(null, S, z, !0, te, D)) : (S.tag = 0, ea && te && Bu(S), Yn(null, S, W, D), S = S.child), S;
        case 16:
          z = S.elementType;
          e: {
            switch (g !== null && (g.alternate = null, S.alternate = null, S.flags |= 2), g = S.pendingProps, W = z._init, z = W(z._payload), S.type = z, W = S.tag = Jf(z), g = Ie(z, g), W) {
              case 0:
                S = Rs(null, S, z, g, D);
                break e;
              case 1:
                S = el(
                  null,
                  S,
                  z,
                  g,
                  D
                );
                break e;
              case 11:
                S = hi(null, S, z, g, D);
                break e;
              case 14:
                S = wi(null, S, z, Ie(z.type, g), D);
                break e;
            }
            throw Error(l(306, z, ""));
          }
          return S;
        case 0:
          return z = S.type, W = S.pendingProps, W = S.elementType === z ? W : Ie(z, W), Rs(g, S, z, W, D);
        case 1:
          return z = S.type, W = S.pendingProps, W = S.elementType === z ? W : Ie(z, W), el(g, S, z, W, D);
        case 3:
          e: {
            if (tl(S), g === null)
              throw Error(l(387));
            z = S.pendingProps, te = S.memoizedState, W = te.element, Hl(g, S), Nf(S, z, null, D);
            var Le = S.memoizedState;
            if (z = Le.element, rt && te.isDehydrated)
              if (te = {
                element: z,
                isDehydrated: !1,
                cache: Le.cache,
                transitions: Le.transitions
              }, S.updateQueue.baseState = te, S.memoizedState = te, S.flags & 256) {
                W = Error(l(423)), S = _c(g, S, z, D, W);
                break e;
              } else if (z !== W) {
                W = Error(l(424)), S = _c(g, S, z, D, W);
                break e;
              } else
                for (rt && (za = Ht(S.stateNode.containerInfo), Fa = S, ea = !0, as = null, Md = !1), D = gp(S, null, z, D), S.child = D; D; )
                  D.flags = D.flags & -3 | 4096, D = D.sibling;
            else {
              if (Rd(), z === W) {
                S = Mi(g, S, D);
                break e;
              }
              Yn(g, S, z, D);
            }
            S = S.child;
          }
          return S;
        case 5:
          return Sp(S), g === null && qc(S), z = S.type, W = S.pendingProps, te = g !== null ? g.memoizedProps : null, Le = W.children, De(z, W) ? Le = null : te !== null && De(z, te) && (S.flags |= 32), Ia(g, S), Yn(g, S, Le, D), S.child;
        case 6:
          return g === null && qc(S), null;
        case 13:
          return Av(g, S, D);
        case 4:
          return yp(S, S.stateNode.containerInfo), z = S.pendingProps, g === null ? S.child = Hu(S, null, z, D) : Yn(g, S, z, D), S.child;
        case 11:
          return z = S.type, W = S.pendingProps, W = S.elementType === z ? W : Ie(z, W), hi(g, S, z, W, D);
        case 7:
          return Yn(g, S, S.pendingProps, D), S.child;
        case 8:
          return Yn(g, S, S.pendingProps.children, D), S.child;
        case 12:
          return Yn(g, S, S.pendingProps.children, D), S.child;
        case 10:
          e: {
            if (z = S.type._context, W = S.pendingProps, te = S.memoizedProps, Le = W.value, Zn(S, z, Le), te !== null)
              if (vo(te.value, Le)) {
                if (te.children === W.children && !Kr.current) {
                  S = Mi(g, S, D);
                  break e;
                }
              } else
                for (te = S.child, te !== null && (te.return = S); te !== null; ) {
                  var nt = te.dependencies;
                  if (nt !== null) {
                    Le = te.child;
                    for (var It = nt.firstContext; It !== null; ) {
                      if (It.context === z) {
                        if (te.tag === 1) {
                          It = gl(-1, D & -D), It.tag = 2;
                          var on = te.updateQueue;
                          if (on !== null) {
                            on = on.shared;
                            var mn = on.pending;
                            mn === null ? It.next = It : (It.next = mn.next, mn.next = It), on.pending = It;
                          }
                        }
                        te.lanes |= D, It = te.alternate, It !== null && (It.lanes |= D), Tr(te.return, D, S), nt.lanes |= D;
                        break;
                      }
                      It = It.next;
                    }
                  } else if (te.tag === 10)
                    Le = te.type === S.type ? null : te.child;
                  else if (te.tag === 18) {
                    if (Le = te.return, Le === null)
                      throw Error(l(341));
                    Le.lanes |= D, nt = Le.alternate, nt !== null && (nt.lanes |= D), Tr(Le, D, S), Le = te.sibling;
                  } else
                    Le = te.child;
                  if (Le !== null)
                    Le.return = te;
                  else
                    for (Le = te; Le !== null; ) {
                      if (Le === S) {
                        Le = null;
                        break;
                      }
                      if (te = Le.sibling, te !== null) {
                        te.return = Le.return, Le = te;
                        break;
                      }
                      Le = Le.return;
                    }
                  te = Le;
                }
            Yn(g, S, W.children, D), S = S.child;
          }
          return S;
        case 9:
          return W = S.type, z = S.pendingProps.children, Mr(S, D), W = _r(W), z = z(W), S.flags |= 1, Yn(g, S, z, D), S.child;
        case 14:
          return z = S.type, W = Ie(z, S.pendingProps), W = Ie(z.type, W), wi(g, S, z, W, D);
        case 15:
          return $u(g, S, S.type, S.pendingProps, D);
        case 17:
          return z = S.type, W = S.pendingProps, W = S.elementType === z ? W : Ie(z, W), g !== null && (g.alternate = null, S.alternate = null, S.flags |= 2), S.tag = 1, Ai(z) ? (g = !0, Ro(S)) : g = !1, Mr(S, D), _m(S, z, W), xm(S, z, W, D), ga(null, S, z, !0, g, D);
        case 19:
          return Yu(g, S, D);
        case 22:
          return xr(g, S, D);
      }
      throw Error(l(156, S.tag));
    };
    function Cu(g, S) {
      return oo(g, S);
    }
    function ql(g, S, D, z) {
      this.tag = g, this.key = D, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = S, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = z, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
    }
    function Io(g, S, D, z) {
      return new ql(g, S, D, z);
    }
    function Qu(g) {
      return g = g.prototype, !(!g || !g.isReactComponent);
    }
    function Jf(g) {
      if (typeof g == "function")
        return Qu(g) ? 1 : 0;
      if (g != null) {
        if (g = g.$$typeof, g === U)
          return 11;
        if (g === k)
          return 14;
      }
      return 2;
    }
    function ls(g, S) {
      var D = g.alternate;
      return D === null ? (D = Io(g.tag, S, g.key, g.mode), D.elementType = g.elementType, D.type = g.type, D.stateNode = g.stateNode, D.alternate = g, g.alternate = D) : (D.pendingProps = S, D.type = g.type, D.flags = 0, D.subtreeFlags = 0, D.deletions = null), D.flags = g.flags & 14680064, D.childLanes = g.childLanes, D.lanes = g.lanes, D.child = g.child, D.memoizedProps = g.memoizedProps, D.memoizedState = g.memoizedState, D.updateQueue = g.updateQueue, S = g.dependencies, D.dependencies = S === null ? null : { lanes: S.lanes, firstContext: S.firstContext }, D.sibling = g.sibling, D.index = g.index, D.ref = g.ref, D;
    }
    function hf(g, S, D, z, W, te) {
      var Le = 2;
      if (z = g, typeof g == "function")
        Qu(g) && (Le = 1);
      else if (typeof g == "string")
        Le = 5;
      else
        e:
          switch (g) {
            case y:
              return Kl(D.children, W, te, S);
            case _:
              Le = 8, W |= 8;
              break;
            case E:
              return g = Io(12, D, S, W | 2), g.elementType = E, g.lanes = te, g;
            case L:
              return g = Io(13, D, S, W), g.elementType = L, g.lanes = te, g;
            case A:
              return g = Io(19, D, S, W), g.elementType = A, g.lanes = te, g;
            case H:
              return ed(D, W, te, S);
            default:
              if (typeof g == "object" && g !== null)
                switch (g.$$typeof) {
                  case w:
                    Le = 10;
                    break e;
                  case R:
                    Le = 9;
                    break e;
                  case U:
                    Le = 11;
                    break e;
                  case k:
                    Le = 14;
                    break e;
                  case F:
                    Le = 16, z = null;
                    break e;
                }
              throw Error(l(130, g == null ? g : typeof g, ""));
          }
      return S = Io(Le, D, S, W), S.elementType = g, S.type = z, S.lanes = te, S;
    }
    function Kl(g, S, D, z) {
      return g = Io(7, g, z, S), g.lanes = D, g;
    }
    function ed(g, S, D, z) {
      return g = Io(22, g, z, S), g.elementType = H, g.lanes = D, g.stateNode = {}, g;
    }
    function pf(g, S, D) {
      return g = Io(6, g, null, S), g.lanes = D, g;
    }
    function Ru(g, S, D) {
      return S = Io(4, g.children !== null ? g.children : [], g.key, S), S.lanes = D, S.stateNode = { containerInfo: g.containerInfo, pendingChildren: null, implementation: g.implementation }, S;
    }
    function Rl(g, S, D, z, W) {
      this.tag = S, this.containerInfo = g, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = it, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = ku(0), this.expirationTimes = ku(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = ku(0), this.identifierPrefix = z, this.onRecoverableError = W, rt && (this.mutableSourceEagerHydrationData = null);
    }
    function qg(g, S, D, z, W, te, Le, nt, It) {
      return g = new Rl(g, S, D, nt, It), S === 1 ? (S = 1, te === !0 && (S |= 8)) : S = 0, te = Io(3, null, null, S), g.current = te, te.stateNode = g, te.memoizedState = { element: z, isDehydrated: D, cache: null, transitions: null }, ii(te), g;
    }
    function oi(g) {
      if (!g)
        return di;
      g = g._reactInternals;
      e: {
        if (Z(g) !== g || g.tag !== 1)
          throw Error(l(170));
        var S = g;
        do {
          switch (S.tag) {
            case 3:
              S = S.stateNode.context;
              break e;
            case 1:
              if (Ai(S.type)) {
                S = S.stateNode.__reactInternalMemoizedMergedChildContext;
                break e;
              }
          }
          S = S.return;
        } while (S !== null);
        throw Error(l(171));
      }
      if (g.tag === 1) {
        var D = g.type;
        if (Ai(D))
          return ns(g, D, S);
      }
      return S;
    }
    function td(g) {
      var S = g._reactInternals;
      if (S === void 0)
        throw typeof g.render == "function" ? Error(l(188)) : (g = Object.keys(g).join(","), Error(l(268, g)));
      return g = se(S), g === null ? null : g.stateNode;
    }
    function mf(g, S) {
      if (g = g.memoizedState, g !== null && g.dehydrated !== null) {
        var D = g.retryLane;
        g.retryLane = D !== 0 && D < S ? D : S;
      }
    }
    function Zu(g, S) {
      mf(g, S), (g = g.alternate) && mf(g, S);
    }
    function Tc(g) {
      return g = se(g), g === null ? null : g.stateNode;
    }
    function km() {
      return null;
    }
    return t.attemptContinuousHydration = function(g) {
      if (g.tag === 13) {
        var S = ai();
        il(g, 134217728, S), Zu(g, 134217728);
      }
    }, t.attemptHydrationAtCurrentPriority = function(g) {
      if (g.tag === 13) {
        var S = ai(), D = Fo(g);
        il(g, D, S), Zu(g, D);
      }
    }, t.attemptSynchronousHydration = function(g) {
      switch (g.tag) {
        case 3:
          var S = g.stateNode;
          if (S.current.memoizedState.isDehydrated) {
            var D = rs(S.pendingLanes);
            D !== 0 && (Ni(S, D | 1), Ps(S, Qr()), !($r & 6) && (Gd(), Po()));
          }
          break;
        case 13:
          var z = ai();
          al(function() {
            return il(g, 1, z);
          }), Zu(g, 1);
      }
    }, t.batchedUpdates = function(g, S) {
      var D = $r;
      $r |= 1;
      try {
        return g(S);
      } finally {
        $r = D, $r === 0 && (Gd(), $s && Po());
      }
    }, t.createComponentSelector = function(g) {
      return { $$typeof: Rh, value: g };
    }, t.createContainer = function(g, S, D, z, W, te, Le) {
      return qg(g, S, !1, null, D, z, W, te, Le);
    }, t.createHasPseudoClassSelector = function(g) {
      return { $$typeof: ta, value: g };
    }, t.createHydrationContainer = function(g, S, D, z, W, te, Le, nt, It) {
      return g = qg(D, z, !0, g, W, te, Le, nt, It), g.context = oi(null), D = g.current, z = ai(), W = Fo(D), te = gl(z, W), te.callback = S ?? null, pu(D, te), g.current.lanes = W, rr(g, W, z), Ps(g, z), g;
    }, t.createPortal = function(g, S, D) {
      var z = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
      return { $$typeof: p, key: z == null ? null : "" + z, children: g, containerInfo: S, implementation: D };
    }, t.createRoleSelector = function(g) {
      return { $$typeof: Da, value: g };
    }, t.createTestNameSelector = function(g) {
      return { $$typeof: gn, value: g };
    }, t.createTextSelector = function(g) {
      return { $$typeof: Ki, value: g };
    }, t.deferredUpdates = function(g) {
      var S = gr, D = Oa.transition;
      try {
        return Oa.transition = null, gr = 16, g();
      } finally {
        gr = S, Oa.transition = D;
      }
    }, t.discreteUpdates = function(g, S, D, z, W) {
      var te = gr, Le = Oa.transition;
      try {
        return Oa.transition = null, gr = 1, g(S, D, z, W);
      } finally {
        gr = te, Oa.transition = Le, $r === 0 && Gd();
      }
    }, t.findAllNodes = _n, t.findBoundingRects = function(g, S) {
      if (!kt)
        throw Error(l(363));
      S = _n(g, S), g = [];
      for (var D = 0; D < S.length; D++)
        g.push(rn(S[D]));
      for (S = g.length - 1; 0 < S; S--) {
        D = g[S];
        for (var z = D.x, W = z + D.width, te = D.y, Le = te + D.height, nt = S - 1; 0 <= nt; nt--)
          if (S !== nt) {
            var It = g[nt], on = It.x, mn = on + It.width, yr = It.y, sr = yr + It.height;
            if (z >= on && te >= yr && W <= mn && Le <= sr) {
              g.splice(S, 1);
              break;
            } else if (z !== on || D.width !== It.width || sr < te || yr > Le) {
              if (!(te !== yr || D.height !== It.height || mn < z || on > W)) {
                on > z && (It.width += on - z, It.x = z), mn < W && (It.width = W - on), g.splice(S, 1);
                break;
              }
            } else {
              yr > te && (It.height += yr - te, It.y = te), sr < Le && (It.height = Le - yr), g.splice(S, 1);
              break;
            }
          }
      }
      return g;
    }, t.findHostInstance = td, t.findHostInstanceWithNoPortals = function(g) {
      return g = fe(g), g = g !== null ? me(g) : null, g === null ? null : g.stateNode;
    }, t.findHostInstanceWithWarning = function(g) {
      return td(g);
    }, t.flushControlled = function(g) {
      var S = $r;
      $r |= 1;
      var D = Oa.transition, z = gr;
      try {
        Oa.transition = null, gr = 1, g();
      } finally {
        gr = z, Oa.transition = D, $r = S, $r === 0 && (Gd(), Po());
      }
    }, t.flushPassiveEffects = bc, t.flushSync = al, t.focusWithin = function(g, S) {
      if (!kt)
        throw Error(l(363));
      for (g = wp(g), S = La(g, S), S = Array.from(S), g = 0; g < S.length; ) {
        var D = S[g++];
        if (!re(D)) {
          if (D.tag === 5 && xt(D.stateNode))
            return !0;
          for (D = D.child; D !== null; )
            S.push(D), D = D.sibling;
        }
      }
      return !1;
    }, t.getCurrentUpdatePriority = function() {
      return gr;
    }, t.getFindAllNodesFailureDescription = function(g, S) {
      if (!kt)
        throw Error(l(363));
      var D = 0, z = [];
      g = [wp(g), 0];
      for (var W = 0; W < g.length; ) {
        var te = g[W++], Le = g[W++], nt = S[Le];
        if ((te.tag !== 5 || !re(te)) && (Om(te, nt) && (z.push(Os(nt)), Le++, Le > D && (D = Le)), Le < S.length))
          for (te = te.child; te !== null; )
            g.push(te, Le), te = te.sibling;
      }
      if (D < S.length) {
        for (g = []; D < S.length; D++)
          g.push(Os(S[D]));
        return `findAllNodes was able to match part of the selector:
  ` + (z.join(" > ") + `

No matching component was found for:
  `) + g.join(" > ");
      }
      return null;
    }, t.getPublicRootInstance = function(g) {
      if (g = g.current, !g.child)
        return null;
      switch (g.child.tag) {
        case 5:
          return be(g.child.stateNode);
        default:
          return g.child.stateNode;
      }
    }, t.injectIntoDevTools = function(g) {
      if (g = { bundleType: g.bundleType, version: g.version, rendererPackageName: g.rendererPackageName, rendererConfig: g.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: u.ReactCurrentDispatcher, findHostInstanceByFiber: Tc, findFiberByHostInstance: g.findFiberByHostInstance || km, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.0.0-fc46dba67-20220329" }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        g = !1;
      else {
        var S = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (S.isDisabled || !S.supportsFiber)
          g = !0;
        else {
          try {
            vl = S.inject(g), ws = S;
          } catch {
          }
          g = !!S.checkDCE;
        }
      }
      return g;
    }, t.isAlreadyRendering = function() {
      return !1;
    }, t.observeVisibleRects = function(g, S, D, z) {
      if (!kt)
        throw Error(l(363));
      g = _n(g, S);
      var W = ut(g, D, z).disconnect;
      return { disconnect: function() {
        W();
      } };
    }, t.registerMutableSourceForHydration = function(g, S) {
      var D = S._getVersion;
      D = D(S._source), g.mutableSourceEagerHydrationData == null ? g.mutableSourceEagerHydrationData = [S, D] : g.mutableSourceEagerHydrationData.push(S, D);
    }, t.runWithPriority = function(g, S) {
      var D = gr;
      try {
        return gr = g, S();
      } finally {
        gr = D;
      }
    }, t.shouldError = function() {
      return null;
    }, t.shouldSuspend = function() {
      return !1;
    }, t.updateContainer = function(g, S, D, z) {
      var W = S.current, te = ai(), Le = Fo(W);
      return D = oi(D), S.context === null ? S.context = D : S.pendingContext = D, S = gl(te, Le), S.payload = { element: g }, z = z === void 0 ? null : z, z !== null && (S.callback = z), pu(W, S), g = il(W, Le, te), g !== null && gh(g, W, Le), Le;
    }, t;
  }), ZD;
}
var JD = { exports: {} };
/**
 * @license React
 * react-reconciler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var $k;
function LX() {
  return $k || ($k = 1, process.env.NODE_ENV !== "production" && (JD.exports = function(e) {
    var t = {}, r = le, i = yR, o = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, l = !1;
    function u(c) {
      l = c;
    }
    function h(c) {
      if (!l) {
        for (var d = arguments.length, T = new Array(d > 1 ? d - 1 : 0), C = 1; C < d; C++)
          T[C - 1] = arguments[C];
        y("warn", c, T);
      }
    }
    function p(c) {
      if (!l) {
        for (var d = arguments.length, T = new Array(d > 1 ? d - 1 : 0), C = 1; C < d; C++)
          T[C - 1] = arguments[C];
        y("error", c, T);
      }
    }
    function y(c, d, T) {
      {
        var C = o.ReactDebugCurrentFrame, P = C.getStackAddendum();
        P !== "" && (d += "%s", T = T.concat([P]));
        var V = T.map(function(J) {
          return String(J);
        });
        V.unshift("Warning: " + d), Function.prototype.apply.call(console[c], console, V);
      }
    }
    var _ = Object.assign;
    function E(c) {
      return c._reactInternals;
    }
    function w(c, d) {
      c._reactInternals = d;
    }
    var R = !1, U = !1, L = !1, A = !1, k = !1, F = !1, H = !0, B = !0, j = !0, Y = 0, ee = 1, Z = 2, K = 3, fe = 4, se = 5, he = 6, me = 7, Ee = 8, be = 9, we = 10, de = 11, ye = 12, X = 13, q = 14, ue = 15, Ce = 16, Ae = 17, De = 18, Ne = 19, Pe = 21, Fe = 22, it = 23, Ot = 24, st = 25, oe = Symbol.for("react.element"), rt = Symbol.for("react.portal"), qe = Symbol.for("react.fragment"), $e = Symbol.for("react.strict_mode"), Ye = Symbol.for("react.profiler"), zt = Symbol.for("react.provider"), ot = Symbol.for("react.context"), Dt = Symbol.for("react.forward_ref"), kt = Symbol.for("react.suspense"), mt = Symbol.for("react.suspense_list"), rn = Symbol.for("react.memo"), ae = Symbol.for("react.lazy"), re = Symbol.for("react.scope"), ze = Symbol.for("react.debug_trace_mode"), xt = Symbol.for("react.offscreen"), ut = Symbol.for("react.legacy_hidden"), lt = Symbol.for("react.cache"), Yt = Symbol.for("react.tracing_marker"), Nt = Symbol.iterator, xe = "@@iterator";
    function We(c) {
      if (c === null || typeof c != "object")
        return null;
      var d = Nt && c[Nt] || c[xe];
      return typeof d == "function" ? d : null;
    }
    function ft(c, d, T) {
      var C = c.displayName;
      if (C)
        return C;
      var P = d.displayName || d.name || "";
      return P !== "" ? T + "(" + P + ")" : T;
    }
    function Et(c) {
      return c.displayName || "Context";
    }
    function Ze(c) {
      if (c == null)
        return null;
      if (typeof c.tag == "number" && p("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof c == "function")
        return c.displayName || c.name || null;
      if (typeof c == "string")
        return c;
      switch (c) {
        case qe:
          return "Fragment";
        case rt:
          return "Portal";
        case Ye:
          return "Profiler";
        case $e:
          return "StrictMode";
        case kt:
          return "Suspense";
        case mt:
          return "SuspenseList";
      }
      if (typeof c == "object")
        switch (c.$$typeof) {
          case ot:
            var d = c;
            return Et(d) + ".Consumer";
          case zt:
            var T = c;
            return Et(T._context) + ".Provider";
          case Dt:
            return ft(c, c.render, "ForwardRef");
          case rn:
            var C = c.displayName || null;
            return C !== null ? C : Ze(c.type) || "Memo";
          case ae: {
            var P = c, V = P._payload, J = P._init;
            try {
              return Ze(J(V));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function Te(c, d, T) {
      var C = d.displayName || d.name || "";
      return c.displayName || (C !== "" ? T + "(" + C + ")" : T);
    }
    function tt(c) {
      return c.displayName || "Context";
    }
    function pt(c) {
      var d = c.tag, T = c.type;
      switch (d) {
        case Ot:
          return "Cache";
        case be:
          var C = T;
          return tt(C) + ".Consumer";
        case we:
          var P = T;
          return tt(P._context) + ".Provider";
        case De:
          return "DehydratedFragment";
        case de:
          return Te(T, T.render, "ForwardRef");
        case me:
          return "Fragment";
        case se:
          return T;
        case fe:
          return "Portal";
        case K:
          return "Root";
        case he:
          return "Text";
        case Ce:
          return Ze(T);
        case Ee:
          return T === $e ? "StrictMode" : "Mode";
        case Fe:
          return "Offscreen";
        case ye:
          return "Profiler";
        case Pe:
          return "Scope";
        case X:
          return "Suspense";
        case Ne:
          return "SuspenseList";
        case st:
          return "TracingMarker";
        case ee:
        case Y:
        case Ae:
        case Z:
        case q:
        case ue:
          if (typeof T == "function")
            return T.displayName || T.name || null;
          if (typeof T == "string")
            return T;
          break;
      }
      return null;
    }
    var ve = (
      /*                      */
      0
    ), Pt = (
      /*                */
      1
    ), He = (
      /*                    */
      2
    ), dt = (
      /*                       */
      4
    ), ln = (
      /*           */
      He | dt
    ), Un = (
      /*                */
      16
    ), jn = (
      /*                 */
      32
    ), cr = (
      /*                     */
      64
    ), En = (
      /*                   */
      128
    ), tr = (
      /*            */
      256
    ), fr = (
      /*                          */
      512
    ), Hn = (
      /*                     */
      1024
    ), mi = (
      /*                      */
      2048
    ), Vr = (
      /*                    */
      4096
    ), Gr = (
      /*           */
      Vr | dt
    ), Or = (
      /*                   */
      8192
    ), Ui = (
      /*             */
      16384
    ), fi = mi | dt | cr | fr | Hn | Ui, ke = (
      /*               */
      32767
    ), Ht = (
      /*                   */
      32768
    ), Jt = (
      /*                */
      65536
    ), pn = (
      /* */
      131072
    ), _e = (
      /*                       */
      1048576
    ), Qe = (
      /*                    */
      2097152
    ), at = (
      /*                 */
      4194304
    ), je = (
      /*                */
      8388608
    ), vt = (
      /*               */
      16777216
    ), sn = (
      /*              */
      33554432
    ), vn = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      dt | Hn | 0
    ), Mn = He | dt | Un | jn | fr | Vr | Or, zn = dt | cr | fr | Or, pr = mi | Un, Mt = at | je | Qe, dr = o.ReactCurrentOwner;
    function Wr(c) {
      var d = c, T = c;
      if (c.alternate)
        for (; d.return; )
          d = d.return;
      else {
        var C = d;
        do
          d = C, (d.flags & (He | Vr)) !== ve && (T = d.return), C = d.return;
        while (C);
      }
      return d.tag === K ? T : null;
    }
    function Rn(c) {
      return Wr(c) === c;
    }
    function Ji(c) {
      {
        var d = dr.current;
        if (d !== null && d.tag === ee) {
          var T = d, C = T.stateNode;
          C._warnedAboutRefsInRender || p("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", pt(T) || "A component"), C._warnedAboutRefsInRender = !0;
        }
      }
      var P = E(c);
      return P ? Wr(P) === P : !1;
    }
    function Ca(c) {
      if (Wr(c) !== c)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function li(c) {
      var d = c.alternate;
      if (!d) {
        var T = Wr(c);
        if (T === null)
          throw new Error("Unable to find node on an unmounted component.");
        return T !== c ? null : c;
      }
      for (var C = c, P = d; ; ) {
        var V = C.return;
        if (V === null)
          break;
        var J = V.alternate;
        if (J === null) {
          var ce = V.return;
          if (ce !== null) {
            C = P = ce;
            continue;
          }
          break;
        }
        if (V.child === J.child) {
          for (var ge = V.child; ge; ) {
            if (ge === C)
              return Ca(V), c;
            if (ge === P)
              return Ca(V), d;
            ge = ge.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (C.return !== P.return)
          C = V, P = J;
        else {
          for (var Oe = !1, Ve = V.child; Ve; ) {
            if (Ve === C) {
              Oe = !0, C = V, P = J;
              break;
            }
            if (Ve === P) {
              Oe = !0, P = V, C = J;
              break;
            }
            Ve = Ve.sibling;
          }
          if (!Oe) {
            for (Ve = J.child; Ve; ) {
              if (Ve === C) {
                Oe = !0, C = J, P = V;
                break;
              }
              if (Ve === P) {
                Oe = !0, P = J, C = V;
                break;
              }
              Ve = Ve.sibling;
            }
            if (!Oe)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (C.alternate !== P)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (C.tag !== K)
        throw new Error("Unable to find node on an unmounted component.");
      return C.stateNode.current === C ? c : d;
    }
    function qn(c) {
      var d = li(c);
      return d !== null ? br(d) : null;
    }
    function br(c) {
      if (c.tag === se || c.tag === he)
        return c;
      for (var d = c.child; d !== null; ) {
        var T = br(d);
        if (T !== null)
          return T;
        d = d.sibling;
      }
      return null;
    }
    function hr(c) {
      var d = li(c);
      return d !== null ? di(d) : null;
    }
    function di(c) {
      if (c.tag === se || c.tag === he)
        return c;
      for (var d = c.child; d !== null; ) {
        if (d.tag !== fe) {
          var T = di(d);
          if (T !== null)
            return T;
        }
        d = d.sibling;
      }
      return null;
    }
    var ha = Array.isArray;
    function Kr(c) {
      return ha(c);
    }
    var Co = e.getPublicInstance, Ri = e.getRootHostContext, Ai = e.getChildHostContext, Ea = e.prepareForCommit, bi = e.resetAfterCommit, ns = e.createInstance, Ro = e.appendInitialChild, Ra = e.finalizeInitialChildren, Ao = e.prepareUpdate, kl = e.shouldSetTextContent, Ts = e.createTextInstance, bd = e.scheduleTimeout, Wo = e.cancelTimeout, Br = e.noTimeout;
    e.now;
    var rs = e.isPrimaryRenderer, Fl = e.warnsIfNotActing, Do = e.supportsMutation, Hr = e.supportsPersistence, pa = e.supportsHydration, ku = e.getInstanceFromNode;
    e.beforeActiveInstanceBlur, e.afterActiveInstanceBlur;
    var rr = e.preparePortalMount;
    e.preparePortalMount, e.getInstanceFromScope;
    var ml = e.getCurrentEventPriority, Ni = e.detachDeletedInstance, gr = e.supportsMicrotasks, Lo = e.scheduleMicrotask, oo = e.supportsTestSelectors, oa = e.findFiberRoot, Ti = e.getBoundingRect, Td = e.getTextContent, Qr = e.isHiddenSubtree, Aa = e.matchAccessibilityRole, zl = e.setFocusIfFocusable, jo = e.setupIntersectionObserver, Il = e.appendChild, vl = e.appendChildToContainer, ws = e.commitTextUpdate, Ms = e.commitMount, Fu = e.commitUpdate, vo = e.insertBefore, ma = e.insertInContainerBefore, $s = e.removeChild, Oo = e.removeChildFromContainer, Bl = e.resetTextContent, zu = e.hideInstance, Po = e.hideTextInstance, Iu = e.unhideInstance, is = e.unhideTextInstance, ie = e.clearContainer, Ie = e.cloneInstance, ct = e.createContainerChildSet, Ut = e.appendChildToContainerChildSet, tn = e.finalizeContainerChildren, $n = e.replaceContainerChildren;
    e.getOffscreenContainerType;
    var yn = e.getOffscreenContainerProps, Zn = e.cloneHiddenInstance, Jn = e.cloneHiddenTextInstance, Tr = e.canHydrateInstance, Mr = e.canHydrateTextInstance, _r = e.canHydrateSuspenseInstance, Zr = e.isSuspenseInstancePending, vi = e.isSuspenseInstanceFallback, ii = e.registerSuspenseInstanceRetry, Hl = e.getNextHydratableSibling, gl = e.getFirstHydratableChild, pu = e.getFirstHydratableChildWithinContainer, gh = e.getFirstHydratableChildWithinSuspenseInstance, mu = e.hydrateInstance, Nf = e.hydrateTextInstance, yh = e.hydrateSuspenseInstance, vm = e.getNextHydratableInstanceAfterSuspenseInstance, gm = e.commitHydratedContainer, ym = e.commitHydratedSuspenseInstance, Sm = e.clearSuspenseBoundary, _m = e.clearSuspenseBoundaryFromContainer, Cv = e.shouldDeleteUnhydratedTailInstances, xm = e.didNotMatchHydratedContainerTextInstance, wd = e.didNotMatchHydratedTextInstance, kf = e.didNotHydrateInstanceWithinContainer, vu = e.didNotHydrateInstanceWithinSuspenseInstance, Em = e.didNotHydrateInstance, yl = e.didNotFindHydratableInstanceWithinContainer, Ys = e.didNotFindHydratableTextInstanceWithinContainer, Yc = e.didNotFindHydratableSuspenseInstanceWithinContainer, Xc = e.didNotFindHydratableInstanceWithinSuspenseInstance, gu = e.didNotFindHydratableTextInstanceWithinSuspenseInstance, Ff = e.didNotFindHydratableSuspenseInstanceWithinSuspenseInstance, Xs = e.didNotFindHydratableInstance, Bu = e.didNotFindHydratableTextInstance, Wa = e.didNotFindHydratableSuspenseInstance, Fa = e.errorHydratingContainer, za = 0, ea, Md, as, bm, Tm, Cd, qc;
    function Rv() {
    }
    Rv.__reactDisabledLog = !0;
    function vp() {
      {
        if (za === 0) {
          ea = console.log, Md = console.info, as = console.warn, bm = console.error, Tm = console.group, Cd = console.groupCollapsed, qc = console.groupEnd;
          var c = {
            configurable: !0,
            enumerable: !0,
            value: Rv,
            writable: !0
          };
          Object.defineProperties(console, {
            info: c,
            log: c,
            warn: c,
            error: c,
            group: c,
            groupCollapsed: c,
            groupEnd: c
          });
        }
        za++;
      }
    }
    function Rd() {
      {
        if (za--, za === 0) {
          var c = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: _({}, c, {
              value: ea
            }),
            info: _({}, c, {
              value: Md
            }),
            warn: _({}, c, {
              value: as
            }),
            error: _({}, c, {
              value: bm
            }),
            group: _({}, c, {
              value: Tm
            }),
            groupCollapsed: _({}, c, {
              value: Cd
            }),
            groupEnd: _({}, c, {
              value: qc
            })
          });
        }
        za < 0 && p("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Sh = o.ReactCurrentDispatcher, zf;
    function qs(c, d, T) {
      {
        if (zf === void 0)
          try {
            throw Error();
          } catch (P) {
            var C = P.stack.trim().match(/\n( *(at )?)/);
            zf = C && C[1] || "";
          }
        return `
` + zf + c;
      }
    }
    var Kc = !1, pc;
    {
      var Hu = typeof WeakMap == "function" ? WeakMap : Map;
      pc = new Hu();
    }
    function gp(c, d) {
      if (!c || Kc)
        return "";
      {
        var T = pc.get(c);
        if (T !== void 0)
          return T;
      }
      var C;
      Kc = !0;
      var P = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var V;
      V = Sh.current, Sh.current = null, vp();
      try {
        if (d) {
          var J = function() {
            throw Error();
          };
          if (Object.defineProperty(J.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(J, []);
            } catch (an) {
              C = an;
            }
            Reflect.construct(c, [], J);
          } else {
            try {
              J.call();
            } catch (an) {
              C = an;
            }
            c.call(J.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (an) {
            C = an;
          }
          c();
        }
      } catch (an) {
        if (an && C && typeof an.stack == "string") {
          for (var ce = an.stack.split(`
`), ge = C.stack.split(`
`), Oe = ce.length - 1, Ve = ge.length - 1; Oe >= 1 && Ve >= 0 && ce[Oe] !== ge[Ve]; )
            Ve--;
          for (; Oe >= 1 && Ve >= 0; Oe--, Ve--)
            if (ce[Oe] !== ge[Ve]) {
              if (Oe !== 1 || Ve !== 1)
                do
                  if (Oe--, Ve--, Ve < 0 || ce[Oe] !== ge[Ve]) {
                    var gt = `
` + ce[Oe].replace(" at new ", " at ");
                    return c.displayName && gt.includes("<anonymous>") && (gt = gt.replace("<anonymous>", c.displayName)), typeof c == "function" && pc.set(c, gt), gt;
                  }
                while (Oe >= 1 && Ve >= 0);
              break;
            }
        }
      } finally {
        Kc = !1, Sh.current = V, Rd(), Error.prepareStackTrace = P;
      }
      var Ft = c ? c.displayName || c.name : "", Gt = Ft ? qs(Ft) : "";
      return typeof c == "function" && pc.set(c, Gt), Gt;
    }
    function Ad(c, d, T) {
      return gp(c, !0);
    }
    function Cs(c, d, T) {
      return gp(c, !1);
    }
    function Dd(c) {
      var d = c.prototype;
      return !!(d && d.isReactComponent);
    }
    function Qc(c, d, T) {
      if (c == null)
        return "";
      if (typeof c == "function")
        return gp(c, Dd(c));
      if (typeof c == "string")
        return qs(c);
      switch (c) {
        case kt:
          return qs("Suspense");
        case mt:
          return qs("SuspenseList");
      }
      if (typeof c == "object")
        switch (c.$$typeof) {
          case Dt:
            return Cs(c.render);
          case rn:
            return Qc(c.type, d, T);
          case ae: {
            var C = c, P = C._payload, V = C._init;
            try {
              return Qc(V(P), d, T);
            } catch {
            }
          }
        }
      return "";
    }
    var yu = Object.prototype.hasOwnProperty, yp = {}, Ld = o.ReactDebugCurrentFrame;
    function Sp(c) {
      if (c) {
        var d = c._owner, T = Qc(c.type, c._source, d ? d.type : null);
        Ld.setExtraStackFrame(T);
      } else
        Ld.setExtraStackFrame(null);
    }
    function Vl(c, d, T, C, P) {
      {
        var V = Function.call.bind(yu);
        for (var J in c)
          if (V(c, J)) {
            var ce = void 0;
            try {
              if (typeof c[J] != "function") {
                var ge = Error((C || "React class") + ": " + T + " type `" + J + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof c[J] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw ge.name = "Invariant Violation", ge;
              }
              ce = c[J](d, J, C, T, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (Oe) {
              ce = Oe;
            }
            ce && !(ce instanceof Error) && (Sp(P), p("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", C || "React class", T, J, typeof ce), Sp(null)), ce instanceof Error && !(ce.message in yp) && (yp[ce.message] = !0, Sp(P), p("Failed %s type: %s", T, ce.message), Sp(null));
          }
      }
    }
    var va = [], Od;
    Od = [];
    var ja = -1;
    function Sl(c) {
      return {
        current: c
      };
    }
    function go(c, d) {
      if (ja < 0) {
        p("Unexpected pop.");
        return;
      }
      d !== Od[ja] && p("Unexpected Fiber popped."), c.current = va[ja], va[ja] = null, Od[ja] = null, ja--;
    }
    function qi(c, d, T) {
      ja++, va[ja] = c.current, Od[ja] = T, c.current = d;
    }
    var Zc;
    Zc = {};
    var ui = {};
    Object.freeze(ui);
    var ki = Sl(ui), Wi = Sl(!1), Pd = ui;
    function yo(c, d, T) {
      return T && Gl(d) ? Pd : ki.current;
    }
    function If(c, d, T) {
      {
        var C = c.stateNode;
        C.__reactInternalMemoizedUnmaskedChildContext = d, C.__reactInternalMemoizedMaskedChildContext = T;
      }
    }
    function mc(c, d) {
      {
        var T = c.type, C = T.contextTypes;
        if (!C)
          return ui;
        var P = c.stateNode;
        if (P && P.__reactInternalMemoizedUnmaskedChildContext === d)
          return P.__reactInternalMemoizedMaskedChildContext;
        var V = {};
        for (var J in C)
          V[J] = d[J];
        {
          var ce = pt(c) || "Unknown";
          Vl(C, V, "context", ce);
        }
        return P && If(c, d, V), V;
      }
    }
    function so() {
      return Wi.current;
    }
    function Gl(c) {
      {
        var d = c.childContextTypes;
        return d != null;
      }
    }
    function Jc(c) {
      go(Wi, c), go(ki, c);
    }
    function Vu(c) {
      go(Wi, c), go(ki, c);
    }
    function Su(c, d, T) {
      {
        if (ki.current !== ui)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        qi(ki, d, c), qi(Wi, T, c);
      }
    }
    function Wl(c, d, T) {
      {
        var C = c.stateNode, P = d.childContextTypes;
        if (typeof C.getChildContext != "function") {
          {
            var V = pt(c) || "Unknown";
            Zc[V] || (Zc[V] = !0, p("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", V, V));
          }
          return T;
        }
        var J = C.getChildContext();
        for (var ce in J)
          if (!(ce in P))
            throw new Error((pt(c) || "Unknown") + '.getChildContext(): key "' + ce + '" is not defined in childContextTypes.');
        {
          var ge = pt(c) || "Unknown";
          Vl(P, J, "child context", ge);
        }
        return _({}, T, J);
      }
    }
    function sa(c) {
      {
        var d = c.stateNode, T = d && d.__reactInternalMemoizedMergedChildContext || ui;
        return Pd = ki.current, qi(ki, T, c), qi(Wi, Wi.current, c), !0;
      }
    }
    function Ud(c, d, T) {
      {
        var C = c.stateNode;
        if (!C)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (T) {
          var P = Wl(c, d, Pd);
          C.__reactInternalMemoizedMergedChildContext = P, go(Wi, c), go(ki, c), qi(ki, P, c), qi(Wi, T, c);
        } else
          go(Wi, c), qi(Wi, T, c);
      }
    }
    function _p(c) {
      {
        if (!Rn(c) || c.tag !== ee)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var d = c;
        do {
          switch (d.tag) {
            case K:
              return d.stateNode.context;
            case ee: {
              var T = d.type;
              if (Gl(T))
                return d.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          d = d.return;
        } while (d !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var Bf = 0, wm = 1, wr = (
      /*                         */
      0
    ), ji = (
      /*                 */
      1
    ), jr = (
      /*                    */
      2
    ), ba = (
      /*               */
      8
    ), $o = (
      /*              */
      16
    ), _h = Math.clz32 ? Math.clz32 : Mm, xh = Math.log, Hf = Math.LN2;
    function Mm(c) {
      var d = c >>> 0;
      return d === 0 ? 32 : 31 - (xh(d) / Hf | 0) | 0;
    }
    var Eh = 31, Zt = (
      /*                        */
      0
    ), Pr = (
      /*                          */
      0
    ), kr = (
      /*                        */
      1
    ), Ks = (
      /*    */
      2
    ), _l = (
      /*            */
      4
    ), vc = (
      /*            */
      8
    ), jl = (
      /*                    */
      16
    ), gc = (
      /*                */
      32
    ), yc = (
      /*                       */
      4194240
    ), _u = (
      /*                        */
      64
    ), xp = (
      /*                        */
      128
    ), Ep = (
      /*                        */
      256
    ), Cm = (
      /*                        */
      512
    ), bh = (
      /*                        */
      1024
    ), Nd = (
      /*                        */
      2048
    ), kd = (
      /*                        */
      4096
    ), Vf = (
      /*                        */
      8192
    ), ef = (
      /*                        */
      16384
    ), Fd = (
      /*                       */
      32768
    ), tf = (
      /*                       */
      65536
    ), Th = (
      /*                       */
      131072
    ), zd = (
      /*                       */
      262144
    ), bp = (
      /*                       */
      524288
    ), Rm = (
      /*                       */
      1048576
    ), Gu = (
      /*                       */
      2097152
    ), Qs = (
      /*                            */
      130023424
    ), Wu = (
      /*                             */
      4194304
    ), ju = (
      /*                             */
      8388608
    ), lo = (
      /*                             */
      16777216
    ), Sc = (
      /*                             */
      33554432
    ), Zs = (
      /*                             */
      67108864
    ), Gf = Wu, Wf = (
      /*          */
      134217728
    ), Id = (
      /*                                 */
      268435455
    ), os = (
      /*               */
      268435456
    ), Js = (
      /*                       */
      536870912
    ), Di = (
      /*                   */
      1073741824
    );
    function ir(c) {
      {
        if (c & kr)
          return "Sync";
        if (c & Ks)
          return "InputContinuousHydration";
        if (c & _l)
          return "InputContinuous";
        if (c & vc)
          return "DefaultHydration";
        if (c & jl)
          return "Default";
        if (c & gc)
          return "TransitionHydration";
        if (c & yc)
          return "Transition";
        if (c & Qs)
          return "Retry";
        if (c & Wf)
          return "SelectiveHydration";
        if (c & os)
          return "IdleHydration";
        if (c & Js)
          return "Idle";
        if (c & Di)
          return "Offscreen";
      }
    }
    var Li = -1, Jr = _u, Yn = Wu;
    function hi(c) {
      switch (xu(c)) {
        case kr:
          return kr;
        case Ks:
          return Ks;
        case _l:
          return _l;
        case vc:
          return vc;
        case jl:
          return jl;
        case gc:
          return gc;
        case _u:
        case xp:
        case Ep:
        case Cm:
        case bh:
        case Nd:
        case kd:
        case Vf:
        case ef:
        case Fd:
        case tf:
        case Th:
        case zd:
        case bp:
        case Rm:
        case Gu:
          return c & yc;
        case Wu:
        case ju:
        case lo:
        case Sc:
        case Zs:
          return c & Qs;
        case Wf:
          return Wf;
        case os:
          return os;
        case Js:
          return Js;
        case Di:
          return Di;
        default:
          return p("Should have found matching lanes. This is a bug in React."), c;
      }
    }
    function wi(c, d) {
      var T = c.pendingLanes;
      if (T === Zt)
        return Zt;
      var C = Zt, P = c.suspendedLanes, V = c.pingedLanes, J = T & Id;
      if (J !== Zt) {
        var ce = J & ~P;
        if (ce !== Zt)
          C = hi(ce);
        else {
          var ge = J & V;
          ge !== Zt && (C = hi(ge));
        }
      } else {
        var Oe = T & ~P;
        Oe !== Zt ? C = hi(Oe) : V !== Zt && (C = hi(V));
      }
      if (C === Zt)
        return Zt;
      if (d !== Zt && d !== C && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (d & P) === Zt) {
        var Ve = xu(C), gt = xu(d);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          Ve >= gt || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          Ve === jl && (gt & yc) !== Zt
        )
          return d;
      }
      (C & _l) !== Zt && (C |= T & jl);
      var Ft = c.entangledLanes;
      if (Ft !== Zt)
        for (var Gt = c.entanglements, an = C & Ft; an > 0; ) {
          var fn = $a(an), vr = 1 << fn;
          C |= Gt[fn], an &= ~vr;
        }
      return C;
    }
    function $u(c, d) {
      for (var T = c.eventTimes, C = Li; d > 0; ) {
        var P = $a(d), V = 1 << P, J = T[P];
        J > C && (C = J), d &= ~V;
      }
      return C;
    }
    function xr(c, d) {
      switch (c) {
        case kr:
        case Ks:
        case _l:
          return d + 250;
        case vc:
        case jl:
        case gc:
        case _u:
        case xp:
        case Ep:
        case Cm:
        case bh:
        case Nd:
        case kd:
        case Vf:
        case ef:
        case Fd:
        case tf:
        case Th:
        case zd:
        case bp:
        case Rm:
        case Gu:
          return d + 5e3;
        case Wu:
        case ju:
        case lo:
        case Sc:
        case Zs:
          return Li;
        case Wf:
        case os:
        case Js:
        case Di:
          return Li;
        default:
          return p("Should have found matching lanes. This is a bug in React."), Li;
      }
    }
    function Ia(c, d) {
      for (var T = c.pendingLanes, C = c.suspendedLanes, P = c.pingedLanes, V = c.expirationTimes, J = T; J > 0; ) {
        var ce = $a(J), ge = 1 << ce, Oe = V[ce];
        Oe === Li ? ((ge & C) === Zt || (ge & P) !== Zt) && (V[ce] = xr(ge, d)) : Oe <= d && (c.expiredLanes |= ge), J &= ~ge;
      }
    }
    function Rs(c) {
      return hi(c.pendingLanes);
    }
    function el(c) {
      var d = c.pendingLanes & ~Di;
      return d !== Zt ? d : d & Di ? Di : Zt;
    }
    function ga(c) {
      return (c & kr) !== Zt;
    }
    function tl(c) {
      return (c & Id) !== Zt;
    }
    function _c(c) {
      return (c & Qs) === c;
    }
    function jf(c) {
      return (c & yc) === c;
    }
    function xc(c, d) {
      var T = Ks | _l | vc | jl;
      return (d & T) !== Zt;
    }
    function Av(c, d) {
      return (d & c.expiredLanes) !== Zt;
    }
    function As(c) {
      return (c & yc) !== 0;
    }
    function Uo() {
      var c = Jr;
      return Jr <<= 1, Jr & yc || (Jr = _u), c;
    }
    function wh() {
      var c = Yn;
      return Yn <<= 1, Yn & Qs || (Yn = Wu), c;
    }
    function xu(c) {
      return c & -c;
    }
    function $f(c) {
      return xu(c);
    }
    function $a(c) {
      return 31 - _h(c);
    }
    function Yu(c) {
      return $a(c);
    }
    function Mi(c, d) {
      return (c & d) !== Zt;
    }
    function Eu(c, d) {
      return (c & d) === d;
    }
    function Rr(c, d) {
      return c | d;
    }
    function So(c, d) {
      return c & ~d;
    }
    function Ba(c, d) {
      return c & d;
    }
    function Xu(c) {
      return c;
    }
    function cn(c, d) {
      return c !== Pr && c < d ? c : d;
    }
    function xl(c) {
      for (var d = [], T = 0; T < Eh; T++)
        d.push(c);
      return d;
    }
    function No(c, d, T) {
      c.pendingLanes |= d, d !== Js && (c.suspendedLanes = Zt, c.pingedLanes = Zt);
      var C = c.eventTimes, P = Yu(d);
      C[P] = T;
    }
    function Am(c, d) {
      c.suspendedLanes |= d, c.pingedLanes &= ~d;
      for (var T = c.expirationTimes, C = d; C > 0; ) {
        var P = $a(C), V = 1 << P;
        T[P] = Li, C &= ~V;
      }
    }
    function Tp(c, d, T) {
      c.pingedLanes |= c.suspendedLanes & d;
    }
    function nf(c, d) {
      var T = c.pendingLanes & ~d;
      c.pendingLanes = d, c.suspendedLanes = 0, c.pingedLanes = 0, c.expiredLanes &= d, c.mutableReadLanes &= d, c.entangledLanes &= d;
      for (var C = c.entanglements, P = c.eventTimes, V = c.expirationTimes, J = T; J > 0; ) {
        var ce = $a(J), ge = 1 << ce;
        C[ce] = Zt, P[ce] = Li, V[ce] = Li, J &= ~ge;
      }
    }
    function ko(c, d) {
      for (var T = c.entangledLanes |= d, C = c.entanglements, P = T; P; ) {
        var V = $a(P), J = 1 << V;
        // Is this one of the newly entangled lanes?
        J & d | // Is this lane transitively entangled with the newly entangled lanes?
        C[V] & d && (C[V] |= d), P &= ~J;
      }
    }
    function Ds(c, d) {
      var T = xu(d), C;
      switch (T) {
        case _l:
          C = Ks;
          break;
        case jl:
          C = vc;
          break;
        case _u:
        case xp:
        case Ep:
        case Cm:
        case bh:
        case Nd:
        case kd:
        case Vf:
        case ef:
        case Fd:
        case tf:
        case Th:
        case zd:
        case bp:
        case Rm:
        case Gu:
        case Wu:
        case ju:
        case lo:
        case Sc:
        case Zs:
          C = gc;
          break;
        case Js:
          C = os;
          break;
        default:
          C = Pr;
          break;
      }
      return (C & (c.suspendedLanes | d)) !== Pr ? Pr : C;
    }
    function la(c, d, T) {
      if (Xa)
        for (var C = c.pendingUpdatersLaneMap; T > 0; ) {
          var P = Yu(T), V = 1 << P, J = C[P];
          J.add(d), T &= ~V;
        }
    }
    function El(c, d) {
      if (Xa)
        for (var T = c.pendingUpdatersLaneMap, C = c.memoizedUpdaters; d > 0; ) {
          var P = Yu(d), V = 1 << P, J = T[P];
          J.size > 0 && (J.forEach(function(ce) {
            var ge = ce.alternate;
            (ge === null || !C.has(ge)) && C.add(ce);
          }), J.clear()), d &= ~V;
        }
    }
    var $l = kr, Bd = _l, rf = jl, Hd = Js, Yf = Pr;
    function Ls() {
      return Yf;
    }
    function _o(c) {
      Yf = c;
    }
    function Ta(c, d) {
      var T = Yf;
      try {
        return Yf = c, d();
      } finally {
        Yf = T;
      }
    }
    function Mh(c, d) {
      return c !== 0 && c < d ? c : d;
    }
    function Dm(c, d) {
      return c === 0 || c > d ? c : d;
    }
    function bl(c, d) {
      return c !== 0 && c < d;
    }
    function bu(c) {
      var d = xu(c);
      return bl($l, d) ? bl(Bd, d) ? tl(d) ? rf : Hd : Bd : $l;
    }
    var Ch = i.unstable_scheduleCallback, af = i.unstable_cancelCallback, Lm = i.unstable_shouldYield, Rh = i.unstable_requestPaint, ta = i.unstable_now, Da = i.unstable_ImmediatePriority, gn = i.unstable_UserBlockingPriority, Ki = i.unstable_NormalPriority, Ya = i.unstable_IdlePriority, wp = i.unstable_yieldValue, Om = i.unstable_setDisableYieldValue, Os = null, La = null, _n = null, na = !1, Xa = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function Ec(c) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var d = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (d.isDisabled)
        return !0;
      if (!d.supportsFiber)
        return p("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        H && (c = _({}, c, {
          getLaneLabelMap: of,
          injectProfilingHooks: nl
        })), Os = d.inject(c), La = d;
      } catch (T) {
        p("React instrumentation encountered an error: %s.", T);
      }
      return !!d.checkDCE;
    }
    function Oa(c, d) {
      if (La && typeof La.onScheduleFiberRoot == "function")
        try {
          La.onScheduleFiberRoot(Os, c, d);
        } catch (T) {
          na || (na = !0, p("React instrumentation encountered an error: %s", T));
        }
    }
    function $r(c, d) {
      if (La && typeof La.onCommitFiberRoot == "function")
        try {
          var T = (c.current.flags & En) === En;
          if (B) {
            var C;
            switch (d) {
              case $l:
                C = Da;
                break;
              case Bd:
                C = gn;
                break;
              case rf:
                C = Ki;
                break;
              case Hd:
                C = Ya;
                break;
              default:
                C = Ki;
                break;
            }
            La.onCommitFiberRoot(Os, c, C, T);
          }
        } catch (P) {
          na || (na = !0, p("React instrumentation encountered an error: %s", P));
        }
    }
    function ua(c) {
      if (La && typeof La.onPostCommitFiberRoot == "function")
        try {
          La.onPostCommitFiberRoot(Os, c);
        } catch (d) {
          na || (na = !0, p("React instrumentation encountered an error: %s", d));
        }
    }
    function ya(c) {
      if (La && typeof La.onCommitFiberUnmount == "function")
        try {
          La.onCommitFiberUnmount(Os, c);
        } catch (d) {
          na || (na = !0, p("React instrumentation encountered an error: %s", d));
        }
    }
    function gi(c) {
      if (typeof wp == "function" && (Om(c), u(c)), La && typeof La.setStrictMode == "function")
        try {
          La.setStrictMode(Os, c);
        } catch (d) {
          na || (na = !0, p("React instrumentation encountered an error: %s", d));
        }
    }
    function nl(c) {
      _n = c;
    }
    function of() {
      {
        for (var c = /* @__PURE__ */ new Map(), d = 1, T = 0; T < Eh; T++) {
          var C = ir(d);
          c.set(d, C), d *= 2;
        }
        return c;
      }
    }
    function xo(c) {
      _n !== null && typeof _n.markCommitStarted == "function" && _n.markCommitStarted(c);
    }
    function Vd() {
      _n !== null && typeof _n.markCommitStopped == "function" && _n.markCommitStopped();
    }
    function qu(c) {
      _n !== null && typeof _n.markComponentRenderStarted == "function" && _n.markComponentRenderStarted(c);
    }
    function Tu() {
      _n !== null && typeof _n.markComponentRenderStopped == "function" && _n.markComponentRenderStopped();
    }
    function Xf(c) {
      _n !== null && typeof _n.markComponentPassiveEffectMountStarted == "function" && _n.markComponentPassiveEffectMountStarted(c);
    }
    function qf() {
      _n !== null && typeof _n.markComponentPassiveEffectMountStopped == "function" && _n.markComponentPassiveEffectMountStopped();
    }
    function rl(c) {
      _n !== null && typeof _n.markComponentPassiveEffectUnmountStarted == "function" && _n.markComponentPassiveEffectUnmountStarted(c);
    }
    function Pm() {
      _n !== null && typeof _n.markComponentPassiveEffectUnmountStopped == "function" && _n.markComponentPassiveEffectUnmountStopped();
    }
    function Kf(c) {
      _n !== null && typeof _n.markComponentLayoutEffectMountStarted == "function" && _n.markComponentLayoutEffectMountStarted(c);
    }
    function Gd() {
      _n !== null && typeof _n.markComponentLayoutEffectMountStopped == "function" && _n.markComponentLayoutEffectMountStopped();
    }
    function sf(c) {
      _n !== null && typeof _n.markComponentLayoutEffectUnmountStarted == "function" && _n.markComponentLayoutEffectUnmountStarted(c);
    }
    function Tl() {
      _n !== null && typeof _n.markComponentLayoutEffectUnmountStopped == "function" && _n.markComponentLayoutEffectUnmountStopped();
    }
    function wu(c, d, T) {
      _n !== null && typeof _n.markComponentErrored == "function" && _n.markComponentErrored(c, d, T);
    }
    function lf(c, d, T) {
      _n !== null && typeof _n.markComponentSuspended == "function" && _n.markComponentSuspended(c, d, T);
    }
    function wl(c) {
      _n !== null && typeof _n.markLayoutEffectsStarted == "function" && _n.markLayoutEffectsStarted(c);
    }
    function Ah() {
      _n !== null && typeof _n.markLayoutEffectsStopped == "function" && _n.markLayoutEffectsStopped();
    }
    function Mu(c) {
      _n !== null && typeof _n.markPassiveEffectsStarted == "function" && _n.markPassiveEffectsStarted(c);
    }
    function ar() {
      _n !== null && typeof _n.markPassiveEffectsStopped == "function" && _n.markPassiveEffectsStopped();
    }
    function Fr(c) {
      _n !== null && typeof _n.markRenderStarted == "function" && _n.markRenderStarted(c);
    }
    function or() {
      _n !== null && typeof _n.markRenderYielded == "function" && _n.markRenderYielded();
    }
    function ai() {
      _n !== null && typeof _n.markRenderStopped == "function" && _n.markRenderStopped();
    }
    function Fo(c) {
      _n !== null && typeof _n.markRenderScheduled == "function" && _n.markRenderScheduled(c);
    }
    function il(c, d) {
      _n !== null && typeof _n.markForceUpdateScheduled == "function" && _n.markForceUpdateScheduled(c, d);
    }
    function uf(c, d) {
      _n !== null && typeof _n.markStateUpdateScheduled == "function" && _n.markStateUpdateScheduled(c, d);
    }
    function Ps(c, d) {
      return c === d && (c !== 0 || 1 / c === 1 / d) || c !== c && d !== d;
    }
    var zo = typeof Object.is == "function" ? Object.is : Ps, yi = null, Bt = !1, ci = !1;
    function Kn(c) {
      yi === null ? yi = [c] : yi.push(c);
    }
    function Ku(c) {
      Bt = !0, Kn(c);
    }
    function al() {
      Bt && Yo();
    }
    function Yo() {
      if (!ci && yi !== null) {
        ci = !0;
        var c = 0, d = Ls();
        try {
          var T = !0, C = yi;
          for (_o($l); c < C.length; c++) {
            var P = C[c];
            do
              P = P(T);
            while (P !== null);
          }
          yi = null, Bt = !1;
        } catch (V) {
          throw yi !== null && (yi = yi.slice(c + 1)), Ch(Da, Yo), V;
        } finally {
          _o(d), ci = !1;
        }
      }
      return null;
    }
    function Fi(c) {
      var d = c.current.memoizedState;
      return d.isDehydrated;
    }
    var Qf = o.ReactCurrentBatchConfig, cf = null;
    function ff() {
      return Qf.transition;
    }
    function Xo(c, d) {
      if (zo(c, d))
        return !0;
      if (typeof c != "object" || c === null || typeof d != "object" || d === null)
        return !1;
      var T = Object.keys(c), C = Object.keys(d);
      if (T.length !== C.length)
        return !1;
      for (var P = 0; P < T.length; P++) {
        var V = T[P];
        if (!yu.call(d, V) || !zo(c[V], d[V]))
          return !1;
      }
      return !0;
    }
    function Ml(c) {
      switch (c._debugOwner && c._debugOwner.type, c._debugSource, c.tag) {
        case se:
          return qs(c.type);
        case Ce:
          return qs("Lazy");
        case X:
          return qs("Suspense");
        case Ne:
          return qs("SuspenseList");
        case Y:
        case Z:
        case ue:
          return Cs(c.type);
        case de:
          return Cs(c.type.render);
        case ee:
          return Ad(c.type);
        default:
          return "";
      }
    }
    function Zf(c) {
      try {
        var d = "", T = c;
        do
          d += Ml(T), T = T.return;
        while (T);
        return d;
      } catch (C) {
        return `
Error generating stack: ` + C.message + `
` + C.stack;
      }
    }
    var Wd = o.ReactDebugCurrentFrame, ss = null, Cl = !1;
    function Um() {
      {
        if (ss === null)
          return null;
        var c = ss._debugOwner;
        if (c !== null && typeof c < "u")
          return pt(c);
      }
      return null;
    }
    function bc() {
      return ss === null ? "" : Zf(ss);
    }
    function Eo() {
      Wd.getCurrentStack = null, ss = null, Cl = !1;
    }
    function Ci(c) {
      Wd.getCurrentStack = bc, ss = c, Cl = !1;
    }
    function Yl(c) {
      Cl = c;
    }
    var ol = {
      recordUnsafeLifecycleWarnings: function(c, d) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(c, d) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var Nm = function(c) {
        for (var d = null, T = c; T !== null; )
          T.mode & ba && (d = T), T = T.return;
        return d;
      }, Xl = function(c) {
        var d = [];
        return c.forEach(function(T) {
          d.push(T);
        }), d.sort().join(", ");
      }, df = [], Cu = [], ql = [], Io = [], Qu = [], Jf = [], ls = /* @__PURE__ */ new Set();
      ol.recordUnsafeLifecycleWarnings = function(c, d) {
        ls.has(c.type) || (typeof d.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        d.componentWillMount.__suppressDeprecationWarning !== !0 && df.push(c), c.mode & ba && typeof d.UNSAFE_componentWillMount == "function" && Cu.push(c), typeof d.componentWillReceiveProps == "function" && d.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && ql.push(c), c.mode & ba && typeof d.UNSAFE_componentWillReceiveProps == "function" && Io.push(c), typeof d.componentWillUpdate == "function" && d.componentWillUpdate.__suppressDeprecationWarning !== !0 && Qu.push(c), c.mode & ba && typeof d.UNSAFE_componentWillUpdate == "function" && Jf.push(c));
      }, ol.flushPendingUnsafeLifecycleWarnings = function() {
        var c = /* @__PURE__ */ new Set();
        df.length > 0 && (df.forEach(function(Ft) {
          c.add(pt(Ft) || "Component"), ls.add(Ft.type);
        }), df = []);
        var d = /* @__PURE__ */ new Set();
        Cu.length > 0 && (Cu.forEach(function(Ft) {
          d.add(pt(Ft) || "Component"), ls.add(Ft.type);
        }), Cu = []);
        var T = /* @__PURE__ */ new Set();
        ql.length > 0 && (ql.forEach(function(Ft) {
          T.add(pt(Ft) || "Component"), ls.add(Ft.type);
        }), ql = []);
        var C = /* @__PURE__ */ new Set();
        Io.length > 0 && (Io.forEach(function(Ft) {
          C.add(pt(Ft) || "Component"), ls.add(Ft.type);
        }), Io = []);
        var P = /* @__PURE__ */ new Set();
        Qu.length > 0 && (Qu.forEach(function(Ft) {
          P.add(pt(Ft) || "Component"), ls.add(Ft.type);
        }), Qu = []);
        var V = /* @__PURE__ */ new Set();
        if (Jf.length > 0 && (Jf.forEach(function(Ft) {
          V.add(pt(Ft) || "Component"), ls.add(Ft.type);
        }), Jf = []), d.size > 0) {
          var J = Xl(d);
          p(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, J);
        }
        if (C.size > 0) {
          var ce = Xl(C);
          p(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, ce);
        }
        if (V.size > 0) {
          var ge = Xl(V);
          p(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, ge);
        }
        if (c.size > 0) {
          var Oe = Xl(c);
          h(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, Oe);
        }
        if (T.size > 0) {
          var Ve = Xl(T);
          h(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, Ve);
        }
        if (P.size > 0) {
          var gt = Xl(P);
          h(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, gt);
        }
      };
      var hf = /* @__PURE__ */ new Map(), Kl = /* @__PURE__ */ new Set();
      ol.recordLegacyContextWarning = function(c, d) {
        var T = Nm(c);
        if (T === null) {
          p("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!Kl.has(c.type)) {
          var C = hf.get(T);
          (c.type.contextTypes != null || c.type.childContextTypes != null || d !== null && typeof d.getChildContext == "function") && (C === void 0 && (C = [], hf.set(T, C)), C.push(c));
        }
      }, ol.flushLegacyContextWarning = function() {
        hf.forEach(function(c, d) {
          if (c.length !== 0) {
            var T = c[0], C = /* @__PURE__ */ new Set();
            c.forEach(function(V) {
              C.add(pt(V) || "Component"), Kl.add(V.type);
            });
            var P = Xl(C);
            try {
              Ci(T), p(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, P);
            } finally {
              Eo();
            }
          }
        });
      }, ol.discardPendingWarnings = function() {
        df = [], Cu = [], ql = [], Io = [], Qu = [], Jf = [], hf = /* @__PURE__ */ new Map();
      };
    }
    function ed(c) {
      {
        var d = typeof Symbol == "function" && Symbol.toStringTag, T = d && c[Symbol.toStringTag] || c.constructor.name || "Object";
        return T;
      }
    }
    function pf(c) {
      try {
        return Ru(c), !1;
      } catch {
        return !0;
      }
    }
    function Ru(c) {
      return "" + c;
    }
    function Rl(c) {
      if (pf(c))
        return p("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", ed(c)), Ru(c);
    }
    function qg(c, d) {
      if (pf(c))
        return p("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", d, ed(c)), Ru(c);
    }
    function oi(c, d) {
      if (c && c.defaultProps) {
        var T = _({}, d), C = c.defaultProps;
        for (var P in C)
          T[P] === void 0 && (T[P] = C[P]);
        return T;
      }
      return d;
    }
    var td = Sl(null), mf;
    mf = {};
    var Zu = null, Tc = null, km = null, g = !1;
    function S() {
      Zu = null, Tc = null, km = null, g = !1;
    }
    function D() {
      g = !0;
    }
    function z() {
      g = !1;
    }
    function W(c, d, T) {
      rs ? (qi(td, d._currentValue, c), d._currentValue = T, d._currentRenderer !== void 0 && d._currentRenderer !== null && d._currentRenderer !== mf && p("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), d._currentRenderer = mf) : (qi(td, d._currentValue2, c), d._currentValue2 = T, d._currentRenderer2 !== void 0 && d._currentRenderer2 !== null && d._currentRenderer2 !== mf && p("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), d._currentRenderer2 = mf);
    }
    function te(c, d) {
      var T = td.current;
      go(td, d), rs ? c._currentValue = T : c._currentValue2 = T;
    }
    function Le(c, d, T) {
      for (var C = c; C !== null; ) {
        var P = C.alternate;
        if (Eu(C.childLanes, d) ? P !== null && !Eu(P.childLanes, d) && (P.childLanes = Rr(P.childLanes, d)) : (C.childLanes = Rr(C.childLanes, d), P !== null && (P.childLanes = Rr(P.childLanes, d))), C === T)
          break;
        C = C.return;
      }
      C !== T && p("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function nt(c, d, T) {
      It(c, d, T);
    }
    function It(c, d, T) {
      var C = c.child;
      for (C !== null && (C.return = c); C !== null; ) {
        var P = void 0, V = C.dependencies;
        if (V !== null) {
          P = C.child;
          for (var J = V.firstContext; J !== null; ) {
            if (J.context === d) {
              if (C.tag === ee) {
                var ce = $f(T), ge = mr(Li, ce);
                ge.tag = qa;
                var Oe = C.updateQueue;
                if (Oe !== null) {
                  var Ve = Oe.shared, gt = Ve.pending;
                  gt === null ? ge.next = ge : (ge.next = gt.next, gt.next = ge), Ve.pending = ge;
                }
              }
              C.lanes = Rr(C.lanes, T);
              var Ft = C.alternate;
              Ft !== null && (Ft.lanes = Rr(Ft.lanes, T)), Le(C.return, T, c), V.lanes = Rr(V.lanes, T);
              break;
            }
            J = J.next;
          }
        } else if (C.tag === we)
          P = C.type === c.type ? null : C.child;
        else if (C.tag === De) {
          var Gt = C.return;
          if (Gt === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Gt.lanes = Rr(Gt.lanes, T);
          var an = Gt.alternate;
          an !== null && (an.lanes = Rr(an.lanes, T)), Le(Gt, T, c), P = C.sibling;
        } else
          P = C.child;
        if (P !== null)
          P.return = C;
        else
          for (P = C; P !== null; ) {
            if (P === c) {
              P = null;
              break;
            }
            var fn = P.sibling;
            if (fn !== null) {
              fn.return = P.return, P = fn;
              break;
            }
            P = P.return;
          }
        C = P;
      }
    }
    function on(c, d) {
      Zu = c, Tc = null, km = null;
      var T = c.dependencies;
      if (T !== null) {
        var C = T.firstContext;
        C !== null && (Mi(T.lanes, d) && Q_(), T.firstContext = null);
      }
    }
    function mn(c) {
      g && p("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var d = rs ? c._currentValue : c._currentValue2;
      if (km !== c) {
        var T = {
          context: c,
          memoizedValue: d,
          next: null
        };
        if (Tc === null) {
          if (Zu === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          Tc = T, Zu.dependencies = {
            lanes: Zt,
            firstContext: T
          };
        } else
          Tc = Tc.next = T;
      }
      return d;
    }
    var yr = null;
    function sr(c) {
      yr === null ? yr = [c] : yr.push(c);
    }
    function ca() {
      if (yr !== null) {
        for (var c = 0; c < yr.length; c++) {
          var d = yr[c], T = d.interleaved;
          if (T !== null) {
            d.interleaved = null;
            var C = T.next, P = d.pending;
            if (P !== null) {
              var V = P.next;
              P.next = C, T.next = V;
            }
            d.pending = T;
          }
        }
        yr = null;
      }
    }
    var xn = 0, Si = 1, qa = 2, _t = 3, Xe = !1, Lt, Xt;
    Lt = !1, Xt = null;
    function Nn(c) {
      var d = {
        baseState: c.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: Zt
        },
        effects: null
      };
      c.updateQueue = d;
    }
    function zr(c, d) {
      var T = d.updateQueue, C = c.updateQueue;
      if (T === C) {
        var P = {
          baseState: C.baseState,
          firstBaseUpdate: C.firstBaseUpdate,
          lastBaseUpdate: C.lastBaseUpdate,
          shared: C.shared,
          effects: C.effects
        };
        d.updateQueue = P;
      }
    }
    function mr(c, d) {
      var T = {
        eventTime: c,
        lane: d,
        tag: xn,
        payload: null,
        callback: null,
        next: null
      };
      return T;
    }
    function ei(c, d, T) {
      var C = c.updateQueue;
      if (C !== null) {
        var P = C.shared;
        if (gx(c)) {
          var V = P.interleaved;
          V === null ? (d.next = d, sr(P)) : (d.next = V.next, V.next = d), P.interleaved = d;
        } else {
          var J = P.pending;
          J === null ? d.next = d : (d.next = J.next, J.next = d), P.pending = d;
        }
        Xt === P && !Lt && (p("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), Lt = !0);
      }
    }
    function Pa(c, d, T) {
      var C = d.updateQueue;
      if (C !== null) {
        var P = C.shared;
        if (As(T)) {
          var V = P.lanes;
          V = Ba(V, c.pendingLanes);
          var J = Rr(V, T);
          P.lanes = J, ko(c, J);
        }
      }
    }
    function ti(c, d) {
      var T = c.updateQueue, C = c.alternate;
      if (C !== null) {
        var P = C.updateQueue;
        if (T === P) {
          var V = null, J = null, ce = T.firstBaseUpdate;
          if (ce !== null) {
            var ge = ce;
            do {
              var Oe = {
                eventTime: ge.eventTime,
                lane: ge.lane,
                tag: ge.tag,
                payload: ge.payload,
                callback: ge.callback,
                next: null
              };
              J === null ? V = J = Oe : (J.next = Oe, J = Oe), ge = ge.next;
            } while (ge !== null);
            J === null ? V = J = d : (J.next = d, J = d);
          } else
            V = J = d;
          T = {
            baseState: P.baseState,
            firstBaseUpdate: V,
            lastBaseUpdate: J,
            shared: P.shared,
            effects: P.effects
          }, c.updateQueue = T;
          return;
        }
      }
      var Ve = T.lastBaseUpdate;
      Ve === null ? T.firstBaseUpdate = d : Ve.next = d, T.lastBaseUpdate = d;
    }
    function wc(c, d, T, C, P, V) {
      switch (T.tag) {
        case Si: {
          var J = T.payload;
          if (typeof J == "function") {
            D();
            var ce = J.call(V, C, P);
            {
              if (c.mode & ba) {
                gi(!0);
                try {
                  J.call(V, C, P);
                } finally {
                  gi(!1);
                }
              }
              z();
            }
            return ce;
          }
          return J;
        }
        case _t:
          c.flags = c.flags & ~Jt | En;
        case xn: {
          var ge = T.payload, Oe;
          if (typeof ge == "function") {
            D(), Oe = ge.call(V, C, P);
            {
              if (c.mode & ba) {
                gi(!0);
                try {
                  ge.call(V, C, P);
                } finally {
                  gi(!1);
                }
              }
              z();
            }
          } else
            Oe = ge;
          return Oe == null ? C : _({}, C, Oe);
        }
        case qa:
          return Xe = !0, C;
      }
      return C;
    }
    function Dh(c, d, T, C) {
      var P = c.updateQueue;
      Xe = !1, Xt = P.shared;
      var V = P.firstBaseUpdate, J = P.lastBaseUpdate, ce = P.shared.pending;
      if (ce !== null) {
        P.shared.pending = null;
        var ge = ce, Oe = ge.next;
        ge.next = null, J === null ? V = Oe : J.next = Oe, J = ge;
        var Ve = c.alternate;
        if (Ve !== null) {
          var gt = Ve.updateQueue, Ft = gt.lastBaseUpdate;
          Ft !== J && (Ft === null ? gt.firstBaseUpdate = Oe : Ft.next = Oe, gt.lastBaseUpdate = ge);
        }
      }
      if (V !== null) {
        var Gt = P.baseState, an = Zt, fn = null, vr = null, ni = null, Er = V;
        do {
          var to = Er.lane, no = Er.eventTime;
          if (Eu(C, to)) {
            if (ni !== null) {
              var qt = {
                eventTime: no,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: Pr,
                tag: Er.tag,
                payload: Er.payload,
                callback: Er.callback,
                next: null
              };
              ni = ni.next = qt;
            }
            Gt = wc(c, P, Er, Gt, d, T);
            var Tt = Er.callback;
            if (Tt !== null && // If the update was already committed, we should not queue its
            // callback again.
            Er.lane !== Pr) {
              c.flags |= cr;
              var hn = P.effects;
              hn === null ? P.effects = [Er] : hn.push(Er);
            }
          } else {
            var wt = {
              eventTime: no,
              lane: to,
              tag: Er.tag,
              payload: Er.payload,
              callback: Er.callback,
              next: null
            };
            ni === null ? (vr = ni = wt, fn = Gt) : ni = ni.next = wt, an = Rr(an, to);
          }
          if (Er = Er.next, Er === null) {
            if (ce = P.shared.pending, ce === null)
              break;
            var er = ce, bn = er.next;
            er.next = null, Er = bn, P.lastBaseUpdate = er, P.shared.pending = null;
          }
        } while (!0);
        ni === null && (fn = Gt), P.baseState = fn, P.firstBaseUpdate = vr, P.lastBaseUpdate = ni;
        var Ir = P.shared.interleaved;
        if (Ir !== null) {
          var Yi = Ir;
          do
            an = Rr(an, Yi.lane), Yi = Yi.next;
          while (Yi !== Ir);
        } else
          V === null && (P.shared.lanes = Zt);
        Uy(an), c.lanes = an, c.memoizedState = Gt;
      }
      Xt = null;
    }
    function T0(c, d) {
      if (typeof c != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + c));
      c.call(d);
    }
    function Mp() {
      Xe = !1;
    }
    function Kg() {
      return Xe;
    }
    function Qg(c, d, T) {
      var C = d.effects;
      if (d.effects = null, C !== null)
        for (var P = 0; P < C.length; P++) {
          var V = C[P], J = V.callback;
          J !== null && (V.callback = null, T0(J, T));
        }
    }
    var Fm = {}, Zg = new r.Component().refs, Us, us, vf, Cp, jd, Ju, bo, Rp, Ns, w0;
    {
      Us = /* @__PURE__ */ new Set(), us = /* @__PURE__ */ new Set(), vf = /* @__PURE__ */ new Set(), Cp = /* @__PURE__ */ new Set(), Rp = /* @__PURE__ */ new Set(), jd = /* @__PURE__ */ new Set(), Ns = /* @__PURE__ */ new Set(), w0 = /* @__PURE__ */ new Set();
      var Jg = /* @__PURE__ */ new Set();
      bo = function(c, d) {
        if (!(c === null || typeof c == "function")) {
          var T = d + "_" + c;
          Jg.has(T) || (Jg.add(T), p("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", d, c));
        }
      }, Ju = function(c, d) {
        if (d === void 0) {
          var T = Ze(c) || "Component";
          jd.has(T) || (jd.add(T), p("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", T));
        }
      }, Object.defineProperty(Fm, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(Fm);
    }
    function Ap(c, d, T, C) {
      var P = c.memoizedState, V = T(C, P);
      {
        if (c.mode & ba) {
          gi(!0);
          try {
            V = T(C, P);
          } finally {
            gi(!1);
          }
        }
        Ju(d, V);
      }
      var J = V == null ? P : _({}, P, V);
      if (c.memoizedState = J, c.lanes === Zt) {
        var ce = c.updateQueue;
        ce.baseState = J;
      }
    }
    var Bo = {
      isMounted: Ji,
      enqueueSetState: function(c, d, T) {
        var C = E(c), P = Pl(), V = qp(C), J = mr(P, V);
        J.payload = d, T != null && (bo(T, "setState"), J.callback = T), ei(C, J);
        var ce = Zo(C, V, P);
        ce !== null && Pa(ce, C, V), uf(C, V);
      },
      enqueueReplaceState: function(c, d, T) {
        var C = E(c), P = Pl(), V = qp(C), J = mr(P, V);
        J.tag = Si, J.payload = d, T != null && (bo(T, "replaceState"), J.callback = T), ei(C, J);
        var ce = Zo(C, V, P);
        ce !== null && Pa(ce, C, V), uf(C, V);
      },
      enqueueForceUpdate: function(c, d) {
        var T = E(c), C = Pl(), P = qp(T), V = mr(C, P);
        V.tag = qa, d != null && (bo(d, "forceUpdate"), V.callback = d), ei(T, V);
        var J = Zo(T, P, C);
        J !== null && Pa(J, T, P), il(T, P);
      }
    };
    function M0(c, d, T, C, P, V, J) {
      var ce = c.stateNode;
      if (typeof ce.shouldComponentUpdate == "function") {
        var ge = ce.shouldComponentUpdate(C, V, J);
        {
          if (c.mode & ba) {
            gi(!0);
            try {
              ge = ce.shouldComponentUpdate(C, V, J);
            } finally {
              gi(!1);
            }
          }
          ge === void 0 && p("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", Ze(d) || "Component");
        }
        return ge;
      }
      return d.prototype && d.prototype.isPureReactComponent ? !Xo(T, C) || !Xo(P, V) : !0;
    }
    function In(c, d, T) {
      var C = c.stateNode;
      {
        var P = Ze(d) || "Component", V = C.render;
        V || (d.prototype && typeof d.prototype.render == "function" ? p("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", P) : p("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", P)), C.getInitialState && !C.getInitialState.isReactClassApproved && !C.state && p("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", P), C.getDefaultProps && !C.getDefaultProps.isReactClassApproved && p("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", P), C.propTypes && p("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", P), C.contextType && p("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", P), C.contextTypes && p("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", P), d.contextType && d.contextTypes && !Ns.has(d) && (Ns.add(d), p("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", P)), typeof C.componentShouldUpdate == "function" && p("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", P), d.prototype && d.prototype.isPureReactComponent && typeof C.shouldComponentUpdate < "u" && p("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", Ze(d) || "A pure component"), typeof C.componentDidUnmount == "function" && p("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", P), typeof C.componentDidReceiveProps == "function" && p("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", P), typeof C.componentWillRecieveProps == "function" && p("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", P), typeof C.UNSAFE_componentWillRecieveProps == "function" && p("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", P);
        var J = C.props !== T;
        C.props !== void 0 && J && p("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", P, P), C.defaultProps && p("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", P, P), typeof C.getSnapshotBeforeUpdate == "function" && typeof C.componentDidUpdate != "function" && !vf.has(d) && (vf.add(d), p("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", Ze(d))), typeof C.getDerivedStateFromProps == "function" && p("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", P), typeof C.getDerivedStateFromError == "function" && p("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", P), typeof d.getSnapshotBeforeUpdate == "function" && p("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", P);
        var ce = C.state;
        ce && (typeof ce != "object" || Kr(ce)) && p("%s.state: must be set to an object or null", P), typeof C.getChildContext == "function" && typeof d.childContextTypes != "object" && p("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", P);
      }
    }
    function Dp(c, d) {
      d.updater = Bo, c.stateNode = d, w(d, c), d._reactInternalInstance = Fm;
    }
    function zm(c, d, T) {
      var C = !1, P = ui, V = ui, J = d.contextType;
      if ("contextType" in d) {
        var ce = (
          // Allow null for conditional declaration
          J === null || J !== void 0 && J.$$typeof === ot && J._context === void 0
        );
        if (!ce && !w0.has(d)) {
          w0.add(d);
          var ge = "";
          J === void 0 ? ge = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof J != "object" ? ge = " However, it is set to a " + typeof J + "." : J.$$typeof === zt ? ge = " Did you accidentally pass the Context.Provider instead?" : J._context !== void 0 ? ge = " Did you accidentally pass the Context.Consumer instead?" : ge = " However, it is set to an object with keys {" + Object.keys(J).join(", ") + "}.", p("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", Ze(d) || "Component", ge);
        }
      }
      if (typeof J == "object" && J !== null)
        V = mn(J);
      else {
        P = yo(c, d, !0);
        var Oe = d.contextTypes;
        C = Oe != null, V = C ? mc(c, P) : ui;
      }
      var Ve = new d(T, V);
      if (c.mode & ba) {
        gi(!0);
        try {
          Ve = new d(T, V);
        } finally {
          gi(!1);
        }
      }
      var gt = c.memoizedState = Ve.state !== null && Ve.state !== void 0 ? Ve.state : null;
      Dp(c, Ve);
      {
        if (typeof d.getDerivedStateFromProps == "function" && gt === null) {
          var Ft = Ze(d) || "Component";
          us.has(Ft) || (us.add(Ft), p("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", Ft, Ve.state === null ? "null" : "undefined", Ft));
        }
        if (typeof d.getDerivedStateFromProps == "function" || typeof Ve.getSnapshotBeforeUpdate == "function") {
          var Gt = null, an = null, fn = null;
          if (typeof Ve.componentWillMount == "function" && Ve.componentWillMount.__suppressDeprecationWarning !== !0 ? Gt = "componentWillMount" : typeof Ve.UNSAFE_componentWillMount == "function" && (Gt = "UNSAFE_componentWillMount"), typeof Ve.componentWillReceiveProps == "function" && Ve.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? an = "componentWillReceiveProps" : typeof Ve.UNSAFE_componentWillReceiveProps == "function" && (an = "UNSAFE_componentWillReceiveProps"), typeof Ve.componentWillUpdate == "function" && Ve.componentWillUpdate.__suppressDeprecationWarning !== !0 ? fn = "componentWillUpdate" : typeof Ve.UNSAFE_componentWillUpdate == "function" && (fn = "UNSAFE_componentWillUpdate"), Gt !== null || an !== null || fn !== null) {
            var vr = Ze(d) || "Component", ni = typeof d.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            Cp.has(vr) || (Cp.add(vr), p(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, vr, ni, Gt !== null ? `
  ` + Gt : "", an !== null ? `
  ` + an : "", fn !== null ? `
  ` + fn : ""));
          }
        }
      }
      return C && If(c, P, V), Ve;
    }
    function x_(c, d) {
      var T = d.state;
      typeof d.componentWillMount == "function" && d.componentWillMount(), typeof d.UNSAFE_componentWillMount == "function" && d.UNSAFE_componentWillMount(), T !== d.state && (p("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", pt(c) || "Component"), Bo.enqueueReplaceState(d, d.state, null));
    }
    function C0(c, d, T, C) {
      var P = d.state;
      if (typeof d.componentWillReceiveProps == "function" && d.componentWillReceiveProps(T, C), typeof d.UNSAFE_componentWillReceiveProps == "function" && d.UNSAFE_componentWillReceiveProps(T, C), d.state !== P) {
        {
          var V = pt(c) || "Component";
          Us.has(V) || (Us.add(V), p("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", V));
        }
        Bo.enqueueReplaceState(d, d.state, null);
      }
    }
    function Lp(c, d, T, C) {
      In(c, d, T);
      var P = c.stateNode;
      P.props = T, P.state = c.memoizedState, P.refs = Zg, Nn(c);
      var V = d.contextType;
      if (typeof V == "object" && V !== null)
        P.context = mn(V);
      else {
        var J = yo(c, d, !0);
        P.context = mc(c, J);
      }
      {
        if (P.state === T) {
          var ce = Ze(d) || "Component";
          Rp.has(ce) || (Rp.add(ce), p("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", ce));
        }
        c.mode & ba && ol.recordLegacyContextWarning(c, P), ol.recordUnsafeLifecycleWarnings(c, P);
      }
      P.state = c.memoizedState;
      var ge = d.getDerivedStateFromProps;
      if (typeof ge == "function" && (Ap(c, d, ge, T), P.state = c.memoizedState), typeof d.getDerivedStateFromProps != "function" && typeof P.getSnapshotBeforeUpdate != "function" && (typeof P.UNSAFE_componentWillMount == "function" || typeof P.componentWillMount == "function") && (x_(c, P), Dh(c, T, P, C), P.state = c.memoizedState), typeof P.componentDidMount == "function") {
        var Oe = dt;
        Oe |= at, (c.mode & $o) !== wr && (Oe |= vt), c.flags |= Oe;
      }
    }
    function Dv(c, d, T, C) {
      var P = c.stateNode, V = c.memoizedProps;
      P.props = V;
      var J = P.context, ce = d.contextType, ge = ui;
      if (typeof ce == "object" && ce !== null)
        ge = mn(ce);
      else {
        var Oe = yo(c, d, !0);
        ge = mc(c, Oe);
      }
      var Ve = d.getDerivedStateFromProps, gt = typeof Ve == "function" || typeof P.getSnapshotBeforeUpdate == "function";
      !gt && (typeof P.UNSAFE_componentWillReceiveProps == "function" || typeof P.componentWillReceiveProps == "function") && (V !== T || J !== ge) && C0(c, P, T, ge), Mp();
      var Ft = c.memoizedState, Gt = P.state = Ft;
      if (Dh(c, T, P, C), Gt = c.memoizedState, V === T && Ft === Gt && !so() && !Kg()) {
        if (typeof P.componentDidMount == "function") {
          var an = dt;
          an |= at, (c.mode & $o) !== wr && (an |= vt), c.flags |= an;
        }
        return !1;
      }
      typeof Ve == "function" && (Ap(c, d, Ve, T), Gt = c.memoizedState);
      var fn = Kg() || M0(c, d, V, T, Ft, Gt, ge);
      if (fn) {
        if (!gt && (typeof P.UNSAFE_componentWillMount == "function" || typeof P.componentWillMount == "function") && (typeof P.componentWillMount == "function" && P.componentWillMount(), typeof P.UNSAFE_componentWillMount == "function" && P.UNSAFE_componentWillMount()), typeof P.componentDidMount == "function") {
          var vr = dt;
          vr |= at, (c.mode & $o) !== wr && (vr |= vt), c.flags |= vr;
        }
      } else {
        if (typeof P.componentDidMount == "function") {
          var ni = dt;
          ni |= at, (c.mode & $o) !== wr && (ni |= vt), c.flags |= ni;
        }
        c.memoizedProps = T, c.memoizedState = Gt;
      }
      return P.props = T, P.state = Gt, P.context = ge, fn;
    }
    function R0(c, d, T, C, P) {
      var V = d.stateNode;
      zr(c, d);
      var J = d.memoizedProps, ce = d.type === d.elementType ? J : oi(d.type, J);
      V.props = ce;
      var ge = d.pendingProps, Oe = V.context, Ve = T.contextType, gt = ui;
      if (typeof Ve == "object" && Ve !== null)
        gt = mn(Ve);
      else {
        var Ft = yo(d, T, !0);
        gt = mc(d, Ft);
      }
      var Gt = T.getDerivedStateFromProps, an = typeof Gt == "function" || typeof V.getSnapshotBeforeUpdate == "function";
      !an && (typeof V.UNSAFE_componentWillReceiveProps == "function" || typeof V.componentWillReceiveProps == "function") && (J !== ge || Oe !== gt) && C0(d, V, C, gt), Mp();
      var fn = d.memoizedState, vr = V.state = fn;
      if (Dh(d, C, V, P), vr = d.memoizedState, J === ge && fn === vr && !so() && !Kg() && !L)
        return typeof V.componentDidUpdate == "function" && (J !== c.memoizedProps || fn !== c.memoizedState) && (d.flags |= dt), typeof V.getSnapshotBeforeUpdate == "function" && (J !== c.memoizedProps || fn !== c.memoizedState) && (d.flags |= Hn), !1;
      typeof Gt == "function" && (Ap(d, T, Gt, C), vr = d.memoizedState);
      var ni = Kg() || M0(d, T, ce, C, fn, vr, gt) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      L;
      return ni ? (!an && (typeof V.UNSAFE_componentWillUpdate == "function" || typeof V.componentWillUpdate == "function") && (typeof V.componentWillUpdate == "function" && V.componentWillUpdate(C, vr, gt), typeof V.UNSAFE_componentWillUpdate == "function" && V.UNSAFE_componentWillUpdate(C, vr, gt)), typeof V.componentDidUpdate == "function" && (d.flags |= dt), typeof V.getSnapshotBeforeUpdate == "function" && (d.flags |= Hn)) : (typeof V.componentDidUpdate == "function" && (J !== c.memoizedProps || fn !== c.memoizedState) && (d.flags |= dt), typeof V.getSnapshotBeforeUpdate == "function" && (J !== c.memoizedProps || fn !== c.memoizedState) && (d.flags |= Hn), d.memoizedProps = C, d.memoizedState = vr), V.props = C, V.state = vr, V.context = gt, ni;
    }
    var Lh = [], Op = 0, Pp = null, $d = 0, Ho = [], Oi = 0, Ka = null, qo = 1, Au = "";
    function Yd(c) {
      return Xd(), (c.flags & _e) !== ve;
    }
    function gf(c) {
      return Xd(), $d;
    }
    function E_() {
      var c = Au, d = qo, T = d & ~D0(d);
      return T.toString(32) + c;
    }
    function Al(c, d) {
      Xd(), Lh[Op++] = $d, Lh[Op++] = Pp, Pp = c, $d = d;
    }
    function A0(c, d, T) {
      Xd(), Ho[Oi++] = qo, Ho[Oi++] = Au, Ho[Oi++] = Ka, Ka = c;
      var C = qo, P = Au, V = Lv(C) - 1, J = C & ~(1 << V), ce = T + 1, ge = Lv(d) + V;
      if (ge > 30) {
        var Oe = V - V % 5, Ve = (1 << Oe) - 1, gt = (J & Ve).toString(32), Ft = J >> Oe, Gt = V - Oe, an = Lv(d) + Gt, fn = ce << Gt, vr = fn | Ft, ni = gt + P;
        qo = 1 << an | vr, Au = ni;
      } else {
        var Er = ce << V, to = Er | J, no = P;
        qo = 1 << ge | to, Au = no;
      }
    }
    function Oh(c) {
      Xd();
      var d = c.return;
      if (d !== null) {
        var T = 1, C = 0;
        Al(c, T), A0(c, T, C);
      }
    }
    function Lv(c) {
      return 32 - _h(c);
    }
    function D0(c) {
      return 1 << Lv(c) - 1;
    }
    function ey(c) {
      for (; c === Pp; )
        Pp = Lh[--Op], Lh[Op] = null, $d = Lh[--Op], Lh[Op] = null;
      for (; c === Ka; )
        Ka = Ho[--Oi], Ho[Oi] = null, Au = Ho[--Oi], Ho[Oi] = null, qo = Ho[--Oi], Ho[Oi] = null;
    }
    function ty() {
      return Xd(), Ka !== null ? {
        id: qo,
        overflow: Au
      } : null;
    }
    function Ov(c, d) {
      Xd(), Ho[Oi++] = qo, Ho[Oi++] = Au, Ho[Oi++] = Ka, qo = d.id, Au = d.overflow, Ka = c;
    }
    function Xd() {
      Qi() || p("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var $i = null, Ar = null, Bi = !1, Sa = !1, Ha = null;
    function ec() {
      Bi && p("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function Im() {
      Sa = !0;
    }
    function cs(c) {
      if (!pa)
        return !1;
      var d = c.stateNode.containerInfo;
      return Ar = pu(d), $i = c, Bi = !0, Ha = null, Sa = !1, !0;
    }
    function Pv(c, d, T) {
      return pa ? (Ar = gh(d), $i = c, Bi = !0, Ha = null, Sa = !1, T !== null && Ov(c, T), !0) : !1;
    }
    function nd(c, d) {
      switch (c.tag) {
        case K:
          kf(c.stateNode.containerInfo, d);
          break;
        case se:
          Em(c.type, c.memoizedProps, c.stateNode, d);
          break;
        case X:
          var T = c.memoizedState;
          T.dehydrated !== null && vu(T.dehydrated, d);
          break;
      }
    }
    function Uv(c, d) {
      nd(c, d);
      var T = db();
      T.stateNode = d, T.return = c;
      var C = c.deletions;
      C === null ? (c.deletions = [T], c.flags |= Un) : C.push(T);
    }
    function Ph(c, d) {
      {
        if (Sa)
          return;
        switch (c.tag) {
          case K: {
            var T = c.stateNode.containerInfo;
            switch (d.tag) {
              case se:
                var C = d.type, P = d.pendingProps;
                yl(T, C, P);
                break;
              case he:
                var V = d.pendingProps;
                Ys(T, V);
                break;
              case X:
                Yc(T);
                break;
            }
            break;
          }
          case se: {
            var J = c.type, ce = c.memoizedProps, ge = c.stateNode;
            switch (d.tag) {
              case se:
                var Oe = d.type, Ve = d.pendingProps;
                Xs(J, ce, ge, Oe, Ve);
                break;
              case he:
                var gt = d.pendingProps;
                Bu(J, ce, ge, gt);
                break;
              case X:
                Wa(J, ce, ge);
                break;
            }
            break;
          }
          case X: {
            var Ft = c.memoizedState, Gt = Ft.dehydrated;
            if (Gt !== null)
              switch (d.tag) {
                case se:
                  var an = d.type, fn = d.pendingProps;
                  Xc(Gt, an, fn);
                  break;
                case he:
                  var vr = d.pendingProps;
                  gu(Gt, vr);
                  break;
                case X:
                  Ff(Gt);
                  break;
              }
            break;
          }
          default:
            return;
        }
      }
    }
    function Uh(c, d) {
      d.flags = d.flags & ~Vr | He, Ph(c, d);
    }
    function Dl(c, d) {
      switch (c.tag) {
        case se: {
          var T = c.type, C = c.pendingProps, P = Tr(d, T, C);
          return P !== null ? (c.stateNode = P, $i = c, Ar = gl(P), !0) : !1;
        }
        case he: {
          var V = c.pendingProps, J = Mr(d, V);
          return J !== null ? (c.stateNode = J, $i = c, Ar = null, !0) : !1;
        }
        case X: {
          {
            var ce = _r(d);
            if (ce !== null) {
              var ge = {
                dehydrated: ce,
                treeContext: ty(),
                retryLane: Di
              };
              c.memoizedState = ge;
              var Oe = ra(ce);
              return Oe.return = c, c.child = Oe, $i = c, Ar = null, !0;
            }
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function Nv(c) {
      return (c.mode & ji) !== wr && (c.flags & En) === ve;
    }
    function Nh(c) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function yf(c) {
      if (Bi) {
        var d = Ar;
        if (!d) {
          Nv(c) && (Ph($i, c), Nh()), Uh($i, c), Bi = !1, $i = c;
          return;
        }
        var T = d;
        if (!Dl(c, d)) {
          Nv(c) && (Ph($i, c), Nh()), d = Hl(T);
          var C = $i;
          if (!d || !Dl(c, d)) {
            Uh($i, c), Bi = !1, $i = c;
            return;
          }
          Uv(C, T);
        }
      }
    }
    function ny(c, d, T) {
      if (!pa)
        throw new Error("Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      var C = c.stateNode, P = !Sa, V = mu(C, c.type, c.memoizedProps, d, T, c, P);
      return c.updateQueue = V, V !== null;
    }
    function Up(c) {
      if (!pa)
        throw new Error("Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      var d = c.stateNode, T = c.memoizedProps, C = !Sa, P = Nf(d, T, c, C);
      if (P) {
        var V = $i;
        if (V !== null) {
          var J = (V.mode & ji) !== wr;
          switch (V.tag) {
            case K: {
              var ce = V.stateNode.containerInfo;
              xm(
                ce,
                d,
                T,
                // TODO: Delete this argument when we remove the legacy root API.
                J
              );
              break;
            }
            case se: {
              var ge = V.type, Oe = V.memoizedProps, Ve = V.stateNode;
              wd(
                ge,
                Oe,
                Ve,
                d,
                T,
                // TODO: Delete this argument when we remove the legacy root API.
                J
              );
              break;
            }
          }
        }
      }
      return P;
    }
    function rd(c) {
      if (!pa)
        throw new Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      var d = c.memoizedState, T = d !== null ? d.dehydrated : null;
      if (!T)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      yh(T, c);
    }
    function kh(c) {
      if (!pa)
        throw new Error("Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      var d = c.memoizedState, T = d !== null ? d.dehydrated : null;
      if (!T)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return vm(T);
    }
    function qd(c) {
      for (var d = c.return; d !== null && d.tag !== se && d.tag !== K && d.tag !== X; )
        d = d.return;
      $i = d;
    }
    function Fh(c) {
      if (!pa || c !== $i)
        return !1;
      if (!Bi)
        return qd(c), Bi = !0, !1;
      if (c.tag !== K && (c.tag !== se || Cv(c.type) && !kl(c.type, c.memoizedProps))) {
        var d = Ar;
        if (d)
          if (Nv(c))
            kv(c), Nh();
          else
            for (; d; )
              Uv(c, d), d = Hl(d);
      }
      return qd(c), c.tag === X ? Ar = kh(c) : Ar = $i ? Hl(c.stateNode) : null, !0;
    }
    function Bm() {
      return Bi && Ar !== null;
    }
    function kv(c) {
      for (var d = Ar; d; )
        nd(c, d), d = Hl(d);
    }
    function Mc() {
      pa && ($i = null, Ar = null, Bi = !1, Sa = !1);
    }
    function zh() {
      Ha !== null && (qh(Ha), Ha = null);
    }
    function Qi() {
      return Bi;
    }
    function To(c) {
      Ha === null ? Ha = [c] : Ha.push(c);
    }
    var ks, Fs, Ih, Fv, Np, ry = function(c, d) {
    };
    ks = !1, Fs = !1, Ih = {}, Fv = {}, Np = {}, ry = function(c, d) {
      if (!(c === null || typeof c != "object") && !(!c._store || c._store.validated || c.key != null)) {
        if (typeof c._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        c._store.validated = !0;
        var T = pt(d) || "Component";
        Fv[T] || (Fv[T] = !0, p('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function Ll(c, d, T) {
      var C = T.ref;
      if (C !== null && typeof C != "function" && typeof C != "object") {
        if ((c.mode & ba || F) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(T._owner && T._self && T._owner.stateNode !== T._self)) {
          var P = pt(c) || "Component";
          Ih[P] || (p('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', C), Ih[P] = !0);
        }
        if (T._owner) {
          var V = T._owner, J;
          if (V) {
            var ce = V;
            if (ce.tag !== ee)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            J = ce.stateNode;
          }
          if (!J)
            throw new Error("Missing owner for string ref " + C + ". This error is likely caused by a bug in React. Please file an issue.");
          var ge = J;
          qg(C, "ref");
          var Oe = "" + C;
          if (d !== null && d.ref !== null && typeof d.ref == "function" && d.ref._stringRef === Oe)
            return d.ref;
          var Ve = function(gt) {
            var Ft = ge.refs;
            Ft === Zg && (Ft = ge.refs = {}), gt === null ? delete Ft[Oe] : Ft[Oe] = gt;
          };
          return Ve._stringRef = Oe, Ve;
        } else {
          if (typeof C != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!T._owner)
            throw new Error("Element ref was specified as a string (" + C + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return C;
    }
    function zv(c, d) {
      var T = Object.prototype.toString.call(d);
      throw new Error("Objects are not valid as a React child (found: " + (T === "[object Object]" ? "object with keys {" + Object.keys(d).join(", ") + "}" : T) + "). If you meant to render a collection of children, use an array instead.");
    }
    function Kd(c) {
      {
        var d = pt(c) || "Component";
        if (Np[d])
          return;
        Np[d] = !0, p("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function Qd(c) {
      var d = c._payload, T = c._init;
      return T(d);
    }
    function iy(c) {
      function d(wt, qt) {
        if (c) {
          var Tt = wt.deletions;
          Tt === null ? (wt.deletions = [qt], wt.flags |= Un) : Tt.push(qt);
        }
      }
      function T(wt, qt) {
        if (!c)
          return null;
        for (var Tt = qt; Tt !== null; )
          d(wt, Tt), Tt = Tt.sibling;
        return null;
      }
      function C(wt, qt) {
        for (var Tt = /* @__PURE__ */ new Map(), hn = qt; hn !== null; )
          hn.key !== null ? Tt.set(hn.key, hn) : Tt.set(hn.index, hn), hn = hn.sibling;
        return Tt;
      }
      function P(wt, qt) {
        var Tt = Ii(wt, qt);
        return Tt.index = 0, Tt.sibling = null, Tt;
      }
      function V(wt, qt, Tt) {
        if (wt.index = Tt, !c)
          return wt.flags |= _e, qt;
        var hn = wt.alternate;
        if (hn !== null) {
          var er = hn.index;
          return er < qt ? (wt.flags |= He, qt) : er;
        } else
          return wt.flags |= He, qt;
      }
      function J(wt) {
        return c && wt.alternate === null && (wt.flags |= He), wt;
      }
      function ce(wt, qt, Tt, hn) {
        if (qt === null || qt.tag !== he) {
          var er = ep(Tt, wt.mode, hn);
          return er.return = wt, er;
        } else {
          var bn = P(qt, Tt);
          return bn.return = wt, bn;
        }
      }
      function ge(wt, qt, Tt, hn) {
        var er = Tt.type;
        if (er === qe)
          return Ve(wt, qt, Tt.props.children, hn, Tt.key);
        if (qt !== null && (qt.elementType === er || // Keep this check inline so it only runs on the false path:
        hg(qt, Tt) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof er == "object" && er !== null && er.$$typeof === ae && Qd(er) === qt.type)) {
          var bn = P(qt, Tt.props);
          return bn.ref = Ll(wt, qt, Tt), bn.return = wt, bn._debugSource = Tt._source, bn._debugOwner = Tt._owner, bn;
        }
        var Ir = mg(Tt, wt.mode, hn);
        return Ir.ref = Ll(wt, qt, Tt), Ir.return = wt, Ir;
      }
      function Oe(wt, qt, Tt, hn) {
        if (qt === null || qt.tag !== fe || qt.stateNode.containerInfo !== Tt.containerInfo || qt.stateNode.implementation !== Tt.implementation) {
          var er = Sn(Tt, wt.mode, hn);
          return er.return = wt, er;
        } else {
          var bn = P(qt, Tt.children || []);
          return bn.return = wt, bn;
        }
      }
      function Ve(wt, qt, Tt, hn, er) {
        if (qt === null || qt.tag !== me) {
          var bn = cd(Tt, wt.mode, hn, er);
          return bn.return = wt, bn;
        } else {
          var Ir = P(qt, Tt);
          return Ir.return = wt, Ir;
        }
      }
      function gt(wt, qt, Tt) {
        if (typeof qt == "string" && qt !== "" || typeof qt == "number") {
          var hn = ep("" + qt, wt.mode, Tt);
          return hn.return = wt, hn;
        }
        if (typeof qt == "object" && qt !== null) {
          switch (qt.$$typeof) {
            case oe: {
              var er = mg(qt, wt.mode, Tt);
              return er.ref = Ll(wt, null, qt), er.return = wt, er;
            }
            case rt: {
              var bn = Sn(qt, wt.mode, Tt);
              return bn.return = wt, bn;
            }
            case ae: {
              var Ir = qt._payload, Yi = qt._init;
              return gt(wt, Yi(Ir), Tt);
            }
          }
          if (Kr(qt) || We(qt)) {
            var wa = cd(qt, wt.mode, Tt, null);
            return wa.return = wt, wa;
          }
          zv(wt, qt);
        }
        return typeof qt == "function" && Kd(wt), null;
      }
      function Ft(wt, qt, Tt, hn) {
        var er = qt !== null ? qt.key : null;
        if (typeof Tt == "string" && Tt !== "" || typeof Tt == "number")
          return er !== null ? null : ce(wt, qt, "" + Tt, hn);
        if (typeof Tt == "object" && Tt !== null) {
          switch (Tt.$$typeof) {
            case oe:
              return Tt.key === er ? ge(wt, qt, Tt, hn) : null;
            case rt:
              return Tt.key === er ? Oe(wt, qt, Tt, hn) : null;
            case ae: {
              var bn = Tt._payload, Ir = Tt._init;
              return Ft(wt, qt, Ir(bn), hn);
            }
          }
          if (Kr(Tt) || We(Tt))
            return er !== null ? null : Ve(wt, qt, Tt, hn, null);
          zv(wt, Tt);
        }
        return typeof Tt == "function" && Kd(wt), null;
      }
      function Gt(wt, qt, Tt, hn, er) {
        if (typeof hn == "string" && hn !== "" || typeof hn == "number") {
          var bn = wt.get(Tt) || null;
          return ce(qt, bn, "" + hn, er);
        }
        if (typeof hn == "object" && hn !== null) {
          switch (hn.$$typeof) {
            case oe: {
              var Ir = wt.get(hn.key === null ? Tt : hn.key) || null;
              return ge(qt, Ir, hn, er);
            }
            case rt: {
              var Yi = wt.get(hn.key === null ? Tt : hn.key) || null;
              return Oe(qt, Yi, hn, er);
            }
            case ae: {
              var wa = hn._payload, Tn = hn._init;
              return Gt(wt, qt, Tt, Tn(wa), er);
            }
          }
          if (Kr(hn) || We(hn)) {
            var _a = wt.get(Tt) || null;
            return Ve(qt, _a, hn, er, null);
          }
          zv(qt, hn);
        }
        return typeof hn == "function" && Kd(qt), null;
      }
      function an(wt, qt, Tt) {
        {
          if (typeof wt != "object" || wt === null)
            return qt;
          switch (wt.$$typeof) {
            case oe:
            case rt:
              ry(wt, Tt);
              var hn = wt.key;
              if (typeof hn != "string")
                break;
              if (qt === null) {
                qt = /* @__PURE__ */ new Set(), qt.add(hn);
                break;
              }
              if (!qt.has(hn)) {
                qt.add(hn);
                break;
              }
              p("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", hn);
              break;
            case ae: {
              var er = wt._payload, bn = wt._init;
              an(bn(er), qt, Tt);
              break;
            }
          }
        }
        return qt;
      }
      function fn(wt, qt, Tt, hn) {
        for (var er = null, bn = 0; bn < Tt.length; bn++) {
          var Ir = Tt[bn];
          er = an(Ir, er, wt);
        }
        for (var Yi = null, wa = null, Tn = qt, _a = 0, Xi = 0, si = null; Tn !== null && Xi < Tt.length; Xi++) {
          Tn.index > Xi ? (si = Tn, Tn = null) : si = Tn.sibling;
          var ho = Ft(wt, Tn, Tt[Xi], hn);
          if (ho === null) {
            Tn === null && (Tn = si);
            break;
          }
          c && Tn && ho.alternate === null && d(wt, Tn), _a = V(ho, _a, Xi), wa === null ? Yi = ho : wa.sibling = ho, wa = ho, Tn = si;
        }
        if (Xi === Tt.length) {
          if (T(wt, Tn), Qi()) {
            var ro = Xi;
            Al(wt, ro);
          }
          return Yi;
        }
        if (Tn === null) {
          for (; Xi < Tt.length; Xi++) {
            var Nc = gt(wt, Tt[Xi], hn);
            Nc !== null && (_a = V(Nc, _a, Xi), wa === null ? Yi = Nc : wa.sibling = Nc, wa = Nc);
          }
          if (Qi()) {
            var Bs = Xi;
            Al(wt, Bs);
          }
          return Yi;
        }
        for (var kc = C(wt, Tn); Xi < Tt.length; Xi++) {
          var bf = Gt(kc, wt, Xi, Tt[Xi], hn);
          bf !== null && (c && bf.alternate !== null && kc.delete(bf.key === null ? Xi : bf.key), _a = V(bf, _a, Xi), wa === null ? Yi = bf : wa.sibling = bf, wa = bf);
        }
        if (c && kc.forEach(function(Xy) {
          return d(wt, Xy);
        }), Qi()) {
          var np = Xi;
          Al(wt, np);
        }
        return Yi;
      }
      function vr(wt, qt, Tt, hn) {
        var er = We(Tt);
        if (typeof er != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          Tt[Symbol.toStringTag] === "Generator" && (Fs || p("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), Fs = !0), Tt.entries === er && (ks || p("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), ks = !0);
          var bn = er.call(Tt);
          if (bn)
            for (var Ir = null, Yi = bn.next(); !Yi.done; Yi = bn.next()) {
              var wa = Yi.value;
              Ir = an(wa, Ir, wt);
            }
        }
        var Tn = er.call(Tt);
        if (Tn == null)
          throw new Error("An iterable object provided no iterator.");
        for (var _a = null, Xi = null, si = qt, ho = 0, ro = 0, Nc = null, Bs = Tn.next(); si !== null && !Bs.done; ro++, Bs = Tn.next()) {
          si.index > ro ? (Nc = si, si = null) : Nc = si.sibling;
          var kc = Ft(wt, si, Bs.value, hn);
          if (kc === null) {
            si === null && (si = Nc);
            break;
          }
          c && si && kc.alternate === null && d(wt, si), ho = V(kc, ho, ro), Xi === null ? _a = kc : Xi.sibling = kc, Xi = kc, si = Nc;
        }
        if (Bs.done) {
          if (T(wt, si), Qi()) {
            var bf = ro;
            Al(wt, bf);
          }
          return _a;
        }
        if (si === null) {
          for (; !Bs.done; ro++, Bs = Tn.next()) {
            var np = gt(wt, Bs.value, hn);
            np !== null && (ho = V(np, ho, ro), Xi === null ? _a = np : Xi.sibling = np, Xi = np);
          }
          if (Qi()) {
            var Xy = ro;
            Al(wt, Xy);
          }
          return _a;
        }
        for (var gg = C(wt, si); !Bs.done; ro++, Bs = Tn.next()) {
          var Fc = Gt(gg, wt, ro, Bs.value, hn);
          Fc !== null && (c && Fc.alternate !== null && gg.delete(Fc.key === null ? ro : Fc.key), ho = V(Fc, ho, ro), Xi === null ? _a = Fc : Xi.sibling = Fc, Xi = Fc);
        }
        if (c && gg.forEach(function(Hx) {
          return d(wt, Hx);
        }), Qi()) {
          var Qp = ro;
          Al(wt, Qp);
        }
        return _a;
      }
      function ni(wt, qt, Tt, hn) {
        if (qt !== null && qt.tag === he) {
          T(wt, qt.sibling);
          var er = P(qt, Tt);
          return er.return = wt, er;
        }
        T(wt, qt);
        var bn = ep(Tt, wt.mode, hn);
        return bn.return = wt, bn;
      }
      function Er(wt, qt, Tt, hn) {
        for (var er = Tt.key, bn = qt; bn !== null; ) {
          if (bn.key === er) {
            var Ir = Tt.type;
            if (Ir === qe) {
              if (bn.tag === me) {
                T(wt, bn.sibling);
                var Yi = P(bn, Tt.props.children);
                return Yi.return = wt, Yi._debugSource = Tt._source, Yi._debugOwner = Tt._owner, Yi;
              }
            } else if (bn.elementType === Ir || // Keep this check inline so it only runs on the false path:
            hg(bn, Tt) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof Ir == "object" && Ir !== null && Ir.$$typeof === ae && Qd(Ir) === bn.type) {
              T(wt, bn.sibling);
              var wa = P(bn, Tt.props);
              return wa.ref = Ll(wt, bn, Tt), wa.return = wt, wa._debugSource = Tt._source, wa._debugOwner = Tt._owner, wa;
            }
            T(wt, bn);
            break;
          } else
            d(wt, bn);
          bn = bn.sibling;
        }
        if (Tt.type === qe) {
          var Tn = cd(Tt.props.children, wt.mode, hn, Tt.key);
          return Tn.return = wt, Tn;
        } else {
          var _a = mg(Tt, wt.mode, hn);
          return _a.ref = Ll(wt, qt, Tt), _a.return = wt, _a;
        }
      }
      function to(wt, qt, Tt, hn) {
        for (var er = Tt.key, bn = qt; bn !== null; ) {
          if (bn.key === er)
            if (bn.tag === fe && bn.stateNode.containerInfo === Tt.containerInfo && bn.stateNode.implementation === Tt.implementation) {
              T(wt, bn.sibling);
              var Ir = P(bn, Tt.children || []);
              return Ir.return = wt, Ir;
            } else {
              T(wt, bn);
              break;
            }
          else
            d(wt, bn);
          bn = bn.sibling;
        }
        var Yi = Sn(Tt, wt.mode, hn);
        return Yi.return = wt, Yi;
      }
      function no(wt, qt, Tt, hn) {
        var er = typeof Tt == "object" && Tt !== null && Tt.type === qe && Tt.key === null;
        if (er && (Tt = Tt.props.children), typeof Tt == "object" && Tt !== null) {
          switch (Tt.$$typeof) {
            case oe:
              return J(Er(wt, qt, Tt, hn));
            case rt:
              return J(to(wt, qt, Tt, hn));
            case ae: {
              var bn = Tt._payload, Ir = Tt._init;
              return no(wt, qt, Ir(bn), hn);
            }
          }
          if (Kr(Tt))
            return fn(wt, qt, Tt, hn);
          if (We(Tt))
            return vr(wt, qt, Tt, hn);
          zv(wt, Tt);
        }
        return typeof Tt == "string" && Tt !== "" || typeof Tt == "number" ? J(ni(wt, qt, "" + Tt, hn)) : (typeof Tt == "function" && Kd(wt), T(wt, qt));
      }
      return no;
    }
    var Cc = iy(!0), L0 = iy(!1);
    function ay(c, d) {
      if (c !== null && d.child !== c.child)
        throw new Error("Resuming work not yet implemented.");
      if (d.child !== null) {
        var T = d.child, C = Ii(T, T.pendingProps);
        for (d.child = C, C.return = d; T.sibling !== null; )
          T = T.sibling, C = C.sibling = Ii(T, T.pendingProps), C.return = d;
        C.sibling = null;
      }
    }
    function O0(c, d) {
      for (var T = c.child; T !== null; )
        cl(T, d), T = T.sibling;
    }
    var Bh = {}, Hh = Sl(Bh), Iv = Sl(Bh), Bv = Sl(Bh);
    function Hm(c) {
      if (c === Bh)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return c;
    }
    function Zd() {
      var c = Hm(Bv.current);
      return c;
    }
    function P0(c, d) {
      qi(Bv, d, c), qi(Iv, c, c), qi(Hh, Bh, c);
      var T = Ri(d);
      go(Hh, c), qi(Hh, T, c);
    }
    function Sf(c) {
      go(Hh, c), go(Iv, c), go(Bv, c);
    }
    function Vm() {
      var c = Hm(Hh.current);
      return c;
    }
    function uo(c) {
      var d = Hm(Bv.current), T = Hm(Hh.current), C = Ai(T, c.type, d);
      T !== C && (qi(Iv, c, c), qi(Hh, C, c));
    }
    function U0(c) {
      Iv.current === c && (go(Hh, c), go(Iv, c));
    }
    var oy = 0, b_ = 1, T_ = 1, Gm = 2, tc = Sl(oy);
    function N0(c, d) {
      return (c & d) !== 0;
    }
    function sl(c) {
      return c & b_;
    }
    function Hv(c, d) {
      return c & b_ | d;
    }
    function iE(c, d) {
      return c | d;
    }
    function Ql(c, d) {
      qi(tc, d, c);
    }
    function Jd(c) {
      go(tc, c);
    }
    function kp(c, d) {
      var T = c.memoizedState;
      return T !== null ? T.dehydrated !== null : (c.memoizedProps, !0);
    }
    function Vh(c) {
      for (var d = c; d !== null; ) {
        if (d.tag === X) {
          var T = d.memoizedState;
          if (T !== null) {
            var C = T.dehydrated;
            if (C === null || Zr(C) || vi(C))
              return d;
          }
        } else if (d.tag === Ne && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        d.memoizedProps.revealOrder !== void 0) {
          var P = (d.flags & En) !== ve;
          if (P)
            return d;
        } else if (d.child !== null) {
          d.child.return = d, d = d.child;
          continue;
        }
        if (d === c)
          return null;
        for (; d.sibling === null; ) {
          if (d.return === null || d.return === c)
            return null;
          d = d.return;
        }
        d.sibling.return = d.return, d = d.sibling;
      }
      return null;
    }
    var Du = (
      /*   */
      0
    ), fa = (
      /* */
      1
    ), Gh = (
      /*  */
      2
    ), Qa = (
      /*    */
      4
    ), zs = (
      /*   */
      8
    ), Vv = [];
    function sy() {
      for (var c = 0; c < Vv.length; c++) {
        var d = Vv[c];
        rs ? d._workInProgressVersionPrimary = null : d._workInProgressVersionSecondary = null;
      }
      Vv.length = 0;
    }
    function Gv(c, d) {
      var T = d._getVersion, C = T(d._source);
      c.mutableSourceEagerHydrationData == null ? c.mutableSourceEagerHydrationData = [d, C] : c.mutableSourceEagerHydrationData.push(d, C);
    }
    var wn = o.ReactCurrentDispatcher, Zl = o.ReactCurrentBatchConfig, Wv, Fp;
    Wv = /* @__PURE__ */ new Set();
    var Wh = Zt, Zi = null, Za = null, Vo = null, zp = !1, Wm = !1, jv = 0, ly = 0, aE = 25, Vt = null, Rc = null, _f = -1, f = !1;
    function m() {
      {
        var c = Vt;
        Rc === null ? Rc = [c] : Rc.push(c);
      }
    }
    function b() {
      {
        var c = Vt;
        Rc !== null && (_f++, Rc[_f] !== c && I(c));
      }
    }
    function O(c) {
      c != null && !Kr(c) && p("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", Vt, typeof c);
    }
    function I(c) {
      {
        var d = pt(Zi);
        if (!Wv.has(d) && (Wv.add(d), Rc !== null)) {
          for (var T = "", C = 30, P = 0; P <= _f; P++) {
            for (var V = Rc[P], J = P === _f ? c : V, ce = P + 1 + ". " + V; ce.length < C; )
              ce += " ";
            ce += J + `
`, T += ce;
          }
          p(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, d, T);
        }
      }
    }
    function $() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function pe(c, d) {
      if (f)
        return !1;
      if (d === null)
        return p("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", Vt), !1;
      c.length !== d.length && p(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, Vt, "[" + d.join(", ") + "]", "[" + c.join(", ") + "]");
      for (var T = 0; T < d.length && T < c.length; T++)
        if (!zo(c[T], d[T]))
          return !1;
      return !0;
    }
    function Ue(c, d, T, C, P, V) {
      Wh = V, Zi = d, Rc = c !== null ? c._debugHookTypes : null, _f = -1, f = c !== null && c.type !== d.type, d.memoizedState = null, d.updateQueue = null, d.lanes = Zt, c !== null && c.memoizedState !== null ? wn.current = Ja : Rc !== null ? wn.current = Sw : wn.current = hE;
      var J = T(C, P);
      if (Wm) {
        var ce = 0;
        do {
          if (Wm = !1, jv = 0, ce >= aE)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          ce += 1, f = !1, Za = null, Vo = null, d.updateQueue = null, _f = -1, wn.current = F_, J = T(C, P);
        } while (Wm);
      }
      wn.current = k_, d._debugHookTypes = Rc;
      var ge = Za !== null && Za.next !== null;
      if (Wh = Zt, Zi = null, Za = null, Vo = null, Vt = null, Rc = null, _f = -1, c !== null && (c.flags & Mt) !== (d.flags & Mt) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (c.mode & ji) !== wr && p("Internal React error: Expected static flag was missing. Please notify the React team."), zp = !1, ge)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return J;
    }
    function Ge() {
      var c = jv !== 0;
      return jv = 0, c;
    }
    function Rt(c, d, T) {
      d.updateQueue = c.updateQueue, (d.mode & $o) !== wr ? d.flags &= ~(sn | vt | mi | dt) : d.flags &= ~(mi | dt), c.lanes = So(c.lanes, T);
    }
    function nn() {
      if (wn.current = k_, zp) {
        for (var c = Zi.memoizedState; c !== null; ) {
          var d = c.queue;
          d !== null && (d.pending = null), c = c.next;
        }
        zp = !1;
      }
      Wh = Zt, Zi = null, Za = null, Vo = null, Rc = null, _f = -1, Vt = null, fE = !1, Wm = !1, jv = 0;
    }
    function en() {
      var c = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return Vo === null ? Zi.memoizedState = Vo = c : Vo = Vo.next = c, Vo;
    }
    function Qt() {
      var c;
      if (Za === null) {
        var d = Zi.alternate;
        d !== null ? c = d.memoizedState : c = null;
      } else
        c = Za.next;
      var T;
      if (Vo === null ? T = Zi.memoizedState : T = Vo.next, T !== null)
        Vo = T, T = Vo.next, Za = c;
      else {
        if (c === null)
          throw new Error("Rendered more hooks than during the previous render.");
        Za = c;
        var C = {
          memoizedState: Za.memoizedState,
          baseState: Za.baseState,
          baseQueue: Za.baseQueue,
          queue: Za.queue,
          next: null
        };
        Vo === null ? Zi.memoizedState = Vo = C : Vo = Vo.next = C;
      }
      return Vo;
    }
    function Dn() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function Bn(c, d) {
      return typeof d == "function" ? d(c) : d;
    }
    function Gn(c, d, T) {
      var C = en(), P;
      T !== void 0 ? P = T(d) : P = d, C.memoizedState = C.baseState = P;
      var V = {
        pending: null,
        interleaved: null,
        lanes: Zt,
        dispatch: null,
        lastRenderedReducer: c,
        lastRenderedState: P
      };
      C.queue = V;
      var J = V.dispatch = $m.bind(null, Zi, V);
      return [C.memoizedState, J];
    }
    function co(c, d, T) {
      var C = Qt(), P = C.queue;
      if (P === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      P.lastRenderedReducer = c;
      var V = Za, J = V.baseQueue, ce = P.pending;
      if (ce !== null) {
        if (J !== null) {
          var ge = J.next, Oe = ce.next;
          J.next = Oe, ce.next = ge;
        }
        V.baseQueue !== J && p("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), V.baseQueue = J = ce, P.pending = null;
      }
      if (J !== null) {
        var Ve = J.next, gt = V.baseState, Ft = null, Gt = null, an = null, fn = Ve;
        do {
          var vr = fn.lane;
          if (Eu(Wh, vr)) {
            if (an !== null) {
              var Er = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: Pr,
                action: fn.action,
                hasEagerState: fn.hasEagerState,
                eagerState: fn.eagerState,
                next: null
              };
              an = an.next = Er;
            }
            if (fn.hasEagerState)
              gt = fn.eagerState;
            else {
              var to = fn.action;
              gt = c(gt, to);
            }
          } else {
            var ni = {
              lane: vr,
              action: fn.action,
              hasEagerState: fn.hasEagerState,
              eagerState: fn.eagerState,
              next: null
            };
            an === null ? (Gt = an = ni, Ft = gt) : an = an.next = ni, Zi.lanes = Rr(Zi.lanes, vr), Uy(vr);
          }
          fn = fn.next;
        } while (fn !== null && fn !== Ve);
        an === null ? Ft = gt : an.next = Gt, zo(gt, C.memoizedState) || Q_(), C.memoizedState = gt, C.baseState = Ft, C.baseQueue = an, P.lastRenderedState = gt;
      }
      var no = P.interleaved;
      if (no !== null) {
        var wt = no;
        do {
          var qt = wt.lane;
          Zi.lanes = Rr(Zi.lanes, qt), Uy(qt), wt = wt.next;
        } while (wt !== no);
      } else
        J === null && (P.lanes = Zt);
      var Tt = P.dispatch;
      return [C.memoizedState, Tt];
    }
    function ht(c, d, T) {
      var C = Qt(), P = C.queue;
      if (P === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      P.lastRenderedReducer = c;
      var V = P.dispatch, J = P.pending, ce = C.memoizedState;
      if (J !== null) {
        P.pending = null;
        var ge = J.next, Oe = ge;
        do {
          var Ve = Oe.action;
          ce = c(ce, Ve), Oe = Oe.next;
        } while (Oe !== ge);
        zo(ce, C.memoizedState) || Q_(), C.memoizedState = ce, C.baseQueue === null && (C.baseState = ce), P.lastRenderedState = ce;
      }
      return [ce, V];
    }
    function Je(c, d, T) {
    }
    function bt(c, d, T) {
    }
    function dn(c, d, T) {
      var C = Zi, P = en(), V, J = Qi();
      if (J) {
        if (T === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        V = T(), Fp || V !== T() && (p("The result of getServerSnapshot should be cached to avoid an infinite loop"), Fp = !0);
      } else {
        if (V = d(), !Fp) {
          var ce = d();
          zo(V, ce) || (p("The result of getSnapshot should be cached to avoid an infinite loop"), Fp = !0);
        }
        var ge = vx();
        if (ge === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        xc(ge, Wh) || Vn(C, d, V);
      }
      P.memoizedState = V;
      var Oe = {
        value: V,
        getSnapshot: d
      };
      return P.queue = Oe, $v(Cr.bind(null, C, Oe, c), [c]), C.flags |= mi, cy(fa | zs, lr.bind(null, C, Oe, V, d), void 0, null), V;
    }
    function Wn(c, d, T) {
      var C = Zi, P = Qt(), V = d();
      if (!Fp) {
        var J = d();
        zo(V, J) || (p("The result of getSnapshot should be cached to avoid an infinite loop"), Fp = !0);
      }
      var ce = P.memoizedState, ge = !zo(ce, V);
      ge && (P.memoizedState = V, Q_());
      var Oe = P.queue;
      if (Yv(Cr.bind(null, C, Oe, c), [c]), Oe.getSnapshot !== d || ge || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      Vo !== null && Vo.memoizedState.tag & fa) {
        C.flags |= mi, cy(fa | zs, lr.bind(null, C, Oe, V, d), void 0, null);
        var Ve = vx();
        if (Ve === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        xc(Ve, Wh) || Vn(C, d, V);
      }
      return V;
    }
    function Vn(c, d, T) {
      c.flags |= Ui;
      var C = {
        getSnapshot: d,
        value: T
      }, P = Zi.updateQueue;
      if (P === null)
        P = Dn(), Zi.updateQueue = P, P.stores = [C];
      else {
        var V = P.stores;
        V === null ? P.stores = [C] : V.push(C);
      }
    }
    function lr(c, d, T, C) {
      d.value = T, d.getSnapshot = C, fs(d) && zi(c);
    }
    function Cr(c, d, T) {
      var C = function() {
        fs(d) && zi(c);
      };
      return T(C);
    }
    function fs(c) {
      var d = c.getSnapshot, T = c.value;
      try {
        var C = d();
        return !zo(T, C);
      } catch {
        return !0;
      }
    }
    function zi(c) {
      Zo(c, kr, Li);
    }
    function Ac(c) {
      var d = en();
      typeof c == "function" && (c = c()), d.memoizedState = d.baseState = c;
      var T = {
        pending: null,
        interleaved: null,
        lanes: Zt,
        dispatch: null,
        lastRenderedReducer: Bn,
        lastRenderedState: c
      };
      d.queue = T;
      var C = T.dispatch = E2.bind(null, Zi, T);
      return [d.memoizedState, C];
    }
    function uy(c) {
      return co(Bn);
    }
    function w_(c) {
      return ht(Bn);
    }
    function cy(c, d, T, C) {
      var P = {
        tag: c,
        create: d,
        destroy: T,
        deps: C,
        // Circular
        next: null
      }, V = Zi.updateQueue;
      if (V === null)
        V = Dn(), Zi.updateQueue = V, V.lastEffect = P.next = P;
      else {
        var J = V.lastEffect;
        if (J === null)
          V.lastEffect = P.next = P;
        else {
          var ce = J.next;
          J.next = P, P.next = ce, V.lastEffect = P;
        }
      }
      return P;
    }
    function M_(c) {
      var d = en();
      {
        var T = {
          current: c
        };
        return d.memoizedState = T, T;
      }
    }
    function C_(c) {
      var d = Qt();
      return d.memoizedState;
    }
    function k0(c, d, T, C) {
      var P = en(), V = C === void 0 ? null : C;
      Zi.flags |= c, P.memoizedState = cy(fa | d, T, void 0, V);
    }
    function F0(c, d, T, C) {
      var P = Qt(), V = C === void 0 ? null : C, J = void 0;
      if (Za !== null) {
        var ce = Za.memoizedState;
        if (J = ce.destroy, V !== null) {
          var ge = ce.deps;
          if (pe(V, ge)) {
            P.memoizedState = cy(d, T, J, V);
            return;
          }
        }
      }
      Zi.flags |= c, P.memoizedState = cy(fa | d, T, J, V);
    }
    function $v(c, d) {
      return (Zi.mode & $o) !== wr ? k0(sn | mi | je, zs, c, d) : k0(mi | je, zs, c, d);
    }
    function Yv(c, d) {
      return F0(mi, zs, c, d);
    }
    function oE(c, d) {
      return k0(dt, Gh, c, d);
    }
    function R_(c, d) {
      return F0(dt, Gh, c, d);
    }
    function sE(c, d) {
      var T = dt;
      return T |= at, (Zi.mode & $o) !== wr && (T |= vt), k0(T, Qa, c, d);
    }
    function A_(c, d) {
      return F0(dt, Qa, c, d);
    }
    function pw(c, d) {
      if (typeof d == "function") {
        var T = d, C = c();
        return T(C), function() {
          T(null);
        };
      } else if (d != null) {
        var P = d;
        P.hasOwnProperty("current") || p("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(P).join(", ") + "}");
        var V = c();
        return P.current = V, function() {
          P.current = null;
        };
      }
    }
    function jm(c, d, T) {
      typeof d != "function" && p("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", d !== null ? typeof d : "null");
      var C = T != null ? T.concat([c]) : null, P = dt;
      return P |= at, (Zi.mode & $o) !== wr && (P |= vt), k0(P, Qa, pw.bind(null, d, c), C);
    }
    function fy(c, d, T) {
      typeof d != "function" && p("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", d !== null ? typeof d : "null");
      var C = T != null ? T.concat([c]) : null;
      return F0(dt, Qa, pw.bind(null, d, c), C);
    }
    function z0(c, d) {
    }
    var dy = z0;
    function lE(c, d) {
      var T = en(), C = d === void 0 ? null : d;
      return T.memoizedState = [c, C], c;
    }
    function D_(c, d) {
      var T = Qt(), C = d === void 0 ? null : d, P = T.memoizedState;
      if (P !== null && C !== null) {
        var V = P[1];
        if (pe(C, V))
          return P[0];
      }
      return T.memoizedState = [c, C], c;
    }
    function L_(c, d) {
      var T = en(), C = d === void 0 ? null : d, P = c();
      return T.memoizedState = [P, C], P;
    }
    function O_(c, d) {
      var T = Qt(), C = d === void 0 ? null : d, P = T.memoizedState;
      if (P !== null && C !== null) {
        var V = P[1];
        if (pe(C, V))
          return P[0];
      }
      var J = c();
      return T.memoizedState = [J, C], J;
    }
    function hy(c) {
      var d = Ac(c), T = d[0], C = d[1];
      return $v(function() {
        var P = Zl.transition;
        Zl.transition = {};
        try {
          C(c);
        } finally {
          Zl.transition = P;
        }
      }, [c]), T;
    }
    function Xv(c) {
      var d = uy(), T = d[0], C = d[1];
      return Yv(function() {
        var P = Zl.transition;
        Zl.transition = {};
        try {
          C(c);
        } finally {
          Zl.transition = P;
        }
      }, [c]), T;
    }
    function P_(c) {
      var d = w_(), T = d[0], C = d[1];
      return Yv(function() {
        var P = Zl.transition;
        Zl.transition = {};
        try {
          C(c);
        } finally {
          Zl.transition = P;
        }
      }, [c]), T;
    }
    function mw(c, d, T) {
      var C = Ls();
      _o(Mh(C, Bd)), c(!0);
      var P = Zl.transition;
      Zl.transition = {};
      var V = Zl.transition;
      Zl.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        c(!1), d();
      } finally {
        if (_o(C), Zl.transition = P, P === null && V._updatedFibers) {
          var J = V._updatedFibers.size;
          J > 10 && h("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), V._updatedFibers.clear();
        }
      }
    }
    function py() {
      var c = Ac(!1), d = c[0], T = c[1], C = mw.bind(null, T), P = en();
      return P.memoizedState = C, [d, C];
    }
    function uE() {
      var c = uy(), d = c[0], T = Qt(), C = T.memoizedState;
      return [d, C];
    }
    function cE() {
      var c = w_(), d = c[0], T = Qt(), C = T.memoizedState;
      return [d, C];
    }
    var fE = !1;
    function vw() {
      return fE;
    }
    function U_() {
      var c = en(), d = vx(), T = d.identifierPrefix, C;
      if (Qi()) {
        var P = E_();
        C = ":" + T + "R" + P;
        var V = jv++;
        V > 0 && (C += "H" + V.toString(32)), C += ":";
      } else {
        var J = ly++;
        C = ":" + T + "r" + J.toString(32) + ":";
      }
      return c.memoizedState = C, C;
    }
    function I0() {
      var c = Qt(), d = c.memoizedState;
      return d;
    }
    function $m(c, d, T) {
      typeof arguments[3] == "function" && p("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var C = qp(c), P = {
        lane: C,
        action: T,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (gw(c))
        yw(d, P);
      else {
        my(c, d, P);
        var V = Pl(), J = Zo(c, C, V);
        J !== null && N_(J, d, C);
      }
      dE(c, C);
    }
    function E2(c, d, T) {
      typeof arguments[3] == "function" && p("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var C = qp(c), P = {
        lane: C,
        action: T,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (gw(c))
        yw(d, P);
      else {
        my(c, d, P);
        var V = c.alternate;
        if (c.lanes === Zt && (V === null || V.lanes === Zt)) {
          var J = d.lastRenderedReducer;
          if (J !== null) {
            var ce;
            ce = wn.current, wn.current = nc;
            try {
              var ge = d.lastRenderedState, Oe = J(ge, T);
              if (P.hasEagerState = !0, P.eagerState = Oe, zo(Oe, ge))
                return;
            } catch {
            } finally {
              wn.current = ce;
            }
          }
        }
        var Ve = Pl(), gt = Zo(c, C, Ve);
        gt !== null && N_(gt, d, C);
      }
      dE(c, C);
    }
    function gw(c) {
      var d = c.alternate;
      return c === Zi || d !== null && d === Zi;
    }
    function yw(c, d) {
      Wm = zp = !0;
      var T = c.pending;
      T === null ? d.next = d : (d.next = T.next, T.next = d), c.pending = d;
    }
    function my(c, d, T, C) {
      if (gx(c)) {
        var P = d.interleaved;
        P === null ? (T.next = T, sr(d)) : (T.next = P.next, P.next = T), d.interleaved = T;
      } else {
        var V = d.pending;
        V === null ? T.next = T : (T.next = V.next, V.next = T), d.pending = T;
      }
    }
    function N_(c, d, T) {
      if (As(T)) {
        var C = d.lanes;
        C = Ba(C, c.pendingLanes);
        var P = Rr(C, T);
        d.lanes = P, ko(c, P);
      }
    }
    function dE(c, d, T) {
      uf(c, d);
    }
    var k_ = {
      readContext: mn,
      useCallback: $,
      useContext: $,
      useEffect: $,
      useImperativeHandle: $,
      useInsertionEffect: $,
      useLayoutEffect: $,
      useMemo: $,
      useReducer: $,
      useRef: $,
      useState: $,
      useDebugValue: $,
      useDeferredValue: $,
      useTransition: $,
      useMutableSource: $,
      useSyncExternalStore: $,
      useId: $,
      unstable_isNewReconciler: U
    }, hE = null, Sw = null, Ja = null, F_ = null, xf = null, nc = null, B0 = null;
    {
      var z_ = function() {
        p("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, Dr = function() {
        p("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      hE = {
        readContext: function(c) {
          return mn(c);
        },
        useCallback: function(c, d) {
          return Vt = "useCallback", m(), O(d), lE(c, d);
        },
        useContext: function(c) {
          return Vt = "useContext", m(), mn(c);
        },
        useEffect: function(c, d) {
          return Vt = "useEffect", m(), O(d), $v(c, d);
        },
        useImperativeHandle: function(c, d, T) {
          return Vt = "useImperativeHandle", m(), O(T), jm(c, d, T);
        },
        useInsertionEffect: function(c, d) {
          return Vt = "useInsertionEffect", m(), O(d), oE(c, d);
        },
        useLayoutEffect: function(c, d) {
          return Vt = "useLayoutEffect", m(), O(d), sE(c, d);
        },
        useMemo: function(c, d) {
          Vt = "useMemo", m(), O(d);
          var T = wn.current;
          wn.current = xf;
          try {
            return L_(c, d);
          } finally {
            wn.current = T;
          }
        },
        useReducer: function(c, d, T) {
          Vt = "useReducer", m();
          var C = wn.current;
          wn.current = xf;
          try {
            return Gn(c, d, T);
          } finally {
            wn.current = C;
          }
        },
        useRef: function(c) {
          return Vt = "useRef", m(), M_(c);
        },
        useState: function(c) {
          Vt = "useState", m();
          var d = wn.current;
          wn.current = xf;
          try {
            return Ac(c);
          } finally {
            wn.current = d;
          }
        },
        useDebugValue: function(c, d) {
          return Vt = "useDebugValue", m(), void 0;
        },
        useDeferredValue: function(c) {
          return Vt = "useDeferredValue", m(), hy(c);
        },
        useTransition: function() {
          return Vt = "useTransition", m(), py();
        },
        useMutableSource: function(c, d, T) {
          return Vt = "useMutableSource", m(), void 0;
        },
        useSyncExternalStore: function(c, d, T) {
          return Vt = "useSyncExternalStore", m(), dn(c, d, T);
        },
        useId: function() {
          return Vt = "useId", m(), U_();
        },
        unstable_isNewReconciler: U
      }, Sw = {
        readContext: function(c) {
          return mn(c);
        },
        useCallback: function(c, d) {
          return Vt = "useCallback", b(), lE(c, d);
        },
        useContext: function(c) {
          return Vt = "useContext", b(), mn(c);
        },
        useEffect: function(c, d) {
          return Vt = "useEffect", b(), $v(c, d);
        },
        useImperativeHandle: function(c, d, T) {
          return Vt = "useImperativeHandle", b(), jm(c, d, T);
        },
        useInsertionEffect: function(c, d) {
          return Vt = "useInsertionEffect", b(), oE(c, d);
        },
        useLayoutEffect: function(c, d) {
          return Vt = "useLayoutEffect", b(), sE(c, d);
        },
        useMemo: function(c, d) {
          Vt = "useMemo", b();
          var T = wn.current;
          wn.current = xf;
          try {
            return L_(c, d);
          } finally {
            wn.current = T;
          }
        },
        useReducer: function(c, d, T) {
          Vt = "useReducer", b();
          var C = wn.current;
          wn.current = xf;
          try {
            return Gn(c, d, T);
          } finally {
            wn.current = C;
          }
        },
        useRef: function(c) {
          return Vt = "useRef", b(), M_(c);
        },
        useState: function(c) {
          Vt = "useState", b();
          var d = wn.current;
          wn.current = xf;
          try {
            return Ac(c);
          } finally {
            wn.current = d;
          }
        },
        useDebugValue: function(c, d) {
          return Vt = "useDebugValue", b(), void 0;
        },
        useDeferredValue: function(c) {
          return Vt = "useDeferredValue", b(), hy(c);
        },
        useTransition: function() {
          return Vt = "useTransition", b(), py();
        },
        useMutableSource: function(c, d, T) {
          return Vt = "useMutableSource", b(), void 0;
        },
        useSyncExternalStore: function(c, d, T) {
          return Vt = "useSyncExternalStore", b(), dn(c, d, T);
        },
        useId: function() {
          return Vt = "useId", b(), U_();
        },
        unstable_isNewReconciler: U
      }, Ja = {
        readContext: function(c) {
          return mn(c);
        },
        useCallback: function(c, d) {
          return Vt = "useCallback", b(), D_(c, d);
        },
        useContext: function(c) {
          return Vt = "useContext", b(), mn(c);
        },
        useEffect: function(c, d) {
          return Vt = "useEffect", b(), Yv(c, d);
        },
        useImperativeHandle: function(c, d, T) {
          return Vt = "useImperativeHandle", b(), fy(c, d, T);
        },
        useInsertionEffect: function(c, d) {
          return Vt = "useInsertionEffect", b(), R_(c, d);
        },
        useLayoutEffect: function(c, d) {
          return Vt = "useLayoutEffect", b(), A_(c, d);
        },
        useMemo: function(c, d) {
          Vt = "useMemo", b();
          var T = wn.current;
          wn.current = nc;
          try {
            return O_(c, d);
          } finally {
            wn.current = T;
          }
        },
        useReducer: function(c, d, T) {
          Vt = "useReducer", b();
          var C = wn.current;
          wn.current = nc;
          try {
            return co(c, d, T);
          } finally {
            wn.current = C;
          }
        },
        useRef: function(c) {
          return Vt = "useRef", b(), C_();
        },
        useState: function(c) {
          Vt = "useState", b();
          var d = wn.current;
          wn.current = nc;
          try {
            return uy(c);
          } finally {
            wn.current = d;
          }
        },
        useDebugValue: function(c, d) {
          return Vt = "useDebugValue", b(), dy();
        },
        useDeferredValue: function(c) {
          return Vt = "useDeferredValue", b(), Xv(c);
        },
        useTransition: function() {
          return Vt = "useTransition", b(), uE();
        },
        useMutableSource: function(c, d, T) {
          return Vt = "useMutableSource", b(), void 0;
        },
        useSyncExternalStore: function(c, d, T) {
          return Vt = "useSyncExternalStore", b(), Wn(c, d);
        },
        useId: function() {
          return Vt = "useId", b(), I0();
        },
        unstable_isNewReconciler: U
      }, F_ = {
        readContext: function(c) {
          return mn(c);
        },
        useCallback: function(c, d) {
          return Vt = "useCallback", b(), D_(c, d);
        },
        useContext: function(c) {
          return Vt = "useContext", b(), mn(c);
        },
        useEffect: function(c, d) {
          return Vt = "useEffect", b(), Yv(c, d);
        },
        useImperativeHandle: function(c, d, T) {
          return Vt = "useImperativeHandle", b(), fy(c, d, T);
        },
        useInsertionEffect: function(c, d) {
          return Vt = "useInsertionEffect", b(), R_(c, d);
        },
        useLayoutEffect: function(c, d) {
          return Vt = "useLayoutEffect", b(), A_(c, d);
        },
        useMemo: function(c, d) {
          Vt = "useMemo", b();
          var T = wn.current;
          wn.current = B0;
          try {
            return O_(c, d);
          } finally {
            wn.current = T;
          }
        },
        useReducer: function(c, d, T) {
          Vt = "useReducer", b();
          var C = wn.current;
          wn.current = B0;
          try {
            return ht(c, d, T);
          } finally {
            wn.current = C;
          }
        },
        useRef: function(c) {
          return Vt = "useRef", b(), C_();
        },
        useState: function(c) {
          Vt = "useState", b();
          var d = wn.current;
          wn.current = B0;
          try {
            return w_(c);
          } finally {
            wn.current = d;
          }
        },
        useDebugValue: function(c, d) {
          return Vt = "useDebugValue", b(), dy();
        },
        useDeferredValue: function(c) {
          return Vt = "useDeferredValue", b(), P_(c);
        },
        useTransition: function() {
          return Vt = "useTransition", b(), cE();
        },
        useMutableSource: function(c, d, T) {
          return Vt = "useMutableSource", b(), void 0;
        },
        useSyncExternalStore: function(c, d, T) {
          return Vt = "useSyncExternalStore", b(), Wn(c, d);
        },
        useId: function() {
          return Vt = "useId", b(), I0();
        },
        unstable_isNewReconciler: U
      }, xf = {
        readContext: function(c) {
          return z_(), mn(c);
        },
        useCallback: function(c, d) {
          return Vt = "useCallback", Dr(), m(), lE(c, d);
        },
        useContext: function(c) {
          return Vt = "useContext", Dr(), m(), mn(c);
        },
        useEffect: function(c, d) {
          return Vt = "useEffect", Dr(), m(), $v(c, d);
        },
        useImperativeHandle: function(c, d, T) {
          return Vt = "useImperativeHandle", Dr(), m(), jm(c, d, T);
        },
        useInsertionEffect: function(c, d) {
          return Vt = "useInsertionEffect", Dr(), m(), oE(c, d);
        },
        useLayoutEffect: function(c, d) {
          return Vt = "useLayoutEffect", Dr(), m(), sE(c, d);
        },
        useMemo: function(c, d) {
          Vt = "useMemo", Dr(), m();
          var T = wn.current;
          wn.current = xf;
          try {
            return L_(c, d);
          } finally {
            wn.current = T;
          }
        },
        useReducer: function(c, d, T) {
          Vt = "useReducer", Dr(), m();
          var C = wn.current;
          wn.current = xf;
          try {
            return Gn(c, d, T);
          } finally {
            wn.current = C;
          }
        },
        useRef: function(c) {
          return Vt = "useRef", Dr(), m(), M_(c);
        },
        useState: function(c) {
          Vt = "useState", Dr(), m();
          var d = wn.current;
          wn.current = xf;
          try {
            return Ac(c);
          } finally {
            wn.current = d;
          }
        },
        useDebugValue: function(c, d) {
          return Vt = "useDebugValue", Dr(), m(), void 0;
        },
        useDeferredValue: function(c) {
          return Vt = "useDeferredValue", Dr(), m(), hy(c);
        },
        useTransition: function() {
          return Vt = "useTransition", Dr(), m(), py();
        },
        useMutableSource: function(c, d, T) {
          return Vt = "useMutableSource", Dr(), m(), void 0;
        },
        useSyncExternalStore: function(c, d, T) {
          return Vt = "useSyncExternalStore", Dr(), m(), dn(c, d, T);
        },
        useId: function() {
          return Vt = "useId", Dr(), m(), U_();
        },
        unstable_isNewReconciler: U
      }, nc = {
        readContext: function(c) {
          return z_(), mn(c);
        },
        useCallback: function(c, d) {
          return Vt = "useCallback", Dr(), b(), D_(c, d);
        },
        useContext: function(c) {
          return Vt = "useContext", Dr(), b(), mn(c);
        },
        useEffect: function(c, d) {
          return Vt = "useEffect", Dr(), b(), Yv(c, d);
        },
        useImperativeHandle: function(c, d, T) {
          return Vt = "useImperativeHandle", Dr(), b(), fy(c, d, T);
        },
        useInsertionEffect: function(c, d) {
          return Vt = "useInsertionEffect", Dr(), b(), R_(c, d);
        },
        useLayoutEffect: function(c, d) {
          return Vt = "useLayoutEffect", Dr(), b(), A_(c, d);
        },
        useMemo: function(c, d) {
          Vt = "useMemo", Dr(), b();
          var T = wn.current;
          wn.current = nc;
          try {
            return O_(c, d);
          } finally {
            wn.current = T;
          }
        },
        useReducer: function(c, d, T) {
          Vt = "useReducer", Dr(), b();
          var C = wn.current;
          wn.current = nc;
          try {
            return co(c, d, T);
          } finally {
            wn.current = C;
          }
        },
        useRef: function(c) {
          return Vt = "useRef", Dr(), b(), C_();
        },
        useState: function(c) {
          Vt = "useState", Dr(), b();
          var d = wn.current;
          wn.current = nc;
          try {
            return uy(c);
          } finally {
            wn.current = d;
          }
        },
        useDebugValue: function(c, d) {
          return Vt = "useDebugValue", Dr(), b(), dy();
        },
        useDeferredValue: function(c) {
          return Vt = "useDeferredValue", Dr(), b(), Xv(c);
        },
        useTransition: function() {
          return Vt = "useTransition", Dr(), b(), uE();
        },
        useMutableSource: function(c, d, T) {
          return Vt = "useMutableSource", Dr(), b(), void 0;
        },
        useSyncExternalStore: function(c, d, T) {
          return Vt = "useSyncExternalStore", Dr(), b(), Wn(c, d);
        },
        useId: function() {
          return Vt = "useId", Dr(), b(), I0();
        },
        unstable_isNewReconciler: U
      }, B0 = {
        readContext: function(c) {
          return z_(), mn(c);
        },
        useCallback: function(c, d) {
          return Vt = "useCallback", Dr(), b(), D_(c, d);
        },
        useContext: function(c) {
          return Vt = "useContext", Dr(), b(), mn(c);
        },
        useEffect: function(c, d) {
          return Vt = "useEffect", Dr(), b(), Yv(c, d);
        },
        useImperativeHandle: function(c, d, T) {
          return Vt = "useImperativeHandle", Dr(), b(), fy(c, d, T);
        },
        useInsertionEffect: function(c, d) {
          return Vt = "useInsertionEffect", Dr(), b(), R_(c, d);
        },
        useLayoutEffect: function(c, d) {
          return Vt = "useLayoutEffect", Dr(), b(), A_(c, d);
        },
        useMemo: function(c, d) {
          Vt = "useMemo", Dr(), b();
          var T = wn.current;
          wn.current = nc;
          try {
            return O_(c, d);
          } finally {
            wn.current = T;
          }
        },
        useReducer: function(c, d, T) {
          Vt = "useReducer", Dr(), b();
          var C = wn.current;
          wn.current = nc;
          try {
            return ht(c, d, T);
          } finally {
            wn.current = C;
          }
        },
        useRef: function(c) {
          return Vt = "useRef", Dr(), b(), C_();
        },
        useState: function(c) {
          Vt = "useState", Dr(), b();
          var d = wn.current;
          wn.current = nc;
          try {
            return w_(c);
          } finally {
            wn.current = d;
          }
        },
        useDebugValue: function(c, d) {
          return Vt = "useDebugValue", Dr(), b(), dy();
        },
        useDeferredValue: function(c) {
          return Vt = "useDeferredValue", Dr(), b(), P_(c);
        },
        useTransition: function() {
          return Vt = "useTransition", Dr(), b(), cE();
        },
        useMutableSource: function(c, d, T) {
          return Vt = "useMutableSource", Dr(), b(), void 0;
        },
        useSyncExternalStore: function(c, d, T) {
          return Vt = "useSyncExternalStore", Dr(), b(), Wn(c, d);
        },
        useId: function() {
          return Vt = "useId", Dr(), b(), I0();
        },
        unstable_isNewReconciler: U
      };
    }
    var id = i.unstable_now, _w = 0, qv = -1, jh = -1, I_ = -1, B_ = !1, H_ = !1;
    function xw() {
      return B_;
    }
    function Dc() {
      H_ = !0;
    }
    function H0() {
      B_ = !1, H_ = !1;
    }
    function V_() {
      B_ = H_, H_ = !1;
    }
    function Ip() {
      return _w;
    }
    function pE() {
      _w = id();
    }
    function Bp(c) {
      jh = id(), c.actualStartTime < 0 && (c.actualStartTime = id());
    }
    function Ym(c) {
      jh = -1;
    }
    function Kv(c, d) {
      if (jh >= 0) {
        var T = id() - jh;
        c.actualDuration += T, d && (c.selfBaseDuration = T), jh = -1;
      }
    }
    function Lc(c) {
      if (qv >= 0) {
        var d = id() - qv;
        qv = -1;
        for (var T = c.return; T !== null; ) {
          switch (T.tag) {
            case K:
              var C = T.stateNode;
              C.effectDuration += d;
              return;
            case ye:
              var P = T.stateNode;
              P.effectDuration += d;
              return;
          }
          T = T.return;
        }
      }
    }
    function vy(c) {
      if (I_ >= 0) {
        var d = id() - I_;
        I_ = -1;
        for (var T = c.return; T !== null; ) {
          switch (T.tag) {
            case K:
              var C = T.stateNode;
              C !== null && (C.passiveEffectDuration += d);
              return;
            case ye:
              var P = T.stateNode;
              P !== null && (P.passiveEffectDuration += d);
              return;
          }
          T = T.return;
        }
      }
    }
    function Lu() {
      qv = id();
    }
    function G_() {
      I_ = id();
    }
    function gy(c) {
      for (var d = c.child; d; )
        c.actualDuration += d.actualDuration, d = d.sibling;
    }
    function V0(c, d) {
      return {
        value: c,
        source: d,
        stack: Zf(d)
      };
    }
    function Ew(c, d) {
      return !0;
    }
    function mE(c, d) {
      try {
        var T = Ew(c, d);
        if (T === !1)
          return;
        var C = d.value, P = d.source, V = d.stack, J = V !== null ? V : "";
        if (C != null && C._suppressLogging) {
          if (c.tag === ee)
            return;
          console.error(C);
        }
        var ce = P ? pt(P) : null, ge = ce ? "The above error occurred in the <" + ce + "> component:" : "The above error occurred in one of your React components:", Oe;
        if (c.tag === K)
          Oe = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var Ve = pt(c) || "Anonymous";
          Oe = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + Ve + ".");
        }
        var gt = ge + `
` + J + `

` + ("" + Oe);
        console.error(gt);
      } catch (Ft) {
        setTimeout(function() {
          throw Ft;
        });
      }
    }
    var b2 = typeof WeakMap == "function" ? WeakMap : Map;
    function G0(c, d, T) {
      var C = mr(Li, T);
      C.tag = _t, C.payload = {
        element: null
      };
      var P = d.value;
      return C.callback = function() {
        ob(P), mE(c, d);
      }, C;
    }
    function yy(c, d, T) {
      var C = mr(Li, T);
      C.tag = _t;
      var P = c.type.getDerivedStateFromError;
      if (typeof P == "function") {
        var V = d.value;
        C.payload = function() {
          return P(V);
        }, C.callback = function() {
          CM(c), mE(c, d);
        };
      }
      var J = c.stateNode;
      return J !== null && typeof J.componentDidCatch == "function" && (C.callback = function() {
        CM(c), mE(c, d), typeof P != "function" && ib(this);
        var ge = d.value, Oe = d.stack;
        this.componentDidCatch(ge, {
          componentStack: Oe !== null ? Oe : ""
        }), typeof P != "function" && (Mi(c.lanes, kr) || p("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", pt(c) || "Unknown"));
      }), C;
    }
    function vE(c, d, T) {
      var C = c.pingCache, P;
      if (C === null ? (C = c.pingCache = new b2(), P = /* @__PURE__ */ new Set(), C.set(d, P)) : (P = C.get(d), P === void 0 && (P = /* @__PURE__ */ new Set(), C.set(d, P))), !P.has(T)) {
        P.add(T);
        var V = Cx.bind(null, c, d, T);
        Xa && dg(c, T), d.then(V, V);
      }
    }
    function T2(c, d, T, C) {
      var P = c.updateQueue;
      if (P === null) {
        var V = /* @__PURE__ */ new Set();
        V.add(T), c.updateQueue = V;
      } else
        P.add(T);
    }
    function W_(c, d) {
      var T = c.tag;
      if ((c.mode & ji) === wr && (T === Y || T === de || T === ue)) {
        var C = c.alternate;
        C ? (c.updateQueue = C.updateQueue, c.memoizedState = C.memoizedState, c.lanes = C.lanes) : (c.updateQueue = null, c.memoizedState = null);
      }
    }
    function bw(c) {
      var d = c;
      do {
        if (d.tag === X && kp(d))
          return d;
        d = d.return;
      } while (d !== null);
      return null;
    }
    function Tw(c, d, T, C, P) {
      if ((c.mode & ji) === wr) {
        if (c === d)
          c.flags |= Jt;
        else {
          if (c.flags |= En, T.flags |= pn, T.flags &= ~(fi | Ht), Hr && R) {
            var V = c.alternate;
            if (V === null) {
              var J = c.child, ce = J.child;
              if (ce !== null) {
                var ge = ce.memoizedProps.children, Oe = yn("hidden", ge);
                ce.pendingProps = Oe, ce.memoizedProps = Oe;
              }
            }
          }
          if (T.tag === ee) {
            var Ve = T.alternate;
            if (Ve === null)
              T.tag = Ae;
            else {
              var gt = mr(Li, kr);
              gt.tag = qa, ei(T, gt);
            }
          }
          T.lanes = Rr(T.lanes, kr);
        }
        return c;
      }
      return c.flags |= Jt, c.lanes = P, c;
    }
    function w2(c, d, T, C, P) {
      if (T.flags |= Ht, Xa && dg(c, P), C !== null && typeof C == "object" && typeof C.then == "function") {
        var V = C;
        W_(T);
        var J = bw(d);
        if (J !== null) {
          J.flags &= ~tr, Tw(J, d, T, c, P), J.mode & ji && vE(c, V, P), T2(J, c, V);
          return;
        } else {
          if (!ga(P)) {
            vE(c, V, P), mS();
            return;
          }
          var ce = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          C = ce;
        }
      } else if (Qi() && T.mode & ji) {
        Im();
        var ge = bw(d);
        if (ge !== null) {
          (ge.flags & Jt) === ve && (ge.flags |= tr), Tw(ge, d, T, c, P), To(C);
          return;
        }
      }
      gM(C), C = V0(C, T);
      var Oe = d;
      do {
        switch (Oe.tag) {
          case K: {
            var Ve = C;
            Oe.flags |= Jt;
            var gt = $f(P);
            Oe.lanes = Rr(Oe.lanes, gt);
            var Ft = G0(Oe, Ve, gt);
            ti(Oe, Ft);
            return;
          }
          case ee:
            var Gt = C, an = Oe.type, fn = Oe.stateNode;
            if ((Oe.flags & En) === ve && (typeof an.getDerivedStateFromError == "function" || fn !== null && typeof fn.componentDidCatch == "function" && !Mx(fn))) {
              Oe.flags |= Jt;
              var vr = $f(P);
              Oe.lanes = Rr(Oe.lanes, vr);
              var ni = yy(Oe, Gt, vr);
              ti(Oe, ni);
              return;
            }
            break;
        }
        Oe = Oe.return;
      } while (Oe !== null);
    }
    function M2() {
      return null;
    }
    function $h(c) {
      c.flags |= dt;
    }
    function ww(c) {
      c.flags |= fr, c.flags |= Qe;
    }
    function Mw(c, d) {
      var T = c !== null && c.child === d.child;
      if (T)
        return !0;
      if ((d.flags & Un) !== ve)
        return !1;
      for (var C = d.child; C !== null; ) {
        if ((C.flags & Mn) !== ve || (C.subtreeFlags & Mn) !== ve)
          return !1;
        C = C.sibling;
      }
      return !0;
    }
    var W0, j0, j_, Sy;
    if (Do)
      W0 = function(c, d, T, C) {
        for (var P = d.child; P !== null; ) {
          if (P.tag === se || P.tag === he)
            Ro(c, P.stateNode);
          else if (P.tag !== fe) {
            if (P.child !== null) {
              P.child.return = P, P = P.child;
              continue;
            }
          }
          if (P === d)
            return;
          for (; P.sibling === null; ) {
            if (P.return === null || P.return === d)
              return;
            P = P.return;
          }
          P.sibling.return = P.return, P = P.sibling;
        }
      }, j0 = function(c, d) {
      }, j_ = function(c, d, T, C, P) {
        var V = c.memoizedProps;
        if (V !== C) {
          var J = d.stateNode, ce = Vm(), ge = Ao(J, T, V, C, P, ce);
          d.updateQueue = ge, ge && $h(d);
        }
      }, Sy = function(c, d, T, C) {
        T !== C && $h(d);
      };
    else if (Hr) {
      W0 = function(c, d, T, C) {
        for (var P = d.child; P !== null; ) {
          if (P.tag === se) {
            var V = P.stateNode;
            if (T && C) {
              var J = P.memoizedProps, ce = P.type;
              V = Zn(V, ce, J, P);
            }
            Ro(c, V);
          } else if (P.tag === he) {
            var ge = P.stateNode;
            if (T && C) {
              var Oe = P.memoizedProps;
              ge = Jn(ge, Oe, P);
            }
            Ro(c, ge);
          } else if (P.tag !== fe) {
            if (P.tag === Fe && P.memoizedState !== null) {
              var Ve = P.child;
              Ve !== null && (Ve.return = P), W0(c, P, !0, !0);
            } else if (P.child !== null) {
              P.child.return = P, P = P.child;
              continue;
            }
          }
          if (P = P, P === d)
            return;
          for (; P.sibling === null; ) {
            if (P.return === null || P.return === d)
              return;
            P = P.return;
          }
          P.sibling.return = P.return, P = P.sibling;
        }
      };
      var $_ = function(c, d, T, C) {
        for (var P = d.child; P !== null; ) {
          if (P.tag === se) {
            var V = P.stateNode;
            if (T && C) {
              var J = P.memoizedProps, ce = P.type;
              V = Zn(V, ce, J, P);
            }
            Ut(c, V);
          } else if (P.tag === he) {
            var ge = P.stateNode;
            if (T && C) {
              var Oe = P.memoizedProps;
              ge = Jn(ge, Oe, P);
            }
            Ut(c, ge);
          } else if (P.tag !== fe) {
            if (P.tag === Fe && P.memoizedState !== null) {
              var Ve = P.child;
              Ve !== null && (Ve.return = P), $_(c, P, !0, !0);
            } else if (P.child !== null) {
              P.child.return = P, P = P.child;
              continue;
            }
          }
          if (P = P, P === d)
            return;
          for (; P.sibling === null; ) {
            if (P.return === null || P.return === d)
              return;
            P = P.return;
          }
          P.sibling.return = P.return, P = P.sibling;
        }
      };
      j0 = function(c, d) {
        var T = d.stateNode, C = Mw(c, d);
        if (!C) {
          var P = T.containerInfo, V = ct(P);
          $_(V, d, !1, !1), T.pendingChildren = V, $h(d), tn(P, V);
        }
      }, j_ = function(c, d, T, C, P) {
        var V = c.stateNode, J = c.memoizedProps, ce = Mw(c, d);
        if (ce && J === C) {
          d.stateNode = V;
          return;
        }
        var ge = d.stateNode, Oe = Vm(), Ve = null;
        if (J !== C && (Ve = Ao(ge, T, J, C, P, Oe)), ce && Ve === null) {
          d.stateNode = V;
          return;
        }
        var gt = Ie(V, Ve, T, J, C, d, ce, ge);
        Ra(gt, T, C, P, Oe) && $h(d), d.stateNode = gt, ce ? $h(d) : W0(gt, d, !1, !1);
      }, Sy = function(c, d, T, C) {
        if (T !== C) {
          var P = Zd(), V = Vm();
          d.stateNode = Ts(C, P, V, d), $h(d);
        } else
          d.stateNode = c.stateNode;
      };
    } else
      j0 = function(c, d) {
      }, j_ = function(c, d, T, C, P) {
      }, Sy = function(c, d, T, C) {
      };
    function Qv(c, d) {
      if (!Qi())
        switch (c.tailMode) {
          case "hidden": {
            for (var T = c.tail, C = null; T !== null; )
              T.alternate !== null && (C = T), T = T.sibling;
            C === null ? c.tail = null : C.sibling = null;
            break;
          }
          case "collapsed": {
            for (var P = c.tail, V = null; P !== null; )
              P.alternate !== null && (V = P), P = P.sibling;
            V === null ? !d && c.tail !== null ? c.tail.sibling = null : c.tail = null : V.sibling = null;
            break;
          }
        }
    }
    function ll(c) {
      var d = c.alternate !== null && c.alternate.child === c.child, T = Zt, C = ve;
      if (d) {
        if ((c.mode & jr) !== wr) {
          for (var ge = c.selfBaseDuration, Oe = c.child; Oe !== null; )
            T = Rr(T, Rr(Oe.lanes, Oe.childLanes)), C |= Oe.subtreeFlags & Mt, C |= Oe.flags & Mt, ge += Oe.treeBaseDuration, Oe = Oe.sibling;
          c.treeBaseDuration = ge;
        } else
          for (var Ve = c.child; Ve !== null; )
            T = Rr(T, Rr(Ve.lanes, Ve.childLanes)), C |= Ve.subtreeFlags & Mt, C |= Ve.flags & Mt, Ve.return = c, Ve = Ve.sibling;
        c.subtreeFlags |= C;
      } else {
        if ((c.mode & jr) !== wr) {
          for (var P = c.actualDuration, V = c.selfBaseDuration, J = c.child; J !== null; )
            T = Rr(T, Rr(J.lanes, J.childLanes)), C |= J.subtreeFlags, C |= J.flags, P += J.actualDuration, V += J.treeBaseDuration, J = J.sibling;
          c.actualDuration = P, c.treeBaseDuration = V;
        } else
          for (var ce = c.child; ce !== null; )
            T = Rr(T, Rr(ce.lanes, ce.childLanes)), C |= ce.subtreeFlags, C |= ce.flags, ce.return = c, ce = ce.sibling;
        c.subtreeFlags |= C;
      }
      return c.childLanes = T, d;
    }
    function Cw(c, d, T) {
      var C = d.pendingProps;
      switch (ey(d), d.tag) {
        case Z:
        case Ce:
        case ue:
        case Y:
        case de:
        case me:
        case Ee:
        case ye:
        case be:
        case q:
          return ll(d), null;
        case ee: {
          var P = d.type;
          return Gl(P) && Jc(d), ll(d), null;
        }
        case K: {
          var V = d.stateNode;
          if (Sf(d), Vu(d), sy(), V.pendingContext && (V.context = V.pendingContext, V.pendingContext = null), c === null || c.child === null) {
            var J = Fh(d);
            if (J)
              $h(d);
            else if (c !== null) {
              var ce = c.memoizedState;
              // Check if this is a client root
              (!ce.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (d.flags & tr) !== ve) && (d.flags |= Hn, zh());
            }
          }
          return j0(c, d), ll(d), null;
        }
        case se: {
          U0(d);
          var ge = Zd(), Oe = d.type;
          if (c !== null && d.stateNode != null)
            j_(c, d, Oe, C, ge), c.ref !== d.ref && ww(d);
          else {
            if (!C) {
              if (d.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return ll(d), null;
            }
            var Ve = Vm(), gt = Fh(d);
            if (gt)
              ny(d, ge, Ve) && $h(d);
            else {
              var Ft = ns(Oe, C, ge, Ve, d);
              W0(Ft, d, !1, !1), d.stateNode = Ft, Ra(Ft, Oe, C, ge, Ve) && $h(d);
            }
            d.ref !== null && ww(d);
          }
          return ll(d), null;
        }
        case he: {
          var Gt = C;
          if (c && d.stateNode != null) {
            var an = c.memoizedProps;
            Sy(c, d, an, Gt);
          } else {
            if (typeof Gt != "string" && d.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var fn = Zd(), vr = Vm(), ni = Fh(d);
            ni ? Up(d) && $h(d) : d.stateNode = Ts(Gt, fn, vr, d);
          }
          return ll(d), null;
        }
        case X: {
          Jd(d);
          var Er = d.memoizedState;
          {
            if (Bm() && (d.mode & ji) !== wr && (d.flags & En) === ve)
              return kv(d), Mc(), d.flags |= tr | Ht | Jt, d;
            if (Er !== null && Er.dehydrated !== null) {
              var to = Fh(d);
              if (c === null) {
                if (!to)
                  throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                if (rd(d), ll(d), (d.mode & jr) !== wr) {
                  var no = Er !== null;
                  if (no) {
                    var wt = d.child;
                    wt !== null && (d.treeBaseDuration -= wt.treeBaseDuration);
                  }
                }
                return null;
              } else {
                if (Mc(), (d.flags & En) === ve && (d.memoizedState = null), d.flags |= dt, ll(d), (d.mode & jr) !== wr) {
                  var qt = Er !== null;
                  if (qt) {
                    var Tt = d.child;
                    Tt !== null && (d.treeBaseDuration -= Tt.treeBaseDuration);
                  }
                }
                return null;
              }
            }
            zh();
          }
          if ((d.flags & En) !== ve)
            return d.lanes = T, (d.mode & jr) !== wr && gy(d), d;
          var hn = Er !== null, er = !1;
          if (c === null)
            Fh(d);
          else {
            var bn = c.memoizedState;
            er = bn !== null;
          }
          if (hn && !er) {
            var Ir = d.child;
            if (Ir.flags |= Or, (d.mode & ji) !== wr) {
              var Yi = c === null && (d.memoizedProps.unstable_avoidThisFallback !== !0 || !k);
              Yi || N0(tc.current, T_) ? JE() : mS();
            }
          }
          var wa = d.updateQueue;
          if (wa !== null && (d.flags |= dt), ll(d), (d.mode & jr) !== wr && hn) {
            var Tn = d.child;
            Tn !== null && (d.treeBaseDuration -= Tn.treeBaseDuration);
          }
          return null;
        }
        case fe:
          return Sf(d), j0(c, d), c === null && rr(d.stateNode.containerInfo), ll(d), null;
        case we:
          var _a = d.type._context;
          return te(_a, d), ll(d), null;
        case Ae: {
          var Xi = d.type;
          return Gl(Xi) && Jc(d), ll(d), null;
        }
        case Ne: {
          Jd(d);
          var si = d.memoizedState;
          if (si === null)
            return ll(d), null;
          var ho = (d.flags & En) !== ve, ro = si.rendering;
          if (ro === null)
            if (ho)
              Qv(si, !1);
            else {
              var Nc = eb() && (c === null || (c.flags & En) === ve);
              if (!Nc)
                for (var Bs = d.child; Bs !== null; ) {
                  var kc = Vh(Bs);
                  if (kc !== null) {
                    ho = !0, d.flags |= En, Qv(si, !1);
                    var bf = kc.updateQueue;
                    return bf !== null && (d.updateQueue = bf, d.flags |= dt), d.subtreeFlags = ve, O0(d, T), Ql(d, Hv(tc.current, Gm)), d.child;
                  }
                  Bs = Bs.sibling;
                }
              si.tail !== null && ta() > XE() && (d.flags |= En, ho = !0, Qv(si, !1), d.lanes = Gf);
            }
          else {
            if (!ho) {
              var np = Vh(ro);
              if (np !== null) {
                d.flags |= En, ho = !0;
                var Xy = np.updateQueue;
                if (Xy !== null && (d.updateQueue = Xy, d.flags |= dt), Qv(si, !0), si.tail === null && si.tailMode === "hidden" && !ro.alternate && !Qi())
                  return ll(d), null;
              } else
                // The time it took to render last row is greater than the remaining
                // time we have to render. So rendering one more row would likely
                // exceed it.
                ta() * 2 - si.renderingStartTime > XE() && T !== Di && (d.flags |= En, ho = !0, Qv(si, !1), d.lanes = Gf);
            }
            if (si.isBackwards)
              ro.sibling = d.child, d.child = ro;
            else {
              var gg = si.last;
              gg !== null ? gg.sibling = ro : d.child = ro, si.last = ro;
            }
          }
          if (si.tail !== null) {
            var Fc = si.tail;
            si.rendering = Fc, si.tail = Fc.sibling, si.renderingStartTime = ta(), Fc.sibling = null;
            var Qp = tc.current;
            return ho ? Qp = Hv(Qp, Gm) : Qp = sl(Qp), Ql(d, Qp), Fc;
          }
          return ll(d), null;
        }
        case Pe:
          break;
        case Fe:
        case it: {
          pS(d);
          var Hx = d.memoizedState, RS = Hx !== null;
          if (c !== null) {
            var rp = c.memoizedState, wb = rp !== null;
            wb !== RS && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !A && (d.flags |= Or);
          }
          return !RS || (d.mode & ji) === wr ? ll(d) : Mi(Pc, Di) && (ll(d), Do && d.subtreeFlags & (He | dt) && (d.flags |= Or)), null;
        }
        case Ot:
          return null;
        case st:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + d.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    var Hp = o.ReactCurrentOwner, rc = !1, gE, _y, yE, SE, Y_, Zv, _E, $0;
    gE = {}, _y = {}, yE = {}, SE = {}, Y_ = {}, Zv = !1, _E = {}, $0 = {};
    function Ol(c, d, T, C) {
      c === null ? d.child = L0(d, null, T, C) : d.child = Cc(d, c.child, T, C);
    }
    function X_(c, d, T, C) {
      d.child = Cc(d, c.child, null, C), d.child = Cc(d, null, T, C);
    }
    function Y0(c, d, T, C, P) {
      if (d.type !== d.elementType) {
        var V = T.propTypes;
        V && Vl(
          V,
          C,
          // Resolved props
          "prop",
          Ze(T)
        );
      }
      var J = T.render, ce = d.ref, ge, Oe;
      on(d, P), qu(d);
      {
        if (Hp.current = d, Yl(!0), ge = Ue(c, d, J, C, ce, P), Oe = Ge(), d.mode & ba) {
          gi(!0);
          try {
            ge = Ue(c, d, J, C, ce, P), Oe = Ge();
          } finally {
            gi(!1);
          }
        }
        Yl(!1);
      }
      return Tu(), c !== null && !rc ? (Rt(c, d, P), Vp(c, d, P)) : (Qi() && Oe && Oh(d), d.flags |= Pt, Ol(c, d, ge, P), d.child);
    }
    function xy(c, d, T, C, P) {
      if (c === null) {
        var V = T.type;
        if (Vy(V) && T.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        T.defaultProps === void 0) {
          var J = V;
          return J = uv(V), d.tag = ue, d.type = J, ME(d, V), Ey(c, d, J, C, P);
        }
        {
          var ce = V.propTypes;
          ce && Vl(
            ce,
            C,
            // Resolved props
            "prop",
            Ze(V)
          );
        }
        var ge = Gy(T.type, null, C, d, d.mode, P);
        return ge.ref = d.ref, ge.return = d, d.child = ge, ge;
      }
      {
        var Oe = T.type, Ve = Oe.propTypes;
        Ve && Vl(
          Ve,
          C,
          // Resolved props
          "prop",
          Ze(Oe)
        );
      }
      var gt = c.child, Ft = OE(c, P);
      if (!Ft) {
        var Gt = gt.memoizedProps, an = T.compare;
        if (an = an !== null ? an : Xo, an(Gt, C) && c.ref === d.ref)
          return Vp(c, d, P);
      }
      d.flags |= Pt;
      var fn = Ii(gt, C);
      return fn.ref = d.ref, fn.return = d, d.child = fn, fn;
    }
    function Ey(c, d, T, C, P) {
      if (d.type !== d.elementType) {
        var V = d.elementType;
        if (V.$$typeof === ae) {
          var J = V, ce = J._payload, ge = J._init;
          try {
            V = ge(ce);
          } catch {
            V = null;
          }
          var Oe = V && V.propTypes;
          Oe && Vl(
            Oe,
            C,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            Ze(V)
          );
        }
      }
      if (c !== null) {
        var Ve = c.memoizedProps;
        if (Xo(Ve, C) && c.ref === d.ref && // Prevent bailout if the implementation changed due to hot reload.
        d.type === c.type)
          if (rc = !1, OE(c, P))
            (c.flags & pn) !== ve && (rc = !0);
          else
            return d.lanes = c.lanes, Vp(c, d, P);
      }
      return Dw(c, d, T, C, P);
    }
    function Rw(c, d, T) {
      var C = d.pendingProps, P = C.children, V = c !== null ? c.memoizedState : null;
      if (C.mode === "hidden" || A)
        if ((d.mode & ji) === wr) {
          var J = {
            baseLanes: Zt,
            cachePool: null
          };
          d.memoizedState = J, Py(d, T);
        } else if (Mi(T, Di)) {
          var gt = {
            baseLanes: Zt,
            cachePool: null
          };
          d.memoizedState = gt;
          var Ft = V !== null ? V.baseLanes : T;
          Py(d, Ft);
        } else {
          var ce = null, ge;
          if (V !== null) {
            var Oe = V.baseLanes;
            ge = Rr(Oe, T);
          } else
            ge = T;
          d.lanes = d.childLanes = Di;
          var Ve = {
            baseLanes: ge,
            cachePool: ce
          };
          return d.memoizedState = Ve, d.updateQueue = null, Py(d, ge), null;
        }
      else {
        var Gt;
        V !== null ? (Gt = Rr(V.baseLanes, T), d.memoizedState = null) : Gt = T, Py(d, Gt);
      }
      return Ol(c, d, P, T), d.child;
    }
    function xE(c, d, T) {
      var C = d.pendingProps;
      return Ol(c, d, C, T), d.child;
    }
    function EE(c, d, T) {
      var C = d.pendingProps.children;
      return Ol(c, d, C, T), d.child;
    }
    function C2(c, d, T) {
      {
        d.flags |= dt;
        {
          var C = d.stateNode;
          C.effectDuration = 0, C.passiveEffectDuration = 0;
        }
      }
      var P = d.pendingProps, V = P.children;
      return Ol(c, d, V, T), d.child;
    }
    function Aw(c, d) {
      var T = d.ref;
      (c === null && T !== null || c !== null && c.ref !== T) && (d.flags |= fr, d.flags |= Qe);
    }
    function Dw(c, d, T, C, P) {
      if (d.type !== d.elementType) {
        var V = T.propTypes;
        V && Vl(
          V,
          C,
          // Resolved props
          "prop",
          Ze(T)
        );
      }
      var J;
      {
        var ce = yo(d, T, !0);
        J = mc(d, ce);
      }
      var ge, Oe;
      on(d, P), qu(d);
      {
        if (Hp.current = d, Yl(!0), ge = Ue(c, d, T, C, J, P), Oe = Ge(), d.mode & ba) {
          gi(!0);
          try {
            ge = Ue(c, d, T, C, J, P), Oe = Ge();
          } finally {
            gi(!1);
          }
        }
        Yl(!1);
      }
      return Tu(), c !== null && !rc ? (Rt(c, d, P), Vp(c, d, P)) : (Qi() && Oe && Oh(d), d.flags |= Pt, Ol(c, d, ge, P), d.child);
    }
    function Lw(c, d, T, C, P) {
      {
        switch (_b(d)) {
          case !1: {
            var V = d.stateNode, J = d.type, ce = new J(d.memoizedProps, V.context), ge = ce.state;
            V.updater.enqueueSetState(V, ge, null);
            break;
          }
          case !0: {
            d.flags |= En, d.flags |= Jt;
            var Oe = new Error("Simulated error coming from DevTools"), Ve = $f(P);
            d.lanes = Rr(d.lanes, Ve);
            var gt = yy(d, V0(Oe, d), Ve);
            ti(d, gt);
            break;
          }
        }
        if (d.type !== d.elementType) {
          var Ft = T.propTypes;
          Ft && Vl(
            Ft,
            C,
            // Resolved props
            "prop",
            Ze(T)
          );
        }
      }
      var Gt;
      Gl(T) ? (Gt = !0, sa(d)) : Gt = !1, on(d, P);
      var an = d.stateNode, fn;
      an === null ? (c !== null && (c.alternate = null, d.alternate = null, d.flags |= He), zm(d, T, C), Lp(d, T, C, P), fn = !0) : c === null ? fn = Dv(d, T, C, P) : fn = R0(c, d, T, C, P);
      var vr = bE(c, d, T, fn, Gt, P);
      {
        var ni = d.stateNode;
        fn && ni.props !== C && (Zv || p("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", pt(d) || "a component"), Zv = !0);
      }
      return vr;
    }
    function bE(c, d, T, C, P, V) {
      Aw(c, d);
      var J = (d.flags & En) !== ve;
      if (!C && !J)
        return P && Ud(d, T, !1), Vp(c, d, V);
      var ce = d.stateNode;
      Hp.current = d;
      var ge;
      if (J && typeof T.getDerivedStateFromError != "function")
        ge = null, Ym();
      else {
        qu(d);
        {
          if (Yl(!0), ge = ce.render(), d.mode & ba) {
            gi(!0);
            try {
              ce.render();
            } finally {
              gi(!1);
            }
          }
          Yl(!1);
        }
        Tu();
      }
      return d.flags |= Pt, c !== null && J ? X_(c, d, ge, V) : Ol(c, d, ge, V), d.memoizedState = ce.state, P && Ud(d, T, !0), d.child;
    }
    function Ow(c) {
      var d = c.stateNode;
      d.pendingContext ? Su(c, d.pendingContext, d.pendingContext !== d.context) : d.context && Su(c, d.context, !1), P0(c, d.containerInfo);
    }
    function R2(c, d, T) {
      if (Ow(d), c === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var C = d.pendingProps, P = d.memoizedState, V = P.element;
      zr(c, d), Dh(d, C, null, T);
      var J = d.memoizedState;
      d.stateNode;
      var ce = J.element;
      if (pa && P.isDehydrated) {
        var ge = {
          element: ce,
          isDehydrated: !1,
          cache: J.cache,
          transitions: J.transitions
        }, Oe = d.updateQueue;
        if (Oe.baseState = ge, d.memoizedState = ge, d.flags & tr) {
          var Ve = new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering.");
          return Pw(c, d, ce, T, Ve);
        } else if (ce !== V) {
          var gt = new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering.");
          return Pw(c, d, ce, T, gt);
        } else {
          cs(d);
          var Ft = L0(d, null, ce, T);
          d.child = Ft;
          for (var Gt = Ft; Gt; )
            Gt.flags = Gt.flags & ~He | Vr, Gt = Gt.sibling;
        }
      } else {
        if (Mc(), ce === V)
          return Vp(c, d, T);
        Ol(c, d, ce, T);
      }
      return d.child;
    }
    function Pw(c, d, T, C, P) {
      return Mc(), To(P), d.flags |= tr, Ol(c, d, T, C), d.child;
    }
    function A2(c, d, T) {
      uo(d), c === null && yf(d);
      var C = d.type, P = d.pendingProps, V = c !== null ? c.memoizedProps : null, J = P.children, ce = kl(C, P);
      return ce ? J = null : V !== null && kl(C, V) && (d.flags |= jn), Aw(c, d), Ol(c, d, J, T), d.child;
    }
    function TE(c, d) {
      return c === null && yf(d), null;
    }
    function D2(c, d, T, C) {
      c !== null && (c.alternate = null, d.alternate = null, d.flags |= He);
      var P = d.pendingProps, V = T, J = V._payload, ce = V._init, ge = ce(J);
      d.type = ge;
      var Oe = d.tag = pg(ge), Ve = oi(ge, P), gt;
      switch (Oe) {
        case Y:
          return ME(d, ge), d.type = ge = uv(ge), gt = Dw(null, d, ge, Ve, C), gt;
        case ee:
          return d.type = ge = cb(ge), gt = Lw(null, d, ge, Ve, C), gt;
        case de:
          return d.type = ge = Zh(ge), gt = Y0(null, d, ge, Ve, C), gt;
        case q: {
          if (d.type !== d.elementType) {
            var Ft = ge.propTypes;
            Ft && Vl(
              Ft,
              Ve,
              // Resolved for outer only
              "prop",
              Ze(ge)
            );
          }
          return gt = xy(
            null,
            d,
            ge,
            oi(ge.type, Ve),
            // The inner type can have defaults too
            C
          ), gt;
        }
      }
      var Gt = "";
      throw ge !== null && typeof ge == "object" && ge.$$typeof === ae && (Gt = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + ge + ". " + ("Lazy element type must resolve to a class or function." + Gt));
    }
    function L2(c, d, T, C, P) {
      c !== null && (c.alternate = null, d.alternate = null, d.flags |= He), d.tag = ee;
      var V;
      return Gl(T) ? (V = !0, sa(d)) : V = !1, on(d, P), zm(d, T, C), Lp(d, T, C, P), bE(null, d, T, !0, V, P);
    }
    function wE(c, d, T, C) {
      c !== null && (c.alternate = null, d.alternate = null, d.flags |= He);
      var P = d.pendingProps, V;
      {
        var J = yo(d, T, !1);
        V = mc(d, J);
      }
      on(d, C);
      var ce, ge;
      qu(d);
      {
        if (T.prototype && typeof T.prototype.render == "function") {
          var Oe = Ze(T) || "Unknown";
          gE[Oe] || (p("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", Oe, Oe), gE[Oe] = !0);
        }
        d.mode & ba && ol.recordLegacyContextWarning(d, null), Yl(!0), Hp.current = d, ce = Ue(null, d, T, P, V, C), ge = Ge(), Yl(!1);
      }
      if (Tu(), d.flags |= Pt, typeof ce == "object" && ce !== null && typeof ce.render == "function" && ce.$$typeof === void 0) {
        var Ve = Ze(T) || "Unknown";
        _y[Ve] || (p("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", Ve, Ve, Ve), _y[Ve] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof ce == "object" && ce !== null && typeof ce.render == "function" && ce.$$typeof === void 0
      ) {
        {
          var gt = Ze(T) || "Unknown";
          _y[gt] || (p("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", gt, gt, gt), _y[gt] = !0);
        }
        d.tag = ee, d.memoizedState = null, d.updateQueue = null;
        var Ft = !1;
        return Gl(T) ? (Ft = !0, sa(d)) : Ft = !1, d.memoizedState = ce.state !== null && ce.state !== void 0 ? ce.state : null, Nn(d), Dp(d, ce), Lp(d, T, P, C), bE(null, d, T, !0, Ft, C);
      } else {
        if (d.tag = Y, d.mode & ba) {
          gi(!0);
          try {
            ce = Ue(null, d, T, P, V, C), ge = Ge();
          } finally {
            gi(!1);
          }
        }
        return Qi() && ge && Oh(d), Ol(null, d, ce, C), ME(d, T), d.child;
      }
    }
    function ME(c, d) {
      {
        if (d && d.childContextTypes && p("%s(...): childContextTypes cannot be defined on a function component.", d.displayName || d.name || "Component"), c.ref !== null) {
          var T = "", C = Um();
          C && (T += `

Check the render method of \`` + C + "`.");
          var P = C || "", V = c._debugSource;
          V && (P = V.fileName + ":" + V.lineNumber), Y_[P] || (Y_[P] = !0, p("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", T));
        }
        if (typeof d.getDerivedStateFromProps == "function") {
          var J = Ze(d) || "Unknown";
          SE[J] || (p("%s: Function components do not support getDerivedStateFromProps.", J), SE[J] = !0);
        }
        if (typeof d.contextType == "object" && d.contextType !== null) {
          var ce = Ze(d) || "Unknown";
          yE[ce] || (p("%s: Function components do not support contextType.", ce), yE[ce] = !0);
        }
      }
    }
    var by = {
      dehydrated: null,
      treeContext: null,
      retryLane: Pr
    };
    function X0(c) {
      return {
        baseLanes: c,
        cachePool: M2()
      };
    }
    function Uw(c, d) {
      var T = null;
      return {
        baseLanes: Rr(c.baseLanes, d),
        cachePool: T
      };
    }
    function O2(c, d, T, C) {
      if (d !== null) {
        var P = d.memoizedState;
        if (P === null)
          return !1;
      }
      return N0(c, Gm);
    }
    function Nw(c, d) {
      return So(c.childLanes, d);
    }
    function kw(c, d, T) {
      var C = d.pendingProps;
      Eb(d) && (d.flags |= En);
      var P = tc.current, V = !1, J = (d.flags & En) !== ve;
      if (J || O2(P, c) ? (V = !0, d.flags &= ~En) : (c === null || c.memoizedState !== null) && (P = iE(P, T_)), P = sl(P), Ql(d, P), c === null) {
        yf(d);
        {
          var ce = d.memoizedState;
          if (ce !== null) {
            var ge = ce.dehydrated;
            if (ge !== null)
              return RE(d, ge);
          }
        }
        var Oe = C.children, Ve = C.fallback;
        if (V) {
          var gt = P2(d, Oe, Ve, T), Ft = d.child;
          return Ft.memoizedState = X0(T), d.memoizedState = by, gt;
        } else
          return q_(d, Oe);
      } else {
        var Gt = c.memoizedState;
        if (Gt !== null) {
          {
            var an = Gt.dehydrated;
            if (an !== null)
              if (J) {
                if (d.flags & tr)
                  return d.flags &= ~tr, K_(c, d, T, new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                if (d.memoizedState !== null)
                  return d.child = c.child, d.flags |= En, null;
                var fn = C.children, vr = C.fallback, ni = U2(c, d, fn, vr, T), Er = d.child;
                return Er.memoizedState = X0(T), d.memoizedState = by, ni;
              } else
                return N2(c, d, an, Gt, T);
          }
          if (V) {
            var to = C.fallback, no = C.children, wt = Iw(c, d, no, to, T), qt = d.child, Tt = c.child.memoizedState;
            return qt.memoizedState = Tt === null ? X0(T) : Uw(Tt, T), qt.childLanes = Nw(c, T), d.memoizedState = by, wt;
          } else {
            var hn = C.children, er = zw(c, d, hn, T);
            return d.memoizedState = null, er;
          }
        } else if (V) {
          var bn = C.fallback, Ir = C.children, Yi = Iw(c, d, Ir, bn, T), wa = d.child, Tn = c.child.memoizedState;
          return wa.memoizedState = Tn === null ? X0(T) : Uw(Tn, T), wa.childLanes = Nw(c, T), d.memoizedState = by, Yi;
        } else {
          var _a = C.children, Xi = zw(c, d, _a, T);
          return d.memoizedState = null, Xi;
        }
      }
    }
    function q_(c, d, T) {
      var C = c.mode, P = {
        mode: "visible",
        children: d
      }, V = CE(P, C);
      return V.return = c, c.child = V, V;
    }
    function P2(c, d, T, C) {
      var P = c.mode, V = c.child, J = {
        mode: "hidden",
        children: d
      }, ce, ge;
      return (P & ji) === wr && V !== null ? (ce = V, ce.childLanes = Zt, ce.pendingProps = J, c.mode & jr && (ce.actualDuration = 0, ce.actualStartTime = -1, ce.selfBaseDuration = 0, ce.treeBaseDuration = 0), ge = cd(T, P, C, null)) : (ce = CE(J, P), ge = cd(T, P, C, null)), ce.return = c, ge.return = c, ce.sibling = ge, c.child = ce, ge;
    }
    function CE(c, d, T) {
      return Ef(c, d, Zt, null);
    }
    function Fw(c, d) {
      return Ii(c, d);
    }
    function zw(c, d, T, C) {
      var P = c.child, V = P.sibling, J = Fw(P, {
        mode: "visible",
        children: T
      });
      if ((d.mode & ji) === wr && (J.lanes = C), J.return = d, J.sibling = null, V !== null) {
        var ce = d.deletions;
        ce === null ? (d.deletions = [V], d.flags |= Un) : ce.push(V);
      }
      return d.child = J, J;
    }
    function Iw(c, d, T, C, P) {
      var V = d.mode, J = c.child, ce = J.sibling, ge = {
        mode: "hidden",
        children: T
      }, Oe;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (V & ji) === wr && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        d.child !== J
      ) {
        var Ve = d.child;
        Oe = Ve, Oe.childLanes = Zt, Oe.pendingProps = ge, d.mode & jr && (Oe.actualDuration = 0, Oe.actualStartTime = -1, Oe.selfBaseDuration = J.selfBaseDuration, Oe.treeBaseDuration = J.treeBaseDuration), d.deletions = null;
      } else
        Oe = Fw(J, ge), Oe.subtreeFlags = J.subtreeFlags & Mt;
      var gt;
      return ce !== null ? gt = Ii(ce, C) : (gt = cd(C, V, P, null), gt.flags |= He), gt.return = d, Oe.return = d, Oe.sibling = gt, d.child = Oe, gt;
    }
    function K_(c, d, T, C) {
      C !== null && To(C), Cc(d, c.child, null, T);
      var P = d.pendingProps, V = P.children, J = q_(d, V);
      return J.flags |= He, d.memoizedState = null, J;
    }
    function U2(c, d, T, C, P) {
      var V = d.mode, J = {
        mode: "visible",
        children: T
      }, ce = CE(J, V), ge = cd(C, V, P, null);
      return ge.flags |= He, ce.return = d, ge.return = d, ce.sibling = ge, d.child = ce, (d.mode & ji) !== wr && Cc(d, c.child, null, P), ge;
    }
    function RE(c, d, T) {
      return (c.mode & ji) === wr ? (p("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), c.lanes = kr) : vi(d) ? c.lanes = vc : c.lanes = Di, null;
    }
    function N2(c, d, T, C, P) {
      if (ec(), (d.mode & ji) === wr)
        return K_(
          c,
          d,
          P,
          // TODO: When we delete legacy mode, we should make this error argument
          // required — every concurrent mode path that causes hydration to
          // de-opt to client rendering should have an error message.
          null
        );
      if (vi(T))
        return K_(
          c,
          d,
          P,
          // TODO: The server should serialize the error message so we can log it
          // here on the client. Or, in production, a hash/id that corresponds to
          // the error.
          new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.")
        );
      var V = Mi(P, c.childLanes);
      if (rc || V) {
        var J = vx();
        if (J !== null) {
          var ce = Ds(J, P);
          if (ce !== Pr && ce !== C.retryLane) {
            C.retryLane = ce;
            var ge = Li;
            Zo(c, ce, ge);
          }
        }
        return mS(), K_(c, d, P, new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
      } else if (Zr(T)) {
        d.flags |= En, d.child = c.child;
        var Oe = xM.bind(null, c);
        return ii(T, Oe), null;
      } else {
        Pv(d, T, C.treeContext);
        var Ve = d.pendingProps, gt = Ve.children, Ft = q_(d, gt);
        return Ft.flags |= Vr, Ft;
      }
    }
    function Bw(c, d, T) {
      c.lanes = Rr(c.lanes, d);
      var C = c.alternate;
      C !== null && (C.lanes = Rr(C.lanes, d)), Le(c.return, d, T);
    }
    function k2(c, d, T) {
      for (var C = d; C !== null; ) {
        if (C.tag === X) {
          var P = C.memoizedState;
          P !== null && Bw(C, T, c);
        } else if (C.tag === Ne)
          Bw(C, T, c);
        else if (C.child !== null) {
          C.child.return = C, C = C.child;
          continue;
        }
        if (C === c)
          return;
        for (; C.sibling === null; ) {
          if (C.return === null || C.return === c)
            return;
          C = C.return;
        }
        C.sibling.return = C.return, C = C.sibling;
      }
    }
    function F2(c) {
      for (var d = c, T = null; d !== null; ) {
        var C = d.alternate;
        C !== null && Vh(C) === null && (T = d), d = d.sibling;
      }
      return T;
    }
    function z2(c) {
      if (c !== void 0 && c !== "forwards" && c !== "backwards" && c !== "together" && !_E[c])
        if (_E[c] = !0, typeof c == "string")
          switch (c.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              p('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', c, c.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              p('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', c, c.toLowerCase());
              break;
            }
            default:
              p('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', c);
              break;
          }
        else
          p('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', c);
    }
    function I2(c, d) {
      c !== void 0 && !$0[c] && (c !== "collapsed" && c !== "hidden" ? ($0[c] = !0, p('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', c)) : d !== "forwards" && d !== "backwards" && ($0[c] = !0, p('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', c)));
    }
    function Hw(c, d) {
      {
        var T = Kr(c), C = !T && typeof We(c) == "function";
        if (T || C) {
          var P = T ? "array" : "iterable";
          return p("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", P, d, P), !1;
        }
      }
      return !0;
    }
    function B2(c, d) {
      if ((d === "forwards" || d === "backwards") && c !== void 0 && c !== null && c !== !1)
        if (Kr(c)) {
          for (var T = 0; T < c.length; T++)
            if (!Hw(c[T], T))
              return;
        } else {
          var C = We(c);
          if (typeof C == "function") {
            var P = C.call(c);
            if (P)
              for (var V = P.next(), J = 0; !V.done; V = P.next()) {
                if (!Hw(V.value, J))
                  return;
                J++;
              }
          } else
            p('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', d);
        }
    }
    function AE(c, d, T, C, P) {
      var V = c.memoizedState;
      V === null ? c.memoizedState = {
        isBackwards: d,
        rendering: null,
        renderingStartTime: 0,
        last: C,
        tail: T,
        tailMode: P
      } : (V.isBackwards = d, V.rendering = null, V.renderingStartTime = 0, V.last = C, V.tail = T, V.tailMode = P);
    }
    function DE(c, d, T) {
      var C = d.pendingProps, P = C.revealOrder, V = C.tail, J = C.children;
      z2(P), I2(V, P), B2(J, P), Ol(c, d, J, T);
      var ce = tc.current, ge = N0(ce, Gm);
      if (ge)
        ce = Hv(ce, Gm), d.flags |= En;
      else {
        var Oe = c !== null && (c.flags & En) !== ve;
        Oe && k2(d, d.child, T), ce = sl(ce);
      }
      if (Ql(d, ce), (d.mode & ji) === wr)
        d.memoizedState = null;
      else
        switch (P) {
          case "forwards": {
            var Ve = F2(d.child), gt;
            Ve === null ? (gt = d.child, d.child = null) : (gt = Ve.sibling, Ve.sibling = null), AE(
              d,
              !1,
              // isBackwards
              gt,
              Ve,
              V
            );
            break;
          }
          case "backwards": {
            var Ft = null, Gt = d.child;
            for (d.child = null; Gt !== null; ) {
              var an = Gt.alternate;
              if (an !== null && Vh(an) === null) {
                d.child = Gt;
                break;
              }
              var fn = Gt.sibling;
              Gt.sibling = Ft, Ft = Gt, Gt = fn;
            }
            AE(
              d,
              !0,
              // isBackwards
              Ft,
              null,
              // last
              V
            );
            break;
          }
          case "together": {
            AE(
              d,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            d.memoizedState = null;
        }
      return d.child;
    }
    function LE(c, d, T) {
      P0(d, d.stateNode.containerInfo);
      var C = d.pendingProps;
      return c === null ? d.child = Cc(d, null, C, T) : Ol(c, d, C, T), d.child;
    }
    var Vw = !1;
    function H2(c, d, T) {
      var C = d.type, P = C._context, V = d.pendingProps, J = d.memoizedProps, ce = V.value;
      {
        "value" in V || Vw || (Vw = !0, p("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var ge = d.type.propTypes;
        ge && Vl(ge, V, "prop", "Context.Provider");
      }
      if (W(d, P, ce), J !== null) {
        var Oe = J.value;
        if (zo(Oe, ce)) {
          if (J.children === V.children && !so())
            return Vp(c, d, T);
        } else
          nt(d, P, T);
      }
      var Ve = V.children;
      return Ol(c, d, Ve, T), d.child;
    }
    var q0 = !1;
    function K0(c, d, T) {
      var C = d.type;
      C._context === void 0 ? C !== C.Consumer && (q0 || (q0 = !0, p("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : C = C._context;
      var P = d.pendingProps, V = P.children;
      typeof V != "function" && p("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), on(d, T);
      var J = mn(C);
      qu(d);
      var ce;
      return Hp.current = d, Yl(!0), ce = V(J), Yl(!1), Tu(), d.flags |= Pt, Ol(c, d, ce, T), d.child;
    }
    function Q_() {
      rc = !0;
    }
    function Vp(c, d, T) {
      return c !== null && (d.dependencies = c.dependencies), Ym(), Uy(d.lanes), Mi(T, d.childLanes) ? (ay(c, d), d.child) : null;
    }
    function V2(c, d, T) {
      {
        var C = d.return;
        if (C === null)
          throw new Error("Cannot swap the root fiber.");
        if (c.alternate = null, d.alternate = null, T.index = d.index, T.sibling = d.sibling, T.return = d.return, T.ref = d.ref, d === C.child)
          C.child = T;
        else {
          var P = C.child;
          if (P === null)
            throw new Error("Expected parent to have a child.");
          for (; P.sibling !== d; )
            if (P = P.sibling, P === null)
              throw new Error("Expected to find the previous sibling.");
          P.sibling = T;
        }
        var V = C.deletions;
        return V === null ? (C.deletions = [c], C.flags |= Un) : V.push(c), T.flags |= He, T;
      }
    }
    function OE(c, d) {
      var T = c.lanes;
      return !!Mi(T, d);
    }
    function G2(c, d, T) {
      switch (d.tag) {
        case K:
          Ow(d), d.stateNode, Mc();
          break;
        case se:
          uo(d);
          break;
        case ee: {
          var C = d.type;
          Gl(C) && sa(d);
          break;
        }
        case fe:
          P0(d, d.stateNode.containerInfo);
          break;
        case we: {
          var P = d.memoizedProps.value, V = d.type._context;
          W(d, V, P);
          break;
        }
        case ye:
          {
            var J = Mi(T, d.childLanes);
            J && (d.flags |= dt);
            {
              var ce = d.stateNode;
              ce.effectDuration = 0, ce.passiveEffectDuration = 0;
            }
          }
          break;
        case X: {
          var ge = d.memoizedState;
          if (ge !== null) {
            if (ge.dehydrated !== null)
              return Ql(d, sl(tc.current)), d.flags |= En, null;
            var Oe = d.child, Ve = Oe.childLanes;
            if (Mi(T, Ve))
              return kw(c, d, T);
            Ql(d, sl(tc.current));
            var gt = Vp(c, d, T);
            return gt !== null ? gt.sibling : null;
          } else
            Ql(d, sl(tc.current));
          break;
        }
        case Ne: {
          var Ft = (c.flags & En) !== ve, Gt = Mi(T, d.childLanes);
          if (Ft) {
            if (Gt)
              return DE(c, d, T);
            d.flags |= En;
          }
          var an = d.memoizedState;
          if (an !== null && (an.rendering = null, an.tail = null, an.lastEffect = null), Ql(d, tc.current), Gt)
            break;
          return null;
        }
        case Fe:
        case it:
          return d.lanes = Zt, Rw(c, d, T);
      }
      return Vp(c, d, T);
    }
    function Gw(c, d, T) {
      if (d._debugNeedsRemount && c !== null)
        return V2(c, d, Gy(d.type, d.key, d.pendingProps, d._debugOwner || null, d.mode, d.lanes));
      if (c !== null) {
        var C = c.memoizedProps, P = d.pendingProps;
        if (C !== P || so() || // Force a re-render if the implementation changed due to hot reload:
        d.type !== c.type)
          rc = !0;
        else {
          var V = OE(c, T);
          if (!V && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (d.flags & En) === ve)
            return rc = !1, G2(c, d, T);
          (c.flags & pn) !== ve ? rc = !0 : rc = !1;
        }
      } else if (rc = !1, Qi() && Yd(d)) {
        var J = d.index, ce = gf();
        A0(d, ce, J);
      }
      switch (d.lanes = Zt, d.tag) {
        case Z:
          return wE(c, d, d.type, T);
        case Ce: {
          var ge = d.elementType;
          return D2(c, d, ge, T);
        }
        case Y: {
          var Oe = d.type, Ve = d.pendingProps, gt = d.elementType === Oe ? Ve : oi(Oe, Ve);
          return Dw(c, d, Oe, gt, T);
        }
        case ee: {
          var Ft = d.type, Gt = d.pendingProps, an = d.elementType === Ft ? Gt : oi(Ft, Gt);
          return Lw(c, d, Ft, an, T);
        }
        case K:
          return R2(c, d, T);
        case se:
          return A2(c, d, T);
        case he:
          return TE(c, d);
        case X:
          return kw(c, d, T);
        case fe:
          return LE(c, d, T);
        case de: {
          var fn = d.type, vr = d.pendingProps, ni = d.elementType === fn ? vr : oi(fn, vr);
          return Y0(c, d, fn, ni, T);
        }
        case me:
          return xE(c, d, T);
        case Ee:
          return EE(c, d, T);
        case ye:
          return C2(c, d, T);
        case we:
          return H2(c, d, T);
        case be:
          return K0(c, d, T);
        case q: {
          var Er = d.type, to = d.pendingProps, no = oi(Er, to);
          if (d.type !== d.elementType) {
            var wt = Er.propTypes;
            wt && Vl(
              wt,
              no,
              // Resolved for outer only
              "prop",
              Ze(Er)
            );
          }
          return no = oi(Er.type, no), xy(c, d, Er, no, T);
        }
        case ue:
          return Ey(c, d, d.type, d.pendingProps, T);
        case Ae: {
          var qt = d.type, Tt = d.pendingProps, hn = d.elementType === qt ? Tt : oi(qt, Tt);
          return L2(c, d, qt, hn, T);
        }
        case Ne:
          return DE(c, d, T);
        case Pe:
          break;
        case Fe:
          return Rw(c, d, T);
      }
      throw new Error("Unknown unit of work tag (" + d.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function W2(c, d, T) {
      switch (ey(d), d.tag) {
        case ee: {
          var C = d.type;
          Gl(C) && Jc(d);
          var P = d.flags;
          return P & Jt ? (d.flags = P & ~Jt | En, (d.mode & jr) !== wr && gy(d), d) : null;
        }
        case K: {
          Sf(d), Vu(d), sy();
          var V = d.flags;
          return (V & Jt) !== ve && (V & En) === ve ? (d.flags = V & ~Jt | En, d) : null;
        }
        case se:
          return U0(d), null;
        case X: {
          Jd(d);
          {
            var J = d.memoizedState;
            if (J !== null && J.dehydrated !== null) {
              if (d.alternate === null)
                throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
              Mc();
            }
          }
          var ce = d.flags;
          return ce & Jt ? (d.flags = ce & ~Jt | En, (d.mode & jr) !== wr && gy(d), d) : null;
        }
        case Ne:
          return Jd(d), null;
        case fe:
          return Sf(d), null;
        case we:
          var ge = d.type._context;
          return te(ge, d), null;
        case Fe:
        case it:
          return pS(d), null;
        case Ot:
          return null;
        default:
          return null;
      }
    }
    function PE(c, d, T) {
      switch (ey(d), d.tag) {
        case ee: {
          var C = d.type.childContextTypes;
          C != null && Jc(d);
          break;
        }
        case K: {
          Sf(d), Vu(d), sy();
          break;
        }
        case se: {
          U0(d);
          break;
        }
        case fe:
          Sf(d);
          break;
        case X:
          Jd(d);
          break;
        case Ne:
          Jd(d);
          break;
        case we:
          var P = d.type._context;
          te(P, d);
          break;
        case Fe:
        case it:
          pS(d);
          break;
      }
    }
    function Ww(c, d, T, C, P, V, J, ce, ge) {
      var Oe = Array.prototype.slice.call(arguments, 3);
      try {
        d.apply(T, Oe);
      } catch (Ve) {
        this.onError(Ve);
      }
    }
    var jw = Ww;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var UE = document.createElement("react");
      jw = function(d, T, C, P, V, J, ce, ge, Oe) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var Ve = document.createEvent("Event"), gt = !1, Ft = !0, Gt = window.event, an = Object.getOwnPropertyDescriptor(window, "event");
        function fn() {
          UE.removeEventListener(qt, ni, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Gt);
        }
        var vr = Array.prototype.slice.call(arguments, 3);
        function ni() {
          gt = !0, fn(), T.apply(C, vr), Ft = !1;
        }
        var Er, to = !1, no = !1;
        function wt(Tt) {
          if (Er = Tt.error, to = !0, Er === null && Tt.colno === 0 && Tt.lineno === 0 && (no = !0), Tt.defaultPrevented && Er != null && typeof Er == "object")
            try {
              Er._suppressLogging = !0;
            } catch {
            }
        }
        var qt = "react-" + (d || "invokeguardedcallback");
        if (window.addEventListener("error", wt), UE.addEventListener(qt, ni, !1), Ve.initEvent(qt, !1, !1), UE.dispatchEvent(Ve), an && Object.defineProperty(window, "event", an), gt && Ft && (to ? no && (Er = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : Er = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(Er)), window.removeEventListener("error", wt), !gt)
          return fn(), Ww.apply(this, arguments);
      };
    }
    var j2 = jw, Q0 = !1, Z_ = null, $2 = {
      onError: function(c) {
        Q0 = !0, Z_ = c;
      }
    };
    function $w(c, d, T, C, P, V, J, ce, ge) {
      Q0 = !1, Z_ = null, j2.apply($2, arguments);
    }
    function Y2() {
      return Q0;
    }
    function Yw() {
      if (Q0) {
        var c = Z_;
        return Q0 = !1, Z_ = null, c;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    var Xw = null;
    Xw = /* @__PURE__ */ new Set();
    var J_ = !1, Xm = !1, X2 = typeof WeakSet == "function" ? WeakSet : Set, An = null, Ty = null, eh = null;
    function Ko(c) {
      $w(null, function() {
        throw c;
      }), Yw();
    }
    var NE = function(c, d) {
      if (d.props = c.memoizedProps, d.state = c.memoizedState, c.mode & jr)
        try {
          Lu(), d.componentWillUnmount();
        } finally {
          Lc(c);
        }
      else
        d.componentWillUnmount();
    };
    function wy(c, d) {
      try {
        ad(Qa, c);
      } catch (T) {
        Ko(T), hs(c, d, T);
      }
    }
    function Z0(c, d, T) {
      try {
        NE(c, T);
      } catch (C) {
        Ko(C), hs(c, d, C);
      }
    }
    function q2(c, d, T) {
      try {
        T.componentDidMount();
      } catch (C) {
        Ko(C), hs(c, d, C);
      }
    }
    function qw(c, d) {
      try {
        tS(c);
      } catch (T) {
        Ko(T), hs(c, d, T);
      }
    }
    function ex(c, d) {
      var T = c.ref;
      if (T !== null)
        if (typeof T == "function") {
          var C;
          try {
            if (B && j && c.mode & jr)
              try {
                Lu(), C = T(null);
              } finally {
                Lc(c);
              }
            else
              C = T(null);
          } catch (P) {
            Ko(P), hs(c, d, P);
          }
          typeof C == "function" && p("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", pt(c));
        } else
          T.current = null;
    }
    function qm(c, d, T) {
      try {
        T();
      } catch (C) {
        Ko(C), hs(c, d, C);
      }
    }
    var J0 = !1;
    function Kw(c, d) {
      Ea(c.containerInfo), An = d, eS();
      var T = J0;
      return J0 = !1, T;
    }
    function eS() {
      for (; An !== null; ) {
        var c = An, d = c.child;
        (c.subtreeFlags & vn) !== ve && d !== null ? (ld(d, c), An = d) : Jv();
      }
    }
    function Jv() {
      for (; An !== null; ) {
        var c = An;
        Ci(c);
        try {
          Km(c);
        } catch (T) {
          Ko(T), hs(c, c.return, T);
        }
        Eo();
        var d = c.sibling;
        if (d !== null) {
          ld(d, c.return), An = d;
          return;
        }
        An = c.return;
      }
    }
    function Km(c) {
      var d = c.alternate, T = c.flags;
      if ((T & Hn) !== ve) {
        switch (Ci(c), c.tag) {
          case Y:
          case de:
          case ue:
            break;
          case ee: {
            if (d !== null) {
              var C = d.memoizedProps, P = d.memoizedState, V = c.stateNode;
              c.type === c.elementType && !Zv && (V.props !== c.memoizedProps && p("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", pt(c) || "instance"), V.state !== c.memoizedState && p("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", pt(c) || "instance"));
              var J = V.getSnapshotBeforeUpdate(c.elementType === c.type ? C : oi(c.type, C), P);
              {
                var ce = Xw;
                J === void 0 && !ce.has(c.type) && (ce.add(c.type), p("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", pt(c)));
              }
              V.__reactInternalSnapshotBeforeUpdate = J;
            }
            break;
          }
          case K: {
            if (Do) {
              var ge = c.stateNode;
              ie(ge.containerInfo);
            }
            break;
          }
          case se:
          case he:
          case fe:
          case Ae:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        Eo();
      }
    }
    function ul(c, d, T) {
      var C = d.updateQueue, P = C !== null ? C.lastEffect : null;
      if (P !== null) {
        var V = P.next, J = V;
        do {
          if ((J.tag & c) === c) {
            var ce = J.destroy;
            J.destroy = void 0, ce !== void 0 && ((c & zs) !== Du ? rl(d) : (c & Qa) !== Du && sf(d), qm(d, T, ce), (c & zs) !== Du ? Pm() : (c & Qa) !== Du && Tl());
          }
          J = J.next;
        } while (J !== V);
      }
    }
    function ad(c, d) {
      var T = d.updateQueue, C = T !== null ? T.lastEffect : null;
      if (C !== null) {
        var P = C.next, V = P;
        do {
          if ((V.tag & c) === c) {
            (c & zs) !== Du ? Xf(d) : (c & Qa) !== Du && Kf(d);
            var J = V.create;
            V.destroy = J(), (c & zs) !== Du ? qf() : (c & Qa) !== Du && Gd();
            {
              var ce = V.destroy;
              if (ce !== void 0 && typeof ce != "function") {
                var ge = void 0;
                (V.tag & Qa) !== ve ? ge = "useLayoutEffect" : (V.tag & Gh) !== ve ? ge = "useInsertionEffect" : ge = "useEffect";
                var Oe = void 0;
                ce === null ? Oe = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof ce.then == "function" ? Oe = `

It looks like you wrote ` + ge + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + ge + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : Oe = " You returned: " + ce, p("%s must not return anything besides a function, which is used for clean-up.%s", ge, Oe);
              }
            }
          }
          V = V.next;
        } while (V !== P);
      }
    }
    function kE(c, d) {
      if ((d.flags & dt) !== ve)
        switch (d.tag) {
          case ye: {
            var T = d.stateNode.passiveEffectDuration, C = d.memoizedProps, P = C.id, V = C.onPostCommit, J = Ip(), ce = d.alternate === null ? "mount" : "update";
            xw() && (ce = "nested-update"), typeof V == "function" && V(P, ce, T, J);
            var ge = d.return;
            e:
              for (; ge !== null; ) {
                switch (ge.tag) {
                  case K:
                    var Oe = ge.stateNode;
                    Oe.passiveEffectDuration += T;
                    break e;
                  case ye:
                    var Ve = ge.stateNode;
                    Ve.passiveEffectDuration += T;
                    break e;
                }
                ge = ge.return;
              }
            break;
          }
        }
    }
    function K2(c, d, T, C) {
      if ((T.flags & zn) !== ve)
        switch (T.tag) {
          case Y:
          case de:
          case ue: {
            if (!Xm)
              if (T.mode & jr)
                try {
                  Lu(), ad(Qa | fa, T);
                } finally {
                  Lc(T);
                }
              else
                ad(Qa | fa, T);
            break;
          }
          case ee: {
            var P = T.stateNode;
            if (T.flags & dt && !Xm)
              if (d === null)
                if (T.type === T.elementType && !Zv && (P.props !== T.memoizedProps && p("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", pt(T) || "instance"), P.state !== T.memoizedState && p("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", pt(T) || "instance")), T.mode & jr)
                  try {
                    Lu(), P.componentDidMount();
                  } finally {
                    Lc(T);
                  }
                else
                  P.componentDidMount();
              else {
                var V = T.elementType === T.type ? d.memoizedProps : oi(T.type, d.memoizedProps), J = d.memoizedState;
                if (T.type === T.elementType && !Zv && (P.props !== T.memoizedProps && p("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", pt(T) || "instance"), P.state !== T.memoizedState && p("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", pt(T) || "instance")), T.mode & jr)
                  try {
                    Lu(), P.componentDidUpdate(V, J, P.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    Lc(T);
                  }
                else
                  P.componentDidUpdate(V, J, P.__reactInternalSnapshotBeforeUpdate);
              }
            var ce = T.updateQueue;
            ce !== null && (T.type === T.elementType && !Zv && (P.props !== T.memoizedProps && p("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", pt(T) || "instance"), P.state !== T.memoizedState && p("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", pt(T) || "instance")), Qg(T, ce, P));
            break;
          }
          case K: {
            var ge = T.updateQueue;
            if (ge !== null) {
              var Oe = null;
              if (T.child !== null)
                switch (T.child.tag) {
                  case se:
                    Oe = Co(T.child.stateNode);
                    break;
                  case ee:
                    Oe = T.child.stateNode;
                    break;
                }
              Qg(T, ge, Oe);
            }
            break;
          }
          case se: {
            var Ve = T.stateNode;
            if (d === null && T.flags & dt) {
              var gt = T.type, Ft = T.memoizedProps;
              Ms(Ve, gt, Ft, T);
            }
            break;
          }
          case he:
            break;
          case fe:
            break;
          case ye: {
            {
              var Gt = T.memoizedProps, an = Gt.onCommit, fn = Gt.onRender, vr = T.stateNode.effectDuration, ni = Ip(), Er = d === null ? "mount" : "update";
              xw() && (Er = "nested-update"), typeof fn == "function" && fn(T.memoizedProps.id, Er, T.actualDuration, T.treeBaseDuration, T.actualStartTime, ni);
              {
                typeof an == "function" && an(T.memoizedProps.id, Er, vr, ni), iA(T);
                var to = T.return;
                e:
                  for (; to !== null; ) {
                    switch (to.tag) {
                      case K:
                        var no = to.stateNode;
                        no.effectDuration += vr;
                        break e;
                      case ye:
                        var wt = to.stateNode;
                        wt.effectDuration += vr;
                        break e;
                    }
                    to = to.return;
                  }
              }
            }
            break;
          }
          case X: {
            nx(c, T);
            break;
          }
          case Ne:
          case Ae:
          case Pe:
          case Fe:
          case it:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      Xm || T.flags & fr && tS(T);
    }
    function Qw(c) {
      switch (c.tag) {
        case Y:
        case de:
        case ue: {
          if (c.mode & jr)
            try {
              Lu(), wy(c, c.return);
            } finally {
              Lc(c);
            }
          else
            wy(c, c.return);
          break;
        }
        case ee: {
          var d = c.stateNode;
          typeof d.componentDidMount == "function" && q2(c, c.return, d), qw(c, c.return);
          break;
        }
        case se: {
          qw(c, c.return);
          break;
        }
      }
    }
    function Zw(c, d) {
      var T = null;
      if (Do)
        for (var C = c; ; ) {
          if (C.tag === se) {
            if (T === null) {
              T = C;
              var P = C.stateNode;
              d ? zu(P) : Iu(C.stateNode, C.memoizedProps);
            }
          } else if (C.tag === he) {
            if (T === null) {
              var V = C.stateNode;
              d ? Po(V) : is(V, C.memoizedProps);
            }
          } else if (!((C.tag === Fe || C.tag === it) && C.memoizedState !== null && C !== c)) {
            if (C.child !== null) {
              C.child.return = C, C = C.child;
              continue;
            }
          }
          if (C === c)
            return;
          for (; C.sibling === null; ) {
            if (C.return === null || C.return === c)
              return;
            T === C && (T = null), C = C.return;
          }
          T === C && (T = null), C.sibling.return = C.return, C = C.sibling;
        }
    }
    function tS(c) {
      var d = c.ref;
      if (d !== null) {
        var T = c.stateNode, C;
        switch (c.tag) {
          case se:
            C = Co(T);
            break;
          default:
            C = T;
        }
        if (typeof d == "function") {
          var P;
          if (c.mode & jr)
            try {
              Lu(), P = d(C);
            } finally {
              Lc(c);
            }
          else
            P = d(C);
          typeof P == "function" && p("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", pt(c));
        } else
          d.hasOwnProperty("current") || p("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", pt(c)), d.current = C;
      }
    }
    function th(c) {
      var d = c.ref;
      if (d !== null)
        if (typeof d == "function")
          if (c.mode & jr)
            try {
              Lu(), d(null);
            } finally {
              Lc(c);
            }
          else
            d(null);
        else
          d.current = null;
    }
    function tx(c, d, T) {
      switch (ya(d), d.tag) {
        case Y:
        case de:
        case q:
        case ue: {
          var C = d.updateQueue;
          if (C !== null) {
            var P = C.lastEffect;
            if (P !== null) {
              var V = P.next, J = V;
              do {
                var ce = J, ge = ce.destroy, Oe = ce.tag;
                ge !== void 0 && ((Oe & Gh) !== Du ? qm(d, T, ge) : (Oe & Qa) !== Du && (sf(d), d.mode & jr ? (Lu(), qm(d, T, ge), Lc(d)) : qm(d, T, ge), Tl())), J = J.next;
              } while (J !== V);
            }
          }
          return;
        }
        case ee: {
          ex(d, T);
          var Ve = d.stateNode;
          typeof Ve.componentWillUnmount == "function" && Z0(d, T, Ve);
          return;
        }
        case se: {
          ex(d, T);
          return;
        }
        case fe: {
          Do ? zE(c, d, T) : Hr && Ou(d);
          return;
        }
        case De:
          return;
        case Pe:
          return;
      }
    }
    function nS(c, d, T) {
      for (var C = d; ; ) {
        if (tx(c, C, T), C.child !== null && // If we use mutation we drill down into portals using commitUnmount above.
        // If we don't use mutation we drill down into portals here instead.
        (!Do || C.tag !== fe)) {
          C.child.return = C, C = C.child;
          continue;
        }
        if (C === d)
          return;
        for (; C.sibling === null; ) {
          if (C.return === null || C.return === d)
            return;
          C = C.return;
        }
        C.sibling.return = C.return, C = C.sibling;
      }
    }
    function Gp(c) {
      var d = c.alternate;
      d !== null && (d.return = null), c.return = null;
    }
    function Wp(c) {
      var d = c.alternate;
      d !== null && (c.alternate = null, Wp(d));
      {
        if (c.child = null, c.deletions = null, c.sibling = null, c.tag === se) {
          var T = c.stateNode;
          T !== null && Ni(T);
        }
        c.stateNode = null, c._debugOwner = null, c.return = null, c.dependencies = null, c.memoizedProps = null, c.memoizedState = null, c.pendingProps = null, c.stateNode = null, c.updateQueue = null;
      }
    }
    function Ou(c) {
      if (Hr) {
        var d = c.stateNode, T = d.containerInfo, C = ct(T);
        $n(T, C);
      }
    }
    function Pu(c) {
      if (Hr) {
        switch (c.tag) {
          case ee:
          case se:
          case he:
            return;
          case K:
          case fe: {
            var d = c.stateNode, T = d.containerInfo, C = d.pendingChildren;
            $n(T, C);
            return;
          }
        }
        throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function FE(c) {
      for (var d = c.return; d !== null; ) {
        if (Oc(d))
          return d;
        d = d.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Oc(c) {
      return c.tag === se || c.tag === K || c.tag === fe;
    }
    function Yh(c) {
      var d = c;
      e:
        for (; ; ) {
          for (; d.sibling === null; ) {
            if (d.return === null || Oc(d.return))
              return null;
            d = d.return;
          }
          for (d.sibling.return = d.return, d = d.sibling; d.tag !== se && d.tag !== he && d.tag !== De; ) {
            if (d.flags & He || d.child === null || d.tag === fe)
              continue e;
            d.child.return = d, d = d.child;
          }
          if (!(d.flags & He))
            return d.stateNode;
        }
    }
    function nh(c) {
      if (Do) {
        var d = FE(c);
        switch (d.tag) {
          case se: {
            var T = d.stateNode;
            d.flags & jn && (Bl(T), d.flags &= ~jn);
            var C = Yh(c);
            Qm(c, C, T);
            break;
          }
          case K:
          case fe: {
            var P = d.stateNode.containerInfo, V = Yh(c);
            rS(c, V, P);
            break;
          }
          default:
            throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }
    function rS(c, d, T) {
      var C = c.tag, P = C === se || C === he;
      if (P) {
        var V = c.stateNode;
        d ? ma(T, V, d) : vl(T, V);
      } else if (C !== fe) {
        var J = c.child;
        if (J !== null) {
          rS(J, d, T);
          for (var ce = J.sibling; ce !== null; )
            rS(ce, d, T), ce = ce.sibling;
        }
      }
    }
    function Qm(c, d, T) {
      var C = c.tag, P = C === se || C === he;
      if (P) {
        var V = c.stateNode;
        d ? vo(T, V, d) : Il(T, V);
      } else if (C !== fe) {
        var J = c.child;
        if (J !== null) {
          Qm(J, d, T);
          for (var ce = J.sibling; ce !== null; )
            Qm(ce, d, T), ce = ce.sibling;
        }
      }
    }
    function zE(c, d, T) {
      for (var C = d, P = !1, V, J; ; ) {
        if (!P) {
          var ce = C.return;
          e:
            for (; ; ) {
              if (ce === null)
                throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              var ge = ce.stateNode;
              switch (ce.tag) {
                case se:
                  V = ge, J = !1;
                  break e;
                case K:
                  V = ge.containerInfo, J = !0;
                  break e;
                case fe:
                  V = ge.containerInfo, J = !0;
                  break e;
              }
              ce = ce.return;
            }
          P = !0;
        }
        if (C.tag === se || C.tag === he)
          nS(c, C, T), J ? Oo(V, C.stateNode) : $s(V, C.stateNode);
        else if (C.tag === De)
          J ? _m(V, C.stateNode) : Sm(V, C.stateNode);
        else if (C.tag === fe) {
          if (C.child !== null) {
            V = C.stateNode.containerInfo, J = !0, C.child.return = C, C = C.child;
            continue;
          }
        } else if (tx(c, C, T), C.child !== null) {
          C.child.return = C, C = C.child;
          continue;
        }
        if (C === d)
          return;
        for (; C.sibling === null; ) {
          if (C.return === null || C.return === d)
            return;
          C = C.return, C.tag === fe && (P = !1);
        }
        C.sibling.return = C.return, C = C.sibling;
      }
    }
    function My(c, d, T) {
      Do ? zE(c, d, T) : nS(c, d, T), Gp(d);
    }
    function Cy(c, d) {
      if (!Do) {
        switch (d.tag) {
          case Y:
          case de:
          case q:
          case ue: {
            if (ul(Gh | fa, d, d.return), ad(Gh | fa, d), d.mode & jr)
              try {
                Lu(), ul(Qa | fa, d, d.return);
              } finally {
                Lc(d);
              }
            else
              ul(Qa | fa, d, d.return);
            return;
          }
          case ye:
            return;
          case X: {
            rh(d), Ry(d);
            return;
          }
          case Ne: {
            Ry(d);
            return;
          }
          case K: {
            if (pa && c !== null) {
              var T = c.memoizedState;
              if (T.isDehydrated) {
                var C = d.stateNode;
                gm(C.containerInfo);
              }
            }
            break;
          }
          case Fe:
          case it:
            return;
        }
        Pu(d);
        return;
      }
      switch (d.tag) {
        case Y:
        case de:
        case q:
        case ue: {
          if (ul(Gh | fa, d, d.return), ad(Gh | fa, d), d.mode & jr)
            try {
              Lu(), ul(Qa | fa, d, d.return);
            } finally {
              Lc(d);
            }
          else
            ul(Qa | fa, d, d.return);
          return;
        }
        case ee:
          return;
        case se: {
          var P = d.stateNode;
          if (P != null) {
            var V = d.memoizedProps, J = c !== null ? c.memoizedProps : V, ce = d.type, ge = d.updateQueue;
            d.updateQueue = null, ge !== null && Fu(P, ge, ce, J, V, d);
          }
          return;
        }
        case he: {
          if (d.stateNode === null)
            throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
          var Oe = d.stateNode, Ve = d.memoizedProps, gt = c !== null ? c.memoizedProps : Ve;
          ws(Oe, gt, Ve);
          return;
        }
        case K: {
          if (pa && c !== null) {
            var Ft = c.memoizedState;
            if (Ft.isDehydrated) {
              var Gt = d.stateNode;
              gm(Gt.containerInfo);
            }
          }
          return;
        }
        case ye:
          return;
        case X: {
          rh(d), Ry(d);
          return;
        }
        case Ne: {
          Ry(d);
          return;
        }
        case Ae:
          return;
      }
      throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function rh(c) {
      c.memoizedState;
    }
    function nx(c, d) {
      if (pa) {
        var T = d.memoizedState;
        if (T === null) {
          var C = d.alternate;
          if (C !== null) {
            var P = C.memoizedState;
            if (P !== null) {
              var V = P.dehydrated;
              V !== null && ym(V);
            }
          }
        }
      }
    }
    function Ry(c) {
      var d = c.updateQueue;
      if (d !== null) {
        c.updateQueue = null;
        var T = c.stateNode;
        T === null && (T = c.stateNode = new X2()), d.forEach(function(C) {
          var P = EM.bind(null, c, C);
          if (!T.has(C)) {
            if (T.add(C), Xa)
              if (Ty !== null && eh !== null)
                dg(eh, Ty);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            C.then(P, P);
          }
        });
      }
    }
    function Jw(c) {
      Do && Bl(c.stateNode);
    }
    function eM(c, d, T) {
      Ty = T, eh = c, An = d, rx(c, T), Ty = null, eh = null;
    }
    function rx(c, d) {
      for (; An !== null; ) {
        var T = An, C = T.deletions;
        if (C !== null)
          for (var P = 0; P < C.length; P++) {
            var V = C[P];
            try {
              My(c, V, T);
            } catch (ce) {
              Ko(ce), hs(V, T, ce);
            }
          }
        var J = T.child;
        (T.subtreeFlags & Mn) !== ve && J !== null ? (ld(J, T), An = J) : tM(c, d);
      }
    }
    function tM(c, d) {
      for (; An !== null; ) {
        var T = An;
        Ci(T);
        try {
          Q2(T, c, d);
        } catch (P) {
          Ko(P), hs(T, T.return, P);
        }
        Eo();
        var C = T.sibling;
        if (C !== null) {
          ld(C, T.return), An = C;
          return;
        }
        An = T.return;
      }
    }
    function Q2(c, d, T) {
      var C = c.flags;
      if (C & jn && Jw(c), C & fr) {
        var P = c.alternate;
        P !== null && th(P);
      }
      if (C & Or)
        switch (c.tag) {
          case X: {
            var V = c.memoizedState, J = V !== null;
            if (J) {
              var ce = c.alternate, ge = ce !== null && ce.memoizedState !== null;
              ge || wx();
            }
            break;
          }
          case Fe: {
            var Oe = c.memoizedState, Ve = Oe !== null, gt = c.alternate, Ft = gt !== null && gt.memoizedState !== null, Gt = c;
            Do && Zw(Gt, Ve);
            {
              if (Ve && !Ft && (Gt.mode & ji) !== wr) {
                An = Gt;
                for (var an = Gt.child; an !== null; )
                  An = an, IE(an), an = an.sibling;
              }
              break;
            }
          }
        }
      var fn = C & (He | dt | Vr);
      switch (fn) {
        case He: {
          nh(c), c.flags &= ~He;
          break;
        }
        case ln: {
          nh(c), c.flags &= ~He;
          var vr = c.alternate;
          Cy(vr, c);
          break;
        }
        case Vr: {
          c.flags &= ~Vr;
          break;
        }
        case Gr: {
          c.flags &= ~Vr;
          var ni = c.alternate;
          Cy(ni, c);
          break;
        }
        case dt: {
          var Er = c.alternate;
          Cy(Er, c);
          break;
        }
      }
    }
    function Zm(c, d, T) {
      Ty = T, eh = d, An = c, iS(c, d, T), Ty = null, eh = null;
    }
    function iS(c, d, T) {
      for (var C = (c.mode & ji) !== wr; An !== null; ) {
        var P = An, V = P.child;
        if (P.tag === Fe && C) {
          var J = P.memoizedState !== null, ce = J || J_;
          if (ce) {
            ih(c, d, T);
            continue;
          } else {
            var ge = P.alternate, Oe = ge !== null && ge.memoizedState !== null, Ve = Oe || Xm, gt = J_, Ft = Xm;
            J_ = ce, Xm = Ve, Xm && !Ft && (An = P, nM(P));
            for (var Gt = V; Gt !== null; )
              An = Gt, iS(
                Gt,
                // New root; bubble back up to here and stop.
                d,
                T
              ), Gt = Gt.sibling;
            An = P, J_ = gt, Xm = Ft, ih(c, d, T);
            continue;
          }
        }
        (P.subtreeFlags & zn) !== ve && V !== null ? (ld(V, P), An = V) : ih(c, d, T);
      }
    }
    function ih(c, d, T) {
      for (; An !== null; ) {
        var C = An;
        if ((C.flags & zn) !== ve) {
          var P = C.alternate;
          Ci(C);
          try {
            K2(d, P, C, T);
          } catch (J) {
            Ko(J), hs(C, C.return, J);
          }
          Eo();
        }
        if (C === c) {
          An = null;
          return;
        }
        var V = C.sibling;
        if (V !== null) {
          ld(V, C.return), An = V;
          return;
        }
        An = C.return;
      }
    }
    function IE(c) {
      for (; An !== null; ) {
        var d = An, T = d.child;
        switch (d.tag) {
          case Y:
          case de:
          case q:
          case ue: {
            if (d.mode & jr)
              try {
                Lu(), ul(Qa, d, d.return);
              } finally {
                Lc(d);
              }
            else
              ul(Qa, d, d.return);
            break;
          }
          case ee: {
            ex(d, d.return);
            var C = d.stateNode;
            typeof C.componentWillUnmount == "function" && Z0(d, d.return, C);
            break;
          }
          case se: {
            ex(d, d.return);
            break;
          }
          case Fe: {
            var P = d.memoizedState !== null;
            if (P) {
              ix(c);
              continue;
            }
            break;
          }
        }
        T !== null ? (T.return = d, An = T) : ix(c);
      }
    }
    function ix(c) {
      for (; An !== null; ) {
        var d = An;
        if (d === c) {
          An = null;
          return;
        }
        var T = d.sibling;
        if (T !== null) {
          T.return = d.return, An = T;
          return;
        }
        An = d.return;
      }
    }
    function nM(c) {
      for (; An !== null; ) {
        var d = An, T = d.child;
        if (d.tag === Fe) {
          var C = d.memoizedState !== null;
          if (C) {
            rM(c);
            continue;
          }
        }
        T !== null ? (T.return = d, An = T) : rM(c);
      }
    }
    function rM(c) {
      for (; An !== null; ) {
        var d = An;
        Ci(d);
        try {
          Qw(d);
        } catch (C) {
          Ko(C), hs(d, d.return, C);
        }
        if (Eo(), d === c) {
          An = null;
          return;
        }
        var T = d.sibling;
        if (T !== null) {
          T.return = d.return, An = T;
          return;
        }
        An = d.return;
      }
    }
    function iM(c, d) {
      An = d, Jm(d, c);
    }
    function Jm(c, d) {
      for (; An !== null; ) {
        var T = An, C = T.child;
        (T.subtreeFlags & pr) !== ve && C !== null ? (ld(C, T), An = C) : Ay(c, d);
      }
    }
    function Ay(c, d) {
      for (; An !== null; ) {
        var T = An;
        if ((T.flags & mi) !== ve) {
          Ci(T);
          try {
            Dy(d, T);
          } catch (P) {
            Ko(P), hs(T, T.return, P);
          }
          Eo();
        }
        if (T === c) {
          An = null;
          return;
        }
        var C = T.sibling;
        if (C !== null) {
          ld(C, T.return), An = C;
          return;
        }
        An = T.return;
      }
    }
    function Dy(c, d) {
      switch (d.tag) {
        case Y:
        case de:
        case ue: {
          if (d.mode & jr) {
            G_();
            try {
              ad(zs | fa, d);
            } finally {
              vy(d);
            }
          } else
            ad(zs | fa, d);
          break;
        }
      }
    }
    function ax(c) {
      An = c, ox();
    }
    function ox() {
      for (; An !== null; ) {
        var c = An, d = c.child;
        if ((An.flags & Un) !== ve) {
          var T = c.deletions;
          if (T !== null) {
            for (var C = 0; C < T.length; C++) {
              var P = T[C];
              An = P, eg(P, c);
            }
            {
              var V = c.alternate;
              if (V !== null) {
                var J = V.child;
                if (J !== null) {
                  V.child = null;
                  do {
                    var ce = J.sibling;
                    J.sibling = null, J = ce;
                  } while (J !== null);
                }
              }
            }
            An = c;
          }
        }
        (c.subtreeFlags & pr) !== ve && d !== null ? (ld(d, c), An = d) : od();
      }
    }
    function od() {
      for (; An !== null; ) {
        var c = An;
        (c.flags & mi) !== ve && (Ci(c), sd(c), Eo());
        var d = c.sibling;
        if (d !== null) {
          ld(d, c.return), An = d;
          return;
        }
        An = c.return;
      }
    }
    function sd(c) {
      switch (c.tag) {
        case Y:
        case de:
        case ue: {
          c.mode & jr ? (G_(), ul(zs | fa, c, c.return), vy(c)) : ul(zs | fa, c, c.return);
          break;
        }
      }
    }
    function eg(c, d) {
      for (; An !== null; ) {
        var T = An;
        Ci(T), $p(T, d), Eo();
        var C = T.child;
        C !== null ? (ld(C, T), An = C) : jp(c);
      }
    }
    function jp(c) {
      for (; An !== null; ) {
        var d = An, T = d.sibling, C = d.return;
        if (Wp(d), d === c) {
          An = null;
          return;
        }
        if (T !== null) {
          ld(T, C), An = T;
          return;
        }
        An = C;
      }
    }
    function $p(c, d) {
      switch (c.tag) {
        case Y:
        case de:
        case ue: {
          c.mode & jr ? (G_(), ul(zs, c, d), vy(c)) : ul(zs, c, d);
          break;
        }
      }
    }
    var aM = !1;
    function ld(c, d) {
      !aM && c.return !== d && (aM = !0, p("Internal React error: Return pointer is inconsistent with parent.")), c.return = d;
    }
    function Z2(c) {
      switch (c.tag) {
        case Y:
        case de:
        case ue: {
          try {
            ad(Qa | fa, c);
          } catch (T) {
            Ko(T), hs(c, c.return, T);
          }
          break;
        }
        case ee: {
          var d = c.stateNode;
          try {
            d.componentDidMount();
          } catch (T) {
            Ko(T), hs(c, c.return, T);
          }
          break;
        }
      }
    }
    function tg(c) {
      switch (c.tag) {
        case Y:
        case de:
        case ue: {
          try {
            ad(zs | fa, c);
          } catch (d) {
            Ko(d), hs(c, c.return, d);
          }
          break;
        }
      }
    }
    function oM(c) {
      switch (c.tag) {
        case Y:
        case de:
        case ue: {
          try {
            ul(Qa | fa, c, c.return);
          } catch (T) {
            Ko(T), hs(c, c.return, T);
          }
          break;
        }
        case ee: {
          var d = c.stateNode;
          typeof d.componentWillUnmount == "function" && Z0(c, c.return, d);
          break;
        }
      }
    }
    function BE(c) {
      switch (c.tag) {
        case Y:
        case de:
        case ue:
          try {
            ul(zs | fa, c, c.return);
          } catch (d) {
            Ko(d), hs(c, c.return, d);
          }
      }
    }
    var ng = 0, sx = 1, Ly = 2, lx = 3, ux = 4;
    if (typeof Symbol == "function" && Symbol.for) {
      var ah = Symbol.for;
      ng = ah("selector.component"), sx = ah("selector.has_pseudo_class"), Ly = ah("selector.role"), lx = ah("selector.test_id"), ux = ah("selector.text");
    }
    function Jl(c) {
      return {
        $$typeof: ng,
        value: c
      };
    }
    function ud(c) {
      return {
        $$typeof: sx,
        value: c
      };
    }
    function oh(c) {
      return {
        $$typeof: Ly,
        value: c
      };
    }
    function rg(c) {
      return {
        $$typeof: ux,
        value: c
      };
    }
    function ev(c) {
      return {
        $$typeof: lx,
        value: c
      };
    }
    function HE(c) {
      var d = ku(c);
      if (d != null) {
        if (typeof d.memoizedProps["data-testname"] != "string")
          throw new Error("Invalid host root specified. Should be either a React container or a node with a testname attribute.");
        return d;
      } else {
        var T = oa(c);
        if (T === null)
          throw new Error("Could not find React container within specified host subtree.");
        return T.stateNode.current;
      }
    }
    function cx(c, d) {
      switch (d.$$typeof) {
        case ng:
          if (c.type === d.value)
            return !0;
          break;
        case sx:
          return J2(c, d.value);
        case Ly:
          if (c.tag === se) {
            var T = c.stateNode;
            if (Aa(T, d.value))
              return !0;
          }
          break;
        case ux:
          if (c.tag === se || c.tag === he) {
            var C = Td(c);
            if (C !== null && C.indexOf(d.value) >= 0)
              return !0;
          }
          break;
        case lx:
          if (c.tag === se) {
            var P = c.memoizedProps["data-testname"];
            if (typeof P == "string" && P.toLowerCase() === d.value.toLowerCase())
              return !0;
          }
          break;
        default:
          throw new Error("Invalid selector type specified.");
      }
      return !1;
    }
    function VE(c) {
      switch (c.$$typeof) {
        case ng:
          var d = Ze(c.value) || "Unknown";
          return "<" + d + ">";
        case sx:
          return ":has(" + (VE(c) || "") + ")";
        case Ly:
          return '[role="' + c.value + '"]';
        case ux:
          return '"' + c.value + '"';
        case lx:
          return '[data-testname="' + c.value + '"]';
        default:
          throw new Error("Invalid selector type specified.");
      }
    }
    function sM(c, d) {
      for (var T = [], C = [c, 0], P = 0; P < C.length; ) {
        var V = C[P++], J = C[P++], ce = d[J];
        if (!(V.tag === se && Qr(V))) {
          for (; ce != null && cx(V, ce); )
            J++, ce = d[J];
          if (J === d.length)
            T.push(V);
          else
            for (var ge = V.child; ge !== null; )
              C.push(ge, J), ge = ge.sibling;
        }
      }
      return T;
    }
    function J2(c, d) {
      for (var T = [c, 0], C = 0; C < T.length; ) {
        var P = T[C++], V = T[C++], J = d[V];
        if (!(P.tag === se && Qr(P))) {
          for (; J != null && cx(P, J); )
            V++, J = d[V];
          if (V === d.length)
            return !0;
          for (var ce = P.child; ce !== null; )
            T.push(ce, V), ce = ce.sibling;
        }
      }
      return !1;
    }
    function aS(c, d) {
      if (!oo)
        throw new Error("Test selector API is not supported by this renderer.");
      for (var T = HE(c), C = sM(T, d), P = [], V = Array.from(C), J = 0; J < V.length; ) {
        var ce = V[J++];
        if (ce.tag === se) {
          if (Qr(ce))
            continue;
          P.push(ce.stateNode);
        } else
          for (var ge = ce.child; ge !== null; )
            V.push(ge), ge = ge.sibling;
      }
      return P;
    }
    function lM(c, d) {
      if (!oo)
        throw new Error("Test selector API is not supported by this renderer.");
      for (var T = HE(c), C = 0, P = [], V = [T, 0], J = 0; J < V.length; ) {
        var ce = V[J++], ge = V[J++], Oe = d[ge];
        if (!(ce.tag === se && Qr(ce)) && (cx(ce, Oe) && (P.push(VE(Oe)), ge++, ge > C && (C = ge)), ge < d.length))
          for (var Ve = ce.child; Ve !== null; )
            V.push(Ve, ge), Ve = Ve.sibling;
      }
      if (C < d.length) {
        for (var gt = [], Ft = C; Ft < d.length; Ft++)
          gt.push(VE(d[Ft]));
        return `findAllNodes was able to match part of the selector:
` + ("  " + P.join(" > ") + `

`) + `No matching component was found for:
` + ("  " + gt.join(" > "));
      }
      return null;
    }
    function GE(c, d) {
      if (!oo)
        throw new Error("Test selector API is not supported by this renderer.");
      for (var T = aS(c, d), C = [], P = 0; P < T.length; P++)
        C.push(Ti(T[P]));
      for (var V = C.length - 1; V > 0; V--)
        for (var J = C[V], ce = J.x, ge = ce + J.width, Oe = J.y, Ve = Oe + J.height, gt = V - 1; gt >= 0; gt--)
          if (V !== gt) {
            var Ft = C[gt], Gt = Ft.x, an = Gt + Ft.width, fn = Ft.y, vr = fn + Ft.height;
            if (ce >= Gt && Oe >= fn && ge <= an && Ve <= vr) {
              C.splice(V, 1);
              break;
            } else if (ce === Gt && J.width === Ft.width && !(vr < Oe) && !(fn > Ve)) {
              fn > Oe && (Ft.height += fn - Oe, Ft.y = Oe), vr < Ve && (Ft.height = Ve - fn), C.splice(V, 1);
              break;
            } else if (Oe === fn && J.height === Ft.height && !(an < ce) && !(Gt > ge)) {
              Gt > ce && (Ft.width += Gt - ce, Ft.x = ce), an < ge && (Ft.width = ge - Gt), C.splice(V, 1);
              break;
            }
          }
      return C;
    }
    function uM(c, d) {
      if (!oo)
        throw new Error("Test selector API is not supported by this renderer.");
      for (var T = HE(c), C = sM(T, d), P = Array.from(C), V = 0; V < P.length; ) {
        var J = P[V++];
        if (!Qr(J)) {
          if (J.tag === se) {
            var ce = J.stateNode;
            if (zl(ce))
              return !0;
          }
          for (var ge = J.child; ge !== null; )
            P.push(ge), ge = ge.sibling;
        }
      }
      return !1;
    }
    var oS = [];
    function WE() {
      oo && oS.forEach(function(c) {
        return c();
      });
    }
    function jE(c, d, T, C) {
      if (!oo)
        throw new Error("Test selector API is not supported by this renderer.");
      var P = aS(c, d), V = jo(P, T, C), J = V.disconnect, ce = V.observe, ge = V.unobserve, Oe = function() {
        var Ve = aS(c, d);
        P.forEach(function(gt) {
          Ve.indexOf(gt) < 0 && ge(gt);
        }), Ve.forEach(function(gt) {
          P.indexOf(gt) < 0 && ce(gt);
        });
      };
      return oS.push(Oe), {
        disconnect: function() {
          var Ve = oS.indexOf(Oe);
          Ve >= 0 && oS.splice(Ve, 1), J();
        }
      };
    }
    var $E = o.ReactCurrentActQueue;
    function eA(c) {
      {
        var d = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), T = typeof jest < "u";
        return Fl && T && d !== !1;
      }
    }
    function cM() {
      {
        var c = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !c && $E.current !== null && p("The current testing environment is not configured to support act(...)"), c;
      }
    }
    var tA = Math.ceil, YE = o.ReactCurrentDispatcher, fx = o.ReactCurrentOwner, eo = o.ReactCurrentBatchConfig, sh = o.ReactCurrentActQueue, ds = (
      /*             */
      0
    ), tv = (
      /*               */
      1
    ), eu = (
      /*                */
      2
    ), Va = (
      /*                */
      4
    ), lh = 0, sS = 1, ig = 2, dx = 3, ic = 4, fM = 5, Yp = 6, Yr = ds, Is = null, Ga = null, Go = Zt, Pc = Zt, ag = Sl(Zt), fo = lh, nv = null, lS = Zt, ac = Zt, Oy = Zt, og = null, tu = null, rv = 0, hx = 500, uS = 1 / 0, px = 500;
    function sg() {
      uS = ta() + px;
    }
    function XE() {
      return uS;
    }
    var cS = !1, fS = null, iv = null, lg = !1, Xp = null, Xh = Zt, Qo = [], ug = 50, cg = 0, qE = null, dM = 50, mx = 0, dS = Li, nu = Zt;
    function vx() {
      return Is;
    }
    function Pl() {
      return (Yr & (eu | Va)) !== ds ? ta() : (dS !== Li || (dS = ta()), dS);
    }
    function qp(c) {
      var d = c.mode;
      if ((d & ji) === wr)
        return kr;
      if ((Yr & eu) !== ds && Go !== Zt)
        return $f(Go);
      var T = ff() !== cf;
      if (T) {
        if (eo.transition !== null) {
          var C = eo.transition;
          C._updatedFibers || (C._updatedFibers = /* @__PURE__ */ new Set()), C._updatedFibers.add(c);
        }
        return nu === Pr && (nu = Uo()), nu;
      }
      var P = Ls();
      if (P !== Pr)
        return P;
      var V = ml();
      return V;
    }
    function hM(c) {
      var d = c.mode;
      return (d & ji) === wr ? kr : wh();
    }
    function Zo(c, d, T) {
      bM();
      var C = fg(c, d);
      return C === null ? null : (No(C, d, T), (Yr & eu) !== Zt && C === Is ? Iy(c) : (Xa && la(C, c, d), MM(c), C === Is && ((Yr & eu) === ds && (ac = Rr(ac, d)), fo === ic && Kh(C, Go)), ru(C, T), d === kr && Yr === ds && (c.mode & ji) === wr && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !sh.isBatchingLegacy && (sg(), al())), C);
    }
    function KE(c, d, T) {
      var C = c.current;
      C.lanes = d, No(c, d, T), ru(c, T);
    }
    function fg(c, d) {
      c.lanes = Rr(c.lanes, d);
      var T = c.alternate;
      T !== null && (T.lanes = Rr(T.lanes, d)), T === null && (c.flags & (He | Vr)) !== ve && Fy(c);
      for (var C = c, P = c.return; P !== null; )
        P.childLanes = Rr(P.childLanes, d), T = P.alternate, T !== null ? T.childLanes = Rr(T.childLanes, d) : (P.flags & (He | Vr)) !== ve && Fy(c), C = P, P = P.return;
      if (C.tag === K) {
        var V = C.stateNode;
        return V;
      } else
        return null;
    }
    function gx(c, d) {
      return (
        // TODO: Optimize slightly by comparing to root that fiber belongs to.
        // Requires some refactoring. Not a big deal though since it's rare for
        // concurrent apps to have more than a single root.
        Is !== null && (c.mode & ji) !== wr && // If this is a render phase update (i.e. UNSAFE_componentWillReceiveProps),
        // then don't treat this as an interleaved update. This pattern is
        // accompanied by a warning but we haven't fully deprecated it yet. We can
        // remove once the deferRenderPhaseUpdateToNextBatch flag is enabled.
        (Yr & eu) === ds
      );
    }
    function ru(c, d) {
      var T = c.callbackNode;
      Ia(c, d);
      var C = wi(c, c === Is ? Go : Zt);
      if (C === Zt) {
        T !== null && wM(T), c.callbackNode = null, c.callbackPriority = Pr;
        return;
      }
      var P = xu(C), V = c.callbackPriority;
      if (V === P && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(sh.current !== null && T !== Ax)) {
        T == null && V !== kr && p("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      T != null && wM(T);
      var J;
      if (P === kr)
        c.tag === Bf ? (sh.isBatchingLegacy !== null && (sh.didScheduleLegacyUpdate = !0), Ku(pM.bind(null, c))) : Kn(pM.bind(null, c)), gr ? sh.current !== null ? sh.current.push(Yo) : Lo(function() {
          Yr === ds && Yo();
        }) : By(Da, Yo), J = null;
      else {
        var ce;
        switch (bu(C)) {
          case $l:
            ce = Da;
            break;
          case Bd:
            ce = gn;
            break;
          case rf:
            ce = Ki;
            break;
          case Hd:
            ce = Ya;
            break;
          default:
            ce = Ki;
            break;
        }
        J = By(ce, yx.bind(null, c));
      }
      c.callbackPriority = P, c.callbackNode = J;
    }
    function yx(c, d) {
      if (H0(), dS = Li, nu = Zt, (Yr & (eu | Va)) !== ds)
        throw new Error("Should not already be working.");
      var T = c.callbackNode, C = Qh();
      if (C && c.callbackNode !== T)
        return null;
      var P = wi(c, c === Is ? Go : Zt);
      if (P === Zt)
        return null;
      var V = !xc(c, P) && !Av(c, P) && !d, J = V ? rA(c, P) : Ny(c, P);
      if (J !== lh) {
        if (J === ig) {
          var ce = el(c);
          ce !== Zt && (P = ce, J = Sx(c, ce));
        }
        if (J === sS) {
          var ge = nv;
          throw Kp(c, Zt), Kh(c, P), ru(c, ta()), ge;
        }
        if (J === Yp)
          Kh(c, P);
        else {
          var Oe = !xc(c, P), Ve = c.current.alternate;
          if (Oe && !_x(Ve)) {
            if (J = Ny(c, P), J === ig) {
              var gt = el(c);
              gt !== Zt && (P = gt, J = Sx(c, gt));
            }
            if (J === sS) {
              var Ft = nv;
              throw Kp(c, Zt), Kh(c, P), ru(c, ta()), Ft;
            }
          }
          c.finishedWork = Ve, c.finishedLanes = P, av(c, J, P);
        }
      }
      return ru(c, ta()), c.callbackNode === T ? yx.bind(null, c) : null;
    }
    function Sx(c, d) {
      var T = og;
      if (Fi(c)) {
        var C = Kp(c, d);
        C.flags |= tr, Fa(c.containerInfo);
      }
      var P = Ny(c, d);
      if (P !== ig) {
        var V = tu;
        tu = T, V !== null && qh(V);
      }
      return P;
    }
    function qh(c) {
      tu === null ? tu = c : tu.push.apply(tu, c);
    }
    function av(c, d, T) {
      switch (d) {
        case lh:
        case sS:
          throw new Error("Root did not complete. This is a bug in React.");
        case ig: {
          ov(c, tu);
          break;
        }
        case dx: {
          if (Kh(c, T), _c(T) && // do not delay if we're inside an act() scope
          !ub()) {
            var C = rv + hx - ta();
            if (C > 10) {
              var P = wi(c, Zt);
              if (P !== Zt)
                break;
              var V = c.suspendedLanes;
              if (!Eu(V, T)) {
                Pl(), Tp(c, V);
                break;
              }
              c.timeoutHandle = bd(ov.bind(null, c, tu), C);
              break;
            }
          }
          ov(c, tu);
          break;
        }
        case ic: {
          if (Kh(c, T), jf(T))
            break;
          if (!ub()) {
            var J = $u(c, T), ce = J, ge = ta() - ce, Oe = ky(ge) - ge;
            if (Oe > 10) {
              c.timeoutHandle = bd(ov.bind(null, c, tu), Oe);
              break;
            }
          }
          ov(c, tu);
          break;
        }
        case fM: {
          ov(c, tu);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function _x(c) {
      for (var d = c; ; ) {
        if (d.flags & Ui) {
          var T = d.updateQueue;
          if (T !== null) {
            var C = T.stores;
            if (C !== null)
              for (var P = 0; P < C.length; P++) {
                var V = C[P], J = V.getSnapshot, ce = V.value;
                try {
                  if (!zo(J(), ce))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var ge = d.child;
        if (d.subtreeFlags & Ui && ge !== null) {
          ge.return = d, d = ge;
          continue;
        }
        if (d === c)
          return !0;
        for (; d.sibling === null; ) {
          if (d.return === null || d.return === c)
            return !0;
          d = d.return;
        }
        d.sibling.return = d.return, d = d.sibling;
      }
      return !0;
    }
    function Kh(c, d) {
      d = So(d, Oy), d = So(d, ac), Am(c, d);
    }
    function pM(c) {
      if (V_(), (Yr & (eu | Va)) !== ds)
        throw new Error("Should not already be working.");
      Qh();
      var d = wi(c, Zt);
      if (!Mi(d, kr))
        return ru(c, ta()), null;
      var T = Ny(c, d);
      if (c.tag !== Bf && T === ig) {
        var C = el(c);
        C !== Zt && (d = C, T = Sx(c, C));
      }
      if (T === sS) {
        var P = nv;
        throw Kp(c, Zt), Kh(c, d), ru(c, ta()), P;
      }
      if (T === Yp)
        throw new Error("Root did not complete. This is a bug in React.");
      var V = c.current.alternate;
      return c.finishedWork = V, c.finishedLanes = d, ov(c, tu), ru(c, ta()), null;
    }
    function xx(c, d) {
      d !== Zt && (ko(c, Rr(d, kr)), ru(c, ta()), (Yr & (eu | Va)) === ds && (sg(), Yo()));
    }
    function nA(c) {
      var d = Ls(), T = eo.transition;
      try {
        return eo.transition = null, _o(rf), c();
      } finally {
        _o(d), eo.transition = T;
      }
    }
    function mM(c, d) {
      var T = Yr;
      Yr |= tv;
      try {
        return c(d);
      } finally {
        Yr = T, Yr === ds && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !sh.isBatchingLegacy && (sg(), al());
      }
    }
    function Ex(c, d, T, C, P) {
      var V = Ls(), J = eo.transition;
      try {
        return eo.transition = null, _o($l), c(d, T, C, P);
      } finally {
        _o(V), eo.transition = J, Yr === ds && sg();
      }
    }
    function hS(c) {
      Xp !== null && Xp.tag === Bf && (Yr & (eu | Va)) === ds && Qh();
      var d = Yr;
      Yr |= tv;
      var T = eo.transition, C = Ls();
      try {
        return eo.transition = null, _o($l), c ? c() : void 0;
      } finally {
        _o(C), eo.transition = T, Yr = d, (Yr & (eu | Va)) === ds && Yo();
      }
    }
    function QE() {
      return (Yr & (eu | Va)) !== ds;
    }
    function vM(c) {
      var d = Yr;
      Yr |= tv;
      var T = eo.transition, C = Ls();
      try {
        eo.transition = null, _o($l), c();
      } finally {
        _o(C), eo.transition = T, Yr = d, Yr === ds && (sg(), Yo());
      }
    }
    function Py(c, d) {
      qi(ag, Pc, c), Pc = Rr(Pc, d);
    }
    function pS(c) {
      Pc = ag.current, go(ag, c);
    }
    function Kp(c, d) {
      c.finishedWork = null, c.finishedLanes = Zt;
      var T = c.timeoutHandle;
      if (T !== Br && (c.timeoutHandle = Br, Wo(T)), Ga !== null)
        for (var C = Ga.return; C !== null; ) {
          var P = C.alternate;
          PE(P, C), C = C.return;
        }
      Is = c;
      var V = Ii(c.current, null);
      return Ga = V, Go = Pc = d, fo = lh, nv = null, lS = Zt, ac = Zt, Oy = Zt, og = null, tu = null, ca(), ol.discardPendingWarnings(), V;
    }
    function bx(c, d) {
      do {
        var T = Ga;
        try {
          if (S(), nn(), Eo(), fx.current = null, T === null || T.return === null) {
            fo = sS, nv = d, Ga = null;
            return;
          }
          if (B && T.mode & jr && Kv(T, !0), H)
            if (Tu(), d !== null && typeof d == "object" && typeof d.then == "function") {
              var C = d;
              lf(T, C, Go);
            } else
              wu(T, d, Go);
          w2(c, T.return, T, d, Go), _M(T);
        } catch (P) {
          d = P, Ga === T && T !== null ? (T = T.return, Ga = T) : T = Ga;
          continue;
        }
        return;
      } while (!0);
    }
    function Tx() {
      var c = YE.current;
      return YE.current = k_, c === null ? k_ : c;
    }
    function ZE(c) {
      YE.current = c;
    }
    function wx() {
      rv = ta();
    }
    function Uy(c) {
      lS = Rr(c, lS);
    }
    function JE() {
      fo === lh && (fo = dx);
    }
    function mS() {
      (fo === lh || fo === dx || fo === ig) && (fo = ic), Is !== null && (tl(lS) || tl(ac)) && Kh(Is, Go);
    }
    function gM(c) {
      fo !== ic && (fo = ig), og === null ? og = [c] : og.push(c);
    }
    function eb() {
      return fo === lh;
    }
    function Ny(c, d) {
      var T = Yr;
      Yr |= eu;
      var C = Tx();
      if (Is !== c || Go !== d) {
        if (Xa) {
          var P = c.memoizedUpdaters;
          P.size > 0 && (dg(c, Go), P.clear()), El(c, d);
        }
        Kp(c, d);
      }
      Fr(d);
      do
        try {
          yM();
          break;
        } catch (V) {
          bx(c, V);
        }
      while (!0);
      if (S(), Yr = T, ZE(C), Ga !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return ai(), Is = null, Go = Zt, fo;
    }
    function yM() {
      for (; Ga !== null; )
        tb(Ga);
    }
    function rA(c, d) {
      var T = Yr;
      Yr |= eu;
      var C = Tx();
      if (Is !== c || Go !== d) {
        if (Xa) {
          var P = c.memoizedUpdaters;
          P.size > 0 && (dg(c, Go), P.clear()), El(c, d);
        }
        sg(), Kp(c, d);
      }
      Fr(d);
      do
        try {
          SM();
          break;
        } catch (V) {
          bx(c, V);
        }
      while (!0);
      return S(), ZE(C), Yr = T, Ga !== null ? (or(), lh) : (ai(), Is = null, Go = Zt, fo);
    }
    function SM() {
      for (; Ga !== null && !Lm(); )
        tb(Ga);
    }
    function tb(c) {
      var d = c.alternate;
      Ci(c);
      var T;
      (c.mode & jr) !== wr ? (Bp(c), T = zy(d, c, Pc), Kv(c, !0)) : T = zy(d, c, Pc), Eo(), c.memoizedProps = c.pendingProps, T === null ? _M(c) : Ga = T, fx.current = null;
    }
    function _M(c) {
      var d = c;
      do {
        var T = d.alternate, C = d.return;
        if ((d.flags & Ht) === ve) {
          Ci(d);
          var P = void 0;
          if ((d.mode & jr) === wr ? P = Cw(T, d, Pc) : (Bp(d), P = Cw(T, d, Pc), Kv(d, !1)), Eo(), P !== null) {
            Ga = P;
            return;
          }
        } else {
          var V = W2(T, d);
          if (V !== null) {
            V.flags &= ke, Ga = V;
            return;
          }
          if ((d.mode & jr) !== wr) {
            Kv(d, !1);
            for (var J = d.actualDuration, ce = d.child; ce !== null; )
              J += ce.actualDuration, ce = ce.sibling;
            d.actualDuration = J;
          }
          if (C !== null)
            C.flags |= Ht, C.subtreeFlags = ve, C.deletions = null;
          else {
            fo = Yp, Ga = null;
            return;
          }
        }
        var ge = d.sibling;
        if (ge !== null) {
          Ga = ge;
          return;
        }
        d = C, Ga = d;
      } while (d !== null);
      fo === lh && (fo = fM);
    }
    function ov(c, d) {
      var T = Ls(), C = eo.transition;
      try {
        eo.transition = null, _o($l), nb(c, d, T);
      } finally {
        eo.transition = C, _o(T);
      }
      return null;
    }
    function nb(c, d, T) {
      do
        Qh();
      while (Xp !== null);
      if (aA(), (Yr & (eu | Va)) !== ds)
        throw new Error("Should not already be working.");
      var C = c.finishedWork, P = c.finishedLanes;
      if (xo(P), C === null)
        return Vd(), null;
      if (P === Zt && p("root.finishedLanes should not be empty during a commit. This is a bug in React."), c.finishedWork = null, c.finishedLanes = Zt, C === c.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      c.callbackNode = null, c.callbackPriority = Pr;
      var V = Rr(C.lanes, C.childLanes);
      nf(c, V), c === Is && (Is = null, Ga = null, Go = Zt), ((C.subtreeFlags & pr) !== ve || (C.flags & pr) !== ve) && (lg || (lg = !0, By(Ki, function() {
        return Qh(), null;
      })));
      var J = (C.subtreeFlags & (vn | Mn | zn | pr)) !== ve, ce = (C.flags & (vn | Mn | zn | pr)) !== ve;
      if (J || ce) {
        var ge = eo.transition;
        eo.transition = null;
        var Oe = Ls();
        _o($l);
        var Ve = Yr;
        Yr |= Va, fx.current = null, Kw(c, C), pE(), eM(c, C, P), bi(c.containerInfo), c.current = C, wl(P), Zm(C, c, P), Ah(), Rh(), Yr = Ve, _o(Oe), eo.transition = ge;
      } else
        c.current = C, pE();
      var gt = lg;
      if (lg && (lg = !1, Xp = c, Xh = P), V = c.pendingLanes, V === Zt && (iv = null), gt || TM(c.current, !1), $r(C.stateNode, T), Xa && c.memoizedUpdaters.clear(), WE(), ru(c, ta()), d !== null)
        for (var Ft = c.onRecoverableError, Gt = 0; Gt < d.length; Gt++) {
          var an = d[Gt];
          Ft(an);
        }
      if (cS) {
        cS = !1;
        var fn = fS;
        throw fS = null, fn;
      }
      return Mi(Xh, kr) && c.tag !== Bf && Qh(), V = c.pendingLanes, Mi(V, kr) ? (Dc(), c === qE ? cg++ : (cg = 0, qE = c)) : cg = 0, Yo(), Vd(), null;
    }
    function Qh() {
      if (Xp !== null) {
        var c = bu(Xh), d = Dm(rf, c), T = eo.transition, C = Ls();
        try {
          return eo.transition = null, _o(d), rb();
        } finally {
          _o(C), eo.transition = T;
        }
      }
      return !1;
    }
    function iA(c) {
      Qo.push(c), lg || (lg = !0, By(Ki, function() {
        return Qh(), null;
      }));
    }
    function rb() {
      if (Xp === null)
        return !1;
      var c = Xp, d = Xh;
      if (Xp = null, Xh = Zt, (Yr & (eu | Va)) !== ds)
        throw new Error("Cannot flush passive effects while already rendering.");
      Mu(d);
      var T = Yr;
      Yr |= Va, ax(c.current), iM(c, c.current);
      {
        var C = Qo;
        Qo = [];
        for (var P = 0; P < C.length; P++) {
          var V = C[P];
          kE(c, V);
        }
      }
      ar(), TM(c.current, !0), Yr = T, Yo(), mx = Xp === null ? 0 : mx + 1, ua(c);
      {
        var J = c.current.stateNode;
        J.effectDuration = 0, J.passiveEffectDuration = 0;
      }
      return !0;
    }
    function Mx(c) {
      return iv !== null && iv.has(c);
    }
    function ib(c) {
      iv === null ? iv = /* @__PURE__ */ new Set([c]) : iv.add(c);
    }
    function ab(c) {
      cS || (cS = !0, fS = c);
    }
    var ob = ab;
    function sb(c, d, T) {
      var C = V0(T, d), P = G0(c, C, kr);
      ei(c, P);
      var V = Pl(), J = fg(c, kr);
      J !== null && (No(J, kr, V), ru(J, V));
    }
    function hs(c, d, T) {
      if (c.tag === K) {
        sb(c, c, T);
        return;
      }
      var C = null;
      for (C = d; C !== null; ) {
        if (C.tag === K) {
          sb(C, c, T);
          return;
        } else if (C.tag === ee) {
          var P = C.type, V = C.stateNode;
          if (typeof P.getDerivedStateFromError == "function" || typeof V.componentDidCatch == "function" && !Mx(V)) {
            var J = V0(T, c), ce = yy(C, J, kr);
            ei(C, ce);
            var ge = Pl(), Oe = fg(C, kr);
            Oe !== null && (No(Oe, kr, ge), ru(Oe, ge));
            return;
          }
        }
        C = C.return;
      }
      p(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, T);
    }
    function Cx(c, d, T) {
      var C = c.pingCache;
      C !== null && C.delete(d);
      var P = Pl();
      Tp(c, T), yS(c), Is === c && Eu(Go, T) && (fo === ic || fo === dx && _c(Go) && ta() - rv < hx ? Kp(c, Zt) : Oy = Rr(Oy, T)), ru(c, P);
    }
    function vS(c, d) {
      d === Pr && (d = hM(c));
      var T = Pl(), C = fg(c, d);
      C !== null && (No(C, d, T), ru(C, T));
    }
    function xM(c) {
      var d = c.memoizedState, T = Pr;
      d !== null && (T = d.retryLane), vS(c, T);
    }
    function EM(c, d) {
      var T = Pr, C;
      switch (c.tag) {
        case X:
          C = c.stateNode;
          var P = c.memoizedState;
          P !== null && (T = P.retryLane);
          break;
        case Ne:
          C = c.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      C !== null && C.delete(d), vS(c, T);
    }
    function ky(c) {
      return c < 120 ? 120 : c < 480 ? 480 : c < 1080 ? 1080 : c < 1920 ? 1920 : c < 3e3 ? 3e3 : c < 4320 ? 4320 : tA(c / 1960) * 1960;
    }
    function bM() {
      if (cg > ug)
        throw cg = 0, qE = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      mx > dM && (mx = 0, p("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function aA() {
      ol.flushLegacyContextWarning(), ol.flushPendingUnsafeLifecycleWarnings();
    }
    function TM(c, d) {
      Ci(c), sv(c, vt, oM), d && sv(c, sn, BE), sv(c, vt, Z2), d && sv(c, sn, tg), Eo();
    }
    function sv(c, d, T) {
      for (var C = c, P = null; C !== null; ) {
        var V = C.subtreeFlags & d;
        C !== P && C.child !== null && V !== ve ? C = C.child : ((C.flags & d) !== ve && T(C), C.sibling !== null ? C = C.sibling : C = P = C.return);
      }
    }
    var uh = null;
    function Fy(c) {
      {
        if ((Yr & eu) !== ds || !(c.mode & ji))
          return;
        var d = c.tag;
        if (d !== Z && d !== K && d !== ee && d !== Y && d !== de && d !== q && d !== ue)
          return;
        var T = pt(c) || "ReactComponent";
        if (uh !== null) {
          if (uh.has(T))
            return;
          uh.add(T);
        } else
          uh = /* @__PURE__ */ new Set([T]);
        var C = ss;
        try {
          Ci(c), p("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          C ? Ci(c) : Eo();
        }
      }
    }
    var zy;
    {
      var Rx = null;
      zy = function(c, d, T) {
        var C = vg(Rx, d);
        try {
          return Gw(c, d, T);
        } catch (V) {
          if (V !== null && typeof V == "object" && typeof V.then == "function")
            throw V;
          if (S(), nn(), PE(c, d), vg(d, C), d.mode & jr && Bp(d), $w(null, Gw, null, c, d, T), Y2()) {
            var P = Yw();
            typeof P == "object" && P !== null && P._suppressLogging && typeof V == "object" && V !== null && !V._suppressLogging && (V._suppressLogging = !0);
          }
          throw V;
        }
      };
    }
    var lb = !1, gS;
    gS = /* @__PURE__ */ new Set();
    function Iy(c) {
      if (Cl && !vw())
        switch (c.tag) {
          case Y:
          case de:
          case ue: {
            var d = Ga && pt(Ga) || "Unknown", T = d;
            if (!gS.has(T)) {
              gS.add(T);
              var C = pt(c) || "Unknown";
              p("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", C, d, d);
            }
            break;
          }
          case ee: {
            lb || (p("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), lb = !0);
            break;
          }
        }
    }
    function dg(c, d) {
      if (Xa) {
        var T = c.memoizedUpdaters;
        T.forEach(function(C) {
          la(c, C, d);
        });
      }
    }
    var Ax = {};
    function By(c, d) {
      {
        var T = sh.current;
        return T !== null ? (T.push(d), Ax) : Ch(c, d);
      }
    }
    function wM(c) {
      if (c !== Ax)
        return af(c);
    }
    function ub() {
      return sh.current !== null;
    }
    function MM(c) {
      {
        if (c.mode & ji) {
          if (!cM())
            return;
        } else if (!eA() || Yr !== ds || c.tag !== Y && c.tag !== de && c.tag !== ue)
          return;
        if (sh.current === null) {
          var d = ss;
          try {
            Ci(c), p(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, pt(c));
          } finally {
            d ? Ci(c) : Eo();
          }
        }
      }
    }
    function yS(c) {
      c.tag !== Bf && cM() && sh.current === null && p(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    var Jo = null, lv = null, Hy = function(c) {
      Jo = c;
    };
    function uv(c) {
      {
        if (Jo === null)
          return c;
        var d = Jo(c);
        return d === void 0 ? c : d.current;
      }
    }
    function cb(c) {
      return uv(c);
    }
    function Zh(c) {
      {
        if (Jo === null)
          return c;
        var d = Jo(c);
        if (d === void 0) {
          if (c != null && typeof c.render == "function") {
            var T = uv(c.render);
            if (c.render !== T) {
              var C = {
                $$typeof: Dt,
                render: T
              };
              return c.displayName !== void 0 && (C.displayName = c.displayName), C;
            }
          }
          return c;
        }
        return d.current;
      }
    }
    function hg(c, d) {
      {
        if (Jo === null)
          return !1;
        var T = c.elementType, C = d.type, P = !1, V = typeof C == "object" && C !== null ? C.$$typeof : null;
        switch (c.tag) {
          case ee: {
            typeof C == "function" && (P = !0);
            break;
          }
          case Y: {
            (typeof C == "function" || V === ae) && (P = !0);
            break;
          }
          case de: {
            (V === Dt || V === ae) && (P = !0);
            break;
          }
          case q:
          case ue: {
            (V === rn || V === ae) && (P = !0);
            break;
          }
          default:
            return !1;
        }
        if (P) {
          var J = Jo(T);
          if (J !== void 0 && J === Jo(C))
            return !0;
        }
        return !1;
      }
    }
    function CM(c) {
      {
        if (Jo === null || typeof WeakSet != "function")
          return;
        lv === null && (lv = /* @__PURE__ */ new WeakSet()), lv.add(c);
      }
    }
    var Dx = function(c, d) {
      {
        if (Jo === null)
          return;
        var T = d.staleFamilies, C = d.updatedFamilies;
        Qh(), hS(function() {
          ps(c.current, C, T);
        });
      }
    }, Uc = function(c, d) {
      {
        if (c.context !== ui)
          return;
        Qh(), hS(function() {
          Ox(d, c, null, null);
        });
      }
    };
    function ps(c, d, T) {
      {
        var C = c.alternate, P = c.child, V = c.sibling, J = c.tag, ce = c.type, ge = null;
        switch (J) {
          case Y:
          case ue:
          case ee:
            ge = ce;
            break;
          case de:
            ge = ce.render;
            break;
        }
        if (Jo === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var Oe = !1, Ve = !1;
        if (ge !== null) {
          var gt = Jo(ge);
          gt !== void 0 && (T.has(gt) ? Ve = !0 : d.has(gt) && (J === ee ? Ve = !0 : Oe = !0));
        }
        lv !== null && (lv.has(c) || C !== null && lv.has(C)) && (Ve = !0), Ve && (c._debugNeedsRemount = !0), (Ve || Oe) && Zo(c, kr, Li), P !== null && !Ve && ps(P, d, T), V !== null && ps(V, d, T);
      }
    }
    var Jh = function(c, d) {
      {
        var T = /* @__PURE__ */ new Set(), C = new Set(d.map(function(P) {
          return P.current;
        }));
        return ms(c.current, C, T), T;
      }
    };
    function ms(c, d, T) {
      {
        var C = c.child, P = c.sibling, V = c.tag, J = c.type, ce = null;
        switch (V) {
          case Y:
          case ue:
          case ee:
            ce = J;
            break;
          case de:
            ce = J.render;
            break;
        }
        var ge = !1;
        ce !== null && d.has(ce) && (ge = !0), ge ? iu(c, T) : C !== null && ms(C, d, T), P !== null && ms(P, d, T);
      }
    }
    function iu(c, d) {
      {
        var T = fb(c, d);
        if (T)
          return;
        for (var C = c; ; ) {
          switch (C.tag) {
            case se:
              d.add(C.stateNode);
              return;
            case fe:
              d.add(C.stateNode.containerInfo);
              return;
            case K:
              d.add(C.stateNode.containerInfo);
              return;
          }
          if (C.return === null)
            throw new Error("Expected to reach root first.");
          C = C.return;
        }
      }
    }
    function fb(c, d) {
      for (var T = c, C = !1; ; ) {
        if (T.tag === se)
          C = !0, d.add(T.stateNode);
        else if (T.child !== null) {
          T.child.return = T, T = T.child;
          continue;
        }
        if (T === c)
          return C;
        for (; T.sibling === null; ) {
          if (T.return === null || T.return === c)
            return C;
          T = T.return;
        }
        T.sibling.return = T.return, T = T.sibling;
      }
      return !1;
    }
    var SS;
    {
      SS = !1;
      try {
        var RM = Object.preventExtensions({});
      } catch {
        SS = !0;
      }
    }
    function Ln(c, d, T, C) {
      this.tag = c, this.key = T, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = d, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = C, this.flags = ve, this.subtreeFlags = ve, this.deletions = null, this.lanes = Zt, this.childLanes = Zt, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !SS && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var au = function(c, d, T, C) {
      return new Ln(c, d, T, C);
    };
    function _S(c) {
      var d = c.prototype;
      return !!(d && d.isReactComponent);
    }
    function Vy(c) {
      return typeof c == "function" && !_S(c) && c.defaultProps === void 0;
    }
    function pg(c) {
      if (typeof c == "function")
        return _S(c) ? ee : Y;
      if (c != null) {
        var d = c.$$typeof;
        if (d === Dt)
          return de;
        if (d === rn)
          return q;
      }
      return Z;
    }
    function Ii(c, d) {
      var T = c.alternate;
      T === null ? (T = au(c.tag, d, c.key, c.mode), T.elementType = c.elementType, T.type = c.type, T.stateNode = c.stateNode, T._debugSource = c._debugSource, T._debugOwner = c._debugOwner, T._debugHookTypes = c._debugHookTypes, T.alternate = c, c.alternate = T) : (T.pendingProps = d, T.type = c.type, T.flags = ve, T.subtreeFlags = ve, T.deletions = null, T.actualDuration = 0, T.actualStartTime = -1), T.flags = c.flags & Mt, T.childLanes = c.childLanes, T.lanes = c.lanes, T.child = c.child, T.memoizedProps = c.memoizedProps, T.memoizedState = c.memoizedState, T.updateQueue = c.updateQueue;
      var C = c.dependencies;
      switch (T.dependencies = C === null ? null : {
        lanes: C.lanes,
        firstContext: C.firstContext
      }, T.sibling = c.sibling, T.index = c.index, T.ref = c.ref, T.selfBaseDuration = c.selfBaseDuration, T.treeBaseDuration = c.treeBaseDuration, T._debugNeedsRemount = c._debugNeedsRemount, T.tag) {
        case Z:
        case Y:
        case ue:
          T.type = uv(c.type);
          break;
        case ee:
          T.type = cb(c.type);
          break;
        case de:
          T.type = Zh(c.type);
          break;
      }
      return T;
    }
    function cl(c, d) {
      c.flags &= Mt | He;
      var T = c.alternate;
      if (T === null)
        c.childLanes = Zt, c.lanes = d, c.child = null, c.subtreeFlags = ve, c.memoizedProps = null, c.memoizedState = null, c.updateQueue = null, c.dependencies = null, c.stateNode = null, c.selfBaseDuration = 0, c.treeBaseDuration = 0;
      else {
        c.childLanes = T.childLanes, c.lanes = T.lanes, c.child = T.child, c.subtreeFlags = ve, c.deletions = null, c.memoizedProps = T.memoizedProps, c.memoizedState = T.memoizedState, c.updateQueue = T.updateQueue, c.type = T.type;
        var C = T.dependencies;
        c.dependencies = C === null ? null : {
          lanes: C.lanes,
          firstContext: C.firstContext
        }, c.selfBaseDuration = T.selfBaseDuration, c.treeBaseDuration = T.treeBaseDuration;
      }
      return c;
    }
    function fl(c, d, T) {
      var C;
      return c === wm ? (C = ji, d === !0 && (C |= ba, C |= $o)) : C = wr, Xa && (C |= jr), au(K, null, null, C);
    }
    function Gy(c, d, T, C, P, V) {
      var J = Z, ce = c;
      if (typeof c == "function")
        _S(c) ? (J = ee, ce = cb(ce)) : ce = uv(ce);
      else if (typeof c == "string")
        J = se;
      else
        e:
          switch (c) {
            case qe:
              return cd(T.children, P, V, d);
            case $e:
              J = Ee, P |= ba, (P & ji) !== wr && (P |= $o);
              break;
            case Ye:
              return oA(T, P, V, d);
            case kt:
              return sA(T, P, V, d);
            case mt:
              return Kt(T, P, V, d);
            case xt:
              return Ef(T, P, V, d);
            case ut:
            case re:
            case lt:
            case Yt:
            case ze:
            default: {
              if (typeof c == "object" && c !== null)
                switch (c.$$typeof) {
                  case zt:
                    J = we;
                    break e;
                  case ot:
                    J = be;
                    break e;
                  case Dt:
                    J = de, ce = Zh(ce);
                    break e;
                  case rn:
                    J = q;
                    break e;
                  case ae:
                    J = Ce, ce = null;
                    break e;
                }
              var ge = "";
              {
                (c === void 0 || typeof c == "object" && c !== null && Object.keys(c).length === 0) && (ge += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
                var Oe = C ? pt(C) : null;
                Oe && (ge += `

Check the render method of \`` + Oe + "`.");
              }
              throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (c == null ? c : typeof c) + "." + ge));
            }
          }
      var Ve = au(J, T, d, P);
      return Ve.elementType = c, Ve.type = ce, Ve.lanes = V, Ve._debugOwner = C, Ve;
    }
    function mg(c, d, T) {
      var C = null;
      C = c._owner;
      var P = c.type, V = c.key, J = c.props, ce = Gy(P, V, J, C, d, T);
      return ce._debugSource = c._source, ce._debugOwner = c._owner, ce;
    }
    function cd(c, d, T, C) {
      var P = au(me, c, C, d);
      return P.lanes = T, P;
    }
    function oA(c, d, T, C) {
      typeof c.id != "string" && p('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof c.id);
      var P = au(ye, c, C, d | jr);
      return P.elementType = Ye, P.lanes = T, P.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, P;
    }
    function sA(c, d, T, C) {
      var P = au(X, c, C, d);
      return P.elementType = kt, P.lanes = T, P;
    }
    function Kt(c, d, T, C) {
      var P = au(Ne, c, C, d);
      return P.elementType = mt, P.lanes = T, P;
    }
    function Ef(c, d, T, C) {
      var P = au(Fe, c, C, d);
      P.elementType = xt, P.lanes = T;
      var V = {};
      return P.stateNode = V, P;
    }
    function ep(c, d, T) {
      var C = au(he, c, null, d);
      return C.lanes = T, C;
    }
    function db() {
      var c = au(se, null, null, wr);
      return c.elementType = "DELETED", c;
    }
    function ra(c) {
      var d = au(De, null, null, wr);
      return d.stateNode = c, d;
    }
    function Sn(c, d, T) {
      var C = c.children !== null ? c.children : [], P = au(fe, C, c.key, d);
      return P.lanes = T, P.stateNode = {
        containerInfo: c.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: c.implementation
      }, P;
    }
    function vg(c, d) {
      return c === null && (c = au(Z, null, null, wr)), c.tag = d.tag, c.key = d.key, c.elementType = d.elementType, c.type = d.type, c.stateNode = d.stateNode, c.return = d.return, c.child = d.child, c.sibling = d.sibling, c.index = d.index, c.ref = d.ref, c.pendingProps = d.pendingProps, c.memoizedProps = d.memoizedProps, c.updateQueue = d.updateQueue, c.memoizedState = d.memoizedState, c.dependencies = d.dependencies, c.mode = d.mode, c.flags = d.flags, c.subtreeFlags = d.subtreeFlags, c.deletions = d.deletions, c.lanes = d.lanes, c.childLanes = d.childLanes, c.alternate = d.alternate, c.actualDuration = d.actualDuration, c.actualStartTime = d.actualStartTime, c.selfBaseDuration = d.selfBaseDuration, c.treeBaseDuration = d.treeBaseDuration, c._debugSource = d._debugSource, c._debugOwner = d._debugOwner, c._debugNeedsRemount = d._debugNeedsRemount, c._debugHookTypes = d._debugHookTypes, c;
    }
    function lA(c, d, T, C, P) {
      this.tag = d, this.containerInfo = c, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = Br, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = Pr, this.eventTimes = xl(Zt), this.expirationTimes = xl(Li), this.pendingLanes = Zt, this.suspendedLanes = Zt, this.pingedLanes = Zt, this.expiredLanes = Zt, this.mutableReadLanes = Zt, this.finishedLanes = Zt, this.entangledLanes = Zt, this.entanglements = xl(Zt), this.identifierPrefix = C, this.onRecoverableError = P, pa && (this.mutableSourceEagerHydrationData = null), this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var V = this.pendingUpdatersLaneMap = [], J = 0; J < Eh; J++)
          V.push(/* @__PURE__ */ new Set());
      }
      switch (d) {
        case wm:
          this._debugRootType = T ? "hydrateRoot()" : "createRoot()";
          break;
        case Bf:
          this._debugRootType = T ? "hydrate()" : "render()";
          break;
      }
    }
    function ou(c, d, T, C, P, V, J, ce, ge, Oe) {
      var Ve = new lA(c, d, T, ce, ge), gt = fl(d, V);
      Ve.current = gt, gt.stateNode = Ve;
      {
        var Ft = {
          element: C,
          isDehydrated: T,
          cache: null,
          // not enabled yet
          transitions: null
        };
        gt.memoizedState = Ft;
      }
      return Nn(gt), Ve;
    }
    var hb = "18.0.0-fc46dba67-20220329";
    function Wy(c, d, T) {
      var C = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return Rl(C), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: rt,
        key: C == null ? null : "" + C,
        children: c,
        containerInfo: d,
        implementation: T
      };
    }
    var cv, Lx;
    cv = !1, Lx = {};
    function pb(c) {
      if (!c)
        return ui;
      var d = E(c), T = _p(d);
      if (d.tag === ee) {
        var C = d.type;
        if (Gl(C))
          return Wl(d, C, T);
      }
      return T;
    }
    function tp(c) {
      var d = E(c);
      if (d === void 0) {
        if (typeof c.render == "function")
          throw new Error("Unable to find node on an unmounted component.");
        var T = Object.keys(c).join(",");
        throw new Error("Argument appears to not be a ReactComponent. Keys: " + T);
      }
      var C = qn(d);
      return C === null ? null : C.stateNode;
    }
    function fd(c, d) {
      {
        var T = E(c);
        if (T === void 0) {
          if (typeof c.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var C = Object.keys(c).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + C);
        }
        var P = qn(T);
        if (P === null)
          return null;
        if (P.mode & ba) {
          var V = pt(T) || "Component";
          if (!Lx[V]) {
            Lx[V] = !0;
            var J = ss;
            try {
              Ci(P), T.mode & ba ? p("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", d, d, V) : p("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", d, d, V);
            } finally {
              J ? Ci(J) : Eo();
            }
          }
        }
        return P.stateNode;
      }
    }
    function AM(c, d, T, C, P, V, J, ce) {
      var ge = !1, Oe = null;
      return ou(c, d, ge, Oe, T, C, P, V, J);
    }
    function mb(c, d, T, C, P, V, J, ce, ge, Oe) {
      var Ve = !0, gt = ou(T, C, Ve, c, P, V, J, ce, ge);
      gt.context = pb(null);
      var Ft = gt.current, Gt = Pl(), an = qp(Ft), fn = mr(Gt, an);
      return fn.callback = d ?? null, ei(Ft, fn), KE(gt, an, Gt), gt;
    }
    function Ox(c, d, T, C) {
      Oa(d, c);
      var P = d.current, V = Pl(), J = qp(P);
      Fo(J);
      var ce = pb(T);
      d.context === null ? d.context = ce : d.pendingContext = ce, Cl && ss !== null && !cv && (cv = !0, p(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, pt(ss) || "Unknown"));
      var ge = mr(V, J);
      ge.payload = {
        element: c
      }, C = C === void 0 ? null : C, C !== null && (typeof C != "function" && p("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", C), ge.callback = C), ei(P, ge);
      var Oe = Zo(P, J, V);
      return Oe !== null && Pa(Oe, P, J), J;
    }
    function vb(c) {
      var d = c.current;
      if (!d.child)
        return null;
      switch (d.child.tag) {
        case se:
          return Co(d.child.stateNode);
        default:
          return d.child.stateNode;
      }
    }
    function gb(c) {
      switch (c.tag) {
        case K:
          var d = c.stateNode;
          if (Fi(d)) {
            var T = Rs(d);
            xx(d, T);
          }
          break;
        case X:
          var C = Pl();
          hS(function() {
            return Zo(c, kr, C);
          });
          var P = kr;
          DM(c, P);
          break;
      }
    }
    function uA(c, d) {
      var T = c.memoizedState;
      T !== null && T.dehydrated !== null && (T.retryLane = cn(T.retryLane, d));
    }
    function DM(c, d) {
      uA(c, d);
      var T = c.alternate;
      T && uA(T, d);
    }
    function yb(c) {
      if (c.tag === X) {
        var d = Pl(), T = Wf;
        Zo(c, T, d), DM(c, T);
      }
    }
    function Px(c) {
      if (c.tag === X) {
        var d = Pl(), T = qp(c);
        Zo(c, T, d), DM(c, T);
      }
    }
    function LM(c) {
      var d = hr(c);
      return d === null ? null : d.stateNode;
    }
    var Sb = function(c) {
      return null;
    };
    function _b(c) {
      return Sb(c);
    }
    var xb = function(c) {
      return !1;
    };
    function Eb(c) {
      return xb(c);
    }
    var xS = null, Ux = null, Nx = null, jy = null, kx = null, ES = null, $y = null, bS = null, TS = null;
    {
      var Yy = function(c, d, T) {
        var C = d[T], P = Kr(c) ? c.slice() : _({}, c);
        return T + 1 === d.length ? (Kr(P) ? P.splice(C, 1) : delete P[C], P) : (P[C] = Yy(c[C], d, T + 1), P);
      }, Fx = function(c, d) {
        return Yy(c, d, 0);
      }, wS = function(c, d, T, C) {
        var P = d[C], V = Kr(c) ? c.slice() : _({}, c);
        if (C + 1 === d.length) {
          var J = T[C];
          V[J] = V[P], Kr(V) ? V.splice(P, 1) : delete V[P];
        } else
          V[P] = wS(
            // $FlowFixMe number or string is fine here
            c[P],
            d,
            T,
            C + 1
          );
        return V;
      }, zx = function(c, d, T) {
        if (d.length !== T.length) {
          h("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var C = 0; C < T.length - 1; C++)
            if (d[C] !== T[C]) {
              h("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return wS(c, d, T, 0);
      }, MS = function(c, d, T, C) {
        if (T >= d.length)
          return C;
        var P = d[T], V = Kr(c) ? c.slice() : _({}, c);
        return V[P] = MS(c[P], d, T + 1, C), V;
      }, bb = function(c, d, T) {
        return MS(c, d, 0, T);
      }, CS = function(c, d) {
        for (var T = c.memoizedState; T !== null && d > 0; )
          T = T.next, d--;
        return T;
      };
      xS = function(c, d, T, C) {
        var P = CS(c, d);
        if (P !== null) {
          var V = bb(P.memoizedState, T, C);
          P.memoizedState = V, P.baseState = V, c.memoizedProps = _({}, c.memoizedProps), Zo(c, kr, Li);
        }
      }, Ux = function(c, d, T) {
        var C = CS(c, d);
        if (C !== null) {
          var P = Fx(C.memoizedState, T);
          C.memoizedState = P, C.baseState = P, c.memoizedProps = _({}, c.memoizedProps), Zo(c, kr, Li);
        }
      }, Nx = function(c, d, T, C) {
        var P = CS(c, d);
        if (P !== null) {
          var V = zx(P.memoizedState, T, C);
          P.memoizedState = V, P.baseState = V, c.memoizedProps = _({}, c.memoizedProps), Zo(c, kr, Li);
        }
      }, jy = function(c, d, T) {
        c.pendingProps = bb(c.memoizedProps, d, T), c.alternate && (c.alternate.pendingProps = c.pendingProps), Zo(c, kr, Li);
      }, kx = function(c, d) {
        c.pendingProps = Fx(c.memoizedProps, d), c.alternate && (c.alternate.pendingProps = c.pendingProps), Zo(c, kr, Li);
      }, ES = function(c, d, T) {
        c.pendingProps = zx(c.memoizedProps, d, T), c.alternate && (c.alternate.pendingProps = c.pendingProps), Zo(c, kr, Li);
      }, $y = function(c) {
        Zo(c, kr, Li);
      }, bS = function(c) {
        Sb = c;
      }, TS = function(c) {
        xb = c;
      };
    }
    function Ix(c) {
      var d = qn(c);
      return d === null ? null : d.stateNode;
    }
    function cA(c) {
      return null;
    }
    function Bx() {
      return ss;
    }
    function Tb(c) {
      var d = c.findFiberByHostInstance, T = o.ReactCurrentDispatcher;
      return Ec({
        bundleType: c.bundleType,
        version: c.version,
        rendererPackageName: c.rendererPackageName,
        rendererConfig: c.rendererConfig,
        overrideHookState: xS,
        overrideHookStateDeletePath: Ux,
        overrideHookStateRenamePath: Nx,
        overrideProps: jy,
        overridePropsDeletePath: kx,
        overridePropsRenamePath: ES,
        setErrorHandler: bS,
        setSuspenseHandler: TS,
        scheduleUpdate: $y,
        currentDispatcherRef: T,
        findHostInstanceByFiber: Ix,
        findFiberByHostInstance: d || cA,
        // React Refresh
        findHostInstancesForRefresh: Jh,
        scheduleRefresh: Dx,
        scheduleRoot: Uc,
        setRefreshHandler: Hy,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: Bx,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: hb
      });
    }
    return t.attemptContinuousHydration = yb, t.attemptHydrationAtCurrentPriority = Px, t.attemptSynchronousHydration = gb, t.batchedUpdates = mM, t.createComponentSelector = Jl, t.createContainer = AM, t.createHasPseudoClassSelector = ud, t.createHydrationContainer = mb, t.createPortal = Wy, t.createRoleSelector = oh, t.createTestNameSelector = ev, t.createTextSelector = rg, t.deferredUpdates = nA, t.discreteUpdates = Ex, t.findAllNodes = aS, t.findBoundingRects = GE, t.findHostInstance = tp, t.findHostInstanceWithNoPortals = LM, t.findHostInstanceWithWarning = fd, t.flushControlled = vM, t.flushPassiveEffects = Qh, t.flushSync = hS, t.focusWithin = uM, t.getCurrentUpdatePriority = Ls, t.getFindAllNodesFailureDescription = lM, t.getPublicRootInstance = vb, t.injectIntoDevTools = Tb, t.isAlreadyRendering = QE, t.observeVisibleRects = jE, t.registerMutableSourceForHydration = Gv, t.runWithPriority = Ta, t.shouldError = _b, t.shouldSuspend = Eb, t.updateContainer = Ox, t;
  })), JD.exports;
}
process.env.NODE_ENV === "production" ? EO.exports = DX() : EO.exports = LX();
var OX = EO.exports;
const PX = /* @__PURE__ */ j1(OX), UX = (n) => typeof n == "object" && typeof n.then == "function", BC = [];
function NX(n, e, t = (r, i) => r === i) {
  if (n === e)
    return !0;
  if (!n || !e)
    return !1;
  const r = n.length;
  if (e.length !== r)
    return !1;
  for (let i = 0; i < r; i++)
    if (!t(n[i], e[i]))
      return !1;
  return !0;
}
function kX(n, e = null, t = !1, r = {}) {
  e === null && (e = [n]);
  for (const o of BC)
    if (NX(e, o.keys, o.equal)) {
      if (t)
        return;
      if (Object.prototype.hasOwnProperty.call(o, "error"))
        throw o.error;
      if (Object.prototype.hasOwnProperty.call(o, "response"))
        return r.lifespan && r.lifespan > 0 && (o.timeout && clearTimeout(o.timeout), o.timeout = setTimeout(o.remove, r.lifespan)), o.response;
      if (!t)
        throw o.promise;
    }
  const i = {
    keys: e,
    equal: r.equal,
    remove: () => {
      const o = BC.indexOf(i);
      o !== -1 && BC.splice(o, 1);
    },
    promise: (
      // Execute the promise
      (UX(n) ? n : n(...e)).then((o) => {
        i.response = o, r.lifespan && r.lifespan > 0 && (i.timeout = setTimeout(i.remove, r.lifespan));
      }).catch((o) => i.error = o)
    )
  };
  if (BC.push(i), !t)
    throw i.promise;
}
const FX = (n, e, t) => kX(n, e, !1, t), $P = {}, zX = (n) => void Object.assign($P, n);
function IX(n, e) {
  function t(y, {
    args: _ = [],
    attach: E,
    ...w
  }, R) {
    let U = `${y[0].toUpperCase()}${y.slice(1)}`, L;
    if (y === "primitive") {
      if (w.object === void 0)
        throw new Error("R3F: Primitives without 'object' are invalid!");
      const A = w.object;
      L = w1(A, {
        type: y,
        root: R,
        attach: E,
        primitive: !0
      });
    } else {
      const A = $P[U];
      if (!A)
        throw new Error(`R3F: ${U} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);
      if (!Array.isArray(_))
        throw new Error("R3F: The args prop must be an array!");
      L = w1(new A(..._), {
        type: y,
        root: R,
        attach: E,
        // Save args in case we need to reconstruct later for HMR
        memoizedProps: {
          args: _
        }
      });
    }
    return L.__r3f.attach === void 0 && (L instanceof Ei ? L.__r3f.attach = "geometry" : L instanceof hc && (L.__r3f.attach = "material")), U !== "inject" && nL(L, w), L;
  }
  function r(y, _) {
    let E = !1;
    if (_) {
      var w, R;
      (w = _.__r3f) != null && w.attach ? tL(y, _, _.__r3f.attach) : _.isObject3D && y.isObject3D && (y.add(_), E = !0), E || (R = y.__r3f) == null || R.objects.push(_), _.__r3f || w1(_, {}), _.__r3f.parent = y, wO(_), M1(_);
    }
  }
  function i(y, _, E) {
    let w = !1;
    if (_) {
      var R, U;
      if ((R = _.__r3f) != null && R.attach)
        tL(y, _, _.__r3f.attach);
      else if (_.isObject3D && y.isObject3D) {
        _.parent = y, _.dispatchEvent({
          type: "added"
        });
        const L = y.children.filter((k) => k !== _), A = L.indexOf(E);
        y.children = [...L.slice(0, A), _, ...L.slice(A)], w = !0;
      }
      w || (U = y.__r3f) == null || U.objects.push(_), _.__r3f || w1(_, {}), _.__r3f.parent = y, wO(_), M1(_);
    }
  }
  function o(y, _, E = !1) {
    y && [...y].forEach((w) => l(_, w, E));
  }
  function l(y, _, E) {
    if (_) {
      var w, R, U;
      if (_.__r3f && (_.__r3f.parent = null), (w = y.__r3f) != null && w.objects && (y.__r3f.objects = y.__r3f.objects.filter((H) => H !== _)), (R = _.__r3f) != null && R.attach)
        Qk(y, _, _.__r3f.attach);
      else if (_.isObject3D && y.isObject3D) {
        var L;
        y.remove(_), (L = _.__r3f) != null && L.root && YX(_.__r3f.root, _);
      }
      const k = (U = _.__r3f) == null ? void 0 : U.primitive, F = E === void 0 ? _.dispose !== null && !k : E;
      if (!k) {
        var A;
        o((A = _.__r3f) == null ? void 0 : A.objects, _, F), o(_.children, _, F);
      }
      delete _.__r3f, F && _.dispose && _.type !== "Scene" && yR.unstable_scheduleCallback(yR.unstable_IdlePriority, () => {
        try {
          _.dispose();
        } catch {
        }
      }), M1(y);
    }
  }
  function u(y, _, E, w) {
    var R;
    const U = (R = y.__r3f) == null ? void 0 : R.parent;
    if (!U)
      return;
    const L = t(_, E, y.__r3f.root);
    if (y.children) {
      for (const A of y.children)
        A.__r3f && r(L, A);
      y.children = y.children.filter((A) => !A.__r3f);
    }
    y.__r3f.objects.forEach((A) => r(L, A)), y.__r3f.objects = [], y.__r3f.autoRemovedBeforeAppend || l(U, y), L.parent && (L.__r3f.autoRemovedBeforeAppend = !0), r(U, L), L.raycast && L.__r3f.eventCount && L.__r3f.root.getState().internal.interaction.push(L), [w, w.alternate].forEach((A) => {
      A !== null && (A.stateNode = L, A.ref && (typeof A.ref == "function" ? A.ref(L) : A.ref.current = L));
    });
  }
  const h = () => console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");
  return {
    reconciler: PX({
      createInstance: t,
      removeChild: l,
      appendChild: r,
      appendInitialChild: r,
      insertBefore: i,
      supportsMutation: !0,
      isPrimaryRenderer: !1,
      supportsPersistence: !1,
      supportsHydration: !1,
      noTimeout: -1,
      appendChildToContainer: (y, _) => {
        if (!_)
          return;
        const E = y.getState().scene;
        E.__r3f && (E.__r3f.root = y, r(E, _));
      },
      removeChildFromContainer: (y, _) => {
        _ && l(y.getState().scene, _);
      },
      insertInContainerBefore: (y, _, E) => {
        if (!_ || !E)
          return;
        const w = y.getState().scene;
        w.__r3f && i(w, _, E);
      },
      getRootHostContext: () => null,
      getChildHostContext: (y) => y,
      finalizeInitialChildren(y) {
        var _;
        return !!((_ = y == null ? void 0 : y.__r3f) != null ? _ : {}).handlers;
      },
      prepareUpdate(y, _, E, w) {
        var R;
        if (((R = y == null ? void 0 : y.__r3f) != null ? R : {}).primitive && w.object && w.object !== y)
          return [!0];
        {
          const {
            args: L = [],
            children: A,
            ...k
          } = w, {
            args: F = [],
            children: H,
            ...B
          } = E;
          if (!Array.isArray(L))
            throw new Error("R3F: the args prop must be an array!");
          if (L.some((Y, ee) => Y !== F[ee]))
            return [!0];
          const j = _B(y, k, B, !0);
          return j.changes.length ? [!1, j] : null;
        }
      },
      commitUpdate(y, [_, E], w, R, U, L) {
        _ ? u(y, w, U, L) : nL(y, E);
      },
      commitMount(y, _, E, w) {
        var R;
        const U = (R = y.__r3f) != null ? R : {};
        y.raycast && U.handlers && U.eventCount && y.__r3f.root.getState().internal.interaction.push(y);
      },
      getPublicInstance: (y) => y,
      prepareForCommit: () => null,
      preparePortalMount: (y) => w1(y.getState().scene),
      resetAfterCommit: () => {
      },
      shouldSetTextContent: () => !1,
      clearContainer: () => !1,
      hideInstance(y) {
        var _;
        const {
          attach: E,
          parent: w
        } = (_ = y.__r3f) != null ? _ : {};
        E && w && Qk(w, y, E), y.isObject3D && (y.visible = !1), M1(y);
      },
      unhideInstance(y, _) {
        var E;
        const {
          attach: w,
          parent: R
        } = (E = y.__r3f) != null ? E : {};
        w && R && tL(R, y, w), (y.isObject3D && _.visible == null || _.visible) && (y.visible = !0), M1(y);
      },
      createTextInstance: h,
      hideTextInstance: h,
      unhideTextInstance: h,
      // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r916356874
      // @ts-ignore
      getCurrentEventPriority: () => e ? e() : L1.DefaultEventPriority,
      beforeActiveInstanceBlur: () => {
      },
      afterActiveInstanceBlur: () => {
      },
      detachDeletedInstance: () => {
      },
      now: typeof performance < "u" && ts.fun(performance.now) ? performance.now : ts.fun(Date.now) ? Date.now : () => 0,
      // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r920883503
      scheduleTimeout: ts.fun(setTimeout) ? setTimeout : void 0,
      cancelTimeout: ts.fun(clearTimeout) ? clearTimeout : void 0
    }),
    applyProps: nL
  };
}
var Yk, Xk;
const eL = (n) => "colorSpace" in n || "outputColorSpace" in n, pB = () => {
  var n;
  return (n = $P.ColorManagement) != null ? n : null;
}, mB = (n) => n && n.isOrthographicCamera, BX = (n) => n && n.hasOwnProperty("current"), iw = typeof window < "u" && ((Yk = window.document) != null && Yk.createElement || ((Xk = window.navigator) == null ? void 0 : Xk.product) === "ReactNative") ? le.useLayoutEffect : le.useEffect;
function vB(n) {
  const e = le.useRef(n);
  return iw(() => void (e.current = n), [n]), e;
}
function HX({
  set: n
}) {
  return iw(() => (n(new Promise(() => null)), () => n(!1)), [n]), null;
}
class gB extends le.Component {
  constructor(...e) {
    super(...e), this.state = {
      error: !1
    };
  }
  componentDidCatch(e) {
    this.props.set(e);
  }
  render() {
    return this.state.error ? null : this.props.children;
  }
}
gB.getDerivedStateFromError = () => ({
  error: !0
});
const yB = "__default", qk = /* @__PURE__ */ new Map(), VX = (n) => n && !!n.memoized && !!n.changes;
function SB(n) {
  var e;
  const t = typeof window < "u" ? (e = window.devicePixelRatio) != null ? e : 2 : 1;
  return Array.isArray(n) ? Math.min(Math.max(n[0], t), n[1]) : n;
}
const iT = (n) => {
  var e;
  return (e = n.__r3f) == null ? void 0 : e.root.getState();
}, ts = {
  obj: (n) => n === Object(n) && !ts.arr(n) && typeof n != "function",
  fun: (n) => typeof n == "function",
  str: (n) => typeof n == "string",
  num: (n) => typeof n == "number",
  boo: (n) => typeof n == "boolean",
  und: (n) => n === void 0,
  arr: (n) => Array.isArray(n),
  equ(n, e, {
    arrays: t = "shallow",
    objects: r = "reference",
    strict: i = !0
  } = {}) {
    if (typeof n != typeof e || !!n != !!e)
      return !1;
    if (ts.str(n) || ts.num(n))
      return n === e;
    const o = ts.obj(n);
    if (o && r === "reference")
      return n === e;
    const l = ts.arr(n);
    if (l && t === "reference")
      return n === e;
    if ((l || o) && n === e)
      return !0;
    let u;
    for (u in n)
      if (!(u in e))
        return !1;
    if (o && t === "shallow" && r === "shallow") {
      for (u in i ? e : n)
        if (!ts.equ(n[u], e[u], {
          strict: i,
          objects: "reference"
        }))
          return !1;
    } else
      for (u in i ? e : n)
        if (n[u] !== e[u])
          return !1;
    if (ts.und(u)) {
      if (l && n.length === 0 && e.length === 0 || o && Object.keys(n).length === 0 && Object.keys(e).length === 0)
        return !0;
      if (n !== e)
        return !1;
    }
    return !0;
  }
};
function GX(n) {
  n.dispose && n.type !== "Scene" && n.dispose();
  for (const e in n)
    e.dispose == null || e.dispose(), delete n[e];
}
function w1(n, e) {
  const t = n;
  return t.__r3f = {
    type: "",
    root: null,
    previousAttach: null,
    memoizedProps: {},
    eventCount: 0,
    handlers: {},
    objects: [],
    parent: null,
    ...e
  }, n;
}
function TO(n, e) {
  let t = n;
  if (e.includes("-")) {
    const r = e.split("-"), i = r.pop();
    return t = r.reduce((o, l) => o[l], n), {
      target: t,
      key: i
    };
  } else
    return {
      target: t,
      key: e
    };
}
const Kk = /-\d+$/;
function tL(n, e, t) {
  if (ts.str(t)) {
    if (Kk.test(t)) {
      const o = t.replace(Kk, ""), {
        target: l,
        key: u
      } = TO(n, o);
      Array.isArray(l[u]) || (l[u] = []);
    }
    const {
      target: r,
      key: i
    } = TO(n, t);
    e.__r3f.previousAttach = r[i], r[i] = e;
  } else
    e.__r3f.previousAttach = t(n, e);
}
function Qk(n, e, t) {
  var r, i;
  if (ts.str(t)) {
    const {
      target: o,
      key: l
    } = TO(n, t), u = e.__r3f.previousAttach;
    u === void 0 ? delete o[l] : o[l] = u;
  } else
    (r = e.__r3f) == null || r.previousAttach == null || r.previousAttach(n, e);
  (i = e.__r3f) == null || delete i.previousAttach;
}
function _B(n, {
  children: e,
  key: t,
  ref: r,
  ...i
}, {
  children: o,
  key: l,
  ref: u,
  ...h
} = {}, p = !1) {
  var y;
  const _ = (y = n == null ? void 0 : n.__r3f) != null ? y : {}, E = Object.entries(i), w = [];
  if (p) {
    const U = Object.keys(h);
    for (let L = 0; L < U.length; L++)
      i.hasOwnProperty(U[L]) || E.unshift([U[L], yB + "remove"]);
  }
  E.forEach(([U, L]) => {
    var A;
    if ((A = n.__r3f) != null && A.primitive && U === "object" || ts.equ(L, h[U]))
      return;
    if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(U))
      return w.push([U, L, !0, []]);
    let k = [];
    U.includes("-") && (k = U.split("-")), w.push([U, L, !1, k]);
    for (const F in i) {
      const H = i[F];
      F.startsWith(`${U}-`) && w.push([F, H, !1, F.split("-")]);
    }
  });
  const R = {
    ...i
  };
  return _.memoizedProps && _.memoizedProps.args && (R.args = _.memoizedProps.args), _.memoizedProps && _.memoizedProps.attach && (R.attach = _.memoizedProps.attach), {
    memoized: R,
    changes: w
  };
}
const WX = typeof process < "u" && process.env.NODE_ENV !== "production";
function nL(n, e) {
  var t, r, i;
  const o = (t = n.__r3f) != null ? t : {}, l = o.root, u = (r = l == null || l.getState == null ? void 0 : l.getState()) != null ? r : {}, {
    memoized: h,
    changes: p
  } = VX(e) ? e : _B(n, e), y = o.eventCount;
  n.__r3f && (n.__r3f.memoizedProps = h);
  for (let E = 0; E < p.length; E++) {
    let [w, R, U, L] = p[E];
    if (eL(n)) {
      const H = "srgb", B = "srgb-linear";
      w === "encoding" ? (w = "colorSpace", R = R === 3001 ? H : B) : w === "outputEncoding" && (w = "outputColorSpace", R = R === 3001 ? H : B);
    }
    let A = n, k = A[w];
    if (L.length && (k = L.reduce((F, H) => F[H], n), !(k && k.set))) {
      const [F, ...H] = L.reverse();
      A = H.reverse().reduce((B, j) => B[j], n), w = F;
    }
    if (R === yB + "remove")
      if (A.constructor) {
        let F = qk.get(A.constructor);
        F || (F = new A.constructor(), qk.set(A.constructor, F)), R = F[w];
      } else
        R = 0;
    if (U)
      R ? o.handlers[w] = R : delete o.handlers[w], o.eventCount = Object.keys(o.handlers).length;
    else if (k && k.set && (k.copy || k instanceof i_)) {
      if (Array.isArray(R))
        k.fromArray ? k.fromArray(R) : k.set(...R);
      else if (k.copy && R && R.constructor && // Some environments may break strict identity checks by duplicating versions of three.js.
      // Loosen to unminified names, ignoring descendents.
      // https://github.com/pmndrs/react-three-fiber/issues/2856
      // TODO: fix upstream and remove in v9
      (WX ? k.constructor.name === R.constructor.name : k.constructor === R.constructor))
        k.copy(R);
      else if (R !== void 0) {
        const F = k instanceof Pn;
        !F && k.setScalar ? k.setScalar(R) : k instanceof i_ && R instanceof i_ ? k.mask = R.mask : k.set(R), !pB() && !u.linear && F && k.convertSRGBToLinear();
      }
    } else if (A[w] = R, A[w] instanceof Es && // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129
    A[w].format === Sd && A[w].type === Sv) {
      const F = A[w];
      eL(F) && eL(u.gl) ? F.colorSpace = u.gl.outputColorSpace : F.encoding = u.gl.outputEncoding;
    }
    M1(n);
  }
  if (o.parent && u.internal && n.raycast && y !== o.eventCount) {
    const E = u.internal.interaction.indexOf(n);
    E > -1 && u.internal.interaction.splice(E, 1), o.eventCount && u.internal.interaction.push(n);
  }
  return !(p.length === 1 && p[0][0] === "onUpdate") && p.length && (i = n.__r3f) != null && i.parent && wO(n), n;
}
function M1(n) {
  var e, t;
  const r = (e = n.__r3f) == null || (t = e.root) == null || t.getState == null ? void 0 : t.getState();
  r && r.internal.frames === 0 && r.invalidate();
}
function wO(n) {
  n.onUpdate == null || n.onUpdate(n);
}
function jX(n, e) {
  n.manual || (mB(n) ? (n.left = e.width / -2, n.right = e.width / 2, n.top = e.height / 2, n.bottom = e.height / -2) : n.aspect = e.width / e.height, n.updateProjectionMatrix(), n.updateMatrixWorld());
}
function HC(n) {
  return (n.eventObject || n.object).uuid + "/" + n.index + n.instanceId;
}
function $X() {
  var n;
  const e = typeof self < "u" && self || typeof window < "u" && window;
  if (!e)
    return L1.DefaultEventPriority;
  switch ((n = e.event) == null ? void 0 : n.type) {
    case "click":
    case "contextmenu":
    case "dblclick":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
      return L1.DiscreteEventPriority;
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "pointerenter":
    case "pointerleave":
    case "wheel":
      return L1.ContinuousEventPriority;
    default:
      return L1.DefaultEventPriority;
  }
}
function xB(n, e, t, r) {
  const i = t.get(e);
  i && (t.delete(e), t.size === 0 && (n.delete(r), i.target.releasePointerCapture(r)));
}
function YX(n, e) {
  const {
    internal: t
  } = n.getState();
  t.interaction = t.interaction.filter((r) => r !== e), t.initialHits = t.initialHits.filter((r) => r !== e), t.hovered.forEach((r, i) => {
    (r.eventObject === e || r.object === e) && t.hovered.delete(i);
  }), t.capturedMap.forEach((r, i) => {
    xB(t.capturedMap, e, r, i);
  });
}
function XX(n) {
  function e(h) {
    const {
      internal: p
    } = n.getState(), y = h.offsetX - p.initialClick[0], _ = h.offsetY - p.initialClick[1];
    return Math.round(Math.sqrt(y * y + _ * _));
  }
  function t(h) {
    return h.filter((p) => ["Move", "Over", "Enter", "Out", "Leave"].some((y) => {
      var _;
      return (_ = p.__r3f) == null ? void 0 : _.handlers["onPointer" + y];
    }));
  }
  function r(h, p) {
    const y = n.getState(), _ = /* @__PURE__ */ new Set(), E = [], w = p ? p(y.internal.interaction) : y.internal.interaction;
    for (let A = 0; A < w.length; A++) {
      const k = iT(w[A]);
      k && (k.raycaster.camera = void 0);
    }
    y.previousRoot || y.events.compute == null || y.events.compute(h, y);
    function R(A) {
      const k = iT(A);
      if (!k || !k.events.enabled || k.raycaster.camera === null)
        return [];
      if (k.raycaster.camera === void 0) {
        var F;
        k.events.compute == null || k.events.compute(h, k, (F = k.previousRoot) == null ? void 0 : F.getState()), k.raycaster.camera === void 0 && (k.raycaster.camera = null);
      }
      return k.raycaster.camera ? k.raycaster.intersectObject(A, !0) : [];
    }
    let U = w.flatMap(R).sort((A, k) => {
      const F = iT(A.object), H = iT(k.object);
      return !F || !H ? A.distance - k.distance : H.events.priority - F.events.priority || A.distance - k.distance;
    }).filter((A) => {
      const k = HC(A);
      return _.has(k) ? !1 : (_.add(k), !0);
    });
    y.events.filter && (U = y.events.filter(U, y));
    for (const A of U) {
      let k = A.object;
      for (; k; ) {
        var L;
        (L = k.__r3f) != null && L.eventCount && E.push({
          ...A,
          eventObject: k
        }), k = k.parent;
      }
    }
    if ("pointerId" in h && y.internal.capturedMap.has(h.pointerId))
      for (let A of y.internal.capturedMap.get(h.pointerId).values())
        _.has(HC(A.intersection)) || E.push(A.intersection);
    return E;
  }
  function i(h, p, y, _) {
    const E = n.getState();
    if (h.length) {
      const w = {
        stopped: !1
      };
      for (const R of h) {
        const U = iT(R.object) || E, {
          raycaster: L,
          pointer: A,
          camera: k,
          internal: F
        } = U, H = new Re(A.x, A.y, 0).unproject(k), B = (K) => {
          var fe, se;
          return (fe = (se = F.capturedMap.get(K)) == null ? void 0 : se.has(R.eventObject)) != null ? fe : !1;
        }, j = (K) => {
          const fe = {
            intersection: R,
            target: p.target
          };
          F.capturedMap.has(K) ? F.capturedMap.get(K).set(R.eventObject, fe) : F.capturedMap.set(K, /* @__PURE__ */ new Map([[R.eventObject, fe]])), p.target.setPointerCapture(K);
        }, Y = (K) => {
          const fe = F.capturedMap.get(K);
          fe && xB(F.capturedMap, R.eventObject, fe, K);
        };
        let ee = {};
        for (let K in p) {
          let fe = p[K];
          typeof fe != "function" && (ee[K] = fe);
        }
        let Z = {
          ...R,
          ...ee,
          pointer: A,
          intersections: h,
          stopped: w.stopped,
          delta: y,
          unprojectedPoint: H,
          ray: L.ray,
          camera: k,
          // Hijack stopPropagation, which just sets a flag
          stopPropagation() {
            const K = "pointerId" in p && F.capturedMap.get(p.pointerId);
            if (
              // ...if this pointer hasn't been captured
              (!K || // ... or if the hit object is capturing the pointer
              K.has(R.eventObject)) && (Z.stopped = w.stopped = !0, F.hovered.size && Array.from(F.hovered.values()).find((fe) => fe.eventObject === R.eventObject))
            ) {
              const fe = h.slice(0, h.indexOf(R));
              o([...fe, R]);
            }
          },
          // there should be a distinction between target and currentTarget
          target: {
            hasPointerCapture: B,
            setPointerCapture: j,
            releasePointerCapture: Y
          },
          currentTarget: {
            hasPointerCapture: B,
            setPointerCapture: j,
            releasePointerCapture: Y
          },
          nativeEvent: p
        };
        if (_(Z), w.stopped === !0)
          break;
      }
    }
    return h;
  }
  function o(h) {
    const {
      internal: p
    } = n.getState();
    for (const y of p.hovered.values())
      if (!h.length || !h.find((_) => _.object === y.object && _.index === y.index && _.instanceId === y.instanceId)) {
        const E = y.eventObject.__r3f, w = E == null ? void 0 : E.handlers;
        if (p.hovered.delete(HC(y)), E != null && E.eventCount) {
          const R = {
            ...y,
            intersections: h
          };
          w.onPointerOut == null || w.onPointerOut(R), w.onPointerLeave == null || w.onPointerLeave(R);
        }
      }
  }
  function l(h, p) {
    for (let y = 0; y < p.length; y++) {
      const _ = p[y].__r3f;
      _ == null || _.handlers.onPointerMissed == null || _.handlers.onPointerMissed(h);
    }
  }
  function u(h) {
    switch (h) {
      case "onPointerLeave":
      case "onPointerCancel":
        return () => o([]);
      case "onLostPointerCapture":
        return (p) => {
          const {
            internal: y
          } = n.getState();
          "pointerId" in p && y.capturedMap.has(p.pointerId) && requestAnimationFrame(() => {
            y.capturedMap.has(p.pointerId) && (y.capturedMap.delete(p.pointerId), o([]));
          });
        };
    }
    return function(y) {
      const {
        onPointerMissed: _,
        internal: E
      } = n.getState();
      E.lastEvent.current = y;
      const w = h === "onPointerMove", R = h === "onClick" || h === "onContextMenu" || h === "onDoubleClick", L = r(y, w ? t : void 0), A = R ? e(y) : 0;
      h === "onPointerDown" && (E.initialClick = [y.offsetX, y.offsetY], E.initialHits = L.map((F) => F.eventObject)), R && !L.length && A <= 2 && (l(y, E.interaction), _ && _(y)), w && o(L);
      function k(F) {
        const H = F.eventObject, B = H.__r3f, j = B == null ? void 0 : B.handlers;
        if (B != null && B.eventCount)
          if (w) {
            if (j.onPointerOver || j.onPointerEnter || j.onPointerOut || j.onPointerLeave) {
              const Y = HC(F), ee = E.hovered.get(Y);
              ee ? ee.stopped && F.stopPropagation() : (E.hovered.set(Y, F), j.onPointerOver == null || j.onPointerOver(F), j.onPointerEnter == null || j.onPointerEnter(F));
            }
            j.onPointerMove == null || j.onPointerMove(F);
          } else {
            const Y = j[h];
            Y ? (!R || E.initialHits.includes(H)) && (l(y, E.interaction.filter((ee) => !E.initialHits.includes(ee))), Y(F)) : R && E.initialHits.includes(H) && l(y, E.interaction.filter((ee) => !E.initialHits.includes(ee)));
          }
      }
      i(L, y, A, k);
    };
  }
  return {
    handlePointer: u
  };
}
const EB = (n) => !!(n != null && n.render), bB = /* @__PURE__ */ le.createContext(null), qX = (n, e) => {
  const t = hB((u, h) => {
    const p = new Re(), y = new Re(), _ = new Re();
    function E(A = h().camera, k = y, F = h().size) {
      const {
        width: H,
        height: B,
        top: j,
        left: Y
      } = F, ee = H / B;
      k instanceof Re ? _.copy(k) : _.set(...k);
      const Z = A.getWorldPosition(p).distanceTo(_);
      if (mB(A))
        return {
          width: H / A.zoom,
          height: B / A.zoom,
          top: j,
          left: Y,
          factor: 1,
          distance: Z,
          aspect: ee
        };
      {
        const K = A.fov * Math.PI / 180, fe = 2 * Math.tan(K / 2) * Z, se = fe * (H / B);
        return {
          width: se,
          height: fe,
          top: j,
          left: Y,
          factor: H / se,
          distance: Z,
          aspect: ee
        };
      }
    }
    let w;
    const R = (A) => u((k) => ({
      performance: {
        ...k.performance,
        current: A
      }
    })), U = new $t();
    return {
      set: u,
      get: h,
      // Mock objects that have to be configured
      gl: null,
      camera: null,
      raycaster: null,
      events: {
        priority: 1,
        enabled: !0,
        connected: !1
      },
      xr: null,
      scene: null,
      invalidate: (A = 1) => n(h(), A),
      advance: (A, k) => e(A, k, h()),
      legacy: !1,
      linear: !1,
      flat: !1,
      controls: null,
      clock: new VP(),
      pointer: U,
      mouse: U,
      frameloop: "always",
      onPointerMissed: void 0,
      performance: {
        current: 1,
        min: 0.5,
        max: 1,
        debounce: 200,
        regress: () => {
          const A = h();
          w && clearTimeout(w), A.performance.current !== A.performance.min && R(A.performance.min), w = setTimeout(() => R(h().performance.max), A.performance.debounce);
        }
      },
      size: {
        width: 0,
        height: 0,
        top: 0,
        left: 0,
        updateStyle: !1
      },
      viewport: {
        initialDpr: 0,
        dpr: 0,
        width: 0,
        height: 0,
        top: 0,
        left: 0,
        aspect: 0,
        distance: 0,
        factor: 0,
        getCurrentViewport: E
      },
      setEvents: (A) => u((k) => ({
        ...k,
        events: {
          ...k.events,
          ...A
        }
      })),
      setSize: (A, k, F, H, B) => {
        const j = h().camera, Y = {
          width: A,
          height: k,
          top: H || 0,
          left: B || 0,
          updateStyle: F
        };
        u((ee) => ({
          size: Y,
          viewport: {
            ...ee.viewport,
            ...E(j, y, Y)
          }
        }));
      },
      setDpr: (A) => u((k) => {
        const F = SB(A);
        return {
          viewport: {
            ...k.viewport,
            dpr: F,
            initialDpr: k.viewport.initialDpr || F
          }
        };
      }),
      setFrameloop: (A = "always") => {
        const k = h().clock;
        k.stop(), k.elapsedTime = 0, A !== "never" && (k.start(), k.elapsedTime = 0), u(() => ({
          frameloop: A
        }));
      },
      previousRoot: void 0,
      internal: {
        active: !1,
        priority: 0,
        frames: 0,
        lastEvent: /* @__PURE__ */ le.createRef(),
        interaction: [],
        hovered: /* @__PURE__ */ new Map(),
        subscribers: [],
        initialClick: [0, 0],
        initialHits: [],
        capturedMap: /* @__PURE__ */ new Map(),
        subscribe: (A, k, F) => {
          const H = h().internal;
          return H.priority = H.priority + (k > 0 ? 1 : 0), H.subscribers.push({
            ref: A,
            priority: k,
            store: F
          }), H.subscribers = H.subscribers.sort((B, j) => B.priority - j.priority), () => {
            const B = h().internal;
            B != null && B.subscribers && (B.priority = B.priority - (k > 0 ? 1 : 0), B.subscribers = B.subscribers.filter((j) => j.ref !== A));
          };
        }
      }
    };
  }), r = t.getState();
  let i = r.size, o = r.viewport.dpr, l = r.camera;
  return t.subscribe(() => {
    const {
      camera: u,
      size: h,
      viewport: p,
      gl: y,
      set: _
    } = t.getState();
    if (h.width !== i.width || h.height !== i.height || p.dpr !== o) {
      var E;
      i = h, o = p.dpr, jX(u, h), y.setPixelRatio(p.dpr);
      const w = (E = h.updateStyle) != null ? E : typeof HTMLCanvasElement < "u" && y.domElement instanceof HTMLCanvasElement;
      y.setSize(h.width, h.height, w);
    }
    u !== l && (l = u, _((w) => ({
      viewport: {
        ...w.viewport,
        ...w.viewport.getCurrentViewport(u)
      }
    })));
  }), t.subscribe((u) => n(u)), t;
};
let VC, KX = /* @__PURE__ */ new Set(), QX = /* @__PURE__ */ new Set(), ZX = /* @__PURE__ */ new Set();
function rL(n, e) {
  if (n.size)
    for (const {
      callback: t
    } of n.values())
      t(e);
}
function aT(n, e) {
  switch (n) {
    case "before":
      return rL(KX, e);
    case "after":
      return rL(QX, e);
    case "tail":
      return rL(ZX, e);
  }
}
let iL, aL;
function oL(n, e, t) {
  let r = e.clock.getDelta();
  for (e.frameloop === "never" && typeof n == "number" && (r = n - e.clock.elapsedTime, e.clock.oldTime = e.clock.elapsedTime, e.clock.elapsedTime = n), iL = e.internal.subscribers, VC = 0; VC < iL.length; VC++)
    aL = iL[VC], aL.ref.current(aL.store.getState(), r, t);
  return !e.internal.priority && e.gl.render && e.gl.render(e.scene, e.camera), e.internal.frames = Math.max(0, e.internal.frames - 1), e.frameloop === "always" ? 1 : e.internal.frames;
}
function JX(n) {
  let e = !1, t, r, i;
  function o(h) {
    r = requestAnimationFrame(o), e = !0, t = 0, aT("before", h);
    for (const y of n.values()) {
      var p;
      i = y.store.getState(), i.internal.active && (i.frameloop === "always" || i.internal.frames > 0) && !((p = i.gl.xr) != null && p.isPresenting) && (t += oL(h, i));
    }
    if (aT("after", h), t === 0)
      return aT("tail", h), e = !1, cancelAnimationFrame(r);
  }
  function l(h, p = 1) {
    var y;
    if (!h)
      return n.forEach((_) => l(_.store.getState()), p);
    (y = h.gl.xr) != null && y.isPresenting || !h.internal.active || h.frameloop === "never" || (h.internal.frames = Math.min(60, h.internal.frames + p), e || (e = !0, requestAnimationFrame(o)));
  }
  function u(h, p = !0, y, _) {
    if (p && aT("before", h), y)
      oL(h, y, _);
    else
      for (const E of n.values())
        oL(h, E.store.getState());
    p && aT("after", h);
  }
  return {
    loop: o,
    /**
     * Invalidates the view, requesting a frame to be rendered. Will globally invalidate unless passed a root's state.
     * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#invalidate
     */
    invalidate: l,
    /**
     * Advances the frameloop and runs render effects, useful for when manually rendering via `frameloop="never"`.
     * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#advance
     */
    advance: u
  };
}
function TB() {
  const n = le.useContext(bB);
  if (!n)
    throw new Error("R3F: Hooks can only be used within the Canvas component!");
  return n;
}
function sm(n = (t) => t, e) {
  return TB()(n, e);
}
function YP(n, e = 0) {
  const t = TB(), r = t.getState().internal.subscribe, i = vB(n);
  return iw(() => r(i, e, t), [e, r, t]), null;
}
const H1 = /* @__PURE__ */ new Map(), {
  invalidate: Zk,
  advance: Jk
} = JX(H1), {
  reconciler: SR,
  applyProps: S1
} = IX(H1, $X), _1 = {
  objects: "shallow",
  strict: !1
}, eq = (n, e) => {
  const t = typeof n == "function" ? n(e) : n;
  return EB(t) ? t : new bP({
    powerPreference: "high-performance",
    canvas: e,
    antialias: !0,
    alpha: !0,
    ...n
  });
};
function tq(n, e) {
  const t = typeof HTMLCanvasElement < "u" && n instanceof HTMLCanvasElement;
  if (e) {
    const {
      width: r,
      height: i,
      top: o,
      left: l,
      updateStyle: u = t
    } = e;
    return {
      width: r,
      height: i,
      top: o,
      left: l,
      updateStyle: u
    };
  } else if (typeof HTMLCanvasElement < "u" && n instanceof HTMLCanvasElement && n.parentElement) {
    const {
      width: r,
      height: i,
      top: o,
      left: l
    } = n.parentElement.getBoundingClientRect();
    return {
      width: r,
      height: i,
      top: o,
      left: l,
      updateStyle: t
    };
  } else if (typeof OffscreenCanvas < "u" && n instanceof OffscreenCanvas)
    return {
      width: n.width,
      height: n.height,
      top: 0,
      left: 0,
      updateStyle: t
    };
  return {
    width: 0,
    height: 0,
    top: 0,
    left: 0
  };
}
function nq(n) {
  const e = H1.get(n), t = e == null ? void 0 : e.fiber, r = e == null ? void 0 : e.store;
  e && console.warn("R3F.createRoot should only be called once!");
  const i = typeof reportError == "function" ? (
    // In modern browsers, reportError will dispatch an error event,
    // emulating an uncaught JavaScript error.
    reportError
  ) : (
    // In older browsers and test environments, fallback to console.error.
    console.error
  ), o = r || qX(Zk, Jk), l = t || SR.createContainer(o, L1.ConcurrentRoot, null, !1, null, "", i, null);
  e || H1.set(n, {
    fiber: l,
    store: o
  });
  let u, h = !1, p;
  return {
    configure(y = {}) {
      let {
        gl: _,
        size: E,
        scene: w,
        events: R,
        onCreated: U,
        shadows: L = !1,
        linear: A = !1,
        flat: k = !1,
        legacy: F = !1,
        orthographic: H = !1,
        frameloop: B = "always",
        dpr: j = [1, 2],
        performance: Y,
        raycaster: ee,
        camera: Z,
        onPointerMissed: K
      } = y, fe = o.getState(), se = fe.gl;
      fe.gl || fe.set({
        gl: se = eq(_, n)
      });
      let he = fe.raycaster;
      he || fe.set({
        raycaster: he = new fB()
      });
      const {
        params: me,
        ...Ee
      } = ee || {};
      if (ts.equ(Ee, he, _1) || S1(he, {
        ...Ee
      }), ts.equ(me, he.params, _1) || S1(he, {
        params: {
          ...he.params,
          ...me
        }
      }), !fe.camera || fe.camera === p && !ts.equ(p, Z, _1)) {
        p = Z;
        const ue = Z instanceof ZT, Ce = ue ? Z : H ? new Fg(0, 0, 0, 0, 0.1, 1e3) : new Ws(75, 0, 0.1, 1e3);
        ue || (Ce.position.z = 5, Z && S1(Ce, Z), !fe.camera && !(Z != null && Z.rotation) && Ce.lookAt(0, 0, 0)), fe.set({
          camera: Ce
        }), he.camera = Ce;
      }
      if (!fe.scene) {
        let ue;
        w instanceof gR ? ue = w : (ue = new gR(), w && S1(ue, w)), fe.set({
          scene: w1(ue)
        });
      }
      if (!fe.xr) {
        var be;
        const ue = (De, Ne) => {
          const Pe = o.getState();
          Pe.frameloop !== "never" && Jk(De, !0, Pe, Ne);
        }, Ce = () => {
          const De = o.getState();
          De.gl.xr.enabled = De.gl.xr.isPresenting, De.gl.xr.setAnimationLoop(De.gl.xr.isPresenting ? ue : null), De.gl.xr.isPresenting || Zk(De);
        }, Ae = {
          connect() {
            const De = o.getState().gl;
            De.xr.addEventListener("sessionstart", Ce), De.xr.addEventListener("sessionend", Ce);
          },
          disconnect() {
            const De = o.getState().gl;
            De.xr.removeEventListener("sessionstart", Ce), De.xr.removeEventListener("sessionend", Ce);
          }
        };
        typeof ((be = se.xr) == null ? void 0 : be.addEventListener) == "function" && Ae.connect(), fe.set({
          xr: Ae
        });
      }
      if (se.shadowMap) {
        const ue = se.shadowMap.enabled, Ce = se.shadowMap.type;
        if (se.shadowMap.enabled = !!L, ts.boo(L))
          se.shadowMap.type = mT;
        else if (ts.str(L)) {
          var we;
          const Ae = {
            basic: cI,
            percentage: kR,
            soft: mT,
            variance: om
          };
          se.shadowMap.type = (we = Ae[L]) != null ? we : mT;
        } else
          ts.obj(L) && Object.assign(se.shadowMap, L);
        (ue !== se.shadowMap.enabled || Ce !== se.shadowMap.type) && (se.shadowMap.needsUpdate = !0);
      }
      const de = pB();
      de && ("enabled" in de ? de.enabled = !F : "legacyMode" in de && (de.legacyMode = F)), S1(se, {
        outputEncoding: A ? 3e3 : 3001,
        toneMapping: k ? yv : aP
      }), fe.legacy !== F && fe.set(() => ({
        legacy: F
      })), fe.linear !== A && fe.set(() => ({
        linear: A
      })), fe.flat !== k && fe.set(() => ({
        flat: k
      })), _ && !ts.fun(_) && !EB(_) && !ts.equ(_, se, _1) && S1(se, _), R && !fe.events.handlers && fe.set({
        events: R(o)
      });
      const q = tq(n, E);
      return ts.equ(q, fe.size, _1) || fe.setSize(q.width, q.height, q.updateStyle, q.top, q.left), j && fe.viewport.dpr !== SB(j) && fe.setDpr(j), fe.frameloop !== B && fe.setFrameloop(B), fe.onPointerMissed || fe.set({
        onPointerMissed: K
      }), Y && !ts.equ(Y, fe.performance, _1) && fe.set((ue) => ({
        performance: {
          ...ue.performance,
          ...Y
        }
      })), u = U, h = !0, this;
    },
    render(y) {
      return h || this.configure(), SR.updateContainer(/* @__PURE__ */ le.createElement(rq, {
        store: o,
        children: y,
        onCreated: u,
        rootElement: n
      }), l, null, () => {
      }), o;
    },
    unmount() {
      wB(n);
    }
  };
}
function rq({
  store: n,
  children: e,
  onCreated: t,
  rootElement: r
}) {
  return iw(() => {
    const i = n.getState();
    i.set((o) => ({
      internal: {
        ...o.internal,
        active: !0
      }
    })), t && t(i), n.getState().events.connected || i.events.connect == null || i.events.connect(r);
  }, []), /* @__PURE__ */ le.createElement(bB.Provider, {
    value: n
  }, e);
}
function wB(n, e) {
  const t = H1.get(n), r = t == null ? void 0 : t.fiber;
  if (r) {
    const i = t == null ? void 0 : t.store.getState();
    i && (i.internal.active = !1), SR.updateContainer(null, r, null, () => {
      i && setTimeout(() => {
        try {
          var o, l, u, h;
          i.events.disconnect == null || i.events.disconnect(), (o = i.gl) == null || (l = o.renderLists) == null || l.dispose == null || l.dispose(), (u = i.gl) == null || u.forceContextLoss == null || u.forceContextLoss(), (h = i.gl) != null && h.xr && i.xr.disconnect(), GX(i), H1.delete(n), e && e(n);
        } catch {
        }
      }, 500);
    });
  }
}
SR.injectIntoDevTools({
  bundleType: process.env.NODE_ENV === "production" ? 0 : 1,
  rendererPackageName: "@react-three/fiber",
  version: le.version
});
function bs() {
  return bs = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, bs.apply(this, arguments);
}
function MO(n, e, t) {
  var r, i, o, l, u;
  e == null && (e = 100);
  function h() {
    var y = Date.now() - l;
    y < e && y >= 0 ? r = setTimeout(h, e - y) : (r = null, t || (u = n.apply(o, i), o = i = null));
  }
  var p = function() {
    o = this, i = arguments, l = Date.now();
    var y = t && !r;
    return r || (r = setTimeout(h, e)), y && (u = n.apply(o, i), o = i = null), u;
  };
  return p.clear = function() {
    r && (clearTimeout(r), r = null);
  }, p.flush = function() {
    r && (u = n.apply(o, i), o = i = null, clearTimeout(r), r = null);
  }, p;
}
MO.debounce = MO;
var iq = MO;
const eF = /* @__PURE__ */ j1(iq);
function aq(n) {
  let {
    debounce: e,
    scroll: t,
    polyfill: r,
    offsetSize: i
  } = n === void 0 ? {
    debounce: 0,
    scroll: !1,
    offsetSize: !1
  } : n;
  const o = r || (typeof window > "u" ? class {
  } : window.ResizeObserver);
  if (!o)
    throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");
  const [l, u] = le.useState({
    left: 0,
    top: 0,
    width: 0,
    height: 0,
    bottom: 0,
    right: 0,
    x: 0,
    y: 0
  }), h = le.useRef({
    element: null,
    scrollContainers: null,
    resizeObserver: null,
    lastBounds: l
  }), p = e ? typeof e == "number" ? e : e.scroll : null, y = e ? typeof e == "number" ? e : e.resize : null, _ = le.useRef(!1);
  le.useEffect(() => (_.current = !0, () => void (_.current = !1)));
  const [E, w, R] = le.useMemo(() => {
    const k = () => {
      if (!h.current.element)
        return;
      const {
        left: F,
        top: H,
        width: B,
        height: j,
        bottom: Y,
        right: ee,
        x: Z,
        y: K
      } = h.current.element.getBoundingClientRect(), fe = {
        left: F,
        top: H,
        width: B,
        height: j,
        bottom: Y,
        right: ee,
        x: Z,
        y: K
      };
      h.current.element instanceof HTMLElement && i && (fe.height = h.current.element.offsetHeight, fe.width = h.current.element.offsetWidth), Object.freeze(fe), _.current && !uq(h.current.lastBounds, fe) && u(h.current.lastBounds = fe);
    };
    return [k, y ? eF(k, y) : k, p ? eF(k, p) : k];
  }, [u, i, p, y]);
  function U() {
    h.current.scrollContainers && (h.current.scrollContainers.forEach((k) => k.removeEventListener("scroll", R, !0)), h.current.scrollContainers = null), h.current.resizeObserver && (h.current.resizeObserver.disconnect(), h.current.resizeObserver = null);
  }
  function L() {
    h.current.element && (h.current.resizeObserver = new o(R), h.current.resizeObserver.observe(h.current.element), t && h.current.scrollContainers && h.current.scrollContainers.forEach((k) => k.addEventListener("scroll", R, {
      capture: !0,
      passive: !0
    })));
  }
  const A = (k) => {
    !k || k === h.current.element || (U(), h.current.element = k, h.current.scrollContainers = MB(k), L());
  };
  return sq(R, !!t), oq(w), le.useEffect(() => {
    U(), L();
  }, [t, R, w]), le.useEffect(() => U, []), [A, l, E];
}
function oq(n) {
  le.useEffect(() => {
    const e = n;
    return window.addEventListener("resize", e), () => void window.removeEventListener("resize", e);
  }, [n]);
}
function sq(n, e) {
  le.useEffect(() => {
    if (e) {
      const t = n;
      return window.addEventListener("scroll", t, {
        capture: !0,
        passive: !0
      }), () => void window.removeEventListener("scroll", t, !0);
    }
  }, [n, e]);
}
function MB(n) {
  const e = [];
  if (!n || n === document.body)
    return e;
  const {
    overflow: t,
    overflowX: r,
    overflowY: i
  } = window.getComputedStyle(n);
  return [t, r, i].some((o) => o === "auto" || o === "scroll") && e.push(n), [...e, ...MB(n.parentElement)];
}
const lq = ["x", "y", "top", "bottom", "left", "right", "width", "height"], uq = (n, e) => lq.every((t) => n[t] === e[t]);
var cq = Object.defineProperty, fq = Object.defineProperties, dq = Object.getOwnPropertyDescriptors, tF = Object.getOwnPropertySymbols, hq = Object.prototype.hasOwnProperty, pq = Object.prototype.propertyIsEnumerable, nF = (n, e, t) => e in n ? cq(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, rF = (n, e) => {
  for (var t in e || (e = {}))
    hq.call(e, t) && nF(n, t, e[t]);
  if (tF)
    for (var t of tF(e))
      pq.call(e, t) && nF(n, t, e[t]);
  return n;
}, mq = (n, e) => fq(n, dq(e));
function CB(n, e, t) {
  if (!n)
    return;
  if (t(n) === !0)
    return n;
  let r = e ? n.return : n.child;
  for (; r; ) {
    const i = CB(r, e, t);
    if (i)
      return i;
    r = e ? null : r.sibling;
  }
}
function RB(n) {
  try {
    return Object.defineProperties(n, {
      _currentRenderer: {
        get() {
          return null;
        },
        set() {
        }
      },
      _currentRenderer2: {
        get() {
          return null;
        },
        set() {
        }
      }
    });
  } catch {
    return n;
  }
}
const XP = RB(le.createContext(null));
class AB extends le.Component {
  render() {
    return /* @__PURE__ */ le.createElement(XP.Provider, {
      value: this._reactInternals
    }, this.props.children);
  }
}
const { ReactCurrentOwner: iF, ReactCurrentDispatcher: aF } = le.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
function vq() {
  const n = le.useContext(XP);
  if (n === null)
    throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");
  const e = le.useId();
  return le.useMemo(() => {
    for (const r of [iF == null ? void 0 : iF.current, n, n == null ? void 0 : n.alternate]) {
      if (!r)
        continue;
      const i = CB(r, !1, (o) => {
        let l = o.memoizedState;
        for (; l; ) {
          if (l.memoizedState === e)
            return !0;
          l = l.next;
        }
      });
      if (i)
        return i;
    }
  }, [n, e]);
}
function gq() {
  var n, e;
  const t = vq(), [r] = le.useState(() => /* @__PURE__ */ new Map());
  r.clear();
  let i = t;
  for (; i; ) {
    const o = (n = i.type) == null ? void 0 : n._context;
    o && o !== XP && !r.has(o) && r.set(o, (e = aF == null ? void 0 : aF.current) == null ? void 0 : e.readContext(RB(o))), i = i.return;
  }
  return r;
}
function yq() {
  const n = gq();
  return le.useMemo(
    () => Array.from(n.keys()).reduce(
      (e, t) => (r) => /* @__PURE__ */ le.createElement(e, null, /* @__PURE__ */ le.createElement(t.Provider, mq(rF({}, r), {
        value: n.get(t)
      }))),
      (e) => /* @__PURE__ */ le.createElement(AB, rF({}, e))
    ),
    [n]
  );
}
const sL = {
  onClick: ["click", !1],
  onContextMenu: ["contextmenu", !1],
  onDoubleClick: ["dblclick", !1],
  onWheel: ["wheel", !0],
  onPointerDown: ["pointerdown", !0],
  onPointerUp: ["pointerup", !0],
  onPointerLeave: ["pointerleave", !0],
  onPointerMove: ["pointermove", !0],
  onPointerCancel: ["pointercancel", !0],
  onLostPointerCapture: ["lostpointercapture", !0]
};
function Sq(n) {
  const {
    handlePointer: e
  } = XX(n);
  return {
    priority: 1,
    enabled: !0,
    compute(t, r, i) {
      r.pointer.set(t.offsetX / r.size.width * 2 - 1, -(t.offsetY / r.size.height) * 2 + 1), r.raycaster.setFromCamera(r.pointer, r.camera);
    },
    connected: void 0,
    handlers: Object.keys(sL).reduce((t, r) => ({
      ...t,
      [r]: e(r)
    }), {}),
    update: () => {
      var t;
      const {
        events: r,
        internal: i
      } = n.getState();
      (t = i.lastEvent) != null && t.current && r.handlers && r.handlers.onPointerMove(i.lastEvent.current);
    },
    connect: (t) => {
      var r;
      const {
        set: i,
        events: o
      } = n.getState();
      o.disconnect == null || o.disconnect(), i((l) => ({
        events: {
          ...l.events,
          connected: t
        }
      })), Object.entries((r = o.handlers) != null ? r : []).forEach(([l, u]) => {
        const [h, p] = sL[l];
        t.addEventListener(h, u, {
          passive: p
        });
      });
    },
    disconnect: () => {
      const {
        set: t,
        events: r
      } = n.getState();
      if (r.connected) {
        var i;
        Object.entries((i = r.handlers) != null ? i : []).forEach(([o, l]) => {
          if (r && r.connected instanceof HTMLElement) {
            const [u] = sL[o];
            r.connected.removeEventListener(u, l);
          }
        }), t((o) => ({
          events: {
            ...o.events,
            connected: void 0
          }
        }));
      }
    }
  };
}
const _q = /* @__PURE__ */ le.forwardRef(function({
  children: e,
  fallback: t,
  resize: r,
  style: i,
  gl: o,
  events: l = Sq,
  eventSource: u,
  eventPrefix: h,
  shadows: p,
  linear: y,
  flat: _,
  legacy: E,
  orthographic: w,
  frameloop: R,
  dpr: U,
  performance: L,
  raycaster: A,
  camera: k,
  scene: F,
  onPointerMissed: H,
  onCreated: B,
  ...j
}, Y) {
  le.useMemo(() => zX(bX), []);
  const ee = yq(), [Z, K] = aq({
    scroll: !0,
    debounce: {
      scroll: 50,
      resize: 0
    },
    ...r
  }), fe = le.useRef(null), se = le.useRef(null);
  le.useImperativeHandle(Y, () => fe.current);
  const he = vB(H), [me, Ee] = le.useState(!1), [be, we] = le.useState(!1);
  if (me)
    throw me;
  if (be)
    throw be;
  const de = le.useRef(null);
  iw(() => {
    const X = fe.current;
    K.width > 0 && K.height > 0 && X && (de.current || (de.current = nq(X)), de.current.configure({
      gl: o,
      events: l,
      shadows: p,
      linear: y,
      flat: _,
      legacy: E,
      orthographic: w,
      frameloop: R,
      dpr: U,
      performance: L,
      raycaster: A,
      camera: k,
      scene: F,
      size: K,
      // Pass mutable reference to onPointerMissed so it's free to update
      onPointerMissed: (...q) => he.current == null ? void 0 : he.current(...q),
      onCreated: (q) => {
        q.events.connect == null || q.events.connect(u ? BX(u) ? u.current : u : se.current), h && q.setEvents({
          compute: (ue, Ce) => {
            const Ae = ue[h + "X"], De = ue[h + "Y"];
            Ce.pointer.set(Ae / Ce.size.width * 2 - 1, -(De / Ce.size.height) * 2 + 1), Ce.raycaster.setFromCamera(Ce.pointer, Ce.camera);
          }
        }), B == null || B(q);
      }
    }), de.current.render(/* @__PURE__ */ le.createElement(ee, null, /* @__PURE__ */ le.createElement(gB, {
      set: we
    }, /* @__PURE__ */ le.createElement(le.Suspense, {
      fallback: /* @__PURE__ */ le.createElement(HX, {
        set: Ee
      })
    }, e)))));
  }), le.useEffect(() => {
    const X = fe.current;
    if (X)
      return () => wB(X);
  }, []);
  const ye = u ? "none" : "auto";
  return /* @__PURE__ */ le.createElement("div", bs({
    ref: se,
    style: {
      position: "relative",
      width: "100%",
      height: "100%",
      overflow: "hidden",
      pointerEvents: ye,
      ...i
    }
  }, j), /* @__PURE__ */ le.createElement("div", {
    ref: Z,
    style: {
      width: "100%",
      height: "100%"
    }
  }, /* @__PURE__ */ le.createElement("canvas", {
    ref: fe,
    style: {
      display: "block"
    }
  }, t)));
}), xq = /* @__PURE__ */ le.forwardRef(function(e, t) {
  return /* @__PURE__ */ le.createElement(AB, null, /* @__PURE__ */ le.createElement(_q, bs({}, e, {
    ref: t
  })));
});
function Eq() {
  return new Worker("/assets/splat-sort-worker-9932a6b9.js");
}
const bq = `
precision mediump float;

attribute vec3 position;

attribute vec4 color;
attribute vec4 quat;
attribute vec3 scale;
attribute vec3 center;

uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;
uniform vec2 focal;
uniform vec2 viewport;

varying vec4 vColor;
varying vec3 vConic;
varying vec2 vCenter;
varying vec2 vPosition;

mat3 transpose(mat3 m) { return mat3(m[0][0], m[1][0], m[2][0], m[0][1], m[1][1], m[2][1], m[0][2], m[1][2], m[2][2]); }

mat3 compute_cov3d(vec3 scale, vec4 rot) {
    mat3 S = mat3(
        scale.x, 0.0, 0.0,
        0.0, scale.y, 0.0,
        0.0, 0.0, scale.z
    );
    mat3 R = mat3(
        1.0 - 2.0 * (rot.z * rot.z + rot.w * rot.w), 2.0 * (rot.y * rot.z - rot.x * rot.w), 2.0 * (rot.y * rot.w + rot.x * rot.z),
        2.0 * (rot.y * rot.z + rot.x * rot.w), 1.0 - 2.0 * (rot.y * rot.y + rot.w * rot.w), 2.0 * (rot.z * rot.w - rot.x * rot.y),
        2.0 * (rot.y * rot.w - rot.x * rot.z), 2.0 * (rot.z * rot.w + rot.x * rot.y), 1.0 - 2.0 * (rot.y * rot.y + rot.z * rot.z)
    );
    mat3 M = S * R;
    return transpose(M) * M;
}

vec3 compute_cov2d(vec3 center, vec3 scale, vec4 rot){
    mat3 Vrk = compute_cov3d(scale, rot);
    vec4 t = modelViewMatrix * vec4(center, 1.0);
    vec2 lims = 1.3 * 0.5 * viewport / focal;
    t.xy = min(lims, max(-lims, t.xy / t.z)) * t.z;
    mat3 J = mat3(
        focal.x / t.z, 0., -(focal.x * t.x) / (t.z * t.z), 
        0., focal.y / t.z, -(focal.y * t.y) / (t.z * t.z), 
        0., 0., 0.
    );
    mat3 W = transpose(mat3(modelViewMatrix));
    mat3 T = W * J;
    mat3 cov = transpose(T) * transpose(Vrk) * T;
    return vec3(cov[0][0] + 0.3, cov[0][1], cov[1][1] + 0.3);
}

void main () {
    vec4 camspace = modelViewMatrix * vec4(center, 1);
    
    vec4 pos2d = projectionMatrix  * camspace;

    vec3 cov2d = compute_cov2d(center, scale, quat);
    float det = cov2d.x * cov2d.z - cov2d.y * cov2d.y;
    vec3 conic = vec3(cov2d.z, cov2d.y, cov2d.x) / det;
    float mid = 0.5 * (cov2d.x + cov2d.z);
    float lambda1 = mid + sqrt(max(0.1, mid * mid - det));
    float lambda2 = mid - sqrt(max(0.1, mid * mid - det));
    vec2 v1 = 7.0 * sqrt(lambda1) * normalize(vec2(cov2d.y, lambda1 - cov2d.x));
    vec2 v2 = 7.0 * sqrt(lambda2) * normalize(vec2(-(lambda1 - cov2d.x),cov2d.y));

    vColor = color;
    vConic = conic;
    vCenter = vec2(pos2d) / pos2d.w;

    vPosition = vec2(vCenter + position.x * (position.y < 0.0 ? v1 : v2) / viewport);
    gl_Position = vec4(vPosition, pos2d.z / pos2d.w, 1);
}
`, Tq = `
precision mediump float;

varying vec4 vColor;
varying vec3 vConic;
varying vec2 vCenter;

uniform vec2 viewport;
uniform vec2 focal;

void main () {    
	vec2 d = (vCenter - 2.0 * (gl_FragCoord.xy/viewport - vec2(0.5, 0.5))) * viewport * 0.5;
    
	float power = -0.5 * (vConic.x * d.x * d.x + vConic.z * d.y * d.y) + vConic.y * d.x * d.y;

	if (power > 0.0) discard;
	float alpha = min(0.99, vColor.a * exp(power));
	if(alpha < 0.02) discard;

    gl_FragColor = vec4(vColor.rgb, alpha);
}
`;
var CO = { exports: {} }, pd = {}, GC = { exports: {} }, lL = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var oF;
function wq() {
  return oF || (oF = 1, function(n) {
    function e(de, ye) {
      var X = de.length;
      de.push(ye);
      e:
        for (; 0 < X; ) {
          var q = X - 1 >>> 1, ue = de[q];
          if (0 < i(ue, ye))
            de[q] = ye, de[X] = ue, X = q;
          else
            break e;
        }
    }
    function t(de) {
      return de.length === 0 ? null : de[0];
    }
    function r(de) {
      if (de.length === 0)
        return null;
      var ye = de[0], X = de.pop();
      if (X !== ye) {
        de[0] = X;
        e:
          for (var q = 0, ue = de.length, Ce = ue >>> 1; q < Ce; ) {
            var Ae = 2 * (q + 1) - 1, De = de[Ae], Ne = Ae + 1, Pe = de[Ne];
            if (0 > i(De, X))
              Ne < ue && 0 > i(Pe, De) ? (de[q] = Pe, de[Ne] = X, q = Ne) : (de[q] = De, de[Ae] = X, q = Ae);
            else if (Ne < ue && 0 > i(Pe, X))
              de[q] = Pe, de[Ne] = X, q = Ne;
            else
              break e;
          }
      }
      return ye;
    }
    function i(de, ye) {
      var X = de.sortIndex - ye.sortIndex;
      return X !== 0 ? X : de.id - ye.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var o = performance;
      n.unstable_now = function() {
        return o.now();
      };
    } else {
      var l = Date, u = l.now();
      n.unstable_now = function() {
        return l.now() - u;
      };
    }
    var h = [], p = [], y = 1, _ = null, E = 3, w = !1, R = !1, U = !1, L = typeof setTimeout == "function" ? setTimeout : null, A = typeof clearTimeout == "function" ? clearTimeout : null, k = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function F(de) {
      for (var ye = t(p); ye !== null; ) {
        if (ye.callback === null)
          r(p);
        else if (ye.startTime <= de)
          r(p), ye.sortIndex = ye.expirationTime, e(h, ye);
        else
          break;
        ye = t(p);
      }
    }
    function H(de) {
      if (U = !1, F(de), !R)
        if (t(h) !== null)
          R = !0, be(B);
        else {
          var ye = t(p);
          ye !== null && we(H, ye.startTime - de);
        }
    }
    function B(de, ye) {
      R = !1, U && (U = !1, A(ee), ee = -1), w = !0;
      var X = E;
      try {
        for (F(ye), _ = t(h); _ !== null && (!(_.expirationTime > ye) || de && !fe()); ) {
          var q = _.callback;
          if (typeof q == "function") {
            _.callback = null, E = _.priorityLevel;
            var ue = q(_.expirationTime <= ye);
            ye = n.unstable_now(), typeof ue == "function" ? _.callback = ue : _ === t(h) && r(h), F(ye);
          } else
            r(h);
          _ = t(h);
        }
        if (_ !== null)
          var Ce = !0;
        else {
          var Ae = t(p);
          Ae !== null && we(H, Ae.startTime - ye), Ce = !1;
        }
        return Ce;
      } finally {
        _ = null, E = X, w = !1;
      }
    }
    var j = !1, Y = null, ee = -1, Z = 5, K = -1;
    function fe() {
      return !(n.unstable_now() - K < Z);
    }
    function se() {
      if (Y !== null) {
        var de = n.unstable_now();
        K = de;
        var ye = !0;
        try {
          ye = Y(!0, de);
        } finally {
          ye ? he() : (j = !1, Y = null);
        }
      } else
        j = !1;
    }
    var he;
    if (typeof k == "function")
      he = function() {
        k(se);
      };
    else if (typeof MessageChannel < "u") {
      var me = new MessageChannel(), Ee = me.port2;
      me.port1.onmessage = se, he = function() {
        Ee.postMessage(null);
      };
    } else
      he = function() {
        L(se, 0);
      };
    function be(de) {
      Y = de, j || (j = !0, he());
    }
    function we(de, ye) {
      ee = L(function() {
        de(n.unstable_now());
      }, ye);
    }
    n.unstable_IdlePriority = 5, n.unstable_ImmediatePriority = 1, n.unstable_LowPriority = 4, n.unstable_NormalPriority = 3, n.unstable_Profiling = null, n.unstable_UserBlockingPriority = 2, n.unstable_cancelCallback = function(de) {
      de.callback = null;
    }, n.unstable_continueExecution = function() {
      R || w || (R = !0, be(B));
    }, n.unstable_forceFrameRate = function(de) {
      0 > de || 125 < de ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : Z = 0 < de ? Math.floor(1e3 / de) : 5;
    }, n.unstable_getCurrentPriorityLevel = function() {
      return E;
    }, n.unstable_getFirstCallbackNode = function() {
      return t(h);
    }, n.unstable_next = function(de) {
      switch (E) {
        case 1:
        case 2:
        case 3:
          var ye = 3;
          break;
        default:
          ye = E;
      }
      var X = E;
      E = ye;
      try {
        return de();
      } finally {
        E = X;
      }
    }, n.unstable_pauseExecution = function() {
    }, n.unstable_requestPaint = function() {
    }, n.unstable_runWithPriority = function(de, ye) {
      switch (de) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          de = 3;
      }
      var X = E;
      E = de;
      try {
        return ye();
      } finally {
        E = X;
      }
    }, n.unstable_scheduleCallback = function(de, ye, X) {
      var q = n.unstable_now();
      switch (typeof X == "object" && X !== null ? (X = X.delay, X = typeof X == "number" && 0 < X ? q + X : q) : X = q, de) {
        case 1:
          var ue = -1;
          break;
        case 2:
          ue = 250;
          break;
        case 5:
          ue = 1073741823;
          break;
        case 4:
          ue = 1e4;
          break;
        default:
          ue = 5e3;
      }
      return ue = X + ue, de = { id: y++, callback: ye, priorityLevel: de, startTime: X, expirationTime: ue, sortIndex: -1 }, X > q ? (de.sortIndex = X, e(p, de), t(h) === null && de === t(p) && (U ? (A(ee), ee = -1) : U = !0, we(H, X - q))) : (de.sortIndex = ue, e(h, de), R || w || (R = !0, be(B))), de;
    }, n.unstable_shouldYield = fe, n.unstable_wrapCallback = function(de) {
      var ye = E;
      return function() {
        var X = E;
        E = ye;
        try {
          return de.apply(this, arguments);
        } finally {
          E = X;
        }
      };
    };
  }(lL)), lL;
}
var uL = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sF;
function Mq() {
  return sF || (sF = 1, function(n) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var e = !1, t = !1, r = 5;
      function i(xe, We) {
        var ft = xe.length;
        xe.push(We), u(xe, We, ft);
      }
      function o(xe) {
        return xe.length === 0 ? null : xe[0];
      }
      function l(xe) {
        if (xe.length === 0)
          return null;
        var We = xe[0], ft = xe.pop();
        return ft !== We && (xe[0] = ft, h(xe, ft, 0)), We;
      }
      function u(xe, We, ft) {
        for (var Et = ft; Et > 0; ) {
          var Ze = Et - 1 >>> 1, Te = xe[Ze];
          if (p(Te, We) > 0)
            xe[Ze] = We, xe[Et] = Te, Et = Ze;
          else
            return;
        }
      }
      function h(xe, We, ft) {
        for (var Et = ft, Ze = xe.length, Te = Ze >>> 1; Et < Te; ) {
          var tt = (Et + 1) * 2 - 1, pt = xe[tt], ve = tt + 1, Pt = xe[ve];
          if (p(pt, We) < 0)
            ve < Ze && p(Pt, pt) < 0 ? (xe[Et] = Pt, xe[ve] = We, Et = ve) : (xe[Et] = pt, xe[tt] = We, Et = tt);
          else if (ve < Ze && p(Pt, We) < 0)
            xe[Et] = Pt, xe[ve] = We, Et = ve;
          else
            return;
        }
      }
      function p(xe, We) {
        var ft = xe.sortIndex - We.sortIndex;
        return ft !== 0 ? ft : xe.id - We.id;
      }
      var y = 1, _ = 2, E = 3, w = 4, R = 5;
      function U(xe, We) {
      }
      var L = typeof performance == "object" && typeof performance.now == "function";
      if (L) {
        var A = performance;
        n.unstable_now = function() {
          return A.now();
        };
      } else {
        var k = Date, F = k.now();
        n.unstable_now = function() {
          return k.now() - F;
        };
      }
      var H = 1073741823, B = -1, j = 250, Y = 5e3, ee = 1e4, Z = H, K = [], fe = [], se = 1, he = null, me = E, Ee = !1, be = !1, we = !1, de = typeof setTimeout == "function" ? setTimeout : null, ye = typeof clearTimeout == "function" ? clearTimeout : null, X = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function q(xe) {
        for (var We = o(fe); We !== null; ) {
          if (We.callback === null)
            l(fe);
          else if (We.startTime <= xe)
            l(fe), We.sortIndex = We.expirationTime, i(K, We);
          else
            return;
          We = o(fe);
        }
      }
      function ue(xe) {
        if (we = !1, q(xe), !be)
          if (o(K) !== null)
            be = !0, xt(Ce);
          else {
            var We = o(fe);
            We !== null && ut(ue, We.startTime - xe);
          }
      }
      function Ce(xe, We) {
        be = !1, we && (we = !1, lt()), Ee = !0;
        var ft = me;
        try {
          var Et;
          if (!t)
            return Ae(xe, We);
        } finally {
          he = null, me = ft, Ee = !1;
        }
      }
      function Ae(xe, We) {
        var ft = We;
        for (q(ft), he = o(K); he !== null && !e && !(he.expirationTime > ft && (!xe || Dt())); ) {
          var Et = he.callback;
          if (typeof Et == "function") {
            he.callback = null, me = he.priorityLevel;
            var Ze = he.expirationTime <= ft, Te = Et(Ze);
            ft = n.unstable_now(), typeof Te == "function" ? he.callback = Te : he === o(K) && l(K), q(ft);
          } else
            l(K);
          he = o(K);
        }
        if (he !== null)
          return !0;
        var tt = o(fe);
        return tt !== null && ut(ue, tt.startTime - ft), !1;
      }
      function De(xe, We) {
        switch (xe) {
          case y:
          case _:
          case E:
          case w:
          case R:
            break;
          default:
            xe = E;
        }
        var ft = me;
        me = xe;
        try {
          return We();
        } finally {
          me = ft;
        }
      }
      function Ne(xe) {
        var We;
        switch (me) {
          case y:
          case _:
          case E:
            We = E;
            break;
          default:
            We = me;
            break;
        }
        var ft = me;
        me = We;
        try {
          return xe();
        } finally {
          me = ft;
        }
      }
      function Pe(xe) {
        var We = me;
        return function() {
          var ft = me;
          me = We;
          try {
            return xe.apply(this, arguments);
          } finally {
            me = ft;
          }
        };
      }
      function Fe(xe, We, ft) {
        var Et = n.unstable_now(), Ze;
        if (typeof ft == "object" && ft !== null) {
          var Te = ft.delay;
          typeof Te == "number" && Te > 0 ? Ze = Et + Te : Ze = Et;
        } else
          Ze = Et;
        var tt;
        switch (xe) {
          case y:
            tt = B;
            break;
          case _:
            tt = j;
            break;
          case R:
            tt = Z;
            break;
          case w:
            tt = ee;
            break;
          case E:
          default:
            tt = Y;
            break;
        }
        var pt = Ze + tt, ve = {
          id: se++,
          callback: We,
          priorityLevel: xe,
          startTime: Ze,
          expirationTime: pt,
          sortIndex: -1
        };
        return Ze > Et ? (ve.sortIndex = Ze, i(fe, ve), o(K) === null && ve === o(fe) && (we ? lt() : we = !0, ut(ue, Ze - Et))) : (ve.sortIndex = pt, i(K, ve), !be && !Ee && (be = !0, xt(Ce))), ve;
      }
      function it() {
      }
      function Ot() {
        !be && !Ee && (be = !0, xt(Ce));
      }
      function st() {
        return o(K);
      }
      function oe(xe) {
        xe.callback = null;
      }
      function rt() {
        return me;
      }
      var qe = !1, $e = null, Ye = -1, zt = r, ot = -1;
      function Dt() {
        var xe = n.unstable_now() - ot;
        return !(xe < zt);
      }
      function kt() {
      }
      function mt(xe) {
        if (xe < 0 || xe > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        xe > 0 ? zt = Math.floor(1e3 / xe) : zt = r;
      }
      var rn = function() {
        if ($e !== null) {
          var xe = n.unstable_now();
          ot = xe;
          var We = !0, ft = !0;
          try {
            ft = $e(We, xe);
          } finally {
            ft ? ae() : (qe = !1, $e = null);
          }
        } else
          qe = !1;
      }, ae;
      if (typeof X == "function")
        ae = function() {
          X(rn);
        };
      else if (typeof MessageChannel < "u") {
        var re = new MessageChannel(), ze = re.port2;
        re.port1.onmessage = rn, ae = function() {
          ze.postMessage(null);
        };
      } else
        ae = function() {
          de(rn, 0);
        };
      function xt(xe) {
        $e = xe, qe || (qe = !0, ae());
      }
      function ut(xe, We) {
        Ye = de(function() {
          xe(n.unstable_now());
        }, We);
      }
      function lt() {
        ye(Ye), Ye = -1;
      }
      var Yt = kt, Nt = null;
      n.unstable_IdlePriority = R, n.unstable_ImmediatePriority = y, n.unstable_LowPriority = w, n.unstable_NormalPriority = E, n.unstable_Profiling = Nt, n.unstable_UserBlockingPriority = _, n.unstable_cancelCallback = oe, n.unstable_continueExecution = Ot, n.unstable_forceFrameRate = mt, n.unstable_getCurrentPriorityLevel = rt, n.unstable_getFirstCallbackNode = st, n.unstable_next = Ne, n.unstable_pauseExecution = it, n.unstable_requestPaint = Yt, n.unstable_runWithPriority = De, n.unstable_scheduleCallback = Fe, n.unstable_shouldYield = Dt, n.unstable_wrapCallback = Pe, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(uL)), uL;
}
var lF;
function DB() {
  return lF || (lF = 1, process.env.NODE_ENV === "production" ? GC.exports = wq() : GC.exports = Mq()), GC.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var uF;
function Cq() {
  if (uF)
    return pd;
  uF = 1;
  var n = le, e = DB();
  function t(f) {
    for (var m = "https://reactjs.org/docs/error-decoder.html?invariant=" + f, b = 1; b < arguments.length; b++)
      m += "&args[]=" + encodeURIComponent(arguments[b]);
    return "Minified React error #" + f + "; visit " + m + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var r = /* @__PURE__ */ new Set(), i = {};
  function o(f, m) {
    l(f, m), l(f + "Capture", m);
  }
  function l(f, m) {
    for (i[f] = m, f = 0; f < m.length; f++)
      r.add(m[f]);
  }
  var u = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), h = Object.prototype.hasOwnProperty, p = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, y = {}, _ = {};
  function E(f) {
    return h.call(_, f) ? !0 : h.call(y, f) ? !1 : p.test(f) ? _[f] = !0 : (y[f] = !0, !1);
  }
  function w(f, m, b, O) {
    if (b !== null && b.type === 0)
      return !1;
    switch (typeof m) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return O ? !1 : b !== null ? !b.acceptsBooleans : (f = f.toLowerCase().slice(0, 5), f !== "data-" && f !== "aria-");
      default:
        return !1;
    }
  }
  function R(f, m, b, O) {
    if (m === null || typeof m > "u" || w(f, m, b, O))
      return !0;
    if (O)
      return !1;
    if (b !== null)
      switch (b.type) {
        case 3:
          return !m;
        case 4:
          return m === !1;
        case 5:
          return isNaN(m);
        case 6:
          return isNaN(m) || 1 > m;
      }
    return !1;
  }
  function U(f, m, b, O, I, $, pe) {
    this.acceptsBooleans = m === 2 || m === 3 || m === 4, this.attributeName = O, this.attributeNamespace = I, this.mustUseProperty = b, this.propertyName = f, this.type = m, this.sanitizeURL = $, this.removeEmptyString = pe;
  }
  var L = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(f) {
    L[f] = new U(f, 0, !1, f, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(f) {
    var m = f[0];
    L[m] = new U(m, 1, !1, f[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(f) {
    L[f] = new U(f, 2, !1, f.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(f) {
    L[f] = new U(f, 2, !1, f, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(f) {
    L[f] = new U(f, 3, !1, f.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(f) {
    L[f] = new U(f, 3, !0, f, null, !1, !1);
  }), ["capture", "download"].forEach(function(f) {
    L[f] = new U(f, 4, !1, f, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(f) {
    L[f] = new U(f, 6, !1, f, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(f) {
    L[f] = new U(f, 5, !1, f.toLowerCase(), null, !1, !1);
  });
  var A = /[\-:]([a-z])/g;
  function k(f) {
    return f[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(f) {
    var m = f.replace(
      A,
      k
    );
    L[m] = new U(m, 1, !1, f, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(f) {
    var m = f.replace(A, k);
    L[m] = new U(m, 1, !1, f, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(f) {
    var m = f.replace(A, k);
    L[m] = new U(m, 1, !1, f, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(f) {
    L[f] = new U(f, 1, !1, f.toLowerCase(), null, !1, !1);
  }), L.xlinkHref = new U("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(f) {
    L[f] = new U(f, 1, !1, f.toLowerCase(), null, !0, !0);
  });
  function F(f, m, b, O) {
    var I = L.hasOwnProperty(m) ? L[m] : null;
    (I !== null ? I.type !== 0 : O || !(2 < m.length) || m[0] !== "o" && m[0] !== "O" || m[1] !== "n" && m[1] !== "N") && (R(m, b, I, O) && (b = null), O || I === null ? E(m) && (b === null ? f.removeAttribute(m) : f.setAttribute(m, "" + b)) : I.mustUseProperty ? f[I.propertyName] = b === null ? I.type === 3 ? !1 : "" : b : (m = I.attributeName, O = I.attributeNamespace, b === null ? f.removeAttribute(m) : (I = I.type, b = I === 3 || I === 4 && b === !0 ? "" : "" + b, O ? f.setAttributeNS(O, m, b) : f.setAttribute(m, b))));
  }
  var H = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, B = Symbol.for("react.element"), j = Symbol.for("react.portal"), Y = Symbol.for("react.fragment"), ee = Symbol.for("react.strict_mode"), Z = Symbol.for("react.profiler"), K = Symbol.for("react.provider"), fe = Symbol.for("react.context"), se = Symbol.for("react.forward_ref"), he = Symbol.for("react.suspense"), me = Symbol.for("react.suspense_list"), Ee = Symbol.for("react.memo"), be = Symbol.for("react.lazy"), we = Symbol.for("react.offscreen"), de = Symbol.iterator;
  function ye(f) {
    return f === null || typeof f != "object" ? null : (f = de && f[de] || f["@@iterator"], typeof f == "function" ? f : null);
  }
  var X = Object.assign, q;
  function ue(f) {
    if (q === void 0)
      try {
        throw Error();
      } catch (b) {
        var m = b.stack.trim().match(/\n( *(at )?)/);
        q = m && m[1] || "";
      }
    return `
` + q + f;
  }
  var Ce = !1;
  function Ae(f, m) {
    if (!f || Ce)
      return "";
    Ce = !0;
    var b = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (m)
        if (m = function() {
          throw Error();
        }, Object.defineProperty(m.prototype, "props", { set: function() {
          throw Error();
        } }), typeof Reflect == "object" && Reflect.construct) {
          try {
            Reflect.construct(m, []);
          } catch (Rt) {
            var O = Rt;
          }
          Reflect.construct(f, [], m);
        } else {
          try {
            m.call();
          } catch (Rt) {
            O = Rt;
          }
          f.call(m.prototype);
        }
      else {
        try {
          throw Error();
        } catch (Rt) {
          O = Rt;
        }
        f();
      }
    } catch (Rt) {
      if (Rt && O && typeof Rt.stack == "string") {
        for (var I = Rt.stack.split(`
`), $ = O.stack.split(`
`), pe = I.length - 1, Ue = $.length - 1; 1 <= pe && 0 <= Ue && I[pe] !== $[Ue]; )
          Ue--;
        for (; 1 <= pe && 0 <= Ue; pe--, Ue--)
          if (I[pe] !== $[Ue]) {
            if (pe !== 1 || Ue !== 1)
              do
                if (pe--, Ue--, 0 > Ue || I[pe] !== $[Ue]) {
                  var Ge = `
` + I[pe].replace(" at new ", " at ");
                  return f.displayName && Ge.includes("<anonymous>") && (Ge = Ge.replace("<anonymous>", f.displayName)), Ge;
                }
              while (1 <= pe && 0 <= Ue);
            break;
          }
      }
    } finally {
      Ce = !1, Error.prepareStackTrace = b;
    }
    return (f = f ? f.displayName || f.name : "") ? ue(f) : "";
  }
  function De(f) {
    switch (f.tag) {
      case 5:
        return ue(f.type);
      case 16:
        return ue("Lazy");
      case 13:
        return ue("Suspense");
      case 19:
        return ue("SuspenseList");
      case 0:
      case 2:
      case 15:
        return f = Ae(f.type, !1), f;
      case 11:
        return f = Ae(f.type.render, !1), f;
      case 1:
        return f = Ae(f.type, !0), f;
      default:
        return "";
    }
  }
  function Ne(f) {
    if (f == null)
      return null;
    if (typeof f == "function")
      return f.displayName || f.name || null;
    if (typeof f == "string")
      return f;
    switch (f) {
      case Y:
        return "Fragment";
      case j:
        return "Portal";
      case Z:
        return "Profiler";
      case ee:
        return "StrictMode";
      case he:
        return "Suspense";
      case me:
        return "SuspenseList";
    }
    if (typeof f == "object")
      switch (f.$$typeof) {
        case fe:
          return (f.displayName || "Context") + ".Consumer";
        case K:
          return (f._context.displayName || "Context") + ".Provider";
        case se:
          var m = f.render;
          return f = f.displayName, f || (f = m.displayName || m.name || "", f = f !== "" ? "ForwardRef(" + f + ")" : "ForwardRef"), f;
        case Ee:
          return m = f.displayName || null, m !== null ? m : Ne(f.type) || "Memo";
        case be:
          m = f._payload, f = f._init;
          try {
            return Ne(f(m));
          } catch {
          }
      }
    return null;
  }
  function Pe(f) {
    var m = f.type;
    switch (f.tag) {
      case 24:
        return "Cache";
      case 9:
        return (m.displayName || "Context") + ".Consumer";
      case 10:
        return (m._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return f = m.render, f = f.displayName || f.name || "", m.displayName || (f !== "" ? "ForwardRef(" + f + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return m;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return Ne(m);
      case 8:
        return m === ee ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof m == "function")
          return m.displayName || m.name || null;
        if (typeof m == "string")
          return m;
    }
    return null;
  }
  function Fe(f) {
    switch (typeof f) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return f;
      case "object":
        return f;
      default:
        return "";
    }
  }
  function it(f) {
    var m = f.type;
    return (f = f.nodeName) && f.toLowerCase() === "input" && (m === "checkbox" || m === "radio");
  }
  function Ot(f) {
    var m = it(f) ? "checked" : "value", b = Object.getOwnPropertyDescriptor(f.constructor.prototype, m), O = "" + f[m];
    if (!f.hasOwnProperty(m) && typeof b < "u" && typeof b.get == "function" && typeof b.set == "function") {
      var I = b.get, $ = b.set;
      return Object.defineProperty(f, m, { configurable: !0, get: function() {
        return I.call(this);
      }, set: function(pe) {
        O = "" + pe, $.call(this, pe);
      } }), Object.defineProperty(f, m, { enumerable: b.enumerable }), { getValue: function() {
        return O;
      }, setValue: function(pe) {
        O = "" + pe;
      }, stopTracking: function() {
        f._valueTracker = null, delete f[m];
      } };
    }
  }
  function st(f) {
    f._valueTracker || (f._valueTracker = Ot(f));
  }
  function oe(f) {
    if (!f)
      return !1;
    var m = f._valueTracker;
    if (!m)
      return !0;
    var b = m.getValue(), O = "";
    return f && (O = it(f) ? f.checked ? "true" : "false" : f.value), f = O, f !== b ? (m.setValue(f), !0) : !1;
  }
  function rt(f) {
    if (f = f || (typeof document < "u" ? document : void 0), typeof f > "u")
      return null;
    try {
      return f.activeElement || f.body;
    } catch {
      return f.body;
    }
  }
  function qe(f, m) {
    var b = m.checked;
    return X({}, m, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: b ?? f._wrapperState.initialChecked });
  }
  function $e(f, m) {
    var b = m.defaultValue == null ? "" : m.defaultValue, O = m.checked != null ? m.checked : m.defaultChecked;
    b = Fe(m.value != null ? m.value : b), f._wrapperState = { initialChecked: O, initialValue: b, controlled: m.type === "checkbox" || m.type === "radio" ? m.checked != null : m.value != null };
  }
  function Ye(f, m) {
    m = m.checked, m != null && F(f, "checked", m, !1);
  }
  function zt(f, m) {
    Ye(f, m);
    var b = Fe(m.value), O = m.type;
    if (b != null)
      O === "number" ? (b === 0 && f.value === "" || f.value != b) && (f.value = "" + b) : f.value !== "" + b && (f.value = "" + b);
    else if (O === "submit" || O === "reset") {
      f.removeAttribute("value");
      return;
    }
    m.hasOwnProperty("value") ? Dt(f, m.type, b) : m.hasOwnProperty("defaultValue") && Dt(f, m.type, Fe(m.defaultValue)), m.checked == null && m.defaultChecked != null && (f.defaultChecked = !!m.defaultChecked);
  }
  function ot(f, m, b) {
    if (m.hasOwnProperty("value") || m.hasOwnProperty("defaultValue")) {
      var O = m.type;
      if (!(O !== "submit" && O !== "reset" || m.value !== void 0 && m.value !== null))
        return;
      m = "" + f._wrapperState.initialValue, b || m === f.value || (f.value = m), f.defaultValue = m;
    }
    b = f.name, b !== "" && (f.name = ""), f.defaultChecked = !!f._wrapperState.initialChecked, b !== "" && (f.name = b);
  }
  function Dt(f, m, b) {
    (m !== "number" || rt(f.ownerDocument) !== f) && (b == null ? f.defaultValue = "" + f._wrapperState.initialValue : f.defaultValue !== "" + b && (f.defaultValue = "" + b));
  }
  var kt = Array.isArray;
  function mt(f, m, b, O) {
    if (f = f.options, m) {
      m = {};
      for (var I = 0; I < b.length; I++)
        m["$" + b[I]] = !0;
      for (b = 0; b < f.length; b++)
        I = m.hasOwnProperty("$" + f[b].value), f[b].selected !== I && (f[b].selected = I), I && O && (f[b].defaultSelected = !0);
    } else {
      for (b = "" + Fe(b), m = null, I = 0; I < f.length; I++) {
        if (f[I].value === b) {
          f[I].selected = !0, O && (f[I].defaultSelected = !0);
          return;
        }
        m !== null || f[I].disabled || (m = f[I]);
      }
      m !== null && (m.selected = !0);
    }
  }
  function rn(f, m) {
    if (m.dangerouslySetInnerHTML != null)
      throw Error(t(91));
    return X({}, m, { value: void 0, defaultValue: void 0, children: "" + f._wrapperState.initialValue });
  }
  function ae(f, m) {
    var b = m.value;
    if (b == null) {
      if (b = m.children, m = m.defaultValue, b != null) {
        if (m != null)
          throw Error(t(92));
        if (kt(b)) {
          if (1 < b.length)
            throw Error(t(93));
          b = b[0];
        }
        m = b;
      }
      m == null && (m = ""), b = m;
    }
    f._wrapperState = { initialValue: Fe(b) };
  }
  function re(f, m) {
    var b = Fe(m.value), O = Fe(m.defaultValue);
    b != null && (b = "" + b, b !== f.value && (f.value = b), m.defaultValue == null && f.defaultValue !== b && (f.defaultValue = b)), O != null && (f.defaultValue = "" + O);
  }
  function ze(f) {
    var m = f.textContent;
    m === f._wrapperState.initialValue && m !== "" && m !== null && (f.value = m);
  }
  function xt(f) {
    switch (f) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function ut(f, m) {
    return f == null || f === "http://www.w3.org/1999/xhtml" ? xt(m) : f === "http://www.w3.org/2000/svg" && m === "foreignObject" ? "http://www.w3.org/1999/xhtml" : f;
  }
  var lt, Yt = function(f) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(m, b, O, I) {
      MSApp.execUnsafeLocalFunction(function() {
        return f(m, b, O, I);
      });
    } : f;
  }(function(f, m) {
    if (f.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in f)
      f.innerHTML = m;
    else {
      for (lt = lt || document.createElement("div"), lt.innerHTML = "<svg>" + m.valueOf().toString() + "</svg>", m = lt.firstChild; f.firstChild; )
        f.removeChild(f.firstChild);
      for (; m.firstChild; )
        f.appendChild(m.firstChild);
    }
  });
  function Nt(f, m) {
    if (m) {
      var b = f.firstChild;
      if (b && b === f.lastChild && b.nodeType === 3) {
        b.nodeValue = m;
        return;
      }
    }
    f.textContent = m;
  }
  var xe = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, We = ["Webkit", "ms", "Moz", "O"];
  Object.keys(xe).forEach(function(f) {
    We.forEach(function(m) {
      m = m + f.charAt(0).toUpperCase() + f.substring(1), xe[m] = xe[f];
    });
  });
  function ft(f, m, b) {
    return m == null || typeof m == "boolean" || m === "" ? "" : b || typeof m != "number" || m === 0 || xe.hasOwnProperty(f) && xe[f] ? ("" + m).trim() : m + "px";
  }
  function Et(f, m) {
    f = f.style;
    for (var b in m)
      if (m.hasOwnProperty(b)) {
        var O = b.indexOf("--") === 0, I = ft(b, m[b], O);
        b === "float" && (b = "cssFloat"), O ? f.setProperty(b, I) : f[b] = I;
      }
  }
  var Ze = X({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function Te(f, m) {
    if (m) {
      if (Ze[f] && (m.children != null || m.dangerouslySetInnerHTML != null))
        throw Error(t(137, f));
      if (m.dangerouslySetInnerHTML != null) {
        if (m.children != null)
          throw Error(t(60));
        if (typeof m.dangerouslySetInnerHTML != "object" || !("__html" in m.dangerouslySetInnerHTML))
          throw Error(t(61));
      }
      if (m.style != null && typeof m.style != "object")
        throw Error(t(62));
    }
  }
  function tt(f, m) {
    if (f.indexOf("-") === -1)
      return typeof m.is == "string";
    switch (f) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var pt = null;
  function ve(f) {
    return f = f.target || f.srcElement || window, f.correspondingUseElement && (f = f.correspondingUseElement), f.nodeType === 3 ? f.parentNode : f;
  }
  var Pt = null, He = null, dt = null;
  function ln(f) {
    if (f = Js(f)) {
      if (typeof Pt != "function")
        throw Error(t(280));
      var m = f.stateNode;
      m && (m = ir(m), Pt(f.stateNode, f.type, m));
    }
  }
  function Un(f) {
    He ? dt ? dt.push(f) : dt = [f] : He = f;
  }
  function jn() {
    if (He) {
      var f = He, m = dt;
      if (dt = He = null, ln(f), m)
        for (f = 0; f < m.length; f++)
          ln(m[f]);
    }
  }
  function cr(f, m) {
    return f(m);
  }
  function En() {
  }
  var tr = !1;
  function fr(f, m, b) {
    if (tr)
      return f(m, b);
    tr = !0;
    try {
      return cr(f, m, b);
    } finally {
      tr = !1, (He !== null || dt !== null) && (En(), jn());
    }
  }
  function Hn(f, m) {
    var b = f.stateNode;
    if (b === null)
      return null;
    var O = ir(b);
    if (O === null)
      return null;
    b = O[m];
    e:
      switch (m) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (O = !O.disabled) || (f = f.type, O = !(f === "button" || f === "input" || f === "select" || f === "textarea")), f = !O;
          break e;
        default:
          f = !1;
      }
    if (f)
      return null;
    if (b && typeof b != "function")
      throw Error(t(231, m, typeof b));
    return b;
  }
  var mi = !1;
  if (u)
    try {
      var Vr = {};
      Object.defineProperty(Vr, "passive", { get: function() {
        mi = !0;
      } }), window.addEventListener("test", Vr, Vr), window.removeEventListener("test", Vr, Vr);
    } catch {
      mi = !1;
    }
  function Gr(f, m, b, O, I, $, pe, Ue, Ge) {
    var Rt = Array.prototype.slice.call(arguments, 3);
    try {
      m.apply(b, Rt);
    } catch (nn) {
      this.onError(nn);
    }
  }
  var Or = !1, Ui = null, fi = !1, ke = null, Ht = { onError: function(f) {
    Or = !0, Ui = f;
  } };
  function Jt(f, m, b, O, I, $, pe, Ue, Ge) {
    Or = !1, Ui = null, Gr.apply(Ht, arguments);
  }
  function pn(f, m, b, O, I, $, pe, Ue, Ge) {
    if (Jt.apply(this, arguments), Or) {
      if (Or) {
        var Rt = Ui;
        Or = !1, Ui = null;
      } else
        throw Error(t(198));
      fi || (fi = !0, ke = Rt);
    }
  }
  function _e(f) {
    var m = f, b = f;
    if (f.alternate)
      for (; m.return; )
        m = m.return;
    else {
      f = m;
      do
        m = f, m.flags & 4098 && (b = m.return), f = m.return;
      while (f);
    }
    return m.tag === 3 ? b : null;
  }
  function Qe(f) {
    if (f.tag === 13) {
      var m = f.memoizedState;
      if (m === null && (f = f.alternate, f !== null && (m = f.memoizedState)), m !== null)
        return m.dehydrated;
    }
    return null;
  }
  function at(f) {
    if (_e(f) !== f)
      throw Error(t(188));
  }
  function je(f) {
    var m = f.alternate;
    if (!m) {
      if (m = _e(f), m === null)
        throw Error(t(188));
      return m !== f ? null : f;
    }
    for (var b = f, O = m; ; ) {
      var I = b.return;
      if (I === null)
        break;
      var $ = I.alternate;
      if ($ === null) {
        if (O = I.return, O !== null) {
          b = O;
          continue;
        }
        break;
      }
      if (I.child === $.child) {
        for ($ = I.child; $; ) {
          if ($ === b)
            return at(I), f;
          if ($ === O)
            return at(I), m;
          $ = $.sibling;
        }
        throw Error(t(188));
      }
      if (b.return !== O.return)
        b = I, O = $;
      else {
        for (var pe = !1, Ue = I.child; Ue; ) {
          if (Ue === b) {
            pe = !0, b = I, O = $;
            break;
          }
          if (Ue === O) {
            pe = !0, O = I, b = $;
            break;
          }
          Ue = Ue.sibling;
        }
        if (!pe) {
          for (Ue = $.child; Ue; ) {
            if (Ue === b) {
              pe = !0, b = $, O = I;
              break;
            }
            if (Ue === O) {
              pe = !0, O = $, b = I;
              break;
            }
            Ue = Ue.sibling;
          }
          if (!pe)
            throw Error(t(189));
        }
      }
      if (b.alternate !== O)
        throw Error(t(190));
    }
    if (b.tag !== 3)
      throw Error(t(188));
    return b.stateNode.current === b ? f : m;
  }
  function vt(f) {
    return f = je(f), f !== null ? sn(f) : null;
  }
  function sn(f) {
    if (f.tag === 5 || f.tag === 6)
      return f;
    for (f = f.child; f !== null; ) {
      var m = sn(f);
      if (m !== null)
        return m;
      f = f.sibling;
    }
    return null;
  }
  var vn = e.unstable_scheduleCallback, Mn = e.unstable_cancelCallback, zn = e.unstable_shouldYield, pr = e.unstable_requestPaint, Mt = e.unstable_now, dr = e.unstable_getCurrentPriorityLevel, Wr = e.unstable_ImmediatePriority, Rn = e.unstable_UserBlockingPriority, Ji = e.unstable_NormalPriority, Ca = e.unstable_LowPriority, li = e.unstable_IdlePriority, qn = null, br = null;
  function hr(f) {
    if (br && typeof br.onCommitFiberRoot == "function")
      try {
        br.onCommitFiberRoot(qn, f, void 0, (f.current.flags & 128) === 128);
      } catch {
      }
  }
  var di = Math.clz32 ? Math.clz32 : Co, ha = Math.log, Kr = Math.LN2;
  function Co(f) {
    return f >>>= 0, f === 0 ? 32 : 31 - (ha(f) / Kr | 0) | 0;
  }
  var Ri = 64, Ai = 4194304;
  function Ea(f) {
    switch (f & -f) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return f & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return f & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return f;
    }
  }
  function bi(f, m) {
    var b = f.pendingLanes;
    if (b === 0)
      return 0;
    var O = 0, I = f.suspendedLanes, $ = f.pingedLanes, pe = b & 268435455;
    if (pe !== 0) {
      var Ue = pe & ~I;
      Ue !== 0 ? O = Ea(Ue) : ($ &= pe, $ !== 0 && (O = Ea($)));
    } else
      pe = b & ~I, pe !== 0 ? O = Ea(pe) : $ !== 0 && (O = Ea($));
    if (O === 0)
      return 0;
    if (m !== 0 && m !== O && !(m & I) && (I = O & -O, $ = m & -m, I >= $ || I === 16 && ($ & 4194240) !== 0))
      return m;
    if (O & 4 && (O |= b & 16), m = f.entangledLanes, m !== 0)
      for (f = f.entanglements, m &= O; 0 < m; )
        b = 31 - di(m), I = 1 << b, O |= f[b], m &= ~I;
    return O;
  }
  function ns(f, m) {
    switch (f) {
      case 1:
      case 2:
      case 4:
        return m + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return m + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function Ro(f, m) {
    for (var b = f.suspendedLanes, O = f.pingedLanes, I = f.expirationTimes, $ = f.pendingLanes; 0 < $; ) {
      var pe = 31 - di($), Ue = 1 << pe, Ge = I[pe];
      Ge === -1 ? (!(Ue & b) || Ue & O) && (I[pe] = ns(Ue, m)) : Ge <= m && (f.expiredLanes |= Ue), $ &= ~Ue;
    }
  }
  function Ra(f) {
    return f = f.pendingLanes & -1073741825, f !== 0 ? f : f & 1073741824 ? 1073741824 : 0;
  }
  function Ao() {
    var f = Ri;
    return Ri <<= 1, !(Ri & 4194240) && (Ri = 64), f;
  }
  function kl(f) {
    for (var m = [], b = 0; 31 > b; b++)
      m.push(f);
    return m;
  }
  function Ts(f, m, b) {
    f.pendingLanes |= m, m !== 536870912 && (f.suspendedLanes = 0, f.pingedLanes = 0), f = f.eventTimes, m = 31 - di(m), f[m] = b;
  }
  function bd(f, m) {
    var b = f.pendingLanes & ~m;
    f.pendingLanes = m, f.suspendedLanes = 0, f.pingedLanes = 0, f.expiredLanes &= m, f.mutableReadLanes &= m, f.entangledLanes &= m, m = f.entanglements;
    var O = f.eventTimes;
    for (f = f.expirationTimes; 0 < b; ) {
      var I = 31 - di(b), $ = 1 << I;
      m[I] = 0, O[I] = -1, f[I] = -1, b &= ~$;
    }
  }
  function Wo(f, m) {
    var b = f.entangledLanes |= m;
    for (f = f.entanglements; b; ) {
      var O = 31 - di(b), I = 1 << O;
      I & m | f[O] & m && (f[O] |= m), b &= ~I;
    }
  }
  var Br = 0;
  function rs(f) {
    return f &= -f, 1 < f ? 4 < f ? f & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var Fl, Do, Hr, pa, ku, rr = !1, ml = [], Ni = null, gr = null, Lo = null, oo = /* @__PURE__ */ new Map(), oa = /* @__PURE__ */ new Map(), Ti = [], Td = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function Qr(f, m) {
    switch (f) {
      case "focusin":
      case "focusout":
        Ni = null;
        break;
      case "dragenter":
      case "dragleave":
        gr = null;
        break;
      case "mouseover":
      case "mouseout":
        Lo = null;
        break;
      case "pointerover":
      case "pointerout":
        oo.delete(m.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        oa.delete(m.pointerId);
    }
  }
  function Aa(f, m, b, O, I, $) {
    return f === null || f.nativeEvent !== $ ? (f = { blockedOn: m, domEventName: b, eventSystemFlags: O, nativeEvent: $, targetContainers: [I] }, m !== null && (m = Js(m), m !== null && Do(m)), f) : (f.eventSystemFlags |= O, m = f.targetContainers, I !== null && m.indexOf(I) === -1 && m.push(I), f);
  }
  function zl(f, m, b, O, I) {
    switch (m) {
      case "focusin":
        return Ni = Aa(Ni, f, m, b, O, I), !0;
      case "dragenter":
        return gr = Aa(gr, f, m, b, O, I), !0;
      case "mouseover":
        return Lo = Aa(Lo, f, m, b, O, I), !0;
      case "pointerover":
        var $ = I.pointerId;
        return oo.set($, Aa(oo.get($) || null, f, m, b, O, I)), !0;
      case "gotpointercapture":
        return $ = I.pointerId, oa.set($, Aa(oa.get($) || null, f, m, b, O, I)), !0;
    }
    return !1;
  }
  function jo(f) {
    var m = os(f.target);
    if (m !== null) {
      var b = _e(m);
      if (b !== null) {
        if (m = b.tag, m === 13) {
          if (m = Qe(b), m !== null) {
            f.blockedOn = m, ku(f.priority, function() {
              Hr(b);
            });
            return;
          }
        } else if (m === 3 && b.stateNode.current.memoizedState.isDehydrated) {
          f.blockedOn = b.tag === 3 ? b.stateNode.containerInfo : null;
          return;
        }
      }
    }
    f.blockedOn = null;
  }
  function Il(f) {
    if (f.blockedOn !== null)
      return !1;
    for (var m = f.targetContainers; 0 < m.length; ) {
      var b = Po(f.domEventName, f.eventSystemFlags, m[0], f.nativeEvent);
      if (b === null) {
        b = f.nativeEvent;
        var O = new b.constructor(b.type, b);
        pt = O, b.target.dispatchEvent(O), pt = null;
      } else
        return m = Js(b), m !== null && Do(m), f.blockedOn = b, !1;
      m.shift();
    }
    return !0;
  }
  function vl(f, m, b) {
    Il(f) && b.delete(m);
  }
  function ws() {
    rr = !1, Ni !== null && Il(Ni) && (Ni = null), gr !== null && Il(gr) && (gr = null), Lo !== null && Il(Lo) && (Lo = null), oo.forEach(vl), oa.forEach(vl);
  }
  function Ms(f, m) {
    f.blockedOn === m && (f.blockedOn = null, rr || (rr = !0, e.unstable_scheduleCallback(e.unstable_NormalPriority, ws)));
  }
  function Fu(f) {
    function m(I) {
      return Ms(I, f);
    }
    if (0 < ml.length) {
      Ms(ml[0], f);
      for (var b = 1; b < ml.length; b++) {
        var O = ml[b];
        O.blockedOn === f && (O.blockedOn = null);
      }
    }
    for (Ni !== null && Ms(Ni, f), gr !== null && Ms(gr, f), Lo !== null && Ms(Lo, f), oo.forEach(m), oa.forEach(m), b = 0; b < Ti.length; b++)
      O = Ti[b], O.blockedOn === f && (O.blockedOn = null);
    for (; 0 < Ti.length && (b = Ti[0], b.blockedOn === null); )
      jo(b), b.blockedOn === null && Ti.shift();
  }
  var vo = H.ReactCurrentBatchConfig, ma = !0;
  function $s(f, m, b, O) {
    var I = Br, $ = vo.transition;
    vo.transition = null;
    try {
      Br = 1, Bl(f, m, b, O);
    } finally {
      Br = I, vo.transition = $;
    }
  }
  function Oo(f, m, b, O) {
    var I = Br, $ = vo.transition;
    vo.transition = null;
    try {
      Br = 4, Bl(f, m, b, O);
    } finally {
      Br = I, vo.transition = $;
    }
  }
  function Bl(f, m, b, O) {
    if (ma) {
      var I = Po(f, m, b, O);
      if (I === null)
        jl(f, m, O, zu, b), Qr(f, O);
      else if (zl(I, f, m, b, O))
        O.stopPropagation();
      else if (Qr(f, O), m & 4 && -1 < Td.indexOf(f)) {
        for (; I !== null; ) {
          var $ = Js(I);
          if ($ !== null && Fl($), $ = Po(f, m, b, O), $ === null && jl(f, m, O, zu, b), $ === I)
            break;
          I = $;
        }
        I !== null && O.stopPropagation();
      } else
        jl(f, m, O, null, b);
    }
  }
  var zu = null;
  function Po(f, m, b, O) {
    if (zu = null, f = ve(O), f = os(f), f !== null)
      if (m = _e(f), m === null)
        f = null;
      else if (b = m.tag, b === 13) {
        if (f = Qe(m), f !== null)
          return f;
        f = null;
      } else if (b === 3) {
        if (m.stateNode.current.memoizedState.isDehydrated)
          return m.tag === 3 ? m.stateNode.containerInfo : null;
        f = null;
      } else
        m !== f && (f = null);
    return zu = f, null;
  }
  function Iu(f) {
    switch (f) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (dr()) {
          case Wr:
            return 1;
          case Rn:
            return 4;
          case Ji:
          case Ca:
            return 16;
          case li:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var is = null, ie = null, Ie = null;
  function ct() {
    if (Ie)
      return Ie;
    var f, m = ie, b = m.length, O, I = "value" in is ? is.value : is.textContent, $ = I.length;
    for (f = 0; f < b && m[f] === I[f]; f++)
      ;
    var pe = b - f;
    for (O = 1; O <= pe && m[b - O] === I[$ - O]; O++)
      ;
    return Ie = I.slice(f, 1 < O ? 1 - O : void 0);
  }
  function Ut(f) {
    var m = f.keyCode;
    return "charCode" in f ? (f = f.charCode, f === 0 && m === 13 && (f = 13)) : f = m, f === 10 && (f = 13), 32 <= f || f === 13 ? f : 0;
  }
  function tn() {
    return !0;
  }
  function $n() {
    return !1;
  }
  function yn(f) {
    function m(b, O, I, $, pe) {
      this._reactName = b, this._targetInst = I, this.type = O, this.nativeEvent = $, this.target = pe, this.currentTarget = null;
      for (var Ue in f)
        f.hasOwnProperty(Ue) && (b = f[Ue], this[Ue] = b ? b($) : $[Ue]);
      return this.isDefaultPrevented = ($.defaultPrevented != null ? $.defaultPrevented : $.returnValue === !1) ? tn : $n, this.isPropagationStopped = $n, this;
    }
    return X(m.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var b = this.nativeEvent;
      b && (b.preventDefault ? b.preventDefault() : typeof b.returnValue != "unknown" && (b.returnValue = !1), this.isDefaultPrevented = tn);
    }, stopPropagation: function() {
      var b = this.nativeEvent;
      b && (b.stopPropagation ? b.stopPropagation() : typeof b.cancelBubble != "unknown" && (b.cancelBubble = !0), this.isPropagationStopped = tn);
    }, persist: function() {
    }, isPersistent: tn }), m;
  }
  var Zn = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(f) {
    return f.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, Jn = yn(Zn), Tr = X({}, Zn, { view: 0, detail: 0 }), Mr = yn(Tr), _r, Zr, vi, ii = X({}, Tr, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: kf, button: 0, buttons: 0, relatedTarget: function(f) {
    return f.relatedTarget === void 0 ? f.fromElement === f.srcElement ? f.toElement : f.fromElement : f.relatedTarget;
  }, movementX: function(f) {
    return "movementX" in f ? f.movementX : (f !== vi && (vi && f.type === "mousemove" ? (_r = f.screenX - vi.screenX, Zr = f.screenY - vi.screenY) : Zr = _r = 0, vi = f), _r);
  }, movementY: function(f) {
    return "movementY" in f ? f.movementY : Zr;
  } }), Hl = yn(ii), gl = X({}, ii, { dataTransfer: 0 }), pu = yn(gl), gh = X({}, Tr, { relatedTarget: 0 }), mu = yn(gh), Nf = X({}, Zn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), yh = yn(Nf), vm = X({}, Zn, { clipboardData: function(f) {
    return "clipboardData" in f ? f.clipboardData : window.clipboardData;
  } }), gm = yn(vm), ym = X({}, Zn, { data: 0 }), Sm = yn(ym), _m = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, Cv = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, xm = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function wd(f) {
    var m = this.nativeEvent;
    return m.getModifierState ? m.getModifierState(f) : (f = xm[f]) ? !!m[f] : !1;
  }
  function kf() {
    return wd;
  }
  var vu = X({}, Tr, { key: function(f) {
    if (f.key) {
      var m = _m[f.key] || f.key;
      if (m !== "Unidentified")
        return m;
    }
    return f.type === "keypress" ? (f = Ut(f), f === 13 ? "Enter" : String.fromCharCode(f)) : f.type === "keydown" || f.type === "keyup" ? Cv[f.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: kf, charCode: function(f) {
    return f.type === "keypress" ? Ut(f) : 0;
  }, keyCode: function(f) {
    return f.type === "keydown" || f.type === "keyup" ? f.keyCode : 0;
  }, which: function(f) {
    return f.type === "keypress" ? Ut(f) : f.type === "keydown" || f.type === "keyup" ? f.keyCode : 0;
  } }), Em = yn(vu), yl = X({}, ii, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Ys = yn(yl), Yc = X({}, Tr, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: kf }), Xc = yn(Yc), gu = X({}, Zn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Ff = yn(gu), Xs = X({}, ii, {
    deltaX: function(f) {
      return "deltaX" in f ? f.deltaX : "wheelDeltaX" in f ? -f.wheelDeltaX : 0;
    },
    deltaY: function(f) {
      return "deltaY" in f ? f.deltaY : "wheelDeltaY" in f ? -f.wheelDeltaY : "wheelDelta" in f ? -f.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), Bu = yn(Xs), Wa = [9, 13, 27, 32], Fa = u && "CompositionEvent" in window, za = null;
  u && "documentMode" in document && (za = document.documentMode);
  var ea = u && "TextEvent" in window && !za, Md = u && (!Fa || za && 8 < za && 11 >= za), as = String.fromCharCode(32), bm = !1;
  function Tm(f, m) {
    switch (f) {
      case "keyup":
        return Wa.indexOf(m.keyCode) !== -1;
      case "keydown":
        return m.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function Cd(f) {
    return f = f.detail, typeof f == "object" && "data" in f ? f.data : null;
  }
  var qc = !1;
  function Rv(f, m) {
    switch (f) {
      case "compositionend":
        return Cd(m);
      case "keypress":
        return m.which !== 32 ? null : (bm = !0, as);
      case "textInput":
        return f = m.data, f === as && bm ? null : f;
      default:
        return null;
    }
  }
  function vp(f, m) {
    if (qc)
      return f === "compositionend" || !Fa && Tm(f, m) ? (f = ct(), Ie = ie = is = null, qc = !1, f) : null;
    switch (f) {
      case "paste":
        return null;
      case "keypress":
        if (!(m.ctrlKey || m.altKey || m.metaKey) || m.ctrlKey && m.altKey) {
          if (m.char && 1 < m.char.length)
            return m.char;
          if (m.which)
            return String.fromCharCode(m.which);
        }
        return null;
      case "compositionend":
        return Md && m.locale !== "ko" ? null : m.data;
      default:
        return null;
    }
  }
  var Rd = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function Sh(f) {
    var m = f && f.nodeName && f.nodeName.toLowerCase();
    return m === "input" ? !!Rd[f.type] : m === "textarea";
  }
  function zf(f, m, b, O) {
    Un(O), m = yc(m, "onChange"), 0 < m.length && (b = new Jn("onChange", "change", null, b, O), f.push({ event: b, listeners: m }));
  }
  var qs = null, Kc = null;
  function pc(f) {
    Zt(f, 0);
  }
  function Hu(f) {
    var m = Di(f);
    if (oe(m))
      return f;
  }
  function gp(f, m) {
    if (f === "change")
      return m;
  }
  var Ad = !1;
  if (u) {
    var Cs;
    if (u) {
      var Dd = "oninput" in document;
      if (!Dd) {
        var Qc = document.createElement("div");
        Qc.setAttribute("oninput", "return;"), Dd = typeof Qc.oninput == "function";
      }
      Cs = Dd;
    } else
      Cs = !1;
    Ad = Cs && (!document.documentMode || 9 < document.documentMode);
  }
  function yu() {
    qs && (qs.detachEvent("onpropertychange", yp), Kc = qs = null);
  }
  function yp(f) {
    if (f.propertyName === "value" && Hu(Kc)) {
      var m = [];
      zf(m, Kc, f, ve(f)), fr(pc, m);
    }
  }
  function Ld(f, m, b) {
    f === "focusin" ? (yu(), qs = m, Kc = b, qs.attachEvent("onpropertychange", yp)) : f === "focusout" && yu();
  }
  function Sp(f) {
    if (f === "selectionchange" || f === "keyup" || f === "keydown")
      return Hu(Kc);
  }
  function Vl(f, m) {
    if (f === "click")
      return Hu(m);
  }
  function va(f, m) {
    if (f === "input" || f === "change")
      return Hu(m);
  }
  function Od(f, m) {
    return f === m && (f !== 0 || 1 / f === 1 / m) || f !== f && m !== m;
  }
  var ja = typeof Object.is == "function" ? Object.is : Od;
  function Sl(f, m) {
    if (ja(f, m))
      return !0;
    if (typeof f != "object" || f === null || typeof m != "object" || m === null)
      return !1;
    var b = Object.keys(f), O = Object.keys(m);
    if (b.length !== O.length)
      return !1;
    for (O = 0; O < b.length; O++) {
      var I = b[O];
      if (!h.call(m, I) || !ja(f[I], m[I]))
        return !1;
    }
    return !0;
  }
  function go(f) {
    for (; f && f.firstChild; )
      f = f.firstChild;
    return f;
  }
  function qi(f, m) {
    var b = go(f);
    f = 0;
    for (var O; b; ) {
      if (b.nodeType === 3) {
        if (O = f + b.textContent.length, f <= m && O >= m)
          return { node: b, offset: m - f };
        f = O;
      }
      e: {
        for (; b; ) {
          if (b.nextSibling) {
            b = b.nextSibling;
            break e;
          }
          b = b.parentNode;
        }
        b = void 0;
      }
      b = go(b);
    }
  }
  function Zc(f, m) {
    return f && m ? f === m ? !0 : f && f.nodeType === 3 ? !1 : m && m.nodeType === 3 ? Zc(f, m.parentNode) : "contains" in f ? f.contains(m) : f.compareDocumentPosition ? !!(f.compareDocumentPosition(m) & 16) : !1 : !1;
  }
  function ui() {
    for (var f = window, m = rt(); m instanceof f.HTMLIFrameElement; ) {
      try {
        var b = typeof m.contentWindow.location.href == "string";
      } catch {
        b = !1;
      }
      if (b)
        f = m.contentWindow;
      else
        break;
      m = rt(f.document);
    }
    return m;
  }
  function ki(f) {
    var m = f && f.nodeName && f.nodeName.toLowerCase();
    return m && (m === "input" && (f.type === "text" || f.type === "search" || f.type === "tel" || f.type === "url" || f.type === "password") || m === "textarea" || f.contentEditable === "true");
  }
  function Wi(f) {
    var m = ui(), b = f.focusedElem, O = f.selectionRange;
    if (m !== b && b && b.ownerDocument && Zc(b.ownerDocument.documentElement, b)) {
      if (O !== null && ki(b)) {
        if (m = O.start, f = O.end, f === void 0 && (f = m), "selectionStart" in b)
          b.selectionStart = m, b.selectionEnd = Math.min(f, b.value.length);
        else if (f = (m = b.ownerDocument || document) && m.defaultView || window, f.getSelection) {
          f = f.getSelection();
          var I = b.textContent.length, $ = Math.min(O.start, I);
          O = O.end === void 0 ? $ : Math.min(O.end, I), !f.extend && $ > O && (I = O, O = $, $ = I), I = qi(b, $);
          var pe = qi(
            b,
            O
          );
          I && pe && (f.rangeCount !== 1 || f.anchorNode !== I.node || f.anchorOffset !== I.offset || f.focusNode !== pe.node || f.focusOffset !== pe.offset) && (m = m.createRange(), m.setStart(I.node, I.offset), f.removeAllRanges(), $ > O ? (f.addRange(m), f.extend(pe.node, pe.offset)) : (m.setEnd(pe.node, pe.offset), f.addRange(m)));
        }
      }
      for (m = [], f = b; f = f.parentNode; )
        f.nodeType === 1 && m.push({ element: f, left: f.scrollLeft, top: f.scrollTop });
      for (typeof b.focus == "function" && b.focus(), b = 0; b < m.length; b++)
        f = m[b], f.element.scrollLeft = f.left, f.element.scrollTop = f.top;
    }
  }
  var Pd = u && "documentMode" in document && 11 >= document.documentMode, yo = null, If = null, mc = null, so = !1;
  function Gl(f, m, b) {
    var O = b.window === b ? b.document : b.nodeType === 9 ? b : b.ownerDocument;
    so || yo == null || yo !== rt(O) || (O = yo, "selectionStart" in O && ki(O) ? O = { start: O.selectionStart, end: O.selectionEnd } : (O = (O.ownerDocument && O.ownerDocument.defaultView || window).getSelection(), O = { anchorNode: O.anchorNode, anchorOffset: O.anchorOffset, focusNode: O.focusNode, focusOffset: O.focusOffset }), mc && Sl(mc, O) || (mc = O, O = yc(If, "onSelect"), 0 < O.length && (m = new Jn("onSelect", "select", null, m, b), f.push({ event: m, listeners: O }), m.target = yo)));
  }
  function Jc(f, m) {
    var b = {};
    return b[f.toLowerCase()] = m.toLowerCase(), b["Webkit" + f] = "webkit" + m, b["Moz" + f] = "moz" + m, b;
  }
  var Vu = { animationend: Jc("Animation", "AnimationEnd"), animationiteration: Jc("Animation", "AnimationIteration"), animationstart: Jc("Animation", "AnimationStart"), transitionend: Jc("Transition", "TransitionEnd") }, Su = {}, Wl = {};
  u && (Wl = document.createElement("div").style, "AnimationEvent" in window || (delete Vu.animationend.animation, delete Vu.animationiteration.animation, delete Vu.animationstart.animation), "TransitionEvent" in window || delete Vu.transitionend.transition);
  function sa(f) {
    if (Su[f])
      return Su[f];
    if (!Vu[f])
      return f;
    var m = Vu[f], b;
    for (b in m)
      if (m.hasOwnProperty(b) && b in Wl)
        return Su[f] = m[b];
    return f;
  }
  var Ud = sa("animationend"), _p = sa("animationiteration"), Bf = sa("animationstart"), wm = sa("transitionend"), wr = /* @__PURE__ */ new Map(), ji = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function jr(f, m) {
    wr.set(f, m), o(m, [f]);
  }
  for (var ba = 0; ba < ji.length; ba++) {
    var $o = ji[ba], _h = $o.toLowerCase(), xh = $o[0].toUpperCase() + $o.slice(1);
    jr(_h, "on" + xh);
  }
  jr(Ud, "onAnimationEnd"), jr(_p, "onAnimationIteration"), jr(Bf, "onAnimationStart"), jr("dblclick", "onDoubleClick"), jr("focusin", "onFocus"), jr("focusout", "onBlur"), jr(wm, "onTransitionEnd"), l("onMouseEnter", ["mouseout", "mouseover"]), l("onMouseLeave", ["mouseout", "mouseover"]), l("onPointerEnter", ["pointerout", "pointerover"]), l("onPointerLeave", ["pointerout", "pointerover"]), o("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), o("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), o("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), o("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), o("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), o("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var Hf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Mm = new Set("cancel close invalid load scroll toggle".split(" ").concat(Hf));
  function Eh(f, m, b) {
    var O = f.type || "unknown-event";
    f.currentTarget = b, pn(O, m, void 0, f), f.currentTarget = null;
  }
  function Zt(f, m) {
    m = (m & 4) !== 0;
    for (var b = 0; b < f.length; b++) {
      var O = f[b], I = O.event;
      O = O.listeners;
      e: {
        var $ = void 0;
        if (m)
          for (var pe = O.length - 1; 0 <= pe; pe--) {
            var Ue = O[pe], Ge = Ue.instance, Rt = Ue.currentTarget;
            if (Ue = Ue.listener, Ge !== $ && I.isPropagationStopped())
              break e;
            Eh(I, Ue, Rt), $ = Ge;
          }
        else
          for (pe = 0; pe < O.length; pe++) {
            if (Ue = O[pe], Ge = Ue.instance, Rt = Ue.currentTarget, Ue = Ue.listener, Ge !== $ && I.isPropagationStopped())
              break e;
            Eh(I, Ue, Rt), $ = Ge;
          }
      }
    }
    if (fi)
      throw f = ke, fi = !1, ke = null, f;
  }
  function Pr(f, m) {
    var b = m[Gf];
    b === void 0 && (b = m[Gf] = /* @__PURE__ */ new Set());
    var O = f + "__bubble";
    b.has(O) || (vc(m, f, 2, !1), b.add(O));
  }
  function kr(f, m, b) {
    var O = 0;
    m && (O |= 4), vc(b, f, O, m);
  }
  var Ks = "_reactListening" + Math.random().toString(36).slice(2);
  function _l(f) {
    if (!f[Ks]) {
      f[Ks] = !0, r.forEach(function(b) {
        b !== "selectionchange" && (Mm.has(b) || kr(b, !1, f), kr(b, !0, f));
      });
      var m = f.nodeType === 9 ? f : f.ownerDocument;
      m === null || m[Ks] || (m[Ks] = !0, kr("selectionchange", !1, m));
    }
  }
  function vc(f, m, b, O) {
    switch (Iu(m)) {
      case 1:
        var I = $s;
        break;
      case 4:
        I = Oo;
        break;
      default:
        I = Bl;
    }
    b = I.bind(null, m, b, f), I = void 0, !mi || m !== "touchstart" && m !== "touchmove" && m !== "wheel" || (I = !0), O ? I !== void 0 ? f.addEventListener(m, b, { capture: !0, passive: I }) : f.addEventListener(m, b, !0) : I !== void 0 ? f.addEventListener(m, b, { passive: I }) : f.addEventListener(m, b, !1);
  }
  function jl(f, m, b, O, I) {
    var $ = O;
    if (!(m & 1) && !(m & 2) && O !== null)
      e:
        for (; ; ) {
          if (O === null)
            return;
          var pe = O.tag;
          if (pe === 3 || pe === 4) {
            var Ue = O.stateNode.containerInfo;
            if (Ue === I || Ue.nodeType === 8 && Ue.parentNode === I)
              break;
            if (pe === 4)
              for (pe = O.return; pe !== null; ) {
                var Ge = pe.tag;
                if ((Ge === 3 || Ge === 4) && (Ge = pe.stateNode.containerInfo, Ge === I || Ge.nodeType === 8 && Ge.parentNode === I))
                  return;
                pe = pe.return;
              }
            for (; Ue !== null; ) {
              if (pe = os(Ue), pe === null)
                return;
              if (Ge = pe.tag, Ge === 5 || Ge === 6) {
                O = $ = pe;
                continue e;
              }
              Ue = Ue.parentNode;
            }
          }
          O = O.return;
        }
    fr(function() {
      var Rt = $, nn = ve(b), en = [];
      e: {
        var Qt = wr.get(f);
        if (Qt !== void 0) {
          var Dn = Jn, Bn = f;
          switch (f) {
            case "keypress":
              if (Ut(b) === 0)
                break e;
            case "keydown":
            case "keyup":
              Dn = Em;
              break;
            case "focusin":
              Bn = "focus", Dn = mu;
              break;
            case "focusout":
              Bn = "blur", Dn = mu;
              break;
            case "beforeblur":
            case "afterblur":
              Dn = mu;
              break;
            case "click":
              if (b.button === 2)
                break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              Dn = Hl;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              Dn = pu;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              Dn = Xc;
              break;
            case Ud:
            case _p:
            case Bf:
              Dn = yh;
              break;
            case wm:
              Dn = Ff;
              break;
            case "scroll":
              Dn = Mr;
              break;
            case "wheel":
              Dn = Bu;
              break;
            case "copy":
            case "cut":
            case "paste":
              Dn = gm;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              Dn = Ys;
          }
          var Gn = (m & 4) !== 0, co = !Gn && f === "scroll", ht = Gn ? Qt !== null ? Qt + "Capture" : null : Qt;
          Gn = [];
          for (var Je = Rt, bt; Je !== null; ) {
            bt = Je;
            var dn = bt.stateNode;
            if (bt.tag === 5 && dn !== null && (bt = dn, ht !== null && (dn = Hn(Je, ht), dn != null && Gn.push(gc(Je, dn, bt)))), co)
              break;
            Je = Je.return;
          }
          0 < Gn.length && (Qt = new Dn(Qt, Bn, null, b, nn), en.push({ event: Qt, listeners: Gn }));
        }
      }
      if (!(m & 7)) {
        e: {
          if (Qt = f === "mouseover" || f === "pointerover", Dn = f === "mouseout" || f === "pointerout", Qt && b !== pt && (Bn = b.relatedTarget || b.fromElement) && (os(Bn) || Bn[Zs]))
            break e;
          if ((Dn || Qt) && (Qt = nn.window === nn ? nn : (Qt = nn.ownerDocument) ? Qt.defaultView || Qt.parentWindow : window, Dn ? (Bn = b.relatedTarget || b.toElement, Dn = Rt, Bn = Bn ? os(Bn) : null, Bn !== null && (co = _e(Bn), Bn !== co || Bn.tag !== 5 && Bn.tag !== 6) && (Bn = null)) : (Dn = null, Bn = Rt), Dn !== Bn)) {
            if (Gn = Hl, dn = "onMouseLeave", ht = "onMouseEnter", Je = "mouse", (f === "pointerout" || f === "pointerover") && (Gn = Ys, dn = "onPointerLeave", ht = "onPointerEnter", Je = "pointer"), co = Dn == null ? Qt : Di(Dn), bt = Bn == null ? Qt : Di(Bn), Qt = new Gn(dn, Je + "leave", Dn, b, nn), Qt.target = co, Qt.relatedTarget = bt, dn = null, os(nn) === Rt && (Gn = new Gn(ht, Je + "enter", Bn, b, nn), Gn.target = bt, Gn.relatedTarget = co, dn = Gn), co = dn, Dn && Bn)
              t: {
                for (Gn = Dn, ht = Bn, Je = 0, bt = Gn; bt; bt = _u(bt))
                  Je++;
                for (bt = 0, dn = ht; dn; dn = _u(dn))
                  bt++;
                for (; 0 < Je - bt; )
                  Gn = _u(Gn), Je--;
                for (; 0 < bt - Je; )
                  ht = _u(ht), bt--;
                for (; Je--; ) {
                  if (Gn === ht || ht !== null && Gn === ht.alternate)
                    break t;
                  Gn = _u(Gn), ht = _u(ht);
                }
                Gn = null;
              }
            else
              Gn = null;
            Dn !== null && xp(en, Qt, Dn, Gn, !1), Bn !== null && co !== null && xp(en, co, Bn, Gn, !0);
          }
        }
        e: {
          if (Qt = Rt ? Di(Rt) : window, Dn = Qt.nodeName && Qt.nodeName.toLowerCase(), Dn === "select" || Dn === "input" && Qt.type === "file")
            var Wn = gp;
          else if (Sh(Qt))
            if (Ad)
              Wn = va;
            else {
              Wn = Sp;
              var Vn = Ld;
            }
          else
            (Dn = Qt.nodeName) && Dn.toLowerCase() === "input" && (Qt.type === "checkbox" || Qt.type === "radio") && (Wn = Vl);
          if (Wn && (Wn = Wn(f, Rt))) {
            zf(en, Wn, b, nn);
            break e;
          }
          Vn && Vn(f, Qt, Rt), f === "focusout" && (Vn = Qt._wrapperState) && Vn.controlled && Qt.type === "number" && Dt(Qt, "number", Qt.value);
        }
        switch (Vn = Rt ? Di(Rt) : window, f) {
          case "focusin":
            (Sh(Vn) || Vn.contentEditable === "true") && (yo = Vn, If = Rt, mc = null);
            break;
          case "focusout":
            mc = If = yo = null;
            break;
          case "mousedown":
            so = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            so = !1, Gl(en, b, nn);
            break;
          case "selectionchange":
            if (Pd)
              break;
          case "keydown":
          case "keyup":
            Gl(en, b, nn);
        }
        var lr;
        if (Fa)
          e: {
            switch (f) {
              case "compositionstart":
                var Cr = "onCompositionStart";
                break e;
              case "compositionend":
                Cr = "onCompositionEnd";
                break e;
              case "compositionupdate":
                Cr = "onCompositionUpdate";
                break e;
            }
            Cr = void 0;
          }
        else
          qc ? Tm(f, b) && (Cr = "onCompositionEnd") : f === "keydown" && b.keyCode === 229 && (Cr = "onCompositionStart");
        Cr && (Md && b.locale !== "ko" && (qc || Cr !== "onCompositionStart" ? Cr === "onCompositionEnd" && qc && (lr = ct()) : (is = nn, ie = "value" in is ? is.value : is.textContent, qc = !0)), Vn = yc(Rt, Cr), 0 < Vn.length && (Cr = new Sm(Cr, f, null, b, nn), en.push({ event: Cr, listeners: Vn }), lr ? Cr.data = lr : (lr = Cd(b), lr !== null && (Cr.data = lr)))), (lr = ea ? Rv(f, b) : vp(f, b)) && (Rt = yc(Rt, "onBeforeInput"), 0 < Rt.length && (nn = new Sm("onBeforeInput", "beforeinput", null, b, nn), en.push({ event: nn, listeners: Rt }), nn.data = lr));
      }
      Zt(en, m);
    });
  }
  function gc(f, m, b) {
    return { instance: f, listener: m, currentTarget: b };
  }
  function yc(f, m) {
    for (var b = m + "Capture", O = []; f !== null; ) {
      var I = f, $ = I.stateNode;
      I.tag === 5 && $ !== null && (I = $, $ = Hn(f, b), $ != null && O.unshift(gc(f, $, I)), $ = Hn(f, m), $ != null && O.push(gc(f, $, I))), f = f.return;
    }
    return O;
  }
  function _u(f) {
    if (f === null)
      return null;
    do
      f = f.return;
    while (f && f.tag !== 5);
    return f || null;
  }
  function xp(f, m, b, O, I) {
    for (var $ = m._reactName, pe = []; b !== null && b !== O; ) {
      var Ue = b, Ge = Ue.alternate, Rt = Ue.stateNode;
      if (Ge !== null && Ge === O)
        break;
      Ue.tag === 5 && Rt !== null && (Ue = Rt, I ? (Ge = Hn(b, $), Ge != null && pe.unshift(gc(b, Ge, Ue))) : I || (Ge = Hn(b, $), Ge != null && pe.push(gc(b, Ge, Ue)))), b = b.return;
    }
    pe.length !== 0 && f.push({ event: m, listeners: pe });
  }
  var Ep = /\r\n?/g, Cm = /\u0000|\uFFFD/g;
  function bh(f) {
    return (typeof f == "string" ? f : "" + f).replace(Ep, `
`).replace(Cm, "");
  }
  function Nd(f, m, b) {
    if (m = bh(m), bh(f) !== m && b)
      throw Error(t(425));
  }
  function kd() {
  }
  var Vf = null, ef = null;
  function Fd(f, m) {
    return f === "textarea" || f === "noscript" || typeof m.children == "string" || typeof m.children == "number" || typeof m.dangerouslySetInnerHTML == "object" && m.dangerouslySetInnerHTML !== null && m.dangerouslySetInnerHTML.__html != null;
  }
  var tf = typeof setTimeout == "function" ? setTimeout : void 0, Th = typeof clearTimeout == "function" ? clearTimeout : void 0, zd = typeof Promise == "function" ? Promise : void 0, bp = typeof queueMicrotask == "function" ? queueMicrotask : typeof zd < "u" ? function(f) {
    return zd.resolve(null).then(f).catch(Rm);
  } : tf;
  function Rm(f) {
    setTimeout(function() {
      throw f;
    });
  }
  function Gu(f, m) {
    var b = m, O = 0;
    do {
      var I = b.nextSibling;
      if (f.removeChild(b), I && I.nodeType === 8)
        if (b = I.data, b === "/$") {
          if (O === 0) {
            f.removeChild(I), Fu(m);
            return;
          }
          O--;
        } else
          b !== "$" && b !== "$?" && b !== "$!" || O++;
      b = I;
    } while (b);
    Fu(m);
  }
  function Qs(f) {
    for (; f != null; f = f.nextSibling) {
      var m = f.nodeType;
      if (m === 1 || m === 3)
        break;
      if (m === 8) {
        if (m = f.data, m === "$" || m === "$!" || m === "$?")
          break;
        if (m === "/$")
          return null;
      }
    }
    return f;
  }
  function Wu(f) {
    f = f.previousSibling;
    for (var m = 0; f; ) {
      if (f.nodeType === 8) {
        var b = f.data;
        if (b === "$" || b === "$!" || b === "$?") {
          if (m === 0)
            return f;
          m--;
        } else
          b === "/$" && m++;
      }
      f = f.previousSibling;
    }
    return null;
  }
  var ju = Math.random().toString(36).slice(2), lo = "__reactFiber$" + ju, Sc = "__reactProps$" + ju, Zs = "__reactContainer$" + ju, Gf = "__reactEvents$" + ju, Wf = "__reactListeners$" + ju, Id = "__reactHandles$" + ju;
  function os(f) {
    var m = f[lo];
    if (m)
      return m;
    for (var b = f.parentNode; b; ) {
      if (m = b[Zs] || b[lo]) {
        if (b = m.alternate, m.child !== null || b !== null && b.child !== null)
          for (f = Wu(f); f !== null; ) {
            if (b = f[lo])
              return b;
            f = Wu(f);
          }
        return m;
      }
      f = b, b = f.parentNode;
    }
    return null;
  }
  function Js(f) {
    return f = f[lo] || f[Zs], !f || f.tag !== 5 && f.tag !== 6 && f.tag !== 13 && f.tag !== 3 ? null : f;
  }
  function Di(f) {
    if (f.tag === 5 || f.tag === 6)
      return f.stateNode;
    throw Error(t(33));
  }
  function ir(f) {
    return f[Sc] || null;
  }
  var Li = [], Jr = -1;
  function Yn(f) {
    return { current: f };
  }
  function hi(f) {
    0 > Jr || (f.current = Li[Jr], Li[Jr] = null, Jr--);
  }
  function wi(f, m) {
    Jr++, Li[Jr] = f.current, f.current = m;
  }
  var $u = {}, xr = Yn($u), Ia = Yn(!1), Rs = $u;
  function el(f, m) {
    var b = f.type.contextTypes;
    if (!b)
      return $u;
    var O = f.stateNode;
    if (O && O.__reactInternalMemoizedUnmaskedChildContext === m)
      return O.__reactInternalMemoizedMaskedChildContext;
    var I = {}, $;
    for ($ in b)
      I[$] = m[$];
    return O && (f = f.stateNode, f.__reactInternalMemoizedUnmaskedChildContext = m, f.__reactInternalMemoizedMaskedChildContext = I), I;
  }
  function ga(f) {
    return f = f.childContextTypes, f != null;
  }
  function tl() {
    hi(Ia), hi(xr);
  }
  function _c(f, m, b) {
    if (xr.current !== $u)
      throw Error(t(168));
    wi(xr, m), wi(Ia, b);
  }
  function jf(f, m, b) {
    var O = f.stateNode;
    if (m = m.childContextTypes, typeof O.getChildContext != "function")
      return b;
    O = O.getChildContext();
    for (var I in O)
      if (!(I in m))
        throw Error(t(108, Pe(f) || "Unknown", I));
    return X({}, b, O);
  }
  function xc(f) {
    return f = (f = f.stateNode) && f.__reactInternalMemoizedMergedChildContext || $u, Rs = xr.current, wi(xr, f), wi(Ia, Ia.current), !0;
  }
  function Av(f, m, b) {
    var O = f.stateNode;
    if (!O)
      throw Error(t(169));
    b ? (f = jf(f, m, Rs), O.__reactInternalMemoizedMergedChildContext = f, hi(Ia), hi(xr), wi(xr, f)) : hi(Ia), wi(Ia, b);
  }
  var As = null, Uo = !1, wh = !1;
  function xu(f) {
    As === null ? As = [f] : As.push(f);
  }
  function $f(f) {
    Uo = !0, xu(f);
  }
  function $a() {
    if (!wh && As !== null) {
      wh = !0;
      var f = 0, m = Br;
      try {
        var b = As;
        for (Br = 1; f < b.length; f++) {
          var O = b[f];
          do
            O = O(!0);
          while (O !== null);
        }
        As = null, Uo = !1;
      } catch (I) {
        throw As !== null && (As = As.slice(f + 1)), vn(Wr, $a), I;
      } finally {
        Br = m, wh = !1;
      }
    }
    return null;
  }
  var Yu = [], Mi = 0, Eu = null, Rr = 0, So = [], Ba = 0, Xu = null, cn = 1, xl = "";
  function No(f, m) {
    Yu[Mi++] = Rr, Yu[Mi++] = Eu, Eu = f, Rr = m;
  }
  function Am(f, m, b) {
    So[Ba++] = cn, So[Ba++] = xl, So[Ba++] = Xu, Xu = f;
    var O = cn;
    f = xl;
    var I = 32 - di(O) - 1;
    O &= ~(1 << I), b += 1;
    var $ = 32 - di(m) + I;
    if (30 < $) {
      var pe = I - I % 5;
      $ = (O & (1 << pe) - 1).toString(32), O >>= pe, I -= pe, cn = 1 << 32 - di(m) + I | b << I | O, xl = $ + f;
    } else
      cn = 1 << $ | b << I | O, xl = f;
  }
  function Tp(f) {
    f.return !== null && (No(f, 1), Am(f, 1, 0));
  }
  function nf(f) {
    for (; f === Eu; )
      Eu = Yu[--Mi], Yu[Mi] = null, Rr = Yu[--Mi], Yu[Mi] = null;
    for (; f === Xu; )
      Xu = So[--Ba], So[Ba] = null, xl = So[--Ba], So[Ba] = null, cn = So[--Ba], So[Ba] = null;
  }
  var ko = null, Ds = null, la = !1, El = null;
  function $l(f, m) {
    var b = sl(5, null, null, 0);
    b.elementType = "DELETED", b.stateNode = m, b.return = f, m = f.deletions, m === null ? (f.deletions = [b], f.flags |= 16) : m.push(b);
  }
  function Bd(f, m) {
    switch (f.tag) {
      case 5:
        var b = f.type;
        return m = m.nodeType !== 1 || b.toLowerCase() !== m.nodeName.toLowerCase() ? null : m, m !== null ? (f.stateNode = m, ko = f, Ds = Qs(m.firstChild), !0) : !1;
      case 6:
        return m = f.pendingProps === "" || m.nodeType !== 3 ? null : m, m !== null ? (f.stateNode = m, ko = f, Ds = null, !0) : !1;
      case 13:
        return m = m.nodeType !== 8 ? null : m, m !== null ? (b = Xu !== null ? { id: cn, overflow: xl } : null, f.memoizedState = { dehydrated: m, treeContext: b, retryLane: 1073741824 }, b = sl(18, null, null, 0), b.stateNode = m, b.return = f, f.child = b, ko = f, Ds = null, !0) : !1;
      default:
        return !1;
    }
  }
  function rf(f) {
    return (f.mode & 1) !== 0 && (f.flags & 128) === 0;
  }
  function Hd(f) {
    if (la) {
      var m = Ds;
      if (m) {
        var b = m;
        if (!Bd(f, m)) {
          if (rf(f))
            throw Error(t(418));
          m = Qs(b.nextSibling);
          var O = ko;
          m && Bd(f, m) ? $l(O, b) : (f.flags = f.flags & -4097 | 2, la = !1, ko = f);
        }
      } else {
        if (rf(f))
          throw Error(t(418));
        f.flags = f.flags & -4097 | 2, la = !1, ko = f;
      }
    }
  }
  function Yf(f) {
    for (f = f.return; f !== null && f.tag !== 5 && f.tag !== 3 && f.tag !== 13; )
      f = f.return;
    ko = f;
  }
  function Ls(f) {
    if (f !== ko)
      return !1;
    if (!la)
      return Yf(f), la = !0, !1;
    var m;
    if ((m = f.tag !== 3) && !(m = f.tag !== 5) && (m = f.type, m = m !== "head" && m !== "body" && !Fd(f.type, f.memoizedProps)), m && (m = Ds)) {
      if (rf(f))
        throw _o(), Error(t(418));
      for (; m; )
        $l(f, m), m = Qs(m.nextSibling);
    }
    if (Yf(f), f.tag === 13) {
      if (f = f.memoizedState, f = f !== null ? f.dehydrated : null, !f)
        throw Error(t(317));
      e: {
        for (f = f.nextSibling, m = 0; f; ) {
          if (f.nodeType === 8) {
            var b = f.data;
            if (b === "/$") {
              if (m === 0) {
                Ds = Qs(f.nextSibling);
                break e;
              }
              m--;
            } else
              b !== "$" && b !== "$!" && b !== "$?" || m++;
          }
          f = f.nextSibling;
        }
        Ds = null;
      }
    } else
      Ds = ko ? Qs(f.stateNode.nextSibling) : null;
    return !0;
  }
  function _o() {
    for (var f = Ds; f; )
      f = Qs(f.nextSibling);
  }
  function Ta() {
    Ds = ko = null, la = !1;
  }
  function Mh(f) {
    El === null ? El = [f] : El.push(f);
  }
  var Dm = H.ReactCurrentBatchConfig;
  function bl(f, m) {
    if (f && f.defaultProps) {
      m = X({}, m), f = f.defaultProps;
      for (var b in f)
        m[b] === void 0 && (m[b] = f[b]);
      return m;
    }
    return m;
  }
  var bu = Yn(null), Ch = null, af = null, Lm = null;
  function Rh() {
    Lm = af = Ch = null;
  }
  function ta(f) {
    var m = bu.current;
    hi(bu), f._currentValue = m;
  }
  function Da(f, m, b) {
    for (; f !== null; ) {
      var O = f.alternate;
      if ((f.childLanes & m) !== m ? (f.childLanes |= m, O !== null && (O.childLanes |= m)) : O !== null && (O.childLanes & m) !== m && (O.childLanes |= m), f === b)
        break;
      f = f.return;
    }
  }
  function gn(f, m) {
    Ch = f, Lm = af = null, f = f.dependencies, f !== null && f.firstContext !== null && (f.lanes & m && (xn = !0), f.firstContext = null);
  }
  function Ki(f) {
    var m = f._currentValue;
    if (Lm !== f)
      if (f = { context: f, memoizedValue: m, next: null }, af === null) {
        if (Ch === null)
          throw Error(t(308));
        af = f, Ch.dependencies = { lanes: 0, firstContext: f };
      } else
        af = af.next = f;
    return m;
  }
  var Ya = null;
  function wp(f) {
    Ya === null ? Ya = [f] : Ya.push(f);
  }
  function Om(f, m, b, O) {
    var I = m.interleaved;
    return I === null ? (b.next = b, wp(m)) : (b.next = I.next, I.next = b), m.interleaved = b, Os(f, O);
  }
  function Os(f, m) {
    f.lanes |= m;
    var b = f.alternate;
    for (b !== null && (b.lanes |= m), b = f, f = f.return; f !== null; )
      f.childLanes |= m, b = f.alternate, b !== null && (b.childLanes |= m), b = f, f = f.return;
    return b.tag === 3 ? b.stateNode : null;
  }
  var La = !1;
  function _n(f) {
    f.updateQueue = { baseState: f.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function na(f, m) {
    f = f.updateQueue, m.updateQueue === f && (m.updateQueue = { baseState: f.baseState, firstBaseUpdate: f.firstBaseUpdate, lastBaseUpdate: f.lastBaseUpdate, shared: f.shared, effects: f.effects });
  }
  function Xa(f, m) {
    return { eventTime: f, lane: m, tag: 0, payload: null, callback: null, next: null };
  }
  function Ec(f, m, b) {
    var O = f.updateQueue;
    if (O === null)
      return null;
    if (O = O.shared, Ar & 2) {
      var I = O.pending;
      return I === null ? m.next = m : (m.next = I.next, I.next = m), O.pending = m, Os(f, b);
    }
    return I = O.interleaved, I === null ? (m.next = m, wp(O)) : (m.next = I.next, I.next = m), O.interleaved = m, Os(f, b);
  }
  function Oa(f, m, b) {
    if (m = m.updateQueue, m !== null && (m = m.shared, (b & 4194240) !== 0)) {
      var O = m.lanes;
      O &= f.pendingLanes, b |= O, m.lanes = b, Wo(f, b);
    }
  }
  function $r(f, m) {
    var b = f.updateQueue, O = f.alternate;
    if (O !== null && (O = O.updateQueue, b === O)) {
      var I = null, $ = null;
      if (b = b.firstBaseUpdate, b !== null) {
        do {
          var pe = { eventTime: b.eventTime, lane: b.lane, tag: b.tag, payload: b.payload, callback: b.callback, next: null };
          $ === null ? I = $ = pe : $ = $.next = pe, b = b.next;
        } while (b !== null);
        $ === null ? I = $ = m : $ = $.next = m;
      } else
        I = $ = m;
      b = { baseState: O.baseState, firstBaseUpdate: I, lastBaseUpdate: $, shared: O.shared, effects: O.effects }, f.updateQueue = b;
      return;
    }
    f = b.lastBaseUpdate, f === null ? b.firstBaseUpdate = m : f.next = m, b.lastBaseUpdate = m;
  }
  function ua(f, m, b, O) {
    var I = f.updateQueue;
    La = !1;
    var $ = I.firstBaseUpdate, pe = I.lastBaseUpdate, Ue = I.shared.pending;
    if (Ue !== null) {
      I.shared.pending = null;
      var Ge = Ue, Rt = Ge.next;
      Ge.next = null, pe === null ? $ = Rt : pe.next = Rt, pe = Ge;
      var nn = f.alternate;
      nn !== null && (nn = nn.updateQueue, Ue = nn.lastBaseUpdate, Ue !== pe && (Ue === null ? nn.firstBaseUpdate = Rt : Ue.next = Rt, nn.lastBaseUpdate = Ge));
    }
    if ($ !== null) {
      var en = I.baseState;
      pe = 0, nn = Rt = Ge = null, Ue = $;
      do {
        var Qt = Ue.lane, Dn = Ue.eventTime;
        if ((O & Qt) === Qt) {
          nn !== null && (nn = nn.next = {
            eventTime: Dn,
            lane: 0,
            tag: Ue.tag,
            payload: Ue.payload,
            callback: Ue.callback,
            next: null
          });
          e: {
            var Bn = f, Gn = Ue;
            switch (Qt = m, Dn = b, Gn.tag) {
              case 1:
                if (Bn = Gn.payload, typeof Bn == "function") {
                  en = Bn.call(Dn, en, Qt);
                  break e;
                }
                en = Bn;
                break e;
              case 3:
                Bn.flags = Bn.flags & -65537 | 128;
              case 0:
                if (Bn = Gn.payload, Qt = typeof Bn == "function" ? Bn.call(Dn, en, Qt) : Bn, Qt == null)
                  break e;
                en = X({}, en, Qt);
                break e;
              case 2:
                La = !0;
            }
          }
          Ue.callback !== null && Ue.lane !== 0 && (f.flags |= 64, Qt = I.effects, Qt === null ? I.effects = [Ue] : Qt.push(Ue));
        } else
          Dn = { eventTime: Dn, lane: Qt, tag: Ue.tag, payload: Ue.payload, callback: Ue.callback, next: null }, nn === null ? (Rt = nn = Dn, Ge = en) : nn = nn.next = Dn, pe |= Qt;
        if (Ue = Ue.next, Ue === null) {
          if (Ue = I.shared.pending, Ue === null)
            break;
          Qt = Ue, Ue = Qt.next, Qt.next = null, I.lastBaseUpdate = Qt, I.shared.pending = null;
        }
      } while (1);
      if (nn === null && (Ge = en), I.baseState = Ge, I.firstBaseUpdate = Rt, I.lastBaseUpdate = nn, m = I.shared.interleaved, m !== null) {
        I = m;
        do
          pe |= I.lane, I = I.next;
        while (I !== m);
      } else
        $ === null && (I.shared.lanes = 0);
      nd |= pe, f.lanes = pe, f.memoizedState = en;
    }
  }
  function ya(f, m, b) {
    if (f = m.effects, m.effects = null, f !== null)
      for (m = 0; m < f.length; m++) {
        var O = f[m], I = O.callback;
        if (I !== null) {
          if (O.callback = null, O = b, typeof I != "function")
            throw Error(t(191, I));
          I.call(O);
        }
      }
  }
  var gi = new n.Component().refs;
  function nl(f, m, b, O) {
    m = f.memoizedState, b = b(O, m), b = b == null ? m : X({}, m, b), f.memoizedState = b, f.lanes === 0 && (f.updateQueue.baseState = b);
  }
  var of = { isMounted: function(f) {
    return (f = f._reactInternals) ? _e(f) === f : !1;
  }, enqueueSetState: function(f, m, b) {
    f = f._reactInternals;
    var O = Qi(), I = To(f), $ = Xa(O, I);
    $.payload = m, b != null && ($.callback = b), m = Ec(f, $, I), m !== null && (ks(m, f, I, O), Oa(m, f, I));
  }, enqueueReplaceState: function(f, m, b) {
    f = f._reactInternals;
    var O = Qi(), I = To(f), $ = Xa(O, I);
    $.tag = 1, $.payload = m, b != null && ($.callback = b), m = Ec(f, $, I), m !== null && (ks(m, f, I, O), Oa(m, f, I));
  }, enqueueForceUpdate: function(f, m) {
    f = f._reactInternals;
    var b = Qi(), O = To(f), I = Xa(b, O);
    I.tag = 2, m != null && (I.callback = m), m = Ec(f, I, O), m !== null && (ks(m, f, O, b), Oa(m, f, O));
  } };
  function xo(f, m, b, O, I, $, pe) {
    return f = f.stateNode, typeof f.shouldComponentUpdate == "function" ? f.shouldComponentUpdate(O, $, pe) : m.prototype && m.prototype.isPureReactComponent ? !Sl(b, O) || !Sl(I, $) : !0;
  }
  function Vd(f, m, b) {
    var O = !1, I = $u, $ = m.contextType;
    return typeof $ == "object" && $ !== null ? $ = Ki($) : (I = ga(m) ? Rs : xr.current, O = m.contextTypes, $ = (O = O != null) ? el(f, I) : $u), m = new m(b, $), f.memoizedState = m.state !== null && m.state !== void 0 ? m.state : null, m.updater = of, f.stateNode = m, m._reactInternals = f, O && (f = f.stateNode, f.__reactInternalMemoizedUnmaskedChildContext = I, f.__reactInternalMemoizedMaskedChildContext = $), m;
  }
  function qu(f, m, b, O) {
    f = m.state, typeof m.componentWillReceiveProps == "function" && m.componentWillReceiveProps(b, O), typeof m.UNSAFE_componentWillReceiveProps == "function" && m.UNSAFE_componentWillReceiveProps(b, O), m.state !== f && of.enqueueReplaceState(m, m.state, null);
  }
  function Tu(f, m, b, O) {
    var I = f.stateNode;
    I.props = b, I.state = f.memoizedState, I.refs = gi, _n(f);
    var $ = m.contextType;
    typeof $ == "object" && $ !== null ? I.context = Ki($) : ($ = ga(m) ? Rs : xr.current, I.context = el(f, $)), I.state = f.memoizedState, $ = m.getDerivedStateFromProps, typeof $ == "function" && (nl(f, m, $, b), I.state = f.memoizedState), typeof m.getDerivedStateFromProps == "function" || typeof I.getSnapshotBeforeUpdate == "function" || typeof I.UNSAFE_componentWillMount != "function" && typeof I.componentWillMount != "function" || (m = I.state, typeof I.componentWillMount == "function" && I.componentWillMount(), typeof I.UNSAFE_componentWillMount == "function" && I.UNSAFE_componentWillMount(), m !== I.state && of.enqueueReplaceState(I, I.state, null), ua(f, b, I, O), I.state = f.memoizedState), typeof I.componentDidMount == "function" && (f.flags |= 4194308);
  }
  function Xf(f, m, b) {
    if (f = b.ref, f !== null && typeof f != "function" && typeof f != "object") {
      if (b._owner) {
        if (b = b._owner, b) {
          if (b.tag !== 1)
            throw Error(t(309));
          var O = b.stateNode;
        }
        if (!O)
          throw Error(t(147, f));
        var I = O, $ = "" + f;
        return m !== null && m.ref !== null && typeof m.ref == "function" && m.ref._stringRef === $ ? m.ref : (m = function(pe) {
          var Ue = I.refs;
          Ue === gi && (Ue = I.refs = {}), pe === null ? delete Ue[$] : Ue[$] = pe;
        }, m._stringRef = $, m);
      }
      if (typeof f != "string")
        throw Error(t(284));
      if (!b._owner)
        throw Error(t(290, f));
    }
    return f;
  }
  function qf(f, m) {
    throw f = Object.prototype.toString.call(m), Error(t(31, f === "[object Object]" ? "object with keys {" + Object.keys(m).join(", ") + "}" : f));
  }
  function rl(f) {
    var m = f._init;
    return m(f._payload);
  }
  function Pm(f) {
    function m(ht, Je) {
      if (f) {
        var bt = ht.deletions;
        bt === null ? (ht.deletions = [Je], ht.flags |= 16) : bt.push(Je);
      }
    }
    function b(ht, Je) {
      if (!f)
        return null;
      for (; Je !== null; )
        m(ht, Je), Je = Je.sibling;
      return null;
    }
    function O(ht, Je) {
      for (ht = /* @__PURE__ */ new Map(); Je !== null; )
        Je.key !== null ? ht.set(Je.key, Je) : ht.set(Je.index, Je), Je = Je.sibling;
      return ht;
    }
    function I(ht, Je) {
      return ht = Ql(ht, Je), ht.index = 0, ht.sibling = null, ht;
    }
    function $(ht, Je, bt) {
      return ht.index = bt, f ? (bt = ht.alternate, bt !== null ? (bt = bt.index, bt < Je ? (ht.flags |= 2, Je) : bt) : (ht.flags |= 2, Je)) : (ht.flags |= 1048576, Je);
    }
    function pe(ht) {
      return f && ht.alternate === null && (ht.flags |= 2), ht;
    }
    function Ue(ht, Je, bt, dn) {
      return Je === null || Je.tag !== 6 ? (Je = Du(bt, ht.mode, dn), Je.return = ht, Je) : (Je = I(Je, bt), Je.return = ht, Je);
    }
    function Ge(ht, Je, bt, dn) {
      var Wn = bt.type;
      return Wn === Y ? nn(ht, Je, bt.props.children, dn, bt.key) : Je !== null && (Je.elementType === Wn || typeof Wn == "object" && Wn !== null && Wn.$$typeof === be && rl(Wn) === Je.type) ? (dn = I(Je, bt.props), dn.ref = Xf(ht, Je, bt), dn.return = ht, dn) : (dn = Jd(bt.type, bt.key, bt.props, null, ht.mode, dn), dn.ref = Xf(ht, Je, bt), dn.return = ht, dn);
    }
    function Rt(ht, Je, bt, dn) {
      return Je === null || Je.tag !== 4 || Je.stateNode.containerInfo !== bt.containerInfo || Je.stateNode.implementation !== bt.implementation ? (Je = fa(bt, ht.mode, dn), Je.return = ht, Je) : (Je = I(Je, bt.children || []), Je.return = ht, Je);
    }
    function nn(ht, Je, bt, dn, Wn) {
      return Je === null || Je.tag !== 7 ? (Je = kp(bt, ht.mode, dn, Wn), Je.return = ht, Je) : (Je = I(Je, bt), Je.return = ht, Je);
    }
    function en(ht, Je, bt) {
      if (typeof Je == "string" && Je !== "" || typeof Je == "number")
        return Je = Du("" + Je, ht.mode, bt), Je.return = ht, Je;
      if (typeof Je == "object" && Je !== null) {
        switch (Je.$$typeof) {
          case B:
            return bt = Jd(Je.type, Je.key, Je.props, null, ht.mode, bt), bt.ref = Xf(ht, null, Je), bt.return = ht, bt;
          case j:
            return Je = fa(Je, ht.mode, bt), Je.return = ht, Je;
          case be:
            var dn = Je._init;
            return en(ht, dn(Je._payload), bt);
        }
        if (kt(Je) || ye(Je))
          return Je = kp(Je, ht.mode, bt, null), Je.return = ht, Je;
        qf(ht, Je);
      }
      return null;
    }
    function Qt(ht, Je, bt, dn) {
      var Wn = Je !== null ? Je.key : null;
      if (typeof bt == "string" && bt !== "" || typeof bt == "number")
        return Wn !== null ? null : Ue(ht, Je, "" + bt, dn);
      if (typeof bt == "object" && bt !== null) {
        switch (bt.$$typeof) {
          case B:
            return bt.key === Wn ? Ge(ht, Je, bt, dn) : null;
          case j:
            return bt.key === Wn ? Rt(ht, Je, bt, dn) : null;
          case be:
            return Wn = bt._init, Qt(
              ht,
              Je,
              Wn(bt._payload),
              dn
            );
        }
        if (kt(bt) || ye(bt))
          return Wn !== null ? null : nn(ht, Je, bt, dn, null);
        qf(ht, bt);
      }
      return null;
    }
    function Dn(ht, Je, bt, dn, Wn) {
      if (typeof dn == "string" && dn !== "" || typeof dn == "number")
        return ht = ht.get(bt) || null, Ue(Je, ht, "" + dn, Wn);
      if (typeof dn == "object" && dn !== null) {
        switch (dn.$$typeof) {
          case B:
            return ht = ht.get(dn.key === null ? bt : dn.key) || null, Ge(Je, ht, dn, Wn);
          case j:
            return ht = ht.get(dn.key === null ? bt : dn.key) || null, Rt(Je, ht, dn, Wn);
          case be:
            var Vn = dn._init;
            return Dn(ht, Je, bt, Vn(dn._payload), Wn);
        }
        if (kt(dn) || ye(dn))
          return ht = ht.get(bt) || null, nn(Je, ht, dn, Wn, null);
        qf(Je, dn);
      }
      return null;
    }
    function Bn(ht, Je, bt, dn) {
      for (var Wn = null, Vn = null, lr = Je, Cr = Je = 0, fs = null; lr !== null && Cr < bt.length; Cr++) {
        lr.index > Cr ? (fs = lr, lr = null) : fs = lr.sibling;
        var zi = Qt(ht, lr, bt[Cr], dn);
        if (zi === null) {
          lr === null && (lr = fs);
          break;
        }
        f && lr && zi.alternate === null && m(ht, lr), Je = $(zi, Je, Cr), Vn === null ? Wn = zi : Vn.sibling = zi, Vn = zi, lr = fs;
      }
      if (Cr === bt.length)
        return b(ht, lr), la && No(ht, Cr), Wn;
      if (lr === null) {
        for (; Cr < bt.length; Cr++)
          lr = en(ht, bt[Cr], dn), lr !== null && (Je = $(lr, Je, Cr), Vn === null ? Wn = lr : Vn.sibling = lr, Vn = lr);
        return la && No(ht, Cr), Wn;
      }
      for (lr = O(ht, lr); Cr < bt.length; Cr++)
        fs = Dn(lr, ht, Cr, bt[Cr], dn), fs !== null && (f && fs.alternate !== null && lr.delete(fs.key === null ? Cr : fs.key), Je = $(fs, Je, Cr), Vn === null ? Wn = fs : Vn.sibling = fs, Vn = fs);
      return f && lr.forEach(function(Ac) {
        return m(ht, Ac);
      }), la && No(ht, Cr), Wn;
    }
    function Gn(ht, Je, bt, dn) {
      var Wn = ye(bt);
      if (typeof Wn != "function")
        throw Error(t(150));
      if (bt = Wn.call(bt), bt == null)
        throw Error(t(151));
      for (var Vn = Wn = null, lr = Je, Cr = Je = 0, fs = null, zi = bt.next(); lr !== null && !zi.done; Cr++, zi = bt.next()) {
        lr.index > Cr ? (fs = lr, lr = null) : fs = lr.sibling;
        var Ac = Qt(ht, lr, zi.value, dn);
        if (Ac === null) {
          lr === null && (lr = fs);
          break;
        }
        f && lr && Ac.alternate === null && m(ht, lr), Je = $(Ac, Je, Cr), Vn === null ? Wn = Ac : Vn.sibling = Ac, Vn = Ac, lr = fs;
      }
      if (zi.done)
        return b(
          ht,
          lr
        ), la && No(ht, Cr), Wn;
      if (lr === null) {
        for (; !zi.done; Cr++, zi = bt.next())
          zi = en(ht, zi.value, dn), zi !== null && (Je = $(zi, Je, Cr), Vn === null ? Wn = zi : Vn.sibling = zi, Vn = zi);
        return la && No(ht, Cr), Wn;
      }
      for (lr = O(ht, lr); !zi.done; Cr++, zi = bt.next())
        zi = Dn(lr, ht, Cr, zi.value, dn), zi !== null && (f && zi.alternate !== null && lr.delete(zi.key === null ? Cr : zi.key), Je = $(zi, Je, Cr), Vn === null ? Wn = zi : Vn.sibling = zi, Vn = zi);
      return f && lr.forEach(function(uy) {
        return m(ht, uy);
      }), la && No(ht, Cr), Wn;
    }
    function co(ht, Je, bt, dn) {
      if (typeof bt == "object" && bt !== null && bt.type === Y && bt.key === null && (bt = bt.props.children), typeof bt == "object" && bt !== null) {
        switch (bt.$$typeof) {
          case B:
            e: {
              for (var Wn = bt.key, Vn = Je; Vn !== null; ) {
                if (Vn.key === Wn) {
                  if (Wn = bt.type, Wn === Y) {
                    if (Vn.tag === 7) {
                      b(ht, Vn.sibling), Je = I(Vn, bt.props.children), Je.return = ht, ht = Je;
                      break e;
                    }
                  } else if (Vn.elementType === Wn || typeof Wn == "object" && Wn !== null && Wn.$$typeof === be && rl(Wn) === Vn.type) {
                    b(ht, Vn.sibling), Je = I(Vn, bt.props), Je.ref = Xf(ht, Vn, bt), Je.return = ht, ht = Je;
                    break e;
                  }
                  b(ht, Vn);
                  break;
                } else
                  m(ht, Vn);
                Vn = Vn.sibling;
              }
              bt.type === Y ? (Je = kp(bt.props.children, ht.mode, dn, bt.key), Je.return = ht, ht = Je) : (dn = Jd(bt.type, bt.key, bt.props, null, ht.mode, dn), dn.ref = Xf(ht, Je, bt), dn.return = ht, ht = dn);
            }
            return pe(ht);
          case j:
            e: {
              for (Vn = bt.key; Je !== null; ) {
                if (Je.key === Vn)
                  if (Je.tag === 4 && Je.stateNode.containerInfo === bt.containerInfo && Je.stateNode.implementation === bt.implementation) {
                    b(ht, Je.sibling), Je = I(Je, bt.children || []), Je.return = ht, ht = Je;
                    break e;
                  } else {
                    b(ht, Je);
                    break;
                  }
                else
                  m(ht, Je);
                Je = Je.sibling;
              }
              Je = fa(bt, ht.mode, dn), Je.return = ht, ht = Je;
            }
            return pe(ht);
          case be:
            return Vn = bt._init, co(ht, Je, Vn(bt._payload), dn);
        }
        if (kt(bt))
          return Bn(ht, Je, bt, dn);
        if (ye(bt))
          return Gn(ht, Je, bt, dn);
        qf(ht, bt);
      }
      return typeof bt == "string" && bt !== "" || typeof bt == "number" ? (bt = "" + bt, Je !== null && Je.tag === 6 ? (b(ht, Je.sibling), Je = I(Je, bt), Je.return = ht, ht = Je) : (b(ht, Je), Je = Du(bt, ht.mode, dn), Je.return = ht, ht = Je), pe(ht)) : b(ht, Je);
    }
    return co;
  }
  var Kf = Pm(!0), Gd = Pm(!1), sf = {}, Tl = Yn(sf), wu = Yn(sf), lf = Yn(sf);
  function wl(f) {
    if (f === sf)
      throw Error(t(174));
    return f;
  }
  function Ah(f, m) {
    switch (wi(lf, m), wi(wu, f), wi(Tl, sf), f = m.nodeType, f) {
      case 9:
      case 11:
        m = (m = m.documentElement) ? m.namespaceURI : ut(null, "");
        break;
      default:
        f = f === 8 ? m.parentNode : m, m = f.namespaceURI || null, f = f.tagName, m = ut(m, f);
    }
    hi(Tl), wi(Tl, m);
  }
  function Mu() {
    hi(Tl), hi(wu), hi(lf);
  }
  function ar(f) {
    wl(lf.current);
    var m = wl(Tl.current), b = ut(m, f.type);
    m !== b && (wi(wu, f), wi(Tl, b));
  }
  function Fr(f) {
    wu.current === f && (hi(Tl), hi(wu));
  }
  var or = Yn(0);
  function ai(f) {
    for (var m = f; m !== null; ) {
      if (m.tag === 13) {
        var b = m.memoizedState;
        if (b !== null && (b = b.dehydrated, b === null || b.data === "$?" || b.data === "$!"))
          return m;
      } else if (m.tag === 19 && m.memoizedProps.revealOrder !== void 0) {
        if (m.flags & 128)
          return m;
      } else if (m.child !== null) {
        m.child.return = m, m = m.child;
        continue;
      }
      if (m === f)
        break;
      for (; m.sibling === null; ) {
        if (m.return === null || m.return === f)
          return null;
        m = m.return;
      }
      m.sibling.return = m.return, m = m.sibling;
    }
    return null;
  }
  var Fo = [];
  function il() {
    for (var f = 0; f < Fo.length; f++)
      Fo[f]._workInProgressVersionPrimary = null;
    Fo.length = 0;
  }
  var uf = H.ReactCurrentDispatcher, Ps = H.ReactCurrentBatchConfig, zo = 0, yi = null, Bt = null, ci = null, Kn = !1, Ku = !1, al = 0, Yo = 0;
  function Fi() {
    throw Error(t(321));
  }
  function Qf(f, m) {
    if (m === null)
      return !1;
    for (var b = 0; b < m.length && b < f.length; b++)
      if (!ja(f[b], m[b]))
        return !1;
    return !0;
  }
  function cf(f, m, b, O, I, $) {
    if (zo = $, yi = m, m.memoizedState = null, m.updateQueue = null, m.lanes = 0, uf.current = f === null || f.memoizedState === null ? S : D, f = b(O, I), Ku) {
      $ = 0;
      do {
        if (Ku = !1, al = 0, 25 <= $)
          throw Error(t(301));
        $ += 1, ci = Bt = null, m.updateQueue = null, uf.current = z, f = b(O, I);
      } while (Ku);
    }
    if (uf.current = g, m = Bt !== null && Bt.next !== null, zo = 0, ci = Bt = yi = null, Kn = !1, m)
      throw Error(t(300));
    return f;
  }
  function ff() {
    var f = al !== 0;
    return al = 0, f;
  }
  function Xo() {
    var f = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return ci === null ? yi.memoizedState = ci = f : ci = ci.next = f, ci;
  }
  function Ml() {
    if (Bt === null) {
      var f = yi.alternate;
      f = f !== null ? f.memoizedState : null;
    } else
      f = Bt.next;
    var m = ci === null ? yi.memoizedState : ci.next;
    if (m !== null)
      ci = m, Bt = f;
    else {
      if (f === null)
        throw Error(t(310));
      Bt = f, f = { memoizedState: Bt.memoizedState, baseState: Bt.baseState, baseQueue: Bt.baseQueue, queue: Bt.queue, next: null }, ci === null ? yi.memoizedState = ci = f : ci = ci.next = f;
    }
    return ci;
  }
  function Zf(f, m) {
    return typeof m == "function" ? m(f) : m;
  }
  function Wd(f) {
    var m = Ml(), b = m.queue;
    if (b === null)
      throw Error(t(311));
    b.lastRenderedReducer = f;
    var O = Bt, I = O.baseQueue, $ = b.pending;
    if ($ !== null) {
      if (I !== null) {
        var pe = I.next;
        I.next = $.next, $.next = pe;
      }
      O.baseQueue = I = $, b.pending = null;
    }
    if (I !== null) {
      $ = I.next, O = O.baseState;
      var Ue = pe = null, Ge = null, Rt = $;
      do {
        var nn = Rt.lane;
        if ((zo & nn) === nn)
          Ge !== null && (Ge = Ge.next = { lane: 0, action: Rt.action, hasEagerState: Rt.hasEagerState, eagerState: Rt.eagerState, next: null }), O = Rt.hasEagerState ? Rt.eagerState : f(O, Rt.action);
        else {
          var en = {
            lane: nn,
            action: Rt.action,
            hasEagerState: Rt.hasEagerState,
            eagerState: Rt.eagerState,
            next: null
          };
          Ge === null ? (Ue = Ge = en, pe = O) : Ge = Ge.next = en, yi.lanes |= nn, nd |= nn;
        }
        Rt = Rt.next;
      } while (Rt !== null && Rt !== $);
      Ge === null ? pe = O : Ge.next = Ue, ja(O, m.memoizedState) || (xn = !0), m.memoizedState = O, m.baseState = pe, m.baseQueue = Ge, b.lastRenderedState = O;
    }
    if (f = b.interleaved, f !== null) {
      I = f;
      do
        $ = I.lane, yi.lanes |= $, nd |= $, I = I.next;
      while (I !== f);
    } else
      I === null && (b.lanes = 0);
    return [m.memoizedState, b.dispatch];
  }
  function ss(f) {
    var m = Ml(), b = m.queue;
    if (b === null)
      throw Error(t(311));
    b.lastRenderedReducer = f;
    var O = b.dispatch, I = b.pending, $ = m.memoizedState;
    if (I !== null) {
      b.pending = null;
      var pe = I = I.next;
      do
        $ = f($, pe.action), pe = pe.next;
      while (pe !== I);
      ja($, m.memoizedState) || (xn = !0), m.memoizedState = $, m.baseQueue === null && (m.baseState = $), b.lastRenderedState = $;
    }
    return [$, O];
  }
  function Cl() {
  }
  function Um(f, m) {
    var b = yi, O = Ml(), I = m(), $ = !ja(O.memoizedState, I);
    if ($ && (O.memoizedState = I, xn = !0), O = O.queue, Qu(Ci.bind(null, b, O, f), [f]), O.getSnapshot !== m || $ || ci !== null && ci.memoizedState.tag & 1) {
      if (b.flags |= 2048, Xl(9, Eo.bind(null, b, O, I, m), void 0, null), Bi === null)
        throw Error(t(349));
      zo & 30 || bc(b, m, I);
    }
    return I;
  }
  function bc(f, m, b) {
    f.flags |= 16384, f = { getSnapshot: m, value: b }, m = yi.updateQueue, m === null ? (m = { lastEffect: null, stores: null }, yi.updateQueue = m, m.stores = [f]) : (b = m.stores, b === null ? m.stores = [f] : b.push(f));
  }
  function Eo(f, m, b, O) {
    m.value = b, m.getSnapshot = O, Yl(m) && ol(f);
  }
  function Ci(f, m, b) {
    return b(function() {
      Yl(m) && ol(f);
    });
  }
  function Yl(f) {
    var m = f.getSnapshot;
    f = f.value;
    try {
      var b = m();
      return !ja(f, b);
    } catch {
      return !0;
    }
  }
  function ol(f) {
    var m = Os(f, 1);
    m !== null && ks(m, f, 1, -1);
  }
  function Nm(f) {
    var m = Xo();
    return typeof f == "function" && (f = f()), m.memoizedState = m.baseState = f, f = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Zf, lastRenderedState: f }, m.queue = f, f = f.dispatch = mf.bind(null, yi, f), [m.memoizedState, f];
  }
  function Xl(f, m, b, O) {
    return f = { tag: f, create: m, destroy: b, deps: O, next: null }, m = yi.updateQueue, m === null ? (m = { lastEffect: null, stores: null }, yi.updateQueue = m, m.lastEffect = f.next = f) : (b = m.lastEffect, b === null ? m.lastEffect = f.next = f : (O = b.next, b.next = f, f.next = O, m.lastEffect = f)), f;
  }
  function df() {
    return Ml().memoizedState;
  }
  function Cu(f, m, b, O) {
    var I = Xo();
    yi.flags |= f, I.memoizedState = Xl(1 | m, b, void 0, O === void 0 ? null : O);
  }
  function ql(f, m, b, O) {
    var I = Ml();
    O = O === void 0 ? null : O;
    var $ = void 0;
    if (Bt !== null) {
      var pe = Bt.memoizedState;
      if ($ = pe.destroy, O !== null && Qf(O, pe.deps)) {
        I.memoizedState = Xl(m, b, $, O);
        return;
      }
    }
    yi.flags |= f, I.memoizedState = Xl(1 | m, b, $, O);
  }
  function Io(f, m) {
    return Cu(8390656, 8, f, m);
  }
  function Qu(f, m) {
    return ql(2048, 8, f, m);
  }
  function Jf(f, m) {
    return ql(4, 2, f, m);
  }
  function ls(f, m) {
    return ql(4, 4, f, m);
  }
  function hf(f, m) {
    if (typeof m == "function")
      return f = f(), m(f), function() {
        m(null);
      };
    if (m != null)
      return f = f(), m.current = f, function() {
        m.current = null;
      };
  }
  function Kl(f, m, b) {
    return b = b != null ? b.concat([f]) : null, ql(4, 4, hf.bind(null, m, f), b);
  }
  function ed() {
  }
  function pf(f, m) {
    var b = Ml();
    m = m === void 0 ? null : m;
    var O = b.memoizedState;
    return O !== null && m !== null && Qf(m, O[1]) ? O[0] : (b.memoizedState = [f, m], f);
  }
  function Ru(f, m) {
    var b = Ml();
    m = m === void 0 ? null : m;
    var O = b.memoizedState;
    return O !== null && m !== null && Qf(m, O[1]) ? O[0] : (f = f(), b.memoizedState = [f, m], f);
  }
  function Rl(f, m, b) {
    return zo & 21 ? (ja(b, m) || (b = Ao(), yi.lanes |= b, nd |= b, f.baseState = !0), m) : (f.baseState && (f.baseState = !1, xn = !0), f.memoizedState = b);
  }
  function qg(f, m) {
    var b = Br;
    Br = b !== 0 && 4 > b ? b : 4, f(!0);
    var O = Ps.transition;
    Ps.transition = {};
    try {
      f(!1), m();
    } finally {
      Br = b, Ps.transition = O;
    }
  }
  function oi() {
    return Ml().memoizedState;
  }
  function td(f, m, b) {
    var O = To(f);
    if (b = { lane: O, action: b, hasEagerState: !1, eagerState: null, next: null }, Zu(f))
      Tc(m, b);
    else if (b = Om(f, m, b, O), b !== null) {
      var I = Qi();
      ks(b, f, O, I), km(b, m, O);
    }
  }
  function mf(f, m, b) {
    var O = To(f), I = { lane: O, action: b, hasEagerState: !1, eagerState: null, next: null };
    if (Zu(f))
      Tc(m, I);
    else {
      var $ = f.alternate;
      if (f.lanes === 0 && ($ === null || $.lanes === 0) && ($ = m.lastRenderedReducer, $ !== null))
        try {
          var pe = m.lastRenderedState, Ue = $(pe, b);
          if (I.hasEagerState = !0, I.eagerState = Ue, ja(Ue, pe)) {
            var Ge = m.interleaved;
            Ge === null ? (I.next = I, wp(m)) : (I.next = Ge.next, Ge.next = I), m.interleaved = I;
            return;
          }
        } catch {
        } finally {
        }
      b = Om(f, m, I, O), b !== null && (I = Qi(), ks(b, f, O, I), km(b, m, O));
    }
  }
  function Zu(f) {
    var m = f.alternate;
    return f === yi || m !== null && m === yi;
  }
  function Tc(f, m) {
    Ku = Kn = !0;
    var b = f.pending;
    b === null ? m.next = m : (m.next = b.next, b.next = m), f.pending = m;
  }
  function km(f, m, b) {
    if (b & 4194240) {
      var O = m.lanes;
      O &= f.pendingLanes, b |= O, m.lanes = b, Wo(f, b);
    }
  }
  var g = { readContext: Ki, useCallback: Fi, useContext: Fi, useEffect: Fi, useImperativeHandle: Fi, useInsertionEffect: Fi, useLayoutEffect: Fi, useMemo: Fi, useReducer: Fi, useRef: Fi, useState: Fi, useDebugValue: Fi, useDeferredValue: Fi, useTransition: Fi, useMutableSource: Fi, useSyncExternalStore: Fi, useId: Fi, unstable_isNewReconciler: !1 }, S = { readContext: Ki, useCallback: function(f, m) {
    return Xo().memoizedState = [f, m === void 0 ? null : m], f;
  }, useContext: Ki, useEffect: Io, useImperativeHandle: function(f, m, b) {
    return b = b != null ? b.concat([f]) : null, Cu(
      4194308,
      4,
      hf.bind(null, m, f),
      b
    );
  }, useLayoutEffect: function(f, m) {
    return Cu(4194308, 4, f, m);
  }, useInsertionEffect: function(f, m) {
    return Cu(4, 2, f, m);
  }, useMemo: function(f, m) {
    var b = Xo();
    return m = m === void 0 ? null : m, f = f(), b.memoizedState = [f, m], f;
  }, useReducer: function(f, m, b) {
    var O = Xo();
    return m = b !== void 0 ? b(m) : m, O.memoizedState = O.baseState = m, f = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: f, lastRenderedState: m }, O.queue = f, f = f.dispatch = td.bind(null, yi, f), [O.memoizedState, f];
  }, useRef: function(f) {
    var m = Xo();
    return f = { current: f }, m.memoizedState = f;
  }, useState: Nm, useDebugValue: ed, useDeferredValue: function(f) {
    return Xo().memoizedState = f;
  }, useTransition: function() {
    var f = Nm(!1), m = f[0];
    return f = qg.bind(null, f[1]), Xo().memoizedState = f, [m, f];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(f, m, b) {
    var O = yi, I = Xo();
    if (la) {
      if (b === void 0)
        throw Error(t(407));
      b = b();
    } else {
      if (b = m(), Bi === null)
        throw Error(t(349));
      zo & 30 || bc(O, m, b);
    }
    I.memoizedState = b;
    var $ = { value: b, getSnapshot: m };
    return I.queue = $, Io(Ci.bind(
      null,
      O,
      $,
      f
    ), [f]), O.flags |= 2048, Xl(9, Eo.bind(null, O, $, b, m), void 0, null), b;
  }, useId: function() {
    var f = Xo(), m = Bi.identifierPrefix;
    if (la) {
      var b = xl, O = cn;
      b = (O & ~(1 << 32 - di(O) - 1)).toString(32) + b, m = ":" + m + "R" + b, b = al++, 0 < b && (m += "H" + b.toString(32)), m += ":";
    } else
      b = Yo++, m = ":" + m + "r" + b.toString(32) + ":";
    return f.memoizedState = m;
  }, unstable_isNewReconciler: !1 }, D = {
    readContext: Ki,
    useCallback: pf,
    useContext: Ki,
    useEffect: Qu,
    useImperativeHandle: Kl,
    useInsertionEffect: Jf,
    useLayoutEffect: ls,
    useMemo: Ru,
    useReducer: Wd,
    useRef: df,
    useState: function() {
      return Wd(Zf);
    },
    useDebugValue: ed,
    useDeferredValue: function(f) {
      var m = Ml();
      return Rl(m, Bt.memoizedState, f);
    },
    useTransition: function() {
      var f = Wd(Zf)[0], m = Ml().memoizedState;
      return [f, m];
    },
    useMutableSource: Cl,
    useSyncExternalStore: Um,
    useId: oi,
    unstable_isNewReconciler: !1
  }, z = { readContext: Ki, useCallback: pf, useContext: Ki, useEffect: Qu, useImperativeHandle: Kl, useInsertionEffect: Jf, useLayoutEffect: ls, useMemo: Ru, useReducer: ss, useRef: df, useState: function() {
    return ss(Zf);
  }, useDebugValue: ed, useDeferredValue: function(f) {
    var m = Ml();
    return Bt === null ? m.memoizedState = f : Rl(m, Bt.memoizedState, f);
  }, useTransition: function() {
    var f = ss(Zf)[0], m = Ml().memoizedState;
    return [f, m];
  }, useMutableSource: Cl, useSyncExternalStore: Um, useId: oi, unstable_isNewReconciler: !1 };
  function W(f, m) {
    try {
      var b = "", O = m;
      do
        b += De(O), O = O.return;
      while (O);
      var I = b;
    } catch ($) {
      I = `
Error generating stack: ` + $.message + `
` + $.stack;
    }
    return { value: f, source: m, stack: I, digest: null };
  }
  function te(f, m, b) {
    return { value: f, source: null, stack: b ?? null, digest: m ?? null };
  }
  function Le(f, m) {
    try {
      console.error(m.value);
    } catch (b) {
      setTimeout(function() {
        throw b;
      });
    }
  }
  var nt = typeof WeakMap == "function" ? WeakMap : Map;
  function It(f, m, b) {
    b = Xa(-1, b), b.tag = 3, b.payload = { element: null };
    var O = m.value;
    return b.callback = function() {
      ny || (ny = !0, Up = O), Le(f, m);
    }, b;
  }
  function on(f, m, b) {
    b = Xa(-1, b), b.tag = 3;
    var O = f.type.getDerivedStateFromError;
    if (typeof O == "function") {
      var I = m.value;
      b.payload = function() {
        return O(I);
      }, b.callback = function() {
        Le(f, m);
      };
    }
    var $ = f.stateNode;
    return $ !== null && typeof $.componentDidCatch == "function" && (b.callback = function() {
      Le(f, m), typeof O != "function" && (rd === null ? rd = /* @__PURE__ */ new Set([this]) : rd.add(this));
      var pe = m.stack;
      this.componentDidCatch(m.value, { componentStack: pe !== null ? pe : "" });
    }), b;
  }
  function mn(f, m, b) {
    var O = f.pingCache;
    if (O === null) {
      O = f.pingCache = new nt();
      var I = /* @__PURE__ */ new Set();
      O.set(m, I);
    } else
      I = O.get(m), I === void 0 && (I = /* @__PURE__ */ new Set(), O.set(m, I));
    I.has(b) || (I.add(b), f = U0.bind(null, f, m, b), m.then(f, f));
  }
  function yr(f) {
    do {
      var m;
      if ((m = f.tag === 13) && (m = f.memoizedState, m = m !== null ? m.dehydrated !== null : !0), m)
        return f;
      f = f.return;
    } while (f !== null);
    return null;
  }
  function sr(f, m, b, O, I) {
    return f.mode & 1 ? (f.flags |= 65536, f.lanes = I, f) : (f === m ? f.flags |= 65536 : (f.flags |= 128, b.flags |= 131072, b.flags &= -52805, b.tag === 1 && (b.alternate === null ? b.tag = 17 : (m = Xa(-1, 1), m.tag = 2, Ec(b, m, 1))), b.lanes |= 1), f);
  }
  var ca = H.ReactCurrentOwner, xn = !1;
  function Si(f, m, b, O) {
    m.child = f === null ? Gd(m, null, b, O) : Kf(m, f.child, b, O);
  }
  function qa(f, m, b, O, I) {
    b = b.render;
    var $ = m.ref;
    return gn(m, I), O = cf(f, m, b, O, $, I), b = ff(), f !== null && !xn ? (m.updateQueue = f.updateQueue, m.flags &= -2053, f.lanes &= ~I, us(f, m, I)) : (la && b && Tp(m), m.flags |= 1, Si(f, m, O, I), m.child);
  }
  function _t(f, m, b, O, I) {
    if (f === null) {
      var $ = b.type;
      return typeof $ == "function" && !Hv($) && $.defaultProps === void 0 && b.compare === null && b.defaultProps === void 0 ? (m.tag = 15, m.type = $, Xe(f, m, $, O, I)) : (f = Jd(b.type, null, O, m, m.mode, I), f.ref = m.ref, f.return = m, m.child = f);
    }
    if ($ = f.child, !(f.lanes & I)) {
      var pe = $.memoizedProps;
      if (b = b.compare, b = b !== null ? b : Sl, b(pe, O) && f.ref === m.ref)
        return us(f, m, I);
    }
    return m.flags |= 1, f = Ql($, O), f.ref = m.ref, f.return = m, m.child = f;
  }
  function Xe(f, m, b, O, I) {
    if (f !== null) {
      var $ = f.memoizedProps;
      if (Sl($, O) && f.ref === m.ref)
        if (xn = !1, m.pendingProps = O = $, (f.lanes & I) !== 0)
          f.flags & 131072 && (xn = !0);
        else
          return m.lanes = f.lanes, us(f, m, I);
    }
    return Nn(f, m, b, O, I);
  }
  function Lt(f, m, b) {
    var O = m.pendingProps, I = O.children, $ = f !== null ? f.memoizedState : null;
    if (O.mode === "hidden")
      if (!(m.mode & 1))
        m.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, wi(Im, ec), ec |= b;
      else {
        if (!(b & 1073741824))
          return f = $ !== null ? $.baseLanes | b : b, m.lanes = m.childLanes = 1073741824, m.memoizedState = { baseLanes: f, cachePool: null, transitions: null }, m.updateQueue = null, wi(Im, ec), ec |= f, null;
        m.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, O = $ !== null ? $.baseLanes : b, wi(Im, ec), ec |= O;
      }
    else
      $ !== null ? (O = $.baseLanes | b, m.memoizedState = null) : O = b, wi(Im, ec), ec |= O;
    return Si(f, m, I, b), m.child;
  }
  function Xt(f, m) {
    var b = m.ref;
    (f === null && b !== null || f !== null && f.ref !== b) && (m.flags |= 512, m.flags |= 2097152);
  }
  function Nn(f, m, b, O, I) {
    var $ = ga(b) ? Rs : xr.current;
    return $ = el(m, $), gn(m, I), b = cf(f, m, b, O, $, I), O = ff(), f !== null && !xn ? (m.updateQueue = f.updateQueue, m.flags &= -2053, f.lanes &= ~I, us(f, m, I)) : (la && O && Tp(m), m.flags |= 1, Si(f, m, b, I), m.child);
  }
  function zr(f, m, b, O, I) {
    if (ga(b)) {
      var $ = !0;
      xc(m);
    } else
      $ = !1;
    if (gn(m, I), m.stateNode === null)
      Us(f, m), Vd(m, b, O), Tu(m, b, O, I), O = !0;
    else if (f === null) {
      var pe = m.stateNode, Ue = m.memoizedProps;
      pe.props = Ue;
      var Ge = pe.context, Rt = b.contextType;
      typeof Rt == "object" && Rt !== null ? Rt = Ki(Rt) : (Rt = ga(b) ? Rs : xr.current, Rt = el(m, Rt));
      var nn = b.getDerivedStateFromProps, en = typeof nn == "function" || typeof pe.getSnapshotBeforeUpdate == "function";
      en || typeof pe.UNSAFE_componentWillReceiveProps != "function" && typeof pe.componentWillReceiveProps != "function" || (Ue !== O || Ge !== Rt) && qu(m, pe, O, Rt), La = !1;
      var Qt = m.memoizedState;
      pe.state = Qt, ua(m, O, pe, I), Ge = m.memoizedState, Ue !== O || Qt !== Ge || Ia.current || La ? (typeof nn == "function" && (nl(m, b, nn, O), Ge = m.memoizedState), (Ue = La || xo(m, b, Ue, O, Qt, Ge, Rt)) ? (en || typeof pe.UNSAFE_componentWillMount != "function" && typeof pe.componentWillMount != "function" || (typeof pe.componentWillMount == "function" && pe.componentWillMount(), typeof pe.UNSAFE_componentWillMount == "function" && pe.UNSAFE_componentWillMount()), typeof pe.componentDidMount == "function" && (m.flags |= 4194308)) : (typeof pe.componentDidMount == "function" && (m.flags |= 4194308), m.memoizedProps = O, m.memoizedState = Ge), pe.props = O, pe.state = Ge, pe.context = Rt, O = Ue) : (typeof pe.componentDidMount == "function" && (m.flags |= 4194308), O = !1);
    } else {
      pe = m.stateNode, na(f, m), Ue = m.memoizedProps, Rt = m.type === m.elementType ? Ue : bl(m.type, Ue), pe.props = Rt, en = m.pendingProps, Qt = pe.context, Ge = b.contextType, typeof Ge == "object" && Ge !== null ? Ge = Ki(Ge) : (Ge = ga(b) ? Rs : xr.current, Ge = el(m, Ge));
      var Dn = b.getDerivedStateFromProps;
      (nn = typeof Dn == "function" || typeof pe.getSnapshotBeforeUpdate == "function") || typeof pe.UNSAFE_componentWillReceiveProps != "function" && typeof pe.componentWillReceiveProps != "function" || (Ue !== en || Qt !== Ge) && qu(m, pe, O, Ge), La = !1, Qt = m.memoizedState, pe.state = Qt, ua(m, O, pe, I);
      var Bn = m.memoizedState;
      Ue !== en || Qt !== Bn || Ia.current || La ? (typeof Dn == "function" && (nl(m, b, Dn, O), Bn = m.memoizedState), (Rt = La || xo(m, b, Rt, O, Qt, Bn, Ge) || !1) ? (nn || typeof pe.UNSAFE_componentWillUpdate != "function" && typeof pe.componentWillUpdate != "function" || (typeof pe.componentWillUpdate == "function" && pe.componentWillUpdate(O, Bn, Ge), typeof pe.UNSAFE_componentWillUpdate == "function" && pe.UNSAFE_componentWillUpdate(O, Bn, Ge)), typeof pe.componentDidUpdate == "function" && (m.flags |= 4), typeof pe.getSnapshotBeforeUpdate == "function" && (m.flags |= 1024)) : (typeof pe.componentDidUpdate != "function" || Ue === f.memoizedProps && Qt === f.memoizedState || (m.flags |= 4), typeof pe.getSnapshotBeforeUpdate != "function" || Ue === f.memoizedProps && Qt === f.memoizedState || (m.flags |= 1024), m.memoizedProps = O, m.memoizedState = Bn), pe.props = O, pe.state = Bn, pe.context = Ge, O = Rt) : (typeof pe.componentDidUpdate != "function" || Ue === f.memoizedProps && Qt === f.memoizedState || (m.flags |= 4), typeof pe.getSnapshotBeforeUpdate != "function" || Ue === f.memoizedProps && Qt === f.memoizedState || (m.flags |= 1024), O = !1);
    }
    return mr(f, m, b, O, $, I);
  }
  function mr(f, m, b, O, I, $) {
    Xt(f, m);
    var pe = (m.flags & 128) !== 0;
    if (!O && !pe)
      return I && Av(m, b, !1), us(f, m, $);
    O = m.stateNode, ca.current = m;
    var Ue = pe && typeof b.getDerivedStateFromError != "function" ? null : O.render();
    return m.flags |= 1, f !== null && pe ? (m.child = Kf(m, f.child, null, $), m.child = Kf(m, null, Ue, $)) : Si(f, m, Ue, $), m.memoizedState = O.state, I && Av(m, b, !0), m.child;
  }
  function ei(f) {
    var m = f.stateNode;
    m.pendingContext ? _c(f, m.pendingContext, m.pendingContext !== m.context) : m.context && _c(f, m.context, !1), Ah(f, m.containerInfo);
  }
  function Pa(f, m, b, O, I) {
    return Ta(), Mh(I), m.flags |= 256, Si(f, m, b, O), m.child;
  }
  var ti = { dehydrated: null, treeContext: null, retryLane: 0 };
  function wc(f) {
    return { baseLanes: f, cachePool: null, transitions: null };
  }
  function Dh(f, m, b) {
    var O = m.pendingProps, I = or.current, $ = !1, pe = (m.flags & 128) !== 0, Ue;
    if ((Ue = pe) || (Ue = f !== null && f.memoizedState === null ? !1 : (I & 2) !== 0), Ue ? ($ = !0, m.flags &= -129) : (f === null || f.memoizedState !== null) && (I |= 1), wi(or, I & 1), f === null)
      return Hd(m), f = m.memoizedState, f !== null && (f = f.dehydrated, f !== null) ? (m.mode & 1 ? f.data === "$!" ? m.lanes = 8 : m.lanes = 1073741824 : m.lanes = 1, null) : (pe = O.children, f = O.fallback, $ ? (O = m.mode, $ = m.child, pe = { mode: "hidden", children: pe }, !(O & 1) && $ !== null ? ($.childLanes = 0, $.pendingProps = pe) : $ = Vh(pe, O, 0, null), f = kp(f, O, b, null), $.return = m, f.return = m, $.sibling = f, m.child = $, m.child.memoizedState = wc(b), m.memoizedState = ti, f) : T0(m, pe));
    if (I = f.memoizedState, I !== null && (Ue = I.dehydrated, Ue !== null))
      return Kg(f, m, pe, O, Ue, I, b);
    if ($) {
      $ = O.fallback, pe = m.mode, I = f.child, Ue = I.sibling;
      var Ge = { mode: "hidden", children: O.children };
      return !(pe & 1) && m.child !== I ? (O = m.child, O.childLanes = 0, O.pendingProps = Ge, m.deletions = null) : (O = Ql(I, Ge), O.subtreeFlags = I.subtreeFlags & 14680064), Ue !== null ? $ = Ql(Ue, $) : ($ = kp($, pe, b, null), $.flags |= 2), $.return = m, O.return = m, O.sibling = $, m.child = O, O = $, $ = m.child, pe = f.child.memoizedState, pe = pe === null ? wc(b) : { baseLanes: pe.baseLanes | b, cachePool: null, transitions: pe.transitions }, $.memoizedState = pe, $.childLanes = f.childLanes & ~b, m.memoizedState = ti, O;
    }
    return $ = f.child, f = $.sibling, O = Ql($, { mode: "visible", children: O.children }), !(m.mode & 1) && (O.lanes = b), O.return = m, O.sibling = null, f !== null && (b = m.deletions, b === null ? (m.deletions = [f], m.flags |= 16) : b.push(f)), m.child = O, m.memoizedState = null, O;
  }
  function T0(f, m) {
    return m = Vh({ mode: "visible", children: m }, f.mode, 0, null), m.return = f, f.child = m;
  }
  function Mp(f, m, b, O) {
    return O !== null && Mh(O), Kf(m, f.child, null, b), f = T0(m, m.pendingProps.children), f.flags |= 2, m.memoizedState = null, f;
  }
  function Kg(f, m, b, O, I, $, pe) {
    if (b)
      return m.flags & 256 ? (m.flags &= -257, O = te(Error(t(422))), Mp(f, m, pe, O)) : m.memoizedState !== null ? (m.child = f.child, m.flags |= 128, null) : ($ = O.fallback, I = m.mode, O = Vh({ mode: "visible", children: O.children }, I, 0, null), $ = kp($, I, pe, null), $.flags |= 2, O.return = m, $.return = m, O.sibling = $, m.child = O, m.mode & 1 && Kf(m, f.child, null, pe), m.child.memoizedState = wc(pe), m.memoizedState = ti, $);
    if (!(m.mode & 1))
      return Mp(f, m, pe, null);
    if (I.data === "$!") {
      if (O = I.nextSibling && I.nextSibling.dataset, O)
        var Ue = O.dgst;
      return O = Ue, $ = Error(t(419)), O = te($, O, void 0), Mp(f, m, pe, O);
    }
    if (Ue = (pe & f.childLanes) !== 0, xn || Ue) {
      if (O = Bi, O !== null) {
        switch (pe & -pe) {
          case 4:
            I = 2;
            break;
          case 16:
            I = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            I = 32;
            break;
          case 536870912:
            I = 268435456;
            break;
          default:
            I = 0;
        }
        I = I & (O.suspendedLanes | pe) ? 0 : I, I !== 0 && I !== $.retryLane && ($.retryLane = I, Os(f, I), ks(O, f, I, -1));
      }
      return O0(), O = te(Error(t(421))), Mp(f, m, pe, O);
    }
    return I.data === "$?" ? (m.flags |= 128, m.child = f.child, m = b_.bind(null, f), I._reactRetry = m, null) : (f = $.treeContext, Ds = Qs(I.nextSibling), ko = m, la = !0, El = null, f !== null && (So[Ba++] = cn, So[Ba++] = xl, So[Ba++] = Xu, cn = f.id, xl = f.overflow, Xu = m), m = T0(m, O.children), m.flags |= 4096, m);
  }
  function Qg(f, m, b) {
    f.lanes |= m;
    var O = f.alternate;
    O !== null && (O.lanes |= m), Da(f.return, m, b);
  }
  function Fm(f, m, b, O, I) {
    var $ = f.memoizedState;
    $ === null ? f.memoizedState = { isBackwards: m, rendering: null, renderingStartTime: 0, last: O, tail: b, tailMode: I } : ($.isBackwards = m, $.rendering = null, $.renderingStartTime = 0, $.last = O, $.tail = b, $.tailMode = I);
  }
  function Zg(f, m, b) {
    var O = m.pendingProps, I = O.revealOrder, $ = O.tail;
    if (Si(f, m, O.children, b), O = or.current, O & 2)
      O = O & 1 | 2, m.flags |= 128;
    else {
      if (f !== null && f.flags & 128)
        e:
          for (f = m.child; f !== null; ) {
            if (f.tag === 13)
              f.memoizedState !== null && Qg(f, b, m);
            else if (f.tag === 19)
              Qg(f, b, m);
            else if (f.child !== null) {
              f.child.return = f, f = f.child;
              continue;
            }
            if (f === m)
              break e;
            for (; f.sibling === null; ) {
              if (f.return === null || f.return === m)
                break e;
              f = f.return;
            }
            f.sibling.return = f.return, f = f.sibling;
          }
      O &= 1;
    }
    if (wi(or, O), !(m.mode & 1))
      m.memoizedState = null;
    else
      switch (I) {
        case "forwards":
          for (b = m.child, I = null; b !== null; )
            f = b.alternate, f !== null && ai(f) === null && (I = b), b = b.sibling;
          b = I, b === null ? (I = m.child, m.child = null) : (I = b.sibling, b.sibling = null), Fm(m, !1, I, b, $);
          break;
        case "backwards":
          for (b = null, I = m.child, m.child = null; I !== null; ) {
            if (f = I.alternate, f !== null && ai(f) === null) {
              m.child = I;
              break;
            }
            f = I.sibling, I.sibling = b, b = I, I = f;
          }
          Fm(m, !0, b, null, $);
          break;
        case "together":
          Fm(m, !1, null, null, void 0);
          break;
        default:
          m.memoizedState = null;
      }
    return m.child;
  }
  function Us(f, m) {
    !(m.mode & 1) && f !== null && (f.alternate = null, m.alternate = null, m.flags |= 2);
  }
  function us(f, m, b) {
    if (f !== null && (m.dependencies = f.dependencies), nd |= m.lanes, !(b & m.childLanes))
      return null;
    if (f !== null && m.child !== f.child)
      throw Error(t(153));
    if (m.child !== null) {
      for (f = m.child, b = Ql(f, f.pendingProps), m.child = b, b.return = m; f.sibling !== null; )
        f = f.sibling, b = b.sibling = Ql(f, f.pendingProps), b.return = m;
      b.sibling = null;
    }
    return m.child;
  }
  function vf(f, m, b) {
    switch (m.tag) {
      case 3:
        ei(m), Ta();
        break;
      case 5:
        ar(m);
        break;
      case 1:
        ga(m.type) && xc(m);
        break;
      case 4:
        Ah(m, m.stateNode.containerInfo);
        break;
      case 10:
        var O = m.type._context, I = m.memoizedProps.value;
        wi(bu, O._currentValue), O._currentValue = I;
        break;
      case 13:
        if (O = m.memoizedState, O !== null)
          return O.dehydrated !== null ? (wi(or, or.current & 1), m.flags |= 128, null) : b & m.child.childLanes ? Dh(f, m, b) : (wi(or, or.current & 1), f = us(f, m, b), f !== null ? f.sibling : null);
        wi(or, or.current & 1);
        break;
      case 19:
        if (O = (b & m.childLanes) !== 0, f.flags & 128) {
          if (O)
            return Zg(f, m, b);
          m.flags |= 128;
        }
        if (I = m.memoizedState, I !== null && (I.rendering = null, I.tail = null, I.lastEffect = null), wi(or, or.current), O)
          break;
        return null;
      case 22:
      case 23:
        return m.lanes = 0, Lt(f, m, b);
    }
    return us(f, m, b);
  }
  var Cp, jd, Ju, bo;
  Cp = function(f, m) {
    for (var b = m.child; b !== null; ) {
      if (b.tag === 5 || b.tag === 6)
        f.appendChild(b.stateNode);
      else if (b.tag !== 4 && b.child !== null) {
        b.child.return = b, b = b.child;
        continue;
      }
      if (b === m)
        break;
      for (; b.sibling === null; ) {
        if (b.return === null || b.return === m)
          return;
        b = b.return;
      }
      b.sibling.return = b.return, b = b.sibling;
    }
  }, jd = function() {
  }, Ju = function(f, m, b, O) {
    var I = f.memoizedProps;
    if (I !== O) {
      f = m.stateNode, wl(Tl.current);
      var $ = null;
      switch (b) {
        case "input":
          I = qe(f, I), O = qe(f, O), $ = [];
          break;
        case "select":
          I = X({}, I, { value: void 0 }), O = X({}, O, { value: void 0 }), $ = [];
          break;
        case "textarea":
          I = rn(f, I), O = rn(f, O), $ = [];
          break;
        default:
          typeof I.onClick != "function" && typeof O.onClick == "function" && (f.onclick = kd);
      }
      Te(b, O);
      var pe;
      b = null;
      for (Rt in I)
        if (!O.hasOwnProperty(Rt) && I.hasOwnProperty(Rt) && I[Rt] != null)
          if (Rt === "style") {
            var Ue = I[Rt];
            for (pe in Ue)
              Ue.hasOwnProperty(pe) && (b || (b = {}), b[pe] = "");
          } else
            Rt !== "dangerouslySetInnerHTML" && Rt !== "children" && Rt !== "suppressContentEditableWarning" && Rt !== "suppressHydrationWarning" && Rt !== "autoFocus" && (i.hasOwnProperty(Rt) ? $ || ($ = []) : ($ = $ || []).push(Rt, null));
      for (Rt in O) {
        var Ge = O[Rt];
        if (Ue = I != null ? I[Rt] : void 0, O.hasOwnProperty(Rt) && Ge !== Ue && (Ge != null || Ue != null))
          if (Rt === "style")
            if (Ue) {
              for (pe in Ue)
                !Ue.hasOwnProperty(pe) || Ge && Ge.hasOwnProperty(pe) || (b || (b = {}), b[pe] = "");
              for (pe in Ge)
                Ge.hasOwnProperty(pe) && Ue[pe] !== Ge[pe] && (b || (b = {}), b[pe] = Ge[pe]);
            } else
              b || ($ || ($ = []), $.push(
                Rt,
                b
              )), b = Ge;
          else
            Rt === "dangerouslySetInnerHTML" ? (Ge = Ge ? Ge.__html : void 0, Ue = Ue ? Ue.__html : void 0, Ge != null && Ue !== Ge && ($ = $ || []).push(Rt, Ge)) : Rt === "children" ? typeof Ge != "string" && typeof Ge != "number" || ($ = $ || []).push(Rt, "" + Ge) : Rt !== "suppressContentEditableWarning" && Rt !== "suppressHydrationWarning" && (i.hasOwnProperty(Rt) ? (Ge != null && Rt === "onScroll" && Pr("scroll", f), $ || Ue === Ge || ($ = [])) : ($ = $ || []).push(Rt, Ge));
      }
      b && ($ = $ || []).push("style", b);
      var Rt = $;
      (m.updateQueue = Rt) && (m.flags |= 4);
    }
  }, bo = function(f, m, b, O) {
    b !== O && (m.flags |= 4);
  };
  function Rp(f, m) {
    if (!la)
      switch (f.tailMode) {
        case "hidden":
          m = f.tail;
          for (var b = null; m !== null; )
            m.alternate !== null && (b = m), m = m.sibling;
          b === null ? f.tail = null : b.sibling = null;
          break;
        case "collapsed":
          b = f.tail;
          for (var O = null; b !== null; )
            b.alternate !== null && (O = b), b = b.sibling;
          O === null ? m || f.tail === null ? f.tail = null : f.tail.sibling = null : O.sibling = null;
      }
  }
  function Ns(f) {
    var m = f.alternate !== null && f.alternate.child === f.child, b = 0, O = 0;
    if (m)
      for (var I = f.child; I !== null; )
        b |= I.lanes | I.childLanes, O |= I.subtreeFlags & 14680064, O |= I.flags & 14680064, I.return = f, I = I.sibling;
    else
      for (I = f.child; I !== null; )
        b |= I.lanes | I.childLanes, O |= I.subtreeFlags, O |= I.flags, I.return = f, I = I.sibling;
    return f.subtreeFlags |= O, f.childLanes = b, m;
  }
  function w0(f, m, b) {
    var O = m.pendingProps;
    switch (nf(m), m.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return Ns(m), null;
      case 1:
        return ga(m.type) && tl(), Ns(m), null;
      case 3:
        return O = m.stateNode, Mu(), hi(Ia), hi(xr), il(), O.pendingContext && (O.context = O.pendingContext, O.pendingContext = null), (f === null || f.child === null) && (Ls(m) ? m.flags |= 4 : f === null || f.memoizedState.isDehydrated && !(m.flags & 256) || (m.flags |= 1024, El !== null && (Np(El), El = null))), jd(f, m), Ns(m), null;
      case 5:
        Fr(m);
        var I = wl(lf.current);
        if (b = m.type, f !== null && m.stateNode != null)
          Ju(f, m, b, O, I), f.ref !== m.ref && (m.flags |= 512, m.flags |= 2097152);
        else {
          if (!O) {
            if (m.stateNode === null)
              throw Error(t(166));
            return Ns(m), null;
          }
          if (f = wl(Tl.current), Ls(m)) {
            O = m.stateNode, b = m.type;
            var $ = m.memoizedProps;
            switch (O[lo] = m, O[Sc] = $, f = (m.mode & 1) !== 0, b) {
              case "dialog":
                Pr("cancel", O), Pr("close", O);
                break;
              case "iframe":
              case "object":
              case "embed":
                Pr("load", O);
                break;
              case "video":
              case "audio":
                for (I = 0; I < Hf.length; I++)
                  Pr(Hf[I], O);
                break;
              case "source":
                Pr("error", O);
                break;
              case "img":
              case "image":
              case "link":
                Pr(
                  "error",
                  O
                ), Pr("load", O);
                break;
              case "details":
                Pr("toggle", O);
                break;
              case "input":
                $e(O, $), Pr("invalid", O);
                break;
              case "select":
                O._wrapperState = { wasMultiple: !!$.multiple }, Pr("invalid", O);
                break;
              case "textarea":
                ae(O, $), Pr("invalid", O);
            }
            Te(b, $), I = null;
            for (var pe in $)
              if ($.hasOwnProperty(pe)) {
                var Ue = $[pe];
                pe === "children" ? typeof Ue == "string" ? O.textContent !== Ue && ($.suppressHydrationWarning !== !0 && Nd(O.textContent, Ue, f), I = ["children", Ue]) : typeof Ue == "number" && O.textContent !== "" + Ue && ($.suppressHydrationWarning !== !0 && Nd(
                  O.textContent,
                  Ue,
                  f
                ), I = ["children", "" + Ue]) : i.hasOwnProperty(pe) && Ue != null && pe === "onScroll" && Pr("scroll", O);
              }
            switch (b) {
              case "input":
                st(O), ot(O, $, !0);
                break;
              case "textarea":
                st(O), ze(O);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof $.onClick == "function" && (O.onclick = kd);
            }
            O = I, m.updateQueue = O, O !== null && (m.flags |= 4);
          } else {
            pe = I.nodeType === 9 ? I : I.ownerDocument, f === "http://www.w3.org/1999/xhtml" && (f = xt(b)), f === "http://www.w3.org/1999/xhtml" ? b === "script" ? (f = pe.createElement("div"), f.innerHTML = "<script><\/script>", f = f.removeChild(f.firstChild)) : typeof O.is == "string" ? f = pe.createElement(b, { is: O.is }) : (f = pe.createElement(b), b === "select" && (pe = f, O.multiple ? pe.multiple = !0 : O.size && (pe.size = O.size))) : f = pe.createElementNS(f, b), f[lo] = m, f[Sc] = O, Cp(f, m, !1, !1), m.stateNode = f;
            e: {
              switch (pe = tt(b, O), b) {
                case "dialog":
                  Pr("cancel", f), Pr("close", f), I = O;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  Pr("load", f), I = O;
                  break;
                case "video":
                case "audio":
                  for (I = 0; I < Hf.length; I++)
                    Pr(Hf[I], f);
                  I = O;
                  break;
                case "source":
                  Pr("error", f), I = O;
                  break;
                case "img":
                case "image":
                case "link":
                  Pr(
                    "error",
                    f
                  ), Pr("load", f), I = O;
                  break;
                case "details":
                  Pr("toggle", f), I = O;
                  break;
                case "input":
                  $e(f, O), I = qe(f, O), Pr("invalid", f);
                  break;
                case "option":
                  I = O;
                  break;
                case "select":
                  f._wrapperState = { wasMultiple: !!O.multiple }, I = X({}, O, { value: void 0 }), Pr("invalid", f);
                  break;
                case "textarea":
                  ae(f, O), I = rn(f, O), Pr("invalid", f);
                  break;
                default:
                  I = O;
              }
              Te(b, I), Ue = I;
              for ($ in Ue)
                if (Ue.hasOwnProperty($)) {
                  var Ge = Ue[$];
                  $ === "style" ? Et(f, Ge) : $ === "dangerouslySetInnerHTML" ? (Ge = Ge ? Ge.__html : void 0, Ge != null && Yt(f, Ge)) : $ === "children" ? typeof Ge == "string" ? (b !== "textarea" || Ge !== "") && Nt(f, Ge) : typeof Ge == "number" && Nt(f, "" + Ge) : $ !== "suppressContentEditableWarning" && $ !== "suppressHydrationWarning" && $ !== "autoFocus" && (i.hasOwnProperty($) ? Ge != null && $ === "onScroll" && Pr("scroll", f) : Ge != null && F(f, $, Ge, pe));
                }
              switch (b) {
                case "input":
                  st(f), ot(f, O, !1);
                  break;
                case "textarea":
                  st(f), ze(f);
                  break;
                case "option":
                  O.value != null && f.setAttribute("value", "" + Fe(O.value));
                  break;
                case "select":
                  f.multiple = !!O.multiple, $ = O.value, $ != null ? mt(f, !!O.multiple, $, !1) : O.defaultValue != null && mt(
                    f,
                    !!O.multiple,
                    O.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof I.onClick == "function" && (f.onclick = kd);
              }
              switch (b) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  O = !!O.autoFocus;
                  break e;
                case "img":
                  O = !0;
                  break e;
                default:
                  O = !1;
              }
            }
            O && (m.flags |= 4);
          }
          m.ref !== null && (m.flags |= 512, m.flags |= 2097152);
        }
        return Ns(m), null;
      case 6:
        if (f && m.stateNode != null)
          bo(f, m, f.memoizedProps, O);
        else {
          if (typeof O != "string" && m.stateNode === null)
            throw Error(t(166));
          if (b = wl(lf.current), wl(Tl.current), Ls(m)) {
            if (O = m.stateNode, b = m.memoizedProps, O[lo] = m, ($ = O.nodeValue !== b) && (f = ko, f !== null))
              switch (f.tag) {
                case 3:
                  Nd(O.nodeValue, b, (f.mode & 1) !== 0);
                  break;
                case 5:
                  f.memoizedProps.suppressHydrationWarning !== !0 && Nd(O.nodeValue, b, (f.mode & 1) !== 0);
              }
            $ && (m.flags |= 4);
          } else
            O = (b.nodeType === 9 ? b : b.ownerDocument).createTextNode(O), O[lo] = m, m.stateNode = O;
        }
        return Ns(m), null;
      case 13:
        if (hi(or), O = m.memoizedState, f === null || f.memoizedState !== null && f.memoizedState.dehydrated !== null) {
          if (la && Ds !== null && m.mode & 1 && !(m.flags & 128))
            _o(), Ta(), m.flags |= 98560, $ = !1;
          else if ($ = Ls(m), O !== null && O.dehydrated !== null) {
            if (f === null) {
              if (!$)
                throw Error(t(318));
              if ($ = m.memoizedState, $ = $ !== null ? $.dehydrated : null, !$)
                throw Error(t(317));
              $[lo] = m;
            } else
              Ta(), !(m.flags & 128) && (m.memoizedState = null), m.flags |= 4;
            Ns(m), $ = !1;
          } else
            El !== null && (Np(El), El = null), $ = !0;
          if (!$)
            return m.flags & 65536 ? m : null;
        }
        return m.flags & 128 ? (m.lanes = b, m) : (O = O !== null, O !== (f !== null && f.memoizedState !== null) && O && (m.child.flags |= 8192, m.mode & 1 && (f === null || or.current & 1 ? cs === 0 && (cs = 3) : O0())), m.updateQueue !== null && (m.flags |= 4), Ns(m), null);
      case 4:
        return Mu(), jd(f, m), f === null && _l(m.stateNode.containerInfo), Ns(m), null;
      case 10:
        return ta(m.type._context), Ns(m), null;
      case 17:
        return ga(m.type) && tl(), Ns(m), null;
      case 19:
        if (hi(or), $ = m.memoizedState, $ === null)
          return Ns(m), null;
        if (O = (m.flags & 128) !== 0, pe = $.rendering, pe === null)
          if (O)
            Rp($, !1);
          else {
            if (cs !== 0 || f !== null && f.flags & 128)
              for (f = m.child; f !== null; ) {
                if (pe = ai(f), pe !== null) {
                  for (m.flags |= 128, Rp($, !1), O = pe.updateQueue, O !== null && (m.updateQueue = O, m.flags |= 4), m.subtreeFlags = 0, O = b, b = m.child; b !== null; )
                    $ = b, f = O, $.flags &= 14680066, pe = $.alternate, pe === null ? ($.childLanes = 0, $.lanes = f, $.child = null, $.subtreeFlags = 0, $.memoizedProps = null, $.memoizedState = null, $.updateQueue = null, $.dependencies = null, $.stateNode = null) : ($.childLanes = pe.childLanes, $.lanes = pe.lanes, $.child = pe.child, $.subtreeFlags = 0, $.deletions = null, $.memoizedProps = pe.memoizedProps, $.memoizedState = pe.memoizedState, $.updateQueue = pe.updateQueue, $.type = pe.type, f = pe.dependencies, $.dependencies = f === null ? null : { lanes: f.lanes, firstContext: f.firstContext }), b = b.sibling;
                  return wi(or, or.current & 1 | 2), m.child;
                }
                f = f.sibling;
              }
            $.tail !== null && Mt() > Nh && (m.flags |= 128, O = !0, Rp($, !1), m.lanes = 4194304);
          }
        else {
          if (!O)
            if (f = ai(pe), f !== null) {
              if (m.flags |= 128, O = !0, b = f.updateQueue, b !== null && (m.updateQueue = b, m.flags |= 4), Rp($, !0), $.tail === null && $.tailMode === "hidden" && !pe.alternate && !la)
                return Ns(m), null;
            } else
              2 * Mt() - $.renderingStartTime > Nh && b !== 1073741824 && (m.flags |= 128, O = !0, Rp($, !1), m.lanes = 4194304);
          $.isBackwards ? (pe.sibling = m.child, m.child = pe) : (b = $.last, b !== null ? b.sibling = pe : m.child = pe, $.last = pe);
        }
        return $.tail !== null ? (m = $.tail, $.rendering = m, $.tail = m.sibling, $.renderingStartTime = Mt(), m.sibling = null, b = or.current, wi(or, O ? b & 1 | 2 : b & 1), m) : (Ns(m), null);
      case 22:
      case 23:
        return iy(), O = m.memoizedState !== null, f !== null && f.memoizedState !== null !== O && (m.flags |= 8192), O && m.mode & 1 ? ec & 1073741824 && (Ns(m), m.subtreeFlags & 6 && (m.flags |= 8192)) : Ns(m), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(t(156, m.tag));
  }
  function Jg(f, m) {
    switch (nf(m), m.tag) {
      case 1:
        return ga(m.type) && tl(), f = m.flags, f & 65536 ? (m.flags = f & -65537 | 128, m) : null;
      case 3:
        return Mu(), hi(Ia), hi(xr), il(), f = m.flags, f & 65536 && !(f & 128) ? (m.flags = f & -65537 | 128, m) : null;
      case 5:
        return Fr(m), null;
      case 13:
        if (hi(or), f = m.memoizedState, f !== null && f.dehydrated !== null) {
          if (m.alternate === null)
            throw Error(t(340));
          Ta();
        }
        return f = m.flags, f & 65536 ? (m.flags = f & -65537 | 128, m) : null;
      case 19:
        return hi(or), null;
      case 4:
        return Mu(), null;
      case 10:
        return ta(m.type._context), null;
      case 22:
      case 23:
        return iy(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var Ap = !1, Bo = !1, M0 = typeof WeakSet == "function" ? WeakSet : Set, In = null;
  function Dp(f, m) {
    var b = f.ref;
    if (b !== null)
      if (typeof b == "function")
        try {
          b(null);
        } catch (O) {
          uo(f, m, O);
        }
      else
        b.current = null;
  }
  function zm(f, m, b) {
    try {
      b();
    } catch (O) {
      uo(f, m, O);
    }
  }
  var x_ = !1;
  function C0(f, m) {
    if (Vf = ma, f = ui(), ki(f)) {
      if ("selectionStart" in f)
        var b = { start: f.selectionStart, end: f.selectionEnd };
      else
        e: {
          b = (b = f.ownerDocument) && b.defaultView || window;
          var O = b.getSelection && b.getSelection();
          if (O && O.rangeCount !== 0) {
            b = O.anchorNode;
            var I = O.anchorOffset, $ = O.focusNode;
            O = O.focusOffset;
            try {
              b.nodeType, $.nodeType;
            } catch {
              b = null;
              break e;
            }
            var pe = 0, Ue = -1, Ge = -1, Rt = 0, nn = 0, en = f, Qt = null;
            t:
              for (; ; ) {
                for (var Dn; en !== b || I !== 0 && en.nodeType !== 3 || (Ue = pe + I), en !== $ || O !== 0 && en.nodeType !== 3 || (Ge = pe + O), en.nodeType === 3 && (pe += en.nodeValue.length), (Dn = en.firstChild) !== null; )
                  Qt = en, en = Dn;
                for (; ; ) {
                  if (en === f)
                    break t;
                  if (Qt === b && ++Rt === I && (Ue = pe), Qt === $ && ++nn === O && (Ge = pe), (Dn = en.nextSibling) !== null)
                    break;
                  en = Qt, Qt = en.parentNode;
                }
                en = Dn;
              }
            b = Ue === -1 || Ge === -1 ? null : { start: Ue, end: Ge };
          } else
            b = null;
        }
      b = b || { start: 0, end: 0 };
    } else
      b = null;
    for (ef = { focusedElem: f, selectionRange: b }, ma = !1, In = m; In !== null; )
      if (m = In, f = m.child, (m.subtreeFlags & 1028) !== 0 && f !== null)
        f.return = m, In = f;
      else
        for (; In !== null; ) {
          m = In;
          try {
            var Bn = m.alternate;
            if (m.flags & 1024)
              switch (m.tag) {
                case 0:
                case 11:
                case 15:
                  break;
                case 1:
                  if (Bn !== null) {
                    var Gn = Bn.memoizedProps, co = Bn.memoizedState, ht = m.stateNode, Je = ht.getSnapshotBeforeUpdate(m.elementType === m.type ? Gn : bl(m.type, Gn), co);
                    ht.__reactInternalSnapshotBeforeUpdate = Je;
                  }
                  break;
                case 3:
                  var bt = m.stateNode.containerInfo;
                  bt.nodeType === 1 ? bt.textContent = "" : bt.nodeType === 9 && bt.documentElement && bt.removeChild(bt.documentElement);
                  break;
                case 5:
                case 6:
                case 4:
                case 17:
                  break;
                default:
                  throw Error(t(163));
              }
          } catch (dn) {
            uo(m, m.return, dn);
          }
          if (f = m.sibling, f !== null) {
            f.return = m.return, In = f;
            break;
          }
          In = m.return;
        }
    return Bn = x_, x_ = !1, Bn;
  }
  function Lp(f, m, b) {
    var O = m.updateQueue;
    if (O = O !== null ? O.lastEffect : null, O !== null) {
      var I = O = O.next;
      do {
        if ((I.tag & f) === f) {
          var $ = I.destroy;
          I.destroy = void 0, $ !== void 0 && zm(m, b, $);
        }
        I = I.next;
      } while (I !== O);
    }
  }
  function Dv(f, m) {
    if (m = m.updateQueue, m = m !== null ? m.lastEffect : null, m !== null) {
      var b = m = m.next;
      do {
        if ((b.tag & f) === f) {
          var O = b.create;
          b.destroy = O();
        }
        b = b.next;
      } while (b !== m);
    }
  }
  function R0(f) {
    var m = f.ref;
    if (m !== null) {
      var b = f.stateNode;
      switch (f.tag) {
        case 5:
          f = b;
          break;
        default:
          f = b;
      }
      typeof m == "function" ? m(f) : m.current = f;
    }
  }
  function Lh(f) {
    var m = f.alternate;
    m !== null && (f.alternate = null, Lh(m)), f.child = null, f.deletions = null, f.sibling = null, f.tag === 5 && (m = f.stateNode, m !== null && (delete m[lo], delete m[Sc], delete m[Gf], delete m[Wf], delete m[Id])), f.stateNode = null, f.return = null, f.dependencies = null, f.memoizedProps = null, f.memoizedState = null, f.pendingProps = null, f.stateNode = null, f.updateQueue = null;
  }
  function Op(f) {
    return f.tag === 5 || f.tag === 3 || f.tag === 4;
  }
  function Pp(f) {
    e:
      for (; ; ) {
        for (; f.sibling === null; ) {
          if (f.return === null || Op(f.return))
            return null;
          f = f.return;
        }
        for (f.sibling.return = f.return, f = f.sibling; f.tag !== 5 && f.tag !== 6 && f.tag !== 18; ) {
          if (f.flags & 2 || f.child === null || f.tag === 4)
            continue e;
          f.child.return = f, f = f.child;
        }
        if (!(f.flags & 2))
          return f.stateNode;
      }
  }
  function $d(f, m, b) {
    var O = f.tag;
    if (O === 5 || O === 6)
      f = f.stateNode, m ? b.nodeType === 8 ? b.parentNode.insertBefore(f, m) : b.insertBefore(f, m) : (b.nodeType === 8 ? (m = b.parentNode, m.insertBefore(f, b)) : (m = b, m.appendChild(f)), b = b._reactRootContainer, b != null || m.onclick !== null || (m.onclick = kd));
    else if (O !== 4 && (f = f.child, f !== null))
      for ($d(f, m, b), f = f.sibling; f !== null; )
        $d(f, m, b), f = f.sibling;
  }
  function Ho(f, m, b) {
    var O = f.tag;
    if (O === 5 || O === 6)
      f = f.stateNode, m ? b.insertBefore(f, m) : b.appendChild(f);
    else if (O !== 4 && (f = f.child, f !== null))
      for (Ho(f, m, b), f = f.sibling; f !== null; )
        Ho(f, m, b), f = f.sibling;
  }
  var Oi = null, Ka = !1;
  function qo(f, m, b) {
    for (b = b.child; b !== null; )
      Au(f, m, b), b = b.sibling;
  }
  function Au(f, m, b) {
    if (br && typeof br.onCommitFiberUnmount == "function")
      try {
        br.onCommitFiberUnmount(qn, b);
      } catch {
      }
    switch (b.tag) {
      case 5:
        Bo || Dp(b, m);
      case 6:
        var O = Oi, I = Ka;
        Oi = null, qo(f, m, b), Oi = O, Ka = I, Oi !== null && (Ka ? (f = Oi, b = b.stateNode, f.nodeType === 8 ? f.parentNode.removeChild(b) : f.removeChild(b)) : Oi.removeChild(b.stateNode));
        break;
      case 18:
        Oi !== null && (Ka ? (f = Oi, b = b.stateNode, f.nodeType === 8 ? Gu(f.parentNode, b) : f.nodeType === 1 && Gu(f, b), Fu(f)) : Gu(Oi, b.stateNode));
        break;
      case 4:
        O = Oi, I = Ka, Oi = b.stateNode.containerInfo, Ka = !0, qo(f, m, b), Oi = O, Ka = I;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!Bo && (O = b.updateQueue, O !== null && (O = O.lastEffect, O !== null))) {
          I = O = O.next;
          do {
            var $ = I, pe = $.destroy;
            $ = $.tag, pe !== void 0 && ($ & 2 || $ & 4) && zm(b, m, pe), I = I.next;
          } while (I !== O);
        }
        qo(f, m, b);
        break;
      case 1:
        if (!Bo && (Dp(b, m), O = b.stateNode, typeof O.componentWillUnmount == "function"))
          try {
            O.props = b.memoizedProps, O.state = b.memoizedState, O.componentWillUnmount();
          } catch (Ue) {
            uo(b, m, Ue);
          }
        qo(f, m, b);
        break;
      case 21:
        qo(f, m, b);
        break;
      case 22:
        b.mode & 1 ? (Bo = (O = Bo) || b.memoizedState !== null, qo(f, m, b), Bo = O) : qo(f, m, b);
        break;
      default:
        qo(f, m, b);
    }
  }
  function Yd(f) {
    var m = f.updateQueue;
    if (m !== null) {
      f.updateQueue = null;
      var b = f.stateNode;
      b === null && (b = f.stateNode = new M0()), m.forEach(function(O) {
        var I = T_.bind(null, f, O);
        b.has(O) || (b.add(O), O.then(I, I));
      });
    }
  }
  function gf(f, m) {
    var b = m.deletions;
    if (b !== null)
      for (var O = 0; O < b.length; O++) {
        var I = b[O];
        try {
          var $ = f, pe = m, Ue = pe;
          e:
            for (; Ue !== null; ) {
              switch (Ue.tag) {
                case 5:
                  Oi = Ue.stateNode, Ka = !1;
                  break e;
                case 3:
                  Oi = Ue.stateNode.containerInfo, Ka = !0;
                  break e;
                case 4:
                  Oi = Ue.stateNode.containerInfo, Ka = !0;
                  break e;
              }
              Ue = Ue.return;
            }
          if (Oi === null)
            throw Error(t(160));
          Au($, pe, I), Oi = null, Ka = !1;
          var Ge = I.alternate;
          Ge !== null && (Ge.return = null), I.return = null;
        } catch (Rt) {
          uo(I, m, Rt);
        }
      }
    if (m.subtreeFlags & 12854)
      for (m = m.child; m !== null; )
        E_(m, f), m = m.sibling;
  }
  function E_(f, m) {
    var b = f.alternate, O = f.flags;
    switch (f.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (gf(m, f), Al(f), O & 4) {
          try {
            Lp(3, f, f.return), Dv(3, f);
          } catch (Gn) {
            uo(f, f.return, Gn);
          }
          try {
            Lp(5, f, f.return);
          } catch (Gn) {
            uo(f, f.return, Gn);
          }
        }
        break;
      case 1:
        gf(m, f), Al(f), O & 512 && b !== null && Dp(b, b.return);
        break;
      case 5:
        if (gf(m, f), Al(f), O & 512 && b !== null && Dp(b, b.return), f.flags & 32) {
          var I = f.stateNode;
          try {
            Nt(I, "");
          } catch (Gn) {
            uo(f, f.return, Gn);
          }
        }
        if (O & 4 && (I = f.stateNode, I != null)) {
          var $ = f.memoizedProps, pe = b !== null ? b.memoizedProps : $, Ue = f.type, Ge = f.updateQueue;
          if (f.updateQueue = null, Ge !== null)
            try {
              Ue === "input" && $.type === "radio" && $.name != null && Ye(I, $), tt(Ue, pe);
              var Rt = tt(Ue, $);
              for (pe = 0; pe < Ge.length; pe += 2) {
                var nn = Ge[pe], en = Ge[pe + 1];
                nn === "style" ? Et(I, en) : nn === "dangerouslySetInnerHTML" ? Yt(I, en) : nn === "children" ? Nt(I, en) : F(I, nn, en, Rt);
              }
              switch (Ue) {
                case "input":
                  zt(I, $);
                  break;
                case "textarea":
                  re(I, $);
                  break;
                case "select":
                  var Qt = I._wrapperState.wasMultiple;
                  I._wrapperState.wasMultiple = !!$.multiple;
                  var Dn = $.value;
                  Dn != null ? mt(I, !!$.multiple, Dn, !1) : Qt !== !!$.multiple && ($.defaultValue != null ? mt(
                    I,
                    !!$.multiple,
                    $.defaultValue,
                    !0
                  ) : mt(I, !!$.multiple, $.multiple ? [] : "", !1));
              }
              I[Sc] = $;
            } catch (Gn) {
              uo(f, f.return, Gn);
            }
        }
        break;
      case 6:
        if (gf(m, f), Al(f), O & 4) {
          if (f.stateNode === null)
            throw Error(t(162));
          I = f.stateNode, $ = f.memoizedProps;
          try {
            I.nodeValue = $;
          } catch (Gn) {
            uo(f, f.return, Gn);
          }
        }
        break;
      case 3:
        if (gf(m, f), Al(f), O & 4 && b !== null && b.memoizedState.isDehydrated)
          try {
            Fu(m.containerInfo);
          } catch (Gn) {
            uo(f, f.return, Gn);
          }
        break;
      case 4:
        gf(m, f), Al(f);
        break;
      case 13:
        gf(m, f), Al(f), I = f.child, I.flags & 8192 && ($ = I.memoizedState !== null, I.stateNode.isHidden = $, !$ || I.alternate !== null && I.alternate.memoizedState !== null || (Nv = Mt())), O & 4 && Yd(f);
        break;
      case 22:
        if (nn = b !== null && b.memoizedState !== null, f.mode & 1 ? (Bo = (Rt = Bo) || nn, gf(m, f), Bo = Rt) : gf(m, f), Al(f), O & 8192) {
          if (Rt = f.memoizedState !== null, (f.stateNode.isHidden = Rt) && !nn && f.mode & 1)
            for (In = f, nn = f.child; nn !== null; ) {
              for (en = In = nn; In !== null; ) {
                switch (Qt = In, Dn = Qt.child, Qt.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Lp(4, Qt, Qt.return);
                    break;
                  case 1:
                    Dp(Qt, Qt.return);
                    var Bn = Qt.stateNode;
                    if (typeof Bn.componentWillUnmount == "function") {
                      O = Qt, b = Qt.return;
                      try {
                        m = O, Bn.props = m.memoizedProps, Bn.state = m.memoizedState, Bn.componentWillUnmount();
                      } catch (Gn) {
                        uo(O, b, Gn);
                      }
                    }
                    break;
                  case 5:
                    Dp(Qt, Qt.return);
                    break;
                  case 22:
                    if (Qt.memoizedState !== null) {
                      D0(en);
                      continue;
                    }
                }
                Dn !== null ? (Dn.return = Qt, In = Dn) : D0(en);
              }
              nn = nn.sibling;
            }
          e:
            for (nn = null, en = f; ; ) {
              if (en.tag === 5) {
                if (nn === null) {
                  nn = en;
                  try {
                    I = en.stateNode, Rt ? ($ = I.style, typeof $.setProperty == "function" ? $.setProperty("display", "none", "important") : $.display = "none") : (Ue = en.stateNode, Ge = en.memoizedProps.style, pe = Ge != null && Ge.hasOwnProperty("display") ? Ge.display : null, Ue.style.display = ft("display", pe));
                  } catch (Gn) {
                    uo(f, f.return, Gn);
                  }
                }
              } else if (en.tag === 6) {
                if (nn === null)
                  try {
                    en.stateNode.nodeValue = Rt ? "" : en.memoizedProps;
                  } catch (Gn) {
                    uo(f, f.return, Gn);
                  }
              } else if ((en.tag !== 22 && en.tag !== 23 || en.memoizedState === null || en === f) && en.child !== null) {
                en.child.return = en, en = en.child;
                continue;
              }
              if (en === f)
                break e;
              for (; en.sibling === null; ) {
                if (en.return === null || en.return === f)
                  break e;
                nn === en && (nn = null), en = en.return;
              }
              nn === en && (nn = null), en.sibling.return = en.return, en = en.sibling;
            }
        }
        break;
      case 19:
        gf(m, f), Al(f), O & 4 && Yd(f);
        break;
      case 21:
        break;
      default:
        gf(
          m,
          f
        ), Al(f);
    }
  }
  function Al(f) {
    var m = f.flags;
    if (m & 2) {
      try {
        e: {
          for (var b = f.return; b !== null; ) {
            if (Op(b)) {
              var O = b;
              break e;
            }
            b = b.return;
          }
          throw Error(t(160));
        }
        switch (O.tag) {
          case 5:
            var I = O.stateNode;
            O.flags & 32 && (Nt(I, ""), O.flags &= -33);
            var $ = Pp(f);
            Ho(f, $, I);
            break;
          case 3:
          case 4:
            var pe = O.stateNode.containerInfo, Ue = Pp(f);
            $d(f, Ue, pe);
            break;
          default:
            throw Error(t(161));
        }
      } catch (Ge) {
        uo(f, f.return, Ge);
      }
      f.flags &= -3;
    }
    m & 4096 && (f.flags &= -4097);
  }
  function A0(f, m, b) {
    In = f, Oh(f);
  }
  function Oh(f, m, b) {
    for (var O = (f.mode & 1) !== 0; In !== null; ) {
      var I = In, $ = I.child;
      if (I.tag === 22 && O) {
        var pe = I.memoizedState !== null || Ap;
        if (!pe) {
          var Ue = I.alternate, Ge = Ue !== null && Ue.memoizedState !== null || Bo;
          Ue = Ap;
          var Rt = Bo;
          if (Ap = pe, (Bo = Ge) && !Rt)
            for (In = I; In !== null; )
              pe = In, Ge = pe.child, pe.tag === 22 && pe.memoizedState !== null ? ey(I) : Ge !== null ? (Ge.return = pe, In = Ge) : ey(I);
          for (; $ !== null; )
            In = $, Oh($), $ = $.sibling;
          In = I, Ap = Ue, Bo = Rt;
        }
        Lv(f);
      } else
        I.subtreeFlags & 8772 && $ !== null ? ($.return = I, In = $) : Lv(f);
    }
  }
  function Lv(f) {
    for (; In !== null; ) {
      var m = In;
      if (m.flags & 8772) {
        var b = m.alternate;
        try {
          if (m.flags & 8772)
            switch (m.tag) {
              case 0:
              case 11:
              case 15:
                Bo || Dv(5, m);
                break;
              case 1:
                var O = m.stateNode;
                if (m.flags & 4 && !Bo)
                  if (b === null)
                    O.componentDidMount();
                  else {
                    var I = m.elementType === m.type ? b.memoizedProps : bl(m.type, b.memoizedProps);
                    O.componentDidUpdate(I, b.memoizedState, O.__reactInternalSnapshotBeforeUpdate);
                  }
                var $ = m.updateQueue;
                $ !== null && ya(m, $, O);
                break;
              case 3:
                var pe = m.updateQueue;
                if (pe !== null) {
                  if (b = null, m.child !== null)
                    switch (m.child.tag) {
                      case 5:
                        b = m.child.stateNode;
                        break;
                      case 1:
                        b = m.child.stateNode;
                    }
                  ya(m, pe, b);
                }
                break;
              case 5:
                var Ue = m.stateNode;
                if (b === null && m.flags & 4) {
                  b = Ue;
                  var Ge = m.memoizedProps;
                  switch (m.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      Ge.autoFocus && b.focus();
                      break;
                    case "img":
                      Ge.src && (b.src = Ge.src);
                  }
                }
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (m.memoizedState === null) {
                  var Rt = m.alternate;
                  if (Rt !== null) {
                    var nn = Rt.memoizedState;
                    if (nn !== null) {
                      var en = nn.dehydrated;
                      en !== null && Fu(en);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break;
              default:
                throw Error(t(163));
            }
          Bo || m.flags & 512 && R0(m);
        } catch (Qt) {
          uo(m, m.return, Qt);
        }
      }
      if (m === f) {
        In = null;
        break;
      }
      if (b = m.sibling, b !== null) {
        b.return = m.return, In = b;
        break;
      }
      In = m.return;
    }
  }
  function D0(f) {
    for (; In !== null; ) {
      var m = In;
      if (m === f) {
        In = null;
        break;
      }
      var b = m.sibling;
      if (b !== null) {
        b.return = m.return, In = b;
        break;
      }
      In = m.return;
    }
  }
  function ey(f) {
    for (; In !== null; ) {
      var m = In;
      try {
        switch (m.tag) {
          case 0:
          case 11:
          case 15:
            var b = m.return;
            try {
              Dv(4, m);
            } catch (Ge) {
              uo(m, b, Ge);
            }
            break;
          case 1:
            var O = m.stateNode;
            if (typeof O.componentDidMount == "function") {
              var I = m.return;
              try {
                O.componentDidMount();
              } catch (Ge) {
                uo(m, I, Ge);
              }
            }
            var $ = m.return;
            try {
              R0(m);
            } catch (Ge) {
              uo(m, $, Ge);
            }
            break;
          case 5:
            var pe = m.return;
            try {
              R0(m);
            } catch (Ge) {
              uo(m, pe, Ge);
            }
        }
      } catch (Ge) {
        uo(m, m.return, Ge);
      }
      if (m === f) {
        In = null;
        break;
      }
      var Ue = m.sibling;
      if (Ue !== null) {
        Ue.return = m.return, In = Ue;
        break;
      }
      In = m.return;
    }
  }
  var ty = Math.ceil, Ov = H.ReactCurrentDispatcher, Xd = H.ReactCurrentOwner, $i = H.ReactCurrentBatchConfig, Ar = 0, Bi = null, Sa = null, Ha = 0, ec = 0, Im = Yn(0), cs = 0, Pv = null, nd = 0, Uv = 0, Ph = 0, Uh = null, Dl = null, Nv = 0, Nh = 1 / 0, yf = null, ny = !1, Up = null, rd = null, kh = !1, qd = null, Fh = 0, Bm = 0, kv = null, Mc = -1, zh = 0;
  function Qi() {
    return Ar & 6 ? Mt() : Mc !== -1 ? Mc : Mc = Mt();
  }
  function To(f) {
    return f.mode & 1 ? Ar & 2 && Ha !== 0 ? Ha & -Ha : Dm.transition !== null ? (zh === 0 && (zh = Ao()), zh) : (f = Br, f !== 0 || (f = window.event, f = f === void 0 ? 16 : Iu(f.type)), f) : 1;
  }
  function ks(f, m, b, O) {
    if (50 < Bm)
      throw Bm = 0, kv = null, Error(t(185));
    Ts(f, b, O), (!(Ar & 2) || f !== Bi) && (f === Bi && (!(Ar & 2) && (Uv |= b), cs === 4 && Ll(f, Ha)), Fs(f, O), b === 1 && Ar === 0 && !(m.mode & 1) && (Nh = Mt() + 500, Uo && $a()));
  }
  function Fs(f, m) {
    var b = f.callbackNode;
    Ro(f, m);
    var O = bi(f, f === Bi ? Ha : 0);
    if (O === 0)
      b !== null && Mn(b), f.callbackNode = null, f.callbackPriority = 0;
    else if (m = O & -O, f.callbackPriority !== m) {
      if (b != null && Mn(b), m === 1)
        f.tag === 0 ? $f(zv.bind(null, f)) : xu(zv.bind(null, f)), bp(function() {
          !(Ar & 6) && $a();
        }), b = null;
      else {
        switch (rs(O)) {
          case 1:
            b = Wr;
            break;
          case 4:
            b = Rn;
            break;
          case 16:
            b = Ji;
            break;
          case 536870912:
            b = li;
            break;
          default:
            b = Ji;
        }
        b = tc(b, Ih.bind(null, f));
      }
      f.callbackPriority = m, f.callbackNode = b;
    }
  }
  function Ih(f, m) {
    if (Mc = -1, zh = 0, Ar & 6)
      throw Error(t(327));
    var b = f.callbackNode;
    if (Sf() && f.callbackNode !== b)
      return null;
    var O = bi(f, f === Bi ? Ha : 0);
    if (O === 0)
      return null;
    if (O & 30 || O & f.expiredLanes || m)
      m = Bh(f, O);
    else {
      m = O;
      var I = Ar;
      Ar |= 2;
      var $ = ay();
      (Bi !== f || Ha !== m) && (yf = null, Nh = Mt() + 500, Cc(f, m));
      do
        try {
          Iv();
          break;
        } catch (Ue) {
          L0(f, Ue);
        }
      while (1);
      Rh(), Ov.current = $, Ar = I, Sa !== null ? m = 0 : (Bi = null, Ha = 0, m = cs);
    }
    if (m !== 0) {
      if (m === 2 && (I = Ra(f), I !== 0 && (O = I, m = Fv(f, I))), m === 1)
        throw b = Pv, Cc(f, 0), Ll(f, O), Fs(f, Mt()), b;
      if (m === 6)
        Ll(f, O);
      else {
        if (I = f.current.alternate, !(O & 30) && !ry(I) && (m = Bh(f, O), m === 2 && ($ = Ra(f), $ !== 0 && (O = $, m = Fv(f, $))), m === 1))
          throw b = Pv, Cc(f, 0), Ll(f, O), Fs(f, Mt()), b;
        switch (f.finishedWork = I, f.finishedLanes = O, m) {
          case 0:
          case 1:
            throw Error(t(345));
          case 2:
            Zd(f, Dl, yf);
            break;
          case 3:
            if (Ll(f, O), (O & 130023424) === O && (m = Nv + 500 - Mt(), 10 < m)) {
              if (bi(f, 0) !== 0)
                break;
              if (I = f.suspendedLanes, (I & O) !== O) {
                Qi(), f.pingedLanes |= f.suspendedLanes & I;
                break;
              }
              f.timeoutHandle = tf(Zd.bind(null, f, Dl, yf), m);
              break;
            }
            Zd(f, Dl, yf);
            break;
          case 4:
            if (Ll(f, O), (O & 4194240) === O)
              break;
            for (m = f.eventTimes, I = -1; 0 < O; ) {
              var pe = 31 - di(O);
              $ = 1 << pe, pe = m[pe], pe > I && (I = pe), O &= ~$;
            }
            if (O = I, O = Mt() - O, O = (120 > O ? 120 : 480 > O ? 480 : 1080 > O ? 1080 : 1920 > O ? 1920 : 3e3 > O ? 3e3 : 4320 > O ? 4320 : 1960 * ty(O / 1960)) - O, 10 < O) {
              f.timeoutHandle = tf(Zd.bind(null, f, Dl, yf), O);
              break;
            }
            Zd(f, Dl, yf);
            break;
          case 5:
            Zd(f, Dl, yf);
            break;
          default:
            throw Error(t(329));
        }
      }
    }
    return Fs(f, Mt()), f.callbackNode === b ? Ih.bind(null, f) : null;
  }
  function Fv(f, m) {
    var b = Uh;
    return f.current.memoizedState.isDehydrated && (Cc(f, m).flags |= 256), f = Bh(f, m), f !== 2 && (m = Dl, Dl = b, m !== null && Np(m)), f;
  }
  function Np(f) {
    Dl === null ? Dl = f : Dl.push.apply(Dl, f);
  }
  function ry(f) {
    for (var m = f; ; ) {
      if (m.flags & 16384) {
        var b = m.updateQueue;
        if (b !== null && (b = b.stores, b !== null))
          for (var O = 0; O < b.length; O++) {
            var I = b[O], $ = I.getSnapshot;
            I = I.value;
            try {
              if (!ja($(), I))
                return !1;
            } catch {
              return !1;
            }
          }
      }
      if (b = m.child, m.subtreeFlags & 16384 && b !== null)
        b.return = m, m = b;
      else {
        if (m === f)
          break;
        for (; m.sibling === null; ) {
          if (m.return === null || m.return === f)
            return !0;
          m = m.return;
        }
        m.sibling.return = m.return, m = m.sibling;
      }
    }
    return !0;
  }
  function Ll(f, m) {
    for (m &= ~Ph, m &= ~Uv, f.suspendedLanes |= m, f.pingedLanes &= ~m, f = f.expirationTimes; 0 < m; ) {
      var b = 31 - di(m), O = 1 << b;
      f[b] = -1, m &= ~O;
    }
  }
  function zv(f) {
    if (Ar & 6)
      throw Error(t(327));
    Sf();
    var m = bi(f, 0);
    if (!(m & 1))
      return Fs(f, Mt()), null;
    var b = Bh(f, m);
    if (f.tag !== 0 && b === 2) {
      var O = Ra(f);
      O !== 0 && (m = O, b = Fv(f, O));
    }
    if (b === 1)
      throw b = Pv, Cc(f, 0), Ll(f, m), Fs(f, Mt()), b;
    if (b === 6)
      throw Error(t(345));
    return f.finishedWork = f.current.alternate, f.finishedLanes = m, Zd(f, Dl, yf), Fs(f, Mt()), null;
  }
  function Kd(f, m) {
    var b = Ar;
    Ar |= 1;
    try {
      return f(m);
    } finally {
      Ar = b, Ar === 0 && (Nh = Mt() + 500, Uo && $a());
    }
  }
  function Qd(f) {
    qd !== null && qd.tag === 0 && !(Ar & 6) && Sf();
    var m = Ar;
    Ar |= 1;
    var b = $i.transition, O = Br;
    try {
      if ($i.transition = null, Br = 1, f)
        return f();
    } finally {
      Br = O, $i.transition = b, Ar = m, !(Ar & 6) && $a();
    }
  }
  function iy() {
    ec = Im.current, hi(Im);
  }
  function Cc(f, m) {
    f.finishedWork = null, f.finishedLanes = 0;
    var b = f.timeoutHandle;
    if (b !== -1 && (f.timeoutHandle = -1, Th(b)), Sa !== null)
      for (b = Sa.return; b !== null; ) {
        var O = b;
        switch (nf(O), O.tag) {
          case 1:
            O = O.type.childContextTypes, O != null && tl();
            break;
          case 3:
            Mu(), hi(Ia), hi(xr), il();
            break;
          case 5:
            Fr(O);
            break;
          case 4:
            Mu();
            break;
          case 13:
            hi(or);
            break;
          case 19:
            hi(or);
            break;
          case 10:
            ta(O.type._context);
            break;
          case 22:
          case 23:
            iy();
        }
        b = b.return;
      }
    if (Bi = f, Sa = f = Ql(f.current, null), Ha = ec = m, cs = 0, Pv = null, Ph = Uv = nd = 0, Dl = Uh = null, Ya !== null) {
      for (m = 0; m < Ya.length; m++)
        if (b = Ya[m], O = b.interleaved, O !== null) {
          b.interleaved = null;
          var I = O.next, $ = b.pending;
          if ($ !== null) {
            var pe = $.next;
            $.next = I, O.next = pe;
          }
          b.pending = O;
        }
      Ya = null;
    }
    return f;
  }
  function L0(f, m) {
    do {
      var b = Sa;
      try {
        if (Rh(), uf.current = g, Kn) {
          for (var O = yi.memoizedState; O !== null; ) {
            var I = O.queue;
            I !== null && (I.pending = null), O = O.next;
          }
          Kn = !1;
        }
        if (zo = 0, ci = Bt = yi = null, Ku = !1, al = 0, Xd.current = null, b === null || b.return === null) {
          cs = 1, Pv = m, Sa = null;
          break;
        }
        e: {
          var $ = f, pe = b.return, Ue = b, Ge = m;
          if (m = Ha, Ue.flags |= 32768, Ge !== null && typeof Ge == "object" && typeof Ge.then == "function") {
            var Rt = Ge, nn = Ue, en = nn.tag;
            if (!(nn.mode & 1) && (en === 0 || en === 11 || en === 15)) {
              var Qt = nn.alternate;
              Qt ? (nn.updateQueue = Qt.updateQueue, nn.memoizedState = Qt.memoizedState, nn.lanes = Qt.lanes) : (nn.updateQueue = null, nn.memoizedState = null);
            }
            var Dn = yr(pe);
            if (Dn !== null) {
              Dn.flags &= -257, sr(Dn, pe, Ue, $, m), Dn.mode & 1 && mn($, Rt, m), m = Dn, Ge = Rt;
              var Bn = m.updateQueue;
              if (Bn === null) {
                var Gn = /* @__PURE__ */ new Set();
                Gn.add(Ge), m.updateQueue = Gn;
              } else
                Bn.add(Ge);
              break e;
            } else {
              if (!(m & 1)) {
                mn($, Rt, m), O0();
                break e;
              }
              Ge = Error(t(426));
            }
          } else if (la && Ue.mode & 1) {
            var co = yr(pe);
            if (co !== null) {
              !(co.flags & 65536) && (co.flags |= 256), sr(co, pe, Ue, $, m), Mh(W(Ge, Ue));
              break e;
            }
          }
          $ = Ge = W(Ge, Ue), cs !== 4 && (cs = 2), Uh === null ? Uh = [$] : Uh.push($), $ = pe;
          do {
            switch ($.tag) {
              case 3:
                $.flags |= 65536, m &= -m, $.lanes |= m;
                var ht = It($, Ge, m);
                $r($, ht);
                break e;
              case 1:
                Ue = Ge;
                var Je = $.type, bt = $.stateNode;
                if (!($.flags & 128) && (typeof Je.getDerivedStateFromError == "function" || bt !== null && typeof bt.componentDidCatch == "function" && (rd === null || !rd.has(bt)))) {
                  $.flags |= 65536, m &= -m, $.lanes |= m;
                  var dn = on($, Ue, m);
                  $r($, dn);
                  break e;
                }
            }
            $ = $.return;
          } while ($ !== null);
        }
        Hm(b);
      } catch (Wn) {
        m = Wn, Sa === b && b !== null && (Sa = b = b.return);
        continue;
      }
      break;
    } while (1);
  }
  function ay() {
    var f = Ov.current;
    return Ov.current = g, f === null ? g : f;
  }
  function O0() {
    (cs === 0 || cs === 3 || cs === 2) && (cs = 4), Bi === null || !(nd & 268435455) && !(Uv & 268435455) || Ll(Bi, Ha);
  }
  function Bh(f, m) {
    var b = Ar;
    Ar |= 2;
    var O = ay();
    (Bi !== f || Ha !== m) && (yf = null, Cc(f, m));
    do
      try {
        Hh();
        break;
      } catch (I) {
        L0(f, I);
      }
    while (1);
    if (Rh(), Ar = b, Ov.current = O, Sa !== null)
      throw Error(t(261));
    return Bi = null, Ha = 0, cs;
  }
  function Hh() {
    for (; Sa !== null; )
      Bv(Sa);
  }
  function Iv() {
    for (; Sa !== null && !zn(); )
      Bv(Sa);
  }
  function Bv(f) {
    var m = Gm(f.alternate, f, ec);
    f.memoizedProps = f.pendingProps, m === null ? Hm(f) : Sa = m, Xd.current = null;
  }
  function Hm(f) {
    var m = f;
    do {
      var b = m.alternate;
      if (f = m.return, m.flags & 32768) {
        if (b = Jg(b, m), b !== null) {
          b.flags &= 32767, Sa = b;
          return;
        }
        if (f !== null)
          f.flags |= 32768, f.subtreeFlags = 0, f.deletions = null;
        else {
          cs = 6, Sa = null;
          return;
        }
      } else if (b = w0(b, m, ec), b !== null) {
        Sa = b;
        return;
      }
      if (m = m.sibling, m !== null) {
        Sa = m;
        return;
      }
      Sa = m = f;
    } while (m !== null);
    cs === 0 && (cs = 5);
  }
  function Zd(f, m, b) {
    var O = Br, I = $i.transition;
    try {
      $i.transition = null, Br = 1, P0(f, m, b, O);
    } finally {
      $i.transition = I, Br = O;
    }
    return null;
  }
  function P0(f, m, b, O) {
    do
      Sf();
    while (qd !== null);
    if (Ar & 6)
      throw Error(t(327));
    b = f.finishedWork;
    var I = f.finishedLanes;
    if (b === null)
      return null;
    if (f.finishedWork = null, f.finishedLanes = 0, b === f.current)
      throw Error(t(177));
    f.callbackNode = null, f.callbackPriority = 0;
    var $ = b.lanes | b.childLanes;
    if (bd(f, $), f === Bi && (Sa = Bi = null, Ha = 0), !(b.subtreeFlags & 2064) && !(b.flags & 2064) || kh || (kh = !0, tc(Ji, function() {
      return Sf(), null;
    })), $ = (b.flags & 15990) !== 0, b.subtreeFlags & 15990 || $) {
      $ = $i.transition, $i.transition = null;
      var pe = Br;
      Br = 1;
      var Ue = Ar;
      Ar |= 4, Xd.current = null, C0(f, b), E_(b, f), Wi(ef), ma = !!Vf, ef = Vf = null, f.current = b, A0(b), pr(), Ar = Ue, Br = pe, $i.transition = $;
    } else
      f.current = b;
    if (kh && (kh = !1, qd = f, Fh = I), $ = f.pendingLanes, $ === 0 && (rd = null), hr(b.stateNode), Fs(f, Mt()), m !== null)
      for (O = f.onRecoverableError, b = 0; b < m.length; b++)
        I = m[b], O(I.value, { componentStack: I.stack, digest: I.digest });
    if (ny)
      throw ny = !1, f = Up, Up = null, f;
    return Fh & 1 && f.tag !== 0 && Sf(), $ = f.pendingLanes, $ & 1 ? f === kv ? Bm++ : (Bm = 0, kv = f) : Bm = 0, $a(), null;
  }
  function Sf() {
    if (qd !== null) {
      var f = rs(Fh), m = $i.transition, b = Br;
      try {
        if ($i.transition = null, Br = 16 > f ? 16 : f, qd === null)
          var O = !1;
        else {
          if (f = qd, qd = null, Fh = 0, Ar & 6)
            throw Error(t(331));
          var I = Ar;
          for (Ar |= 4, In = f.current; In !== null; ) {
            var $ = In, pe = $.child;
            if (In.flags & 16) {
              var Ue = $.deletions;
              if (Ue !== null) {
                for (var Ge = 0; Ge < Ue.length; Ge++) {
                  var Rt = Ue[Ge];
                  for (In = Rt; In !== null; ) {
                    var nn = In;
                    switch (nn.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Lp(8, nn, $);
                    }
                    var en = nn.child;
                    if (en !== null)
                      en.return = nn, In = en;
                    else
                      for (; In !== null; ) {
                        nn = In;
                        var Qt = nn.sibling, Dn = nn.return;
                        if (Lh(nn), nn === Rt) {
                          In = null;
                          break;
                        }
                        if (Qt !== null) {
                          Qt.return = Dn, In = Qt;
                          break;
                        }
                        In = Dn;
                      }
                  }
                }
                var Bn = $.alternate;
                if (Bn !== null) {
                  var Gn = Bn.child;
                  if (Gn !== null) {
                    Bn.child = null;
                    do {
                      var co = Gn.sibling;
                      Gn.sibling = null, Gn = co;
                    } while (Gn !== null);
                  }
                }
                In = $;
              }
            }
            if ($.subtreeFlags & 2064 && pe !== null)
              pe.return = $, In = pe;
            else
              e:
                for (; In !== null; ) {
                  if ($ = In, $.flags & 2048)
                    switch ($.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Lp(9, $, $.return);
                    }
                  var ht = $.sibling;
                  if (ht !== null) {
                    ht.return = $.return, In = ht;
                    break e;
                  }
                  In = $.return;
                }
          }
          var Je = f.current;
          for (In = Je; In !== null; ) {
            pe = In;
            var bt = pe.child;
            if (pe.subtreeFlags & 2064 && bt !== null)
              bt.return = pe, In = bt;
            else
              e:
                for (pe = Je; In !== null; ) {
                  if (Ue = In, Ue.flags & 2048)
                    try {
                      switch (Ue.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Dv(9, Ue);
                      }
                    } catch (Wn) {
                      uo(Ue, Ue.return, Wn);
                    }
                  if (Ue === pe) {
                    In = null;
                    break e;
                  }
                  var dn = Ue.sibling;
                  if (dn !== null) {
                    dn.return = Ue.return, In = dn;
                    break e;
                  }
                  In = Ue.return;
                }
          }
          if (Ar = I, $a(), br && typeof br.onPostCommitFiberRoot == "function")
            try {
              br.onPostCommitFiberRoot(qn, f);
            } catch {
            }
          O = !0;
        }
        return O;
      } finally {
        Br = b, $i.transition = m;
      }
    }
    return !1;
  }
  function Vm(f, m, b) {
    m = W(b, m), m = It(f, m, 1), f = Ec(f, m, 1), m = Qi(), f !== null && (Ts(f, 1, m), Fs(f, m));
  }
  function uo(f, m, b) {
    if (f.tag === 3)
      Vm(f, f, b);
    else
      for (; m !== null; ) {
        if (m.tag === 3) {
          Vm(m, f, b);
          break;
        } else if (m.tag === 1) {
          var O = m.stateNode;
          if (typeof m.type.getDerivedStateFromError == "function" || typeof O.componentDidCatch == "function" && (rd === null || !rd.has(O))) {
            f = W(b, f), f = on(m, f, 1), m = Ec(m, f, 1), f = Qi(), m !== null && (Ts(m, 1, f), Fs(m, f));
            break;
          }
        }
        m = m.return;
      }
  }
  function U0(f, m, b) {
    var O = f.pingCache;
    O !== null && O.delete(m), m = Qi(), f.pingedLanes |= f.suspendedLanes & b, Bi === f && (Ha & b) === b && (cs === 4 || cs === 3 && (Ha & 130023424) === Ha && 500 > Mt() - Nv ? Cc(f, 0) : Ph |= b), Fs(f, m);
  }
  function oy(f, m) {
    m === 0 && (f.mode & 1 ? (m = Ai, Ai <<= 1, !(Ai & 130023424) && (Ai = 4194304)) : m = 1);
    var b = Qi();
    f = Os(f, m), f !== null && (Ts(f, m, b), Fs(f, b));
  }
  function b_(f) {
    var m = f.memoizedState, b = 0;
    m !== null && (b = m.retryLane), oy(f, b);
  }
  function T_(f, m) {
    var b = 0;
    switch (f.tag) {
      case 13:
        var O = f.stateNode, I = f.memoizedState;
        I !== null && (b = I.retryLane);
        break;
      case 19:
        O = f.stateNode;
        break;
      default:
        throw Error(t(314));
    }
    O !== null && O.delete(m), oy(f, b);
  }
  var Gm;
  Gm = function(f, m, b) {
    if (f !== null)
      if (f.memoizedProps !== m.pendingProps || Ia.current)
        xn = !0;
      else {
        if (!(f.lanes & b) && !(m.flags & 128))
          return xn = !1, vf(f, m, b);
        xn = !!(f.flags & 131072);
      }
    else
      xn = !1, la && m.flags & 1048576 && Am(m, Rr, m.index);
    switch (m.lanes = 0, m.tag) {
      case 2:
        var O = m.type;
        Us(f, m), f = m.pendingProps;
        var I = el(m, xr.current);
        gn(m, b), I = cf(null, m, O, f, I, b);
        var $ = ff();
        return m.flags |= 1, typeof I == "object" && I !== null && typeof I.render == "function" && I.$$typeof === void 0 ? (m.tag = 1, m.memoizedState = null, m.updateQueue = null, ga(O) ? ($ = !0, xc(m)) : $ = !1, m.memoizedState = I.state !== null && I.state !== void 0 ? I.state : null, _n(m), I.updater = of, m.stateNode = I, I._reactInternals = m, Tu(m, O, f, b), m = mr(null, m, O, !0, $, b)) : (m.tag = 0, la && $ && Tp(m), Si(null, m, I, b), m = m.child), m;
      case 16:
        O = m.elementType;
        e: {
          switch (Us(f, m), f = m.pendingProps, I = O._init, O = I(O._payload), m.type = O, I = m.tag = iE(O), f = bl(O, f), I) {
            case 0:
              m = Nn(null, m, O, f, b);
              break e;
            case 1:
              m = zr(null, m, O, f, b);
              break e;
            case 11:
              m = qa(null, m, O, f, b);
              break e;
            case 14:
              m = _t(null, m, O, bl(O.type, f), b);
              break e;
          }
          throw Error(t(
            306,
            O,
            ""
          ));
        }
        return m;
      case 0:
        return O = m.type, I = m.pendingProps, I = m.elementType === O ? I : bl(O, I), Nn(f, m, O, I, b);
      case 1:
        return O = m.type, I = m.pendingProps, I = m.elementType === O ? I : bl(O, I), zr(f, m, O, I, b);
      case 3:
        e: {
          if (ei(m), f === null)
            throw Error(t(387));
          O = m.pendingProps, $ = m.memoizedState, I = $.element, na(f, m), ua(m, O, null, b);
          var pe = m.memoizedState;
          if (O = pe.element, $.isDehydrated)
            if ($ = { element: O, isDehydrated: !1, cache: pe.cache, pendingSuspenseBoundaries: pe.pendingSuspenseBoundaries, transitions: pe.transitions }, m.updateQueue.baseState = $, m.memoizedState = $, m.flags & 256) {
              I = W(Error(t(423)), m), m = Pa(f, m, O, b, I);
              break e;
            } else if (O !== I) {
              I = W(Error(t(424)), m), m = Pa(f, m, O, b, I);
              break e;
            } else
              for (Ds = Qs(m.stateNode.containerInfo.firstChild), ko = m, la = !0, El = null, b = Gd(m, null, O, b), m.child = b; b; )
                b.flags = b.flags & -3 | 4096, b = b.sibling;
          else {
            if (Ta(), O === I) {
              m = us(f, m, b);
              break e;
            }
            Si(f, m, O, b);
          }
          m = m.child;
        }
        return m;
      case 5:
        return ar(m), f === null && Hd(m), O = m.type, I = m.pendingProps, $ = f !== null ? f.memoizedProps : null, pe = I.children, Fd(O, I) ? pe = null : $ !== null && Fd(O, $) && (m.flags |= 32), Xt(f, m), Si(f, m, pe, b), m.child;
      case 6:
        return f === null && Hd(m), null;
      case 13:
        return Dh(f, m, b);
      case 4:
        return Ah(m, m.stateNode.containerInfo), O = m.pendingProps, f === null ? m.child = Kf(m, null, O, b) : Si(f, m, O, b), m.child;
      case 11:
        return O = m.type, I = m.pendingProps, I = m.elementType === O ? I : bl(O, I), qa(f, m, O, I, b);
      case 7:
        return Si(f, m, m.pendingProps, b), m.child;
      case 8:
        return Si(f, m, m.pendingProps.children, b), m.child;
      case 12:
        return Si(f, m, m.pendingProps.children, b), m.child;
      case 10:
        e: {
          if (O = m.type._context, I = m.pendingProps, $ = m.memoizedProps, pe = I.value, wi(bu, O._currentValue), O._currentValue = pe, $ !== null)
            if (ja($.value, pe)) {
              if ($.children === I.children && !Ia.current) {
                m = us(f, m, b);
                break e;
              }
            } else
              for ($ = m.child, $ !== null && ($.return = m); $ !== null; ) {
                var Ue = $.dependencies;
                if (Ue !== null) {
                  pe = $.child;
                  for (var Ge = Ue.firstContext; Ge !== null; ) {
                    if (Ge.context === O) {
                      if ($.tag === 1) {
                        Ge = Xa(-1, b & -b), Ge.tag = 2;
                        var Rt = $.updateQueue;
                        if (Rt !== null) {
                          Rt = Rt.shared;
                          var nn = Rt.pending;
                          nn === null ? Ge.next = Ge : (Ge.next = nn.next, nn.next = Ge), Rt.pending = Ge;
                        }
                      }
                      $.lanes |= b, Ge = $.alternate, Ge !== null && (Ge.lanes |= b), Da(
                        $.return,
                        b,
                        m
                      ), Ue.lanes |= b;
                      break;
                    }
                    Ge = Ge.next;
                  }
                } else if ($.tag === 10)
                  pe = $.type === m.type ? null : $.child;
                else if ($.tag === 18) {
                  if (pe = $.return, pe === null)
                    throw Error(t(341));
                  pe.lanes |= b, Ue = pe.alternate, Ue !== null && (Ue.lanes |= b), Da(pe, b, m), pe = $.sibling;
                } else
                  pe = $.child;
                if (pe !== null)
                  pe.return = $;
                else
                  for (pe = $; pe !== null; ) {
                    if (pe === m) {
                      pe = null;
                      break;
                    }
                    if ($ = pe.sibling, $ !== null) {
                      $.return = pe.return, pe = $;
                      break;
                    }
                    pe = pe.return;
                  }
                $ = pe;
              }
          Si(f, m, I.children, b), m = m.child;
        }
        return m;
      case 9:
        return I = m.type, O = m.pendingProps.children, gn(m, b), I = Ki(I), O = O(I), m.flags |= 1, Si(f, m, O, b), m.child;
      case 14:
        return O = m.type, I = bl(O, m.pendingProps), I = bl(O.type, I), _t(f, m, O, I, b);
      case 15:
        return Xe(f, m, m.type, m.pendingProps, b);
      case 17:
        return O = m.type, I = m.pendingProps, I = m.elementType === O ? I : bl(O, I), Us(f, m), m.tag = 1, ga(O) ? (f = !0, xc(m)) : f = !1, gn(m, b), Vd(m, O, I), Tu(m, O, I, b), mr(null, m, O, !0, f, b);
      case 19:
        return Zg(f, m, b);
      case 22:
        return Lt(f, m, b);
    }
    throw Error(t(156, m.tag));
  };
  function tc(f, m) {
    return vn(f, m);
  }
  function N0(f, m, b, O) {
    this.tag = f, this.key = b, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = m, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = O, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function sl(f, m, b, O) {
    return new N0(f, m, b, O);
  }
  function Hv(f) {
    return f = f.prototype, !(!f || !f.isReactComponent);
  }
  function iE(f) {
    if (typeof f == "function")
      return Hv(f) ? 1 : 0;
    if (f != null) {
      if (f = f.$$typeof, f === se)
        return 11;
      if (f === Ee)
        return 14;
    }
    return 2;
  }
  function Ql(f, m) {
    var b = f.alternate;
    return b === null ? (b = sl(f.tag, m, f.key, f.mode), b.elementType = f.elementType, b.type = f.type, b.stateNode = f.stateNode, b.alternate = f, f.alternate = b) : (b.pendingProps = m, b.type = f.type, b.flags = 0, b.subtreeFlags = 0, b.deletions = null), b.flags = f.flags & 14680064, b.childLanes = f.childLanes, b.lanes = f.lanes, b.child = f.child, b.memoizedProps = f.memoizedProps, b.memoizedState = f.memoizedState, b.updateQueue = f.updateQueue, m = f.dependencies, b.dependencies = m === null ? null : { lanes: m.lanes, firstContext: m.firstContext }, b.sibling = f.sibling, b.index = f.index, b.ref = f.ref, b;
  }
  function Jd(f, m, b, O, I, $) {
    var pe = 2;
    if (O = f, typeof f == "function")
      Hv(f) && (pe = 1);
    else if (typeof f == "string")
      pe = 5;
    else
      e:
        switch (f) {
          case Y:
            return kp(b.children, I, $, m);
          case ee:
            pe = 8, I |= 8;
            break;
          case Z:
            return f = sl(12, b, m, I | 2), f.elementType = Z, f.lanes = $, f;
          case he:
            return f = sl(13, b, m, I), f.elementType = he, f.lanes = $, f;
          case me:
            return f = sl(19, b, m, I), f.elementType = me, f.lanes = $, f;
          case we:
            return Vh(b, I, $, m);
          default:
            if (typeof f == "object" && f !== null)
              switch (f.$$typeof) {
                case K:
                  pe = 10;
                  break e;
                case fe:
                  pe = 9;
                  break e;
                case se:
                  pe = 11;
                  break e;
                case Ee:
                  pe = 14;
                  break e;
                case be:
                  pe = 16, O = null;
                  break e;
              }
            throw Error(t(130, f == null ? f : typeof f, ""));
        }
    return m = sl(pe, b, m, I), m.elementType = f, m.type = O, m.lanes = $, m;
  }
  function kp(f, m, b, O) {
    return f = sl(7, f, O, m), f.lanes = b, f;
  }
  function Vh(f, m, b, O) {
    return f = sl(22, f, O, m), f.elementType = we, f.lanes = b, f.stateNode = { isHidden: !1 }, f;
  }
  function Du(f, m, b) {
    return f = sl(6, f, null, m), f.lanes = b, f;
  }
  function fa(f, m, b) {
    return m = sl(4, f.children !== null ? f.children : [], f.key, m), m.lanes = b, m.stateNode = { containerInfo: f.containerInfo, pendingChildren: null, implementation: f.implementation }, m;
  }
  function Gh(f, m, b, O, I) {
    this.tag = m, this.containerInfo = f, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = kl(0), this.expirationTimes = kl(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = kl(0), this.identifierPrefix = O, this.onRecoverableError = I, this.mutableSourceEagerHydrationData = null;
  }
  function Qa(f, m, b, O, I, $, pe, Ue, Ge) {
    return f = new Gh(f, m, b, Ue, Ge), m === 1 ? (m = 1, $ === !0 && (m |= 8)) : m = 0, $ = sl(3, null, null, m), f.current = $, $.stateNode = f, $.memoizedState = { element: O, isDehydrated: b, cache: null, transitions: null, pendingSuspenseBoundaries: null }, _n($), f;
  }
  function zs(f, m, b) {
    var O = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: j, key: O == null ? null : "" + O, children: f, containerInfo: m, implementation: b };
  }
  function Vv(f) {
    if (!f)
      return $u;
    f = f._reactInternals;
    e: {
      if (_e(f) !== f || f.tag !== 1)
        throw Error(t(170));
      var m = f;
      do {
        switch (m.tag) {
          case 3:
            m = m.stateNode.context;
            break e;
          case 1:
            if (ga(m.type)) {
              m = m.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        m = m.return;
      } while (m !== null);
      throw Error(t(171));
    }
    if (f.tag === 1) {
      var b = f.type;
      if (ga(b))
        return jf(f, b, m);
    }
    return m;
  }
  function sy(f, m, b, O, I, $, pe, Ue, Ge) {
    return f = Qa(b, O, !0, f, I, $, pe, Ue, Ge), f.context = Vv(null), b = f.current, O = Qi(), I = To(b), $ = Xa(O, I), $.callback = m ?? null, Ec(b, $, I), f.current.lanes = I, Ts(f, I, O), Fs(f, O), f;
  }
  function Gv(f, m, b, O) {
    var I = m.current, $ = Qi(), pe = To(I);
    return b = Vv(b), m.context === null ? m.context = b : m.pendingContext = b, m = Xa($, pe), m.payload = { element: f }, O = O === void 0 ? null : O, O !== null && (m.callback = O), f = Ec(I, m, pe), f !== null && (ks(f, I, pe, $), Oa(f, I, pe)), pe;
  }
  function wn(f) {
    if (f = f.current, !f.child)
      return null;
    switch (f.child.tag) {
      case 5:
        return f.child.stateNode;
      default:
        return f.child.stateNode;
    }
  }
  function Zl(f, m) {
    if (f = f.memoizedState, f !== null && f.dehydrated !== null) {
      var b = f.retryLane;
      f.retryLane = b !== 0 && b < m ? b : m;
    }
  }
  function Wv(f, m) {
    Zl(f, m), (f = f.alternate) && Zl(f, m);
  }
  function Fp() {
    return null;
  }
  var Wh = typeof reportError == "function" ? reportError : function(f) {
    console.error(f);
  };
  function Zi(f) {
    this._internalRoot = f;
  }
  Za.prototype.render = Zi.prototype.render = function(f) {
    var m = this._internalRoot;
    if (m === null)
      throw Error(t(409));
    Gv(f, m, null, null);
  }, Za.prototype.unmount = Zi.prototype.unmount = function() {
    var f = this._internalRoot;
    if (f !== null) {
      this._internalRoot = null;
      var m = f.containerInfo;
      Qd(function() {
        Gv(null, f, null, null);
      }), m[Zs] = null;
    }
  };
  function Za(f) {
    this._internalRoot = f;
  }
  Za.prototype.unstable_scheduleHydration = function(f) {
    if (f) {
      var m = pa();
      f = { blockedOn: null, target: f, priority: m };
      for (var b = 0; b < Ti.length && m !== 0 && m < Ti[b].priority; b++)
        ;
      Ti.splice(b, 0, f), b === 0 && jo(f);
    }
  };
  function Vo(f) {
    return !(!f || f.nodeType !== 1 && f.nodeType !== 9 && f.nodeType !== 11);
  }
  function zp(f) {
    return !(!f || f.nodeType !== 1 && f.nodeType !== 9 && f.nodeType !== 11 && (f.nodeType !== 8 || f.nodeValue !== " react-mount-point-unstable "));
  }
  function Wm() {
  }
  function jv(f, m, b, O, I) {
    if (I) {
      if (typeof O == "function") {
        var $ = O;
        O = function() {
          var Rt = wn(pe);
          $.call(Rt);
        };
      }
      var pe = sy(m, O, f, 0, null, !1, !1, "", Wm);
      return f._reactRootContainer = pe, f[Zs] = pe.current, _l(f.nodeType === 8 ? f.parentNode : f), Qd(), pe;
    }
    for (; I = f.lastChild; )
      f.removeChild(I);
    if (typeof O == "function") {
      var Ue = O;
      O = function() {
        var Rt = wn(Ge);
        Ue.call(Rt);
      };
    }
    var Ge = Qa(f, 0, !1, null, null, !1, !1, "", Wm);
    return f._reactRootContainer = Ge, f[Zs] = Ge.current, _l(f.nodeType === 8 ? f.parentNode : f), Qd(function() {
      Gv(m, Ge, b, O);
    }), Ge;
  }
  function ly(f, m, b, O, I) {
    var $ = b._reactRootContainer;
    if ($) {
      var pe = $;
      if (typeof I == "function") {
        var Ue = I;
        I = function() {
          var Ge = wn(pe);
          Ue.call(Ge);
        };
      }
      Gv(m, pe, f, I);
    } else
      pe = jv(b, m, f, I, O);
    return wn(pe);
  }
  Fl = function(f) {
    switch (f.tag) {
      case 3:
        var m = f.stateNode;
        if (m.current.memoizedState.isDehydrated) {
          var b = Ea(m.pendingLanes);
          b !== 0 && (Wo(m, b | 1), Fs(m, Mt()), !(Ar & 6) && (Nh = Mt() + 500, $a()));
        }
        break;
      case 13:
        Qd(function() {
          var O = Os(f, 1);
          if (O !== null) {
            var I = Qi();
            ks(O, f, 1, I);
          }
        }), Wv(f, 1);
    }
  }, Do = function(f) {
    if (f.tag === 13) {
      var m = Os(f, 134217728);
      if (m !== null) {
        var b = Qi();
        ks(m, f, 134217728, b);
      }
      Wv(f, 134217728);
    }
  }, Hr = function(f) {
    if (f.tag === 13) {
      var m = To(f), b = Os(f, m);
      if (b !== null) {
        var O = Qi();
        ks(b, f, m, O);
      }
      Wv(f, m);
    }
  }, pa = function() {
    return Br;
  }, ku = function(f, m) {
    var b = Br;
    try {
      return Br = f, m();
    } finally {
      Br = b;
    }
  }, Pt = function(f, m, b) {
    switch (m) {
      case "input":
        if (zt(f, b), m = b.name, b.type === "radio" && m != null) {
          for (b = f; b.parentNode; )
            b = b.parentNode;
          for (b = b.querySelectorAll("input[name=" + JSON.stringify("" + m) + '][type="radio"]'), m = 0; m < b.length; m++) {
            var O = b[m];
            if (O !== f && O.form === f.form) {
              var I = ir(O);
              if (!I)
                throw Error(t(90));
              oe(O), zt(O, I);
            }
          }
        }
        break;
      case "textarea":
        re(f, b);
        break;
      case "select":
        m = b.value, m != null && mt(f, !!b.multiple, m, !1);
    }
  }, cr = Kd, En = Qd;
  var aE = { usingClientEntryPoint: !1, Events: [Js, Di, ir, Un, jn, Kd] }, Vt = { findFiberByHostInstance: os, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" }, Rc = { bundleType: Vt.bundleType, version: Vt.version, rendererPackageName: Vt.rendererPackageName, rendererConfig: Vt.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: H.ReactCurrentDispatcher, findHostInstanceByFiber: function(f) {
    return f = vt(f), f === null ? null : f.stateNode;
  }, findFiberByHostInstance: Vt.findFiberByHostInstance || Fp, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var _f = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!_f.isDisabled && _f.supportsFiber)
      try {
        qn = _f.inject(Rc), br = _f;
      } catch {
      }
  }
  return pd.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = aE, pd.createPortal = function(f, m) {
    var b = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!Vo(m))
      throw Error(t(200));
    return zs(f, m, null, b);
  }, pd.createRoot = function(f, m) {
    if (!Vo(f))
      throw Error(t(299));
    var b = !1, O = "", I = Wh;
    return m != null && (m.unstable_strictMode === !0 && (b = !0), m.identifierPrefix !== void 0 && (O = m.identifierPrefix), m.onRecoverableError !== void 0 && (I = m.onRecoverableError)), m = Qa(f, 1, !1, null, null, b, !1, O, I), f[Zs] = m.current, _l(f.nodeType === 8 ? f.parentNode : f), new Zi(m);
  }, pd.findDOMNode = function(f) {
    if (f == null)
      return null;
    if (f.nodeType === 1)
      return f;
    var m = f._reactInternals;
    if (m === void 0)
      throw typeof f.render == "function" ? Error(t(188)) : (f = Object.keys(f).join(","), Error(t(268, f)));
    return f = vt(m), f = f === null ? null : f.stateNode, f;
  }, pd.flushSync = function(f) {
    return Qd(f);
  }, pd.hydrate = function(f, m, b) {
    if (!zp(m))
      throw Error(t(200));
    return ly(null, f, m, !0, b);
  }, pd.hydrateRoot = function(f, m, b) {
    if (!Vo(f))
      throw Error(t(405));
    var O = b != null && b.hydratedSources || null, I = !1, $ = "", pe = Wh;
    if (b != null && (b.unstable_strictMode === !0 && (I = !0), b.identifierPrefix !== void 0 && ($ = b.identifierPrefix), b.onRecoverableError !== void 0 && (pe = b.onRecoverableError)), m = sy(m, null, f, 1, b ?? null, I, !1, $, pe), f[Zs] = m.current, _l(f), O)
      for (f = 0; f < O.length; f++)
        b = O[f], I = b._getVersion, I = I(b._source), m.mutableSourceEagerHydrationData == null ? m.mutableSourceEagerHydrationData = [b, I] : m.mutableSourceEagerHydrationData.push(
          b,
          I
        );
    return new Za(m);
  }, pd.render = function(f, m, b) {
    if (!zp(m))
      throw Error(t(200));
    return ly(null, f, m, !1, b);
  }, pd.unmountComponentAtNode = function(f) {
    if (!zp(f))
      throw Error(t(40));
    return f._reactRootContainer ? (Qd(function() {
      ly(null, null, f, !1, function() {
        f._reactRootContainer = null, f[Zs] = null;
      });
    }), !0) : !1;
  }, pd.unstable_batchedUpdates = Kd, pd.unstable_renderSubtreeIntoContainer = function(f, m, b, O) {
    if (!zp(b))
      throw Error(t(200));
    if (f == null || f._reactInternals === void 0)
      throw Error(t(38));
    return ly(f, m, b, !1, O);
  }, pd.version = "18.2.0-next-9e3b772b8-20220608", pd;
}
var md = {};
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var cF;
function Rq() {
  return cF || (cF = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var n = le, e = DB(), t = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, r = !1;
    function i(a) {
      r = a;
    }
    function o(a) {
      if (!r) {
        for (var s = arguments.length, v = new Array(s > 1 ? s - 1 : 0), x = 1; x < s; x++)
          v[x - 1] = arguments[x];
        u("warn", a, v);
      }
    }
    function l(a) {
      if (!r) {
        for (var s = arguments.length, v = new Array(s > 1 ? s - 1 : 0), x = 1; x < s; x++)
          v[x - 1] = arguments[x];
        u("error", a, v);
      }
    }
    function u(a, s, v) {
      {
        var x = t.ReactDebugCurrentFrame, M = x.getStackAddendum();
        M !== "" && (s += "%s", v = v.concat([M]));
        var N = v.map(function(G) {
          return String(G);
        });
        N.unshift("Warning: " + s), Function.prototype.apply.call(console[a], console, N);
      }
    }
    var h = 0, p = 1, y = 2, _ = 3, E = 4, w = 5, R = 6, U = 7, L = 8, A = 9, k = 10, F = 11, H = 12, B = 13, j = 14, Y = 15, ee = 16, Z = 17, K = 18, fe = 19, se = 21, he = 22, me = 23, Ee = 24, be = 25, we = !0, de = !1, ye = !1, X = !1, q = !1, ue = !0, Ce = !1, Ae = !1, De = !0, Ne = !0, Pe = !0, Fe = /* @__PURE__ */ new Set(), it = {}, Ot = {};
    function st(a, s) {
      oe(a, s), oe(a + "Capture", s);
    }
    function oe(a, s) {
      it[a] && l("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", a), it[a] = s;
      {
        var v = a.toLowerCase();
        Ot[v] = a, a === "onDoubleClick" && (Ot.ondblclick = a);
      }
      for (var x = 0; x < s.length; x++)
        Fe.add(s[x]);
    }
    var rt = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", qe = Object.prototype.hasOwnProperty;
    function $e(a) {
      {
        var s = typeof Symbol == "function" && Symbol.toStringTag, v = s && a[Symbol.toStringTag] || a.constructor.name || "Object";
        return v;
      }
    }
    function Ye(a) {
      try {
        return zt(a), !1;
      } catch {
        return !0;
      }
    }
    function zt(a) {
      return "" + a;
    }
    function ot(a, s) {
      if (Ye(a))
        return l("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", s, $e(a)), zt(a);
    }
    function Dt(a) {
      if (Ye(a))
        return l("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", $e(a)), zt(a);
    }
    function kt(a, s) {
      if (Ye(a))
        return l("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", s, $e(a)), zt(a);
    }
    function mt(a, s) {
      if (Ye(a))
        return l("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", s, $e(a)), zt(a);
    }
    function rn(a) {
      if (Ye(a))
        return l("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", $e(a)), zt(a);
    }
    function ae(a) {
      if (Ye(a))
        return l("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", $e(a)), zt(a);
    }
    var re = 0, ze = 1, xt = 2, ut = 3, lt = 4, Yt = 5, Nt = 6, xe = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", We = xe + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", ft = new RegExp("^[" + xe + "][" + We + "]*$"), Et = {}, Ze = {};
    function Te(a) {
      return qe.call(Ze, a) ? !0 : qe.call(Et, a) ? !1 : ft.test(a) ? (Ze[a] = !0, !0) : (Et[a] = !0, l("Invalid attribute name: `%s`", a), !1);
    }
    function tt(a, s, v) {
      return s !== null ? s.type === re : v ? !1 : a.length > 2 && (a[0] === "o" || a[0] === "O") && (a[1] === "n" || a[1] === "N");
    }
    function pt(a, s, v, x) {
      if (v !== null && v.type === re)
        return !1;
      switch (typeof s) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (x)
            return !1;
          if (v !== null)
            return !v.acceptsBooleans;
          var M = a.toLowerCase().slice(0, 5);
          return M !== "data-" && M !== "aria-";
        }
        default:
          return !1;
      }
    }
    function ve(a, s, v, x) {
      if (s === null || typeof s > "u" || pt(a, s, v, x))
        return !0;
      if (x)
        return !1;
      if (v !== null)
        switch (v.type) {
          case ut:
            return !s;
          case lt:
            return s === !1;
          case Yt:
            return isNaN(s);
          case Nt:
            return isNaN(s) || s < 1;
        }
      return !1;
    }
    function Pt(a) {
      return dt.hasOwnProperty(a) ? dt[a] : null;
    }
    function He(a, s, v, x, M, N, G) {
      this.acceptsBooleans = s === xt || s === ut || s === lt, this.attributeName = x, this.attributeNamespace = M, this.mustUseProperty = v, this.propertyName = a, this.type = s, this.sanitizeURL = N, this.removeEmptyString = G;
    }
    var dt = {}, ln = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    ln.forEach(function(a) {
      dt[a] = new He(
        a,
        re,
        !1,
        // mustUseProperty
        a,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
      var s = a[0], v = a[1];
      dt[s] = new He(
        s,
        ze,
        !1,
        // mustUseProperty
        v,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
      dt[a] = new He(
        a,
        xt,
        !1,
        // mustUseProperty
        a.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
      dt[a] = new He(
        a,
        xt,
        !1,
        // mustUseProperty
        a,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(a) {
      dt[a] = new He(
        a,
        ut,
        !1,
        // mustUseProperty
        a.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(a) {
      dt[a] = new He(
        a,
        ut,
        !0,
        // mustUseProperty
        a,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(a) {
      dt[a] = new He(
        a,
        lt,
        !1,
        // mustUseProperty
        a,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(a) {
      dt[a] = new He(
        a,
        Nt,
        !1,
        // mustUseProperty
        a,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(a) {
      dt[a] = new He(
        a,
        Yt,
        !1,
        // mustUseProperty
        a.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var Un = /[\-\:]([a-z])/g, jn = function(a) {
      return a[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(a) {
      var s = a.replace(Un, jn);
      dt[s] = new He(
        s,
        ze,
        !1,
        // mustUseProperty
        a,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(a) {
      var s = a.replace(Un, jn);
      dt[s] = new He(
        s,
        ze,
        !1,
        // mustUseProperty
        a,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(a) {
      var s = a.replace(Un, jn);
      dt[s] = new He(
        s,
        ze,
        !1,
        // mustUseProperty
        a,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(a) {
      dt[a] = new He(
        a,
        ze,
        !1,
        // mustUseProperty
        a.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var cr = "xlinkHref";
    dt[cr] = new He(
      "xlinkHref",
      ze,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(a) {
      dt[a] = new He(
        a,
        ze,
        !1,
        // mustUseProperty
        a.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var En = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, tr = !1;
    function fr(a) {
      !tr && En.test(a) && (tr = !0, l("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(a)));
    }
    function Hn(a, s, v, x) {
      if (x.mustUseProperty) {
        var M = x.propertyName;
        return a[M];
      } else {
        ot(v, s), x.sanitizeURL && fr("" + v);
        var N = x.attributeName, G = null;
        if (x.type === lt) {
          if (a.hasAttribute(N)) {
            var Q = a.getAttribute(N);
            return Q === "" ? !0 : ve(s, v, x, !1) ? Q : Q === "" + v ? v : Q;
          }
        } else if (a.hasAttribute(N)) {
          if (ve(s, v, x, !1))
            return a.getAttribute(N);
          if (x.type === ut)
            return v;
          G = a.getAttribute(N);
        }
        return ve(s, v, x, !1) ? G === null ? v : G : G === "" + v ? v : G;
      }
    }
    function mi(a, s, v, x) {
      {
        if (!Te(s))
          return;
        if (!a.hasAttribute(s))
          return v === void 0 ? void 0 : null;
        var M = a.getAttribute(s);
        return ot(v, s), M === "" + v ? v : M;
      }
    }
    function Vr(a, s, v, x) {
      var M = Pt(s);
      if (!tt(s, M, x)) {
        if (ve(s, v, M, x) && (v = null), x || M === null) {
          if (Te(s)) {
            var N = s;
            v === null ? a.removeAttribute(N) : (ot(v, s), a.setAttribute(N, "" + v));
          }
          return;
        }
        var G = M.mustUseProperty;
        if (G) {
          var Q = M.propertyName;
          if (v === null) {
            var ne = M.type;
            a[Q] = ne === ut ? !1 : "";
          } else
            a[Q] = v;
          return;
        }
        var Se = M.attributeName, Me = M.attributeNamespace;
        if (v === null)
          a.removeAttribute(Se);
        else {
          var et = M.type, Ke;
          et === ut || et === lt && v === !0 ? Ke = "" : (ot(v, Se), Ke = "" + v, M.sanitizeURL && fr(Ke.toString())), Me ? a.setAttributeNS(Me, Se, Ke) : a.setAttribute(Se, Ke);
        }
      }
    }
    var Gr = Symbol.for("react.element"), Or = Symbol.for("react.portal"), Ui = Symbol.for("react.fragment"), fi = Symbol.for("react.strict_mode"), ke = Symbol.for("react.profiler"), Ht = Symbol.for("react.provider"), Jt = Symbol.for("react.context"), pn = Symbol.for("react.forward_ref"), _e = Symbol.for("react.suspense"), Qe = Symbol.for("react.suspense_list"), at = Symbol.for("react.memo"), je = Symbol.for("react.lazy"), vt = Symbol.for("react.scope"), sn = Symbol.for("react.debug_trace_mode"), vn = Symbol.for("react.offscreen"), Mn = Symbol.for("react.legacy_hidden"), zn = Symbol.for("react.cache"), pr = Symbol.for("react.tracing_marker"), Mt = Symbol.iterator, dr = "@@iterator";
    function Wr(a) {
      if (a === null || typeof a != "object")
        return null;
      var s = Mt && a[Mt] || a[dr];
      return typeof s == "function" ? s : null;
    }
    var Rn = Object.assign, Ji = 0, Ca, li, qn, br, hr, di, ha;
    function Kr() {
    }
    Kr.__reactDisabledLog = !0;
    function Co() {
      {
        if (Ji === 0) {
          Ca = console.log, li = console.info, qn = console.warn, br = console.error, hr = console.group, di = console.groupCollapsed, ha = console.groupEnd;
          var a = {
            configurable: !0,
            enumerable: !0,
            value: Kr,
            writable: !0
          };
          Object.defineProperties(console, {
            info: a,
            log: a,
            warn: a,
            error: a,
            group: a,
            groupCollapsed: a,
            groupEnd: a
          });
        }
        Ji++;
      }
    }
    function Ri() {
      {
        if (Ji--, Ji === 0) {
          var a = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: Rn({}, a, {
              value: Ca
            }),
            info: Rn({}, a, {
              value: li
            }),
            warn: Rn({}, a, {
              value: qn
            }),
            error: Rn({}, a, {
              value: br
            }),
            group: Rn({}, a, {
              value: hr
            }),
            groupCollapsed: Rn({}, a, {
              value: di
            }),
            groupEnd: Rn({}, a, {
              value: ha
            })
          });
        }
        Ji < 0 && l("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Ai = t.ReactCurrentDispatcher, Ea;
    function bi(a, s, v) {
      {
        if (Ea === void 0)
          try {
            throw Error();
          } catch (M) {
            var x = M.stack.trim().match(/\n( *(at )?)/);
            Ea = x && x[1] || "";
          }
        return `
` + Ea + a;
      }
    }
    var ns = !1, Ro;
    {
      var Ra = typeof WeakMap == "function" ? WeakMap : Map;
      Ro = new Ra();
    }
    function Ao(a, s) {
      if (!a || ns)
        return "";
      {
        var v = Ro.get(a);
        if (v !== void 0)
          return v;
      }
      var x;
      ns = !0;
      var M = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var N;
      N = Ai.current, Ai.current = null, Co();
      try {
        if (s) {
          var G = function() {
            throw Error();
          };
          if (Object.defineProperty(G.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(G, []);
            } catch (At) {
              x = At;
            }
            Reflect.construct(a, [], G);
          } else {
            try {
              G.call();
            } catch (At) {
              x = At;
            }
            a.call(G.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (At) {
            x = At;
          }
          a();
        }
      } catch (At) {
        if (At && x && typeof At.stack == "string") {
          for (var Q = At.stack.split(`
`), ne = x.stack.split(`
`), Se = Q.length - 1, Me = ne.length - 1; Se >= 1 && Me >= 0 && Q[Se] !== ne[Me]; )
            Me--;
          for (; Se >= 1 && Me >= 0; Se--, Me--)
            if (Q[Se] !== ne[Me]) {
              if (Se !== 1 || Me !== 1)
                do
                  if (Se--, Me--, Me < 0 || Q[Se] !== ne[Me]) {
                    var et = `
` + Q[Se].replace(" at new ", " at ");
                    return a.displayName && et.includes("<anonymous>") && (et = et.replace("<anonymous>", a.displayName)), typeof a == "function" && Ro.set(a, et), et;
                  }
                while (Se >= 1 && Me >= 0);
              break;
            }
        }
      } finally {
        ns = !1, Ai.current = N, Ri(), Error.prepareStackTrace = M;
      }
      var Ke = a ? a.displayName || a.name : "", Ct = Ke ? bi(Ke) : "";
      return typeof a == "function" && Ro.set(a, Ct), Ct;
    }
    function kl(a, s, v) {
      return Ao(a, !0);
    }
    function Ts(a, s, v) {
      return Ao(a, !1);
    }
    function bd(a) {
      var s = a.prototype;
      return !!(s && s.isReactComponent);
    }
    function Wo(a, s, v) {
      if (a == null)
        return "";
      if (typeof a == "function")
        return Ao(a, bd(a));
      if (typeof a == "string")
        return bi(a);
      switch (a) {
        case _e:
          return bi("Suspense");
        case Qe:
          return bi("SuspenseList");
      }
      if (typeof a == "object")
        switch (a.$$typeof) {
          case pn:
            return Ts(a.render);
          case at:
            return Wo(a.type, s, v);
          case je: {
            var x = a, M = x._payload, N = x._init;
            try {
              return Wo(N(M), s, v);
            } catch {
            }
          }
        }
      return "";
    }
    function Br(a) {
      switch (a._debugOwner && a._debugOwner.type, a._debugSource, a.tag) {
        case w:
          return bi(a.type);
        case ee:
          return bi("Lazy");
        case B:
          return bi("Suspense");
        case fe:
          return bi("SuspenseList");
        case h:
        case y:
        case Y:
          return Ts(a.type);
        case F:
          return Ts(a.type.render);
        case p:
          return kl(a.type);
        default:
          return "";
      }
    }
    function rs(a) {
      try {
        var s = "", v = a;
        do
          s += Br(v), v = v.return;
        while (v);
        return s;
      } catch (x) {
        return `
Error generating stack: ` + x.message + `
` + x.stack;
      }
    }
    function Fl(a, s, v) {
      var x = a.displayName;
      if (x)
        return x;
      var M = s.displayName || s.name || "";
      return M !== "" ? v + "(" + M + ")" : v;
    }
    function Do(a) {
      return a.displayName || "Context";
    }
    function Hr(a) {
      if (a == null)
        return null;
      if (typeof a.tag == "number" && l("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof a == "function")
        return a.displayName || a.name || null;
      if (typeof a == "string")
        return a;
      switch (a) {
        case Ui:
          return "Fragment";
        case Or:
          return "Portal";
        case ke:
          return "Profiler";
        case fi:
          return "StrictMode";
        case _e:
          return "Suspense";
        case Qe:
          return "SuspenseList";
      }
      if (typeof a == "object")
        switch (a.$$typeof) {
          case Jt:
            var s = a;
            return Do(s) + ".Consumer";
          case Ht:
            var v = a;
            return Do(v._context) + ".Provider";
          case pn:
            return Fl(a, a.render, "ForwardRef");
          case at:
            var x = a.displayName || null;
            return x !== null ? x : Hr(a.type) || "Memo";
          case je: {
            var M = a, N = M._payload, G = M._init;
            try {
              return Hr(G(N));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function pa(a, s, v) {
      var x = s.displayName || s.name || "";
      return a.displayName || (x !== "" ? v + "(" + x + ")" : v);
    }
    function ku(a) {
      return a.displayName || "Context";
    }
    function rr(a) {
      var s = a.tag, v = a.type;
      switch (s) {
        case Ee:
          return "Cache";
        case A:
          var x = v;
          return ku(x) + ".Consumer";
        case k:
          var M = v;
          return ku(M._context) + ".Provider";
        case K:
          return "DehydratedFragment";
        case F:
          return pa(v, v.render, "ForwardRef");
        case U:
          return "Fragment";
        case w:
          return v;
        case E:
          return "Portal";
        case _:
          return "Root";
        case R:
          return "Text";
        case ee:
          return Hr(v);
        case L:
          return v === fi ? "StrictMode" : "Mode";
        case he:
          return "Offscreen";
        case H:
          return "Profiler";
        case se:
          return "Scope";
        case B:
          return "Suspense";
        case fe:
          return "SuspenseList";
        case be:
          return "TracingMarker";
        case p:
        case h:
        case Z:
        case y:
        case j:
        case Y:
          if (typeof v == "function")
            return v.displayName || v.name || null;
          if (typeof v == "string")
            return v;
          break;
      }
      return null;
    }
    var ml = t.ReactDebugCurrentFrame, Ni = null, gr = !1;
    function Lo() {
      {
        if (Ni === null)
          return null;
        var a = Ni._debugOwner;
        if (a !== null && typeof a < "u")
          return rr(a);
      }
      return null;
    }
    function oo() {
      return Ni === null ? "" : rs(Ni);
    }
    function oa() {
      ml.getCurrentStack = null, Ni = null, gr = !1;
    }
    function Ti(a) {
      ml.getCurrentStack = a === null ? null : oo, Ni = a, gr = !1;
    }
    function Td() {
      return Ni;
    }
    function Qr(a) {
      gr = a;
    }
    function Aa(a) {
      return "" + a;
    }
    function zl(a) {
      switch (typeof a) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return a;
        case "object":
          return ae(a), a;
        default:
          return "";
      }
    }
    var jo = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function Il(a, s) {
      jo[s.type] || s.onChange || s.onInput || s.readOnly || s.disabled || s.value == null || l("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), s.onChange || s.readOnly || s.disabled || s.checked == null || l("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function vl(a) {
      var s = a.type, v = a.nodeName;
      return v && v.toLowerCase() === "input" && (s === "checkbox" || s === "radio");
    }
    function ws(a) {
      return a._valueTracker;
    }
    function Ms(a) {
      a._valueTracker = null;
    }
    function Fu(a) {
      var s = "";
      return a && (vl(a) ? s = a.checked ? "true" : "false" : s = a.value), s;
    }
    function vo(a) {
      var s = vl(a) ? "checked" : "value", v = Object.getOwnPropertyDescriptor(a.constructor.prototype, s);
      ae(a[s]);
      var x = "" + a[s];
      if (!(a.hasOwnProperty(s) || typeof v > "u" || typeof v.get != "function" || typeof v.set != "function")) {
        var M = v.get, N = v.set;
        Object.defineProperty(a, s, {
          configurable: !0,
          get: function() {
            return M.call(this);
          },
          set: function(Q) {
            ae(Q), x = "" + Q, N.call(this, Q);
          }
        }), Object.defineProperty(a, s, {
          enumerable: v.enumerable
        });
        var G = {
          getValue: function() {
            return x;
          },
          setValue: function(Q) {
            ae(Q), x = "" + Q;
          },
          stopTracking: function() {
            Ms(a), delete a[s];
          }
        };
        return G;
      }
    }
    function ma(a) {
      ws(a) || (a._valueTracker = vo(a));
    }
    function $s(a) {
      if (!a)
        return !1;
      var s = ws(a);
      if (!s)
        return !0;
      var v = s.getValue(), x = Fu(a);
      return x !== v ? (s.setValue(x), !0) : !1;
    }
    function Oo(a) {
      if (a = a || (typeof document < "u" ? document : void 0), typeof a > "u")
        return null;
      try {
        return a.activeElement || a.body;
      } catch {
        return a.body;
      }
    }
    var Bl = !1, zu = !1, Po = !1, Iu = !1;
    function is(a) {
      var s = a.type === "checkbox" || a.type === "radio";
      return s ? a.checked != null : a.value != null;
    }
    function ie(a, s) {
      var v = a, x = s.checked, M = Rn({}, s, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: x ?? v._wrapperState.initialChecked
      });
      return M;
    }
    function Ie(a, s) {
      Il("input", s), s.checked !== void 0 && s.defaultChecked !== void 0 && !zu && (l("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", Lo() || "A component", s.type), zu = !0), s.value !== void 0 && s.defaultValue !== void 0 && !Bl && (l("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", Lo() || "A component", s.type), Bl = !0);
      var v = a, x = s.defaultValue == null ? "" : s.defaultValue;
      v._wrapperState = {
        initialChecked: s.checked != null ? s.checked : s.defaultChecked,
        initialValue: zl(s.value != null ? s.value : x),
        controlled: is(s)
      };
    }
    function ct(a, s) {
      var v = a, x = s.checked;
      x != null && Vr(v, "checked", x, !1);
    }
    function Ut(a, s) {
      var v = a;
      {
        var x = is(s);
        !v._wrapperState.controlled && x && !Iu && (l("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Iu = !0), v._wrapperState.controlled && !x && !Po && (l("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Po = !0);
      }
      ct(a, s);
      var M = zl(s.value), N = s.type;
      if (M != null)
        N === "number" ? (M === 0 && v.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        v.value != M) && (v.value = Aa(M)) : v.value !== Aa(M) && (v.value = Aa(M));
      else if (N === "submit" || N === "reset") {
        v.removeAttribute("value");
        return;
      }
      s.hasOwnProperty("value") ? Zn(v, s.type, M) : s.hasOwnProperty("defaultValue") && Zn(v, s.type, zl(s.defaultValue)), s.checked == null && s.defaultChecked != null && (v.defaultChecked = !!s.defaultChecked);
    }
    function tn(a, s, v) {
      var x = a;
      if (s.hasOwnProperty("value") || s.hasOwnProperty("defaultValue")) {
        var M = s.type, N = M === "submit" || M === "reset";
        if (N && (s.value === void 0 || s.value === null))
          return;
        var G = Aa(x._wrapperState.initialValue);
        v || G !== x.value && (x.value = G), x.defaultValue = G;
      }
      var Q = x.name;
      Q !== "" && (x.name = ""), x.defaultChecked = !x.defaultChecked, x.defaultChecked = !!x._wrapperState.initialChecked, Q !== "" && (x.name = Q);
    }
    function $n(a, s) {
      var v = a;
      Ut(v, s), yn(v, s);
    }
    function yn(a, s) {
      var v = s.name;
      if (s.type === "radio" && v != null) {
        for (var x = a; x.parentNode; )
          x = x.parentNode;
        ot(v, "name");
        for (var M = x.querySelectorAll("input[name=" + JSON.stringify("" + v) + '][type="radio"]'), N = 0; N < M.length; N++) {
          var G = M[N];
          if (!(G === a || G.form !== a.form)) {
            var Q = ad(G);
            if (!Q)
              throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            $s(G), Ut(G, Q);
          }
        }
      }
    }
    function Zn(a, s, v) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (s !== "number" || Oo(a.ownerDocument) !== a) && (v == null ? a.defaultValue = Aa(a._wrapperState.initialValue) : a.defaultValue !== Aa(v) && (a.defaultValue = Aa(v)));
    }
    var Jn = !1, Tr = !1, Mr = !1;
    function _r(a, s) {
      s.value == null && (typeof s.children == "object" && s.children !== null ? n.Children.forEach(s.children, function(v) {
        v != null && (typeof v == "string" || typeof v == "number" || Tr || (Tr = !0, l("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : s.dangerouslySetInnerHTML != null && (Mr || (Mr = !0, l("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), s.selected != null && !Jn && (l("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), Jn = !0);
    }
    function Zr(a, s) {
      s.value != null && a.setAttribute("value", Aa(zl(s.value)));
    }
    var vi = Array.isArray;
    function ii(a) {
      return vi(a);
    }
    var Hl;
    Hl = !1;
    function gl() {
      var a = Lo();
      return a ? `

Check the render method of \`` + a + "`." : "";
    }
    var pu = ["value", "defaultValue"];
    function gh(a) {
      {
        Il("select", a);
        for (var s = 0; s < pu.length; s++) {
          var v = pu[s];
          if (a[v] != null) {
            var x = ii(a[v]);
            a.multiple && !x ? l("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", v, gl()) : !a.multiple && x && l("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", v, gl());
          }
        }
      }
    }
    function mu(a, s, v, x) {
      var M = a.options;
      if (s) {
        for (var N = v, G = {}, Q = 0; Q < N.length; Q++)
          G["$" + N[Q]] = !0;
        for (var ne = 0; ne < M.length; ne++) {
          var Se = G.hasOwnProperty("$" + M[ne].value);
          M[ne].selected !== Se && (M[ne].selected = Se), Se && x && (M[ne].defaultSelected = !0);
        }
      } else {
        for (var Me = Aa(zl(v)), et = null, Ke = 0; Ke < M.length; Ke++) {
          if (M[Ke].value === Me) {
            M[Ke].selected = !0, x && (M[Ke].defaultSelected = !0);
            return;
          }
          et === null && !M[Ke].disabled && (et = M[Ke]);
        }
        et !== null && (et.selected = !0);
      }
    }
    function Nf(a, s) {
      return Rn({}, s, {
        value: void 0
      });
    }
    function yh(a, s) {
      var v = a;
      gh(s), v._wrapperState = {
        wasMultiple: !!s.multiple
      }, s.value !== void 0 && s.defaultValue !== void 0 && !Hl && (l("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), Hl = !0);
    }
    function vm(a, s) {
      var v = a;
      v.multiple = !!s.multiple;
      var x = s.value;
      x != null ? mu(v, !!s.multiple, x, !1) : s.defaultValue != null && mu(v, !!s.multiple, s.defaultValue, !0);
    }
    function gm(a, s) {
      var v = a, x = v._wrapperState.wasMultiple;
      v._wrapperState.wasMultiple = !!s.multiple;
      var M = s.value;
      M != null ? mu(v, !!s.multiple, M, !1) : x !== !!s.multiple && (s.defaultValue != null ? mu(v, !!s.multiple, s.defaultValue, !0) : mu(v, !!s.multiple, s.multiple ? [] : "", !1));
    }
    function ym(a, s) {
      var v = a, x = s.value;
      x != null && mu(v, !!s.multiple, x, !1);
    }
    var Sm = !1;
    function _m(a, s) {
      var v = a;
      if (s.dangerouslySetInnerHTML != null)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var x = Rn({}, s, {
        value: void 0,
        defaultValue: void 0,
        children: Aa(v._wrapperState.initialValue)
      });
      return x;
    }
    function Cv(a, s) {
      var v = a;
      Il("textarea", s), s.value !== void 0 && s.defaultValue !== void 0 && !Sm && (l("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", Lo() || "A component"), Sm = !0);
      var x = s.value;
      if (x == null) {
        var M = s.children, N = s.defaultValue;
        if (M != null) {
          l("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (N != null)
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (ii(M)) {
              if (M.length > 1)
                throw new Error("<textarea> can only have at most one child.");
              M = M[0];
            }
            N = M;
          }
        }
        N == null && (N = ""), x = N;
      }
      v._wrapperState = {
        initialValue: zl(x)
      };
    }
    function xm(a, s) {
      var v = a, x = zl(s.value), M = zl(s.defaultValue);
      if (x != null) {
        var N = Aa(x);
        N !== v.value && (v.value = N), s.defaultValue == null && v.defaultValue !== N && (v.defaultValue = N);
      }
      M != null && (v.defaultValue = Aa(M));
    }
    function wd(a, s) {
      var v = a, x = v.textContent;
      x === v._wrapperState.initialValue && x !== "" && x !== null && (v.value = x);
    }
    function kf(a, s) {
      xm(a, s);
    }
    var vu = "http://www.w3.org/1999/xhtml", Em = "http://www.w3.org/1998/Math/MathML", yl = "http://www.w3.org/2000/svg";
    function Ys(a) {
      switch (a) {
        case "svg":
          return yl;
        case "math":
          return Em;
        default:
          return vu;
      }
    }
    function Yc(a, s) {
      return a == null || a === vu ? Ys(s) : a === yl && s === "foreignObject" ? vu : a;
    }
    var Xc = function(a) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(s, v, x, M) {
        MSApp.execUnsafeLocalFunction(function() {
          return a(s, v, x, M);
        });
      } : a;
    }, gu, Ff = Xc(function(a, s) {
      if (a.namespaceURI === yl && !("innerHTML" in a)) {
        gu = gu || document.createElement("div"), gu.innerHTML = "<svg>" + s.valueOf().toString() + "</svg>";
        for (var v = gu.firstChild; a.firstChild; )
          a.removeChild(a.firstChild);
        for (; v.firstChild; )
          a.appendChild(v.firstChild);
        return;
      }
      a.innerHTML = s;
    }), Xs = 1, Bu = 3, Wa = 8, Fa = 9, za = 11, ea = function(a, s) {
      if (s) {
        var v = a.firstChild;
        if (v && v === a.lastChild && v.nodeType === Bu) {
          v.nodeValue = s;
          return;
        }
      }
      a.textContent = s;
    }, Md = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, as = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function bm(a, s) {
      return a + s.charAt(0).toUpperCase() + s.substring(1);
    }
    var Tm = ["Webkit", "ms", "Moz", "O"];
    Object.keys(as).forEach(function(a) {
      Tm.forEach(function(s) {
        as[bm(s, a)] = as[a];
      });
    });
    function Cd(a, s, v) {
      var x = s == null || typeof s == "boolean" || s === "";
      return x ? "" : !v && typeof s == "number" && s !== 0 && !(as.hasOwnProperty(a) && as[a]) ? s + "px" : (mt(s, a), ("" + s).trim());
    }
    var qc = /([A-Z])/g, Rv = /^ms-/;
    function vp(a) {
      return a.replace(qc, "-$1").toLowerCase().replace(Rv, "-ms-");
    }
    var Rd = function() {
    };
    {
      var Sh = /^(?:webkit|moz|o)[A-Z]/, zf = /^-ms-/, qs = /-(.)/g, Kc = /;\s*$/, pc = {}, Hu = {}, gp = !1, Ad = !1, Cs = function(a) {
        return a.replace(qs, function(s, v) {
          return v.toUpperCase();
        });
      }, Dd = function(a) {
        pc.hasOwnProperty(a) && pc[a] || (pc[a] = !0, l(
          "Unsupported style property %s. Did you mean %s?",
          a,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          Cs(a.replace(zf, "ms-"))
        ));
      }, Qc = function(a) {
        pc.hasOwnProperty(a) && pc[a] || (pc[a] = !0, l("Unsupported vendor-prefixed style property %s. Did you mean %s?", a, a.charAt(0).toUpperCase() + a.slice(1)));
      }, yu = function(a, s) {
        Hu.hasOwnProperty(s) && Hu[s] || (Hu[s] = !0, l(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, a, s.replace(Kc, "")));
      }, yp = function(a, s) {
        gp || (gp = !0, l("`NaN` is an invalid value for the `%s` css style property.", a));
      }, Ld = function(a, s) {
        Ad || (Ad = !0, l("`Infinity` is an invalid value for the `%s` css style property.", a));
      };
      Rd = function(a, s) {
        a.indexOf("-") > -1 ? Dd(a) : Sh.test(a) ? Qc(a) : Kc.test(s) && yu(a, s), typeof s == "number" && (isNaN(s) ? yp(a, s) : isFinite(s) || Ld(a, s));
      };
    }
    var Sp = Rd;
    function Vl(a) {
      {
        var s = "", v = "";
        for (var x in a)
          if (a.hasOwnProperty(x)) {
            var M = a[x];
            if (M != null) {
              var N = x.indexOf("--") === 0;
              s += v + (N ? x : vp(x)) + ":", s += Cd(x, M, N), v = ";";
            }
          }
        return s || null;
      }
    }
    function va(a, s) {
      var v = a.style;
      for (var x in s)
        if (s.hasOwnProperty(x)) {
          var M = x.indexOf("--") === 0;
          M || Sp(x, s[x]);
          var N = Cd(x, s[x], M);
          x === "float" && (x = "cssFloat"), M ? v.setProperty(x, N) : v[x] = N;
        }
    }
    function Od(a) {
      return a == null || typeof a == "boolean" || a === "";
    }
    function ja(a) {
      var s = {};
      for (var v in a)
        for (var x = Md[v] || [v], M = 0; M < x.length; M++)
          s[x[M]] = v;
      return s;
    }
    function Sl(a, s) {
      {
        if (!s)
          return;
        var v = ja(a), x = ja(s), M = {};
        for (var N in v) {
          var G = v[N], Q = x[N];
          if (Q && G !== Q) {
            var ne = G + "," + Q;
            if (M[ne])
              continue;
            M[ne] = !0, l("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", Od(a[G]) ? "Removing" : "Updating", G, Q);
          }
        }
      }
    }
    var go = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, qi = Rn({
      menuitem: !0
    }, go), Zc = "__html";
    function ui(a, s) {
      if (s) {
        if (qi[a] && (s.children != null || s.dangerouslySetInnerHTML != null))
          throw new Error(a + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (s.dangerouslySetInnerHTML != null) {
          if (s.children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof s.dangerouslySetInnerHTML != "object" || !(Zc in s.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!s.suppressContentEditableWarning && s.contentEditable && s.children != null && l("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), s.style != null && typeof s.style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function ki(a, s) {
      if (a.indexOf("-") === -1)
        return typeof s.is == "string";
      switch (a) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var Wi = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      imagesizes: "imageSizes",
      imagesrcset: "imageSrcSet",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, Pd = {
      "aria-current": 0,
      // state
      "aria-description": 0,
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, yo = {}, If = new RegExp("^(aria)-[" + We + "]*$"), mc = new RegExp("^(aria)[A-Z][" + We + "]*$");
    function so(a, s) {
      {
        if (qe.call(yo, s) && yo[s])
          return !0;
        if (mc.test(s)) {
          var v = "aria-" + s.slice(4).toLowerCase(), x = Pd.hasOwnProperty(v) ? v : null;
          if (x == null)
            return l("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", s), yo[s] = !0, !0;
          if (s !== x)
            return l("Invalid ARIA attribute `%s`. Did you mean `%s`?", s, x), yo[s] = !0, !0;
        }
        if (If.test(s)) {
          var M = s.toLowerCase(), N = Pd.hasOwnProperty(M) ? M : null;
          if (N == null)
            return yo[s] = !0, !1;
          if (s !== N)
            return l("Unknown ARIA attribute `%s`. Did you mean `%s`?", s, N), yo[s] = !0, !0;
        }
      }
      return !0;
    }
    function Gl(a, s) {
      {
        var v = [];
        for (var x in s) {
          var M = so(a, x);
          M || v.push(x);
        }
        var N = v.map(function(G) {
          return "`" + G + "`";
        }).join(", ");
        v.length === 1 ? l("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", N, a) : v.length > 1 && l("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", N, a);
      }
    }
    function Jc(a, s) {
      ki(a, s) || Gl(a, s);
    }
    var Vu = !1;
    function Su(a, s) {
      {
        if (a !== "input" && a !== "textarea" && a !== "select")
          return;
        s != null && s.value === null && !Vu && (Vu = !0, a === "select" && s.multiple ? l("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", a) : l("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", a));
      }
    }
    var Wl = function() {
    };
    {
      var sa = {}, Ud = /^on./, _p = /^on[^A-Z]/, Bf = new RegExp("^(aria)-[" + We + "]*$"), wm = new RegExp("^(aria)[A-Z][" + We + "]*$");
      Wl = function(a, s, v, x) {
        if (qe.call(sa, s) && sa[s])
          return !0;
        var M = s.toLowerCase();
        if (M === "onfocusin" || M === "onfocusout")
          return l("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), sa[s] = !0, !0;
        if (x != null) {
          var N = x.registrationNameDependencies, G = x.possibleRegistrationNames;
          if (N.hasOwnProperty(s))
            return !0;
          var Q = G.hasOwnProperty(M) ? G[M] : null;
          if (Q != null)
            return l("Invalid event handler property `%s`. Did you mean `%s`?", s, Q), sa[s] = !0, !0;
          if (Ud.test(s))
            return l("Unknown event handler property `%s`. It will be ignored.", s), sa[s] = !0, !0;
        } else if (Ud.test(s))
          return _p.test(s) && l("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", s), sa[s] = !0, !0;
        if (Bf.test(s) || wm.test(s))
          return !0;
        if (M === "innerhtml")
          return l("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), sa[s] = !0, !0;
        if (M === "aria")
          return l("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), sa[s] = !0, !0;
        if (M === "is" && v !== null && v !== void 0 && typeof v != "string")
          return l("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof v), sa[s] = !0, !0;
        if (typeof v == "number" && isNaN(v))
          return l("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", s), sa[s] = !0, !0;
        var ne = Pt(s), Se = ne !== null && ne.type === re;
        if (Wi.hasOwnProperty(M)) {
          var Me = Wi[M];
          if (Me !== s)
            return l("Invalid DOM property `%s`. Did you mean `%s`?", s, Me), sa[s] = !0, !0;
        } else if (!Se && s !== M)
          return l("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", s, M), sa[s] = !0, !0;
        return typeof v == "boolean" && pt(s, v, ne, !1) ? (v ? l('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', v, s, s, v, s) : l('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', v, s, s, v, s, s, s), sa[s] = !0, !0) : Se ? !0 : pt(s, v, ne, !1) ? (sa[s] = !0, !1) : ((v === "false" || v === "true") && ne !== null && ne.type === ut && (l("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", v, s, v === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', s, v), sa[s] = !0), !0);
      };
    }
    var wr = function(a, s, v) {
      {
        var x = [];
        for (var M in s) {
          var N = Wl(a, M, s[M], v);
          N || x.push(M);
        }
        var G = x.map(function(Q) {
          return "`" + Q + "`";
        }).join(", ");
        x.length === 1 ? l("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", G, a) : x.length > 1 && l("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", G, a);
      }
    };
    function ji(a, s, v) {
      ki(a, s) || wr(a, s, v);
    }
    var jr = 1, ba = 2, $o = 4, _h = jr | ba | $o, xh = null;
    function Hf(a) {
      xh !== null && l("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), xh = a;
    }
    function Mm() {
      xh === null && l("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), xh = null;
    }
    function Eh(a) {
      return a === xh;
    }
    function Zt(a) {
      var s = a.target || a.srcElement || window;
      return s.correspondingUseElement && (s = s.correspondingUseElement), s.nodeType === Bu ? s.parentNode : s;
    }
    var Pr = null, kr = null, Ks = null;
    function _l(a) {
      var s = Km(a);
      if (s) {
        if (typeof Pr != "function")
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var v = s.stateNode;
        if (v) {
          var x = ad(v);
          Pr(s.stateNode, s.type, x);
        }
      }
    }
    function vc(a) {
      Pr = a;
    }
    function jl(a) {
      kr ? Ks ? Ks.push(a) : Ks = [a] : kr = a;
    }
    function gc() {
      return kr !== null || Ks !== null;
    }
    function yc() {
      if (kr) {
        var a = kr, s = Ks;
        if (kr = null, Ks = null, _l(a), s)
          for (var v = 0; v < s.length; v++)
            _l(s[v]);
      }
    }
    var _u = function(a, s) {
      return a(s);
    }, xp = function() {
    }, Ep = !1;
    function Cm() {
      var a = gc();
      a && (xp(), yc());
    }
    function bh(a, s, v) {
      if (Ep)
        return a(s, v);
      Ep = !0;
      try {
        return _u(a, s, v);
      } finally {
        Ep = !1, Cm();
      }
    }
    function Nd(a, s, v) {
      _u = a, xp = v;
    }
    function kd(a) {
      return a === "button" || a === "input" || a === "select" || a === "textarea";
    }
    function Vf(a, s, v) {
      switch (a) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(v.disabled && kd(s));
        default:
          return !1;
      }
    }
    function ef(a, s) {
      var v = a.stateNode;
      if (v === null)
        return null;
      var x = ad(v);
      if (x === null)
        return null;
      var M = x[s];
      if (Vf(s, a.type, x))
        return null;
      if (M && typeof M != "function")
        throw new Error("Expected `" + s + "` listener to be a function, instead got a value of `" + typeof M + "` type.");
      return M;
    }
    var Fd = !1;
    if (rt)
      try {
        var tf = {};
        Object.defineProperty(tf, "passive", {
          get: function() {
            Fd = !0;
          }
        }), window.addEventListener("test", tf, tf), window.removeEventListener("test", tf, tf);
      } catch {
        Fd = !1;
      }
    function Th(a, s, v, x, M, N, G, Q, ne) {
      var Se = Array.prototype.slice.call(arguments, 3);
      try {
        s.apply(v, Se);
      } catch (Me) {
        this.onError(Me);
      }
    }
    var zd = Th;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var bp = document.createElement("react");
      zd = function(s, v, x, M, N, G, Q, ne, Se) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var Me = document.createEvent("Event"), et = !1, Ke = !0, Ct = window.event, At = Object.getOwnPropertyDescriptor(window, "event");
        function Wt() {
          bp.removeEventListener(jt, Sr, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Ct);
        }
        var kn = Array.prototype.slice.call(arguments, 3);
        function Sr() {
          et = !0, Wt(), v.apply(x, kn), Ke = !1;
        }
        var ur, Vi = !1, Pi = !1;
        function yt(St) {
          if (ur = St.error, Vi = !0, ur === null && St.colno === 0 && St.lineno === 0 && (Pi = !0), St.defaultPrevented && ur != null && typeof ur == "object")
            try {
              ur._suppressLogging = !0;
            } catch {
            }
        }
        var jt = "react-" + (s || "invokeguardedcallback");
        if (window.addEventListener("error", yt), bp.addEventListener(jt, Sr, !1), Me.initEvent(jt, !1, !1), bp.dispatchEvent(Me), At && Object.defineProperty(window, "event", At), et && Ke && (Vi ? Pi && (ur = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : ur = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(ur)), window.removeEventListener("error", yt), !et)
          return Wt(), Th.apply(this, arguments);
      };
    }
    var Rm = zd, Gu = !1, Qs = null, Wu = !1, ju = null, lo = {
      onError: function(a) {
        Gu = !0, Qs = a;
      }
    };
    function Sc(a, s, v, x, M, N, G, Q, ne) {
      Gu = !1, Qs = null, Rm.apply(lo, arguments);
    }
    function Zs(a, s, v, x, M, N, G, Q, ne) {
      if (Sc.apply(this, arguments), Gu) {
        var Se = Id();
        Wu || (Wu = !0, ju = Se);
      }
    }
    function Gf() {
      if (Wu) {
        var a = ju;
        throw Wu = !1, ju = null, a;
      }
    }
    function Wf() {
      return Gu;
    }
    function Id() {
      if (Gu) {
        var a = Qs;
        return Gu = !1, Qs = null, a;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function os(a) {
      return a._reactInternals;
    }
    function Js(a) {
      return a._reactInternals !== void 0;
    }
    function Di(a, s) {
      a._reactInternals = s;
    }
    var ir = (
      /*                      */
      0
    ), Li = (
      /*                */
      1
    ), Jr = (
      /*                    */
      2
    ), Yn = (
      /*                       */
      4
    ), hi = (
      /*                */
      16
    ), wi = (
      /*                 */
      32
    ), $u = (
      /*                     */
      64
    ), xr = (
      /*                   */
      128
    ), Ia = (
      /*            */
      256
    ), Rs = (
      /*                          */
      512
    ), el = (
      /*                     */
      1024
    ), ga = (
      /*                      */
      2048
    ), tl = (
      /*                    */
      4096
    ), _c = (
      /*                   */
      8192
    ), jf = (
      /*             */
      16384
    ), xc = ga | Yn | $u | Rs | el | jf, Av = (
      /*               */
      32767
    ), As = (
      /*                   */
      32768
    ), Uo = (
      /*                */
      65536
    ), wh = (
      /* */
      131072
    ), xu = (
      /*                       */
      1048576
    ), $f = (
      /*                    */
      2097152
    ), $a = (
      /*                 */
      4194304
    ), Yu = (
      /*                */
      8388608
    ), Mi = (
      /*               */
      16777216
    ), Eu = (
      /*              */
      33554432
    ), Rr = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      Yn | el | 0
    ), So = Jr | Yn | hi | wi | Rs | tl | _c, Ba = Yn | $u | Rs | _c, Xu = ga | hi, cn = $a | Yu | $f, xl = t.ReactCurrentOwner;
    function No(a) {
      var s = a, v = a;
      if (a.alternate)
        for (; s.return; )
          s = s.return;
      else {
        var x = s;
        do
          s = x, (s.flags & (Jr | tl)) !== ir && (v = s.return), x = s.return;
        while (x);
      }
      return s.tag === _ ? v : null;
    }
    function Am(a) {
      if (a.tag === B) {
        var s = a.memoizedState;
        if (s === null) {
          var v = a.alternate;
          v !== null && (s = v.memoizedState);
        }
        if (s !== null)
          return s.dehydrated;
      }
      return null;
    }
    function Tp(a) {
      return a.tag === _ ? a.stateNode.containerInfo : null;
    }
    function nf(a) {
      return No(a) === a;
    }
    function ko(a) {
      {
        var s = xl.current;
        if (s !== null && s.tag === p) {
          var v = s, x = v.stateNode;
          x._warnedAboutRefsInRender || l("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", rr(v) || "A component"), x._warnedAboutRefsInRender = !0;
        }
      }
      var M = os(a);
      return M ? No(M) === M : !1;
    }
    function Ds(a) {
      if (No(a) !== a)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function la(a) {
      var s = a.alternate;
      if (!s) {
        var v = No(a);
        if (v === null)
          throw new Error("Unable to find node on an unmounted component.");
        return v !== a ? null : a;
      }
      for (var x = a, M = s; ; ) {
        var N = x.return;
        if (N === null)
          break;
        var G = N.alternate;
        if (G === null) {
          var Q = N.return;
          if (Q !== null) {
            x = M = Q;
            continue;
          }
          break;
        }
        if (N.child === G.child) {
          for (var ne = N.child; ne; ) {
            if (ne === x)
              return Ds(N), a;
            if (ne === M)
              return Ds(N), s;
            ne = ne.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (x.return !== M.return)
          x = N, M = G;
        else {
          for (var Se = !1, Me = N.child; Me; ) {
            if (Me === x) {
              Se = !0, x = N, M = G;
              break;
            }
            if (Me === M) {
              Se = !0, M = N, x = G;
              break;
            }
            Me = Me.sibling;
          }
          if (!Se) {
            for (Me = G.child; Me; ) {
              if (Me === x) {
                Se = !0, x = G, M = N;
                break;
              }
              if (Me === M) {
                Se = !0, M = G, x = N;
                break;
              }
              Me = Me.sibling;
            }
            if (!Se)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (x.alternate !== M)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (x.tag !== _)
        throw new Error("Unable to find node on an unmounted component.");
      return x.stateNode.current === x ? a : s;
    }
    function El(a) {
      var s = la(a);
      return s !== null ? $l(s) : null;
    }
    function $l(a) {
      if (a.tag === w || a.tag === R)
        return a;
      for (var s = a.child; s !== null; ) {
        var v = $l(s);
        if (v !== null)
          return v;
        s = s.sibling;
      }
      return null;
    }
    function Bd(a) {
      var s = la(a);
      return s !== null ? rf(s) : null;
    }
    function rf(a) {
      if (a.tag === w || a.tag === R)
        return a;
      for (var s = a.child; s !== null; ) {
        if (s.tag !== E) {
          var v = rf(s);
          if (v !== null)
            return v;
        }
        s = s.sibling;
      }
      return null;
    }
    var Hd = e.unstable_scheduleCallback, Yf = e.unstable_cancelCallback, Ls = e.unstable_shouldYield, _o = e.unstable_requestPaint, Ta = e.unstable_now, Mh = e.unstable_getCurrentPriorityLevel, Dm = e.unstable_ImmediatePriority, bl = e.unstable_UserBlockingPriority, bu = e.unstable_NormalPriority, Ch = e.unstable_LowPriority, af = e.unstable_IdlePriority, Lm = e.unstable_yieldValue, Rh = e.unstable_setDisableYieldValue, ta = null, Da = null, gn = null, Ki = !1, Ya = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function wp(a) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var s = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (s.isDisabled)
        return !0;
      if (!s.supportsFiber)
        return l("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        De && (a = Rn({}, a, {
          getLaneLabelMap: Ec,
          injectProfilingHooks: Xa
        })), ta = s.inject(a), Da = s;
      } catch (v) {
        l("React instrumentation encountered an error: %s.", v);
      }
      return !!s.checkDCE;
    }
    function Om(a, s) {
      if (Da && typeof Da.onScheduleFiberRoot == "function")
        try {
          Da.onScheduleFiberRoot(ta, a, s);
        } catch (v) {
          Ki || (Ki = !0, l("React instrumentation encountered an error: %s", v));
        }
    }
    function Os(a, s) {
      if (Da && typeof Da.onCommitFiberRoot == "function")
        try {
          var v = (a.current.flags & xr) === xr;
          if (Ne) {
            var x;
            switch (s) {
              case Us:
                x = Dm;
                break;
              case us:
                x = bl;
                break;
              case vf:
                x = bu;
                break;
              case Cp:
                x = af;
                break;
              default:
                x = bu;
                break;
            }
            Da.onCommitFiberRoot(ta, a, x, v);
          }
        } catch (M) {
          Ki || (Ki = !0, l("React instrumentation encountered an error: %s", M));
        }
    }
    function La(a) {
      if (Da && typeof Da.onPostCommitFiberRoot == "function")
        try {
          Da.onPostCommitFiberRoot(ta, a);
        } catch (s) {
          Ki || (Ki = !0, l("React instrumentation encountered an error: %s", s));
        }
    }
    function _n(a) {
      if (Da && typeof Da.onCommitFiberUnmount == "function")
        try {
          Da.onCommitFiberUnmount(ta, a);
        } catch (s) {
          Ki || (Ki = !0, l("React instrumentation encountered an error: %s", s));
        }
    }
    function na(a) {
      if (typeof Lm == "function" && (Rh(a), i(a)), Da && typeof Da.setStrictMode == "function")
        try {
          Da.setStrictMode(ta, a);
        } catch (s) {
          Ki || (Ki = !0, l("React instrumentation encountered an error: %s", s));
        }
    }
    function Xa(a) {
      gn = a;
    }
    function Ec() {
      {
        for (var a = /* @__PURE__ */ new Map(), s = 1, v = 0; v < yi; v++) {
          var x = qg(s);
          a.set(s, x), s *= 2;
        }
        return a;
      }
    }
    function Oa(a) {
      gn !== null && typeof gn.markCommitStarted == "function" && gn.markCommitStarted(a);
    }
    function $r() {
      gn !== null && typeof gn.markCommitStopped == "function" && gn.markCommitStopped();
    }
    function ua(a) {
      gn !== null && typeof gn.markComponentRenderStarted == "function" && gn.markComponentRenderStarted(a);
    }
    function ya() {
      gn !== null && typeof gn.markComponentRenderStopped == "function" && gn.markComponentRenderStopped();
    }
    function gi(a) {
      gn !== null && typeof gn.markComponentPassiveEffectMountStarted == "function" && gn.markComponentPassiveEffectMountStarted(a);
    }
    function nl() {
      gn !== null && typeof gn.markComponentPassiveEffectMountStopped == "function" && gn.markComponentPassiveEffectMountStopped();
    }
    function of(a) {
      gn !== null && typeof gn.markComponentPassiveEffectUnmountStarted == "function" && gn.markComponentPassiveEffectUnmountStarted(a);
    }
    function xo() {
      gn !== null && typeof gn.markComponentPassiveEffectUnmountStopped == "function" && gn.markComponentPassiveEffectUnmountStopped();
    }
    function Vd(a) {
      gn !== null && typeof gn.markComponentLayoutEffectMountStarted == "function" && gn.markComponentLayoutEffectMountStarted(a);
    }
    function qu() {
      gn !== null && typeof gn.markComponentLayoutEffectMountStopped == "function" && gn.markComponentLayoutEffectMountStopped();
    }
    function Tu(a) {
      gn !== null && typeof gn.markComponentLayoutEffectUnmountStarted == "function" && gn.markComponentLayoutEffectUnmountStarted(a);
    }
    function Xf() {
      gn !== null && typeof gn.markComponentLayoutEffectUnmountStopped == "function" && gn.markComponentLayoutEffectUnmountStopped();
    }
    function qf(a, s, v) {
      gn !== null && typeof gn.markComponentErrored == "function" && gn.markComponentErrored(a, s, v);
    }
    function rl(a, s, v) {
      gn !== null && typeof gn.markComponentSuspended == "function" && gn.markComponentSuspended(a, s, v);
    }
    function Pm(a) {
      gn !== null && typeof gn.markLayoutEffectsStarted == "function" && gn.markLayoutEffectsStarted(a);
    }
    function Kf() {
      gn !== null && typeof gn.markLayoutEffectsStopped == "function" && gn.markLayoutEffectsStopped();
    }
    function Gd(a) {
      gn !== null && typeof gn.markPassiveEffectsStarted == "function" && gn.markPassiveEffectsStarted(a);
    }
    function sf() {
      gn !== null && typeof gn.markPassiveEffectsStopped == "function" && gn.markPassiveEffectsStopped();
    }
    function Tl(a) {
      gn !== null && typeof gn.markRenderStarted == "function" && gn.markRenderStarted(a);
    }
    function wu() {
      gn !== null && typeof gn.markRenderYielded == "function" && gn.markRenderYielded();
    }
    function lf() {
      gn !== null && typeof gn.markRenderStopped == "function" && gn.markRenderStopped();
    }
    function wl(a) {
      gn !== null && typeof gn.markRenderScheduled == "function" && gn.markRenderScheduled(a);
    }
    function Ah(a, s) {
      gn !== null && typeof gn.markForceUpdateScheduled == "function" && gn.markForceUpdateScheduled(a, s);
    }
    function Mu(a, s) {
      gn !== null && typeof gn.markStateUpdateScheduled == "function" && gn.markStateUpdateScheduled(a, s);
    }
    var ar = (
      /*                         */
      0
    ), Fr = (
      /*                 */
      1
    ), or = (
      /*                    */
      2
    ), ai = (
      /*               */
      8
    ), Fo = (
      /*              */
      16
    ), il = Math.clz32 ? Math.clz32 : zo, uf = Math.log, Ps = Math.LN2;
    function zo(a) {
      var s = a >>> 0;
      return s === 0 ? 32 : 31 - (uf(s) / Ps | 0) | 0;
    }
    var yi = 31, Bt = (
      /*                        */
      0
    ), ci = (
      /*                          */
      0
    ), Kn = (
      /*                        */
      1
    ), Ku = (
      /*    */
      2
    ), al = (
      /*             */
      4
    ), Yo = (
      /*            */
      8
    ), Fi = (
      /*                     */
      16
    ), Qf = (
      /*                */
      32
    ), cf = (
      /*                       */
      4194240
    ), ff = (
      /*                        */
      64
    ), Xo = (
      /*                        */
      128
    ), Ml = (
      /*                        */
      256
    ), Zf = (
      /*                        */
      512
    ), Wd = (
      /*                        */
      1024
    ), ss = (
      /*                        */
      2048
    ), Cl = (
      /*                        */
      4096
    ), Um = (
      /*                        */
      8192
    ), bc = (
      /*                        */
      16384
    ), Eo = (
      /*                       */
      32768
    ), Ci = (
      /*                       */
      65536
    ), Yl = (
      /*                       */
      131072
    ), ol = (
      /*                       */
      262144
    ), Nm = (
      /*                       */
      524288
    ), Xl = (
      /*                       */
      1048576
    ), df = (
      /*                       */
      2097152
    ), Cu = (
      /*                            */
      130023424
    ), ql = (
      /*                             */
      4194304
    ), Io = (
      /*                             */
      8388608
    ), Qu = (
      /*                             */
      16777216
    ), Jf = (
      /*                             */
      33554432
    ), ls = (
      /*                             */
      67108864
    ), hf = ql, Kl = (
      /*          */
      134217728
    ), ed = (
      /*                          */
      268435455
    ), pf = (
      /*               */
      268435456
    ), Ru = (
      /*                        */
      536870912
    ), Rl = (
      /*                   */
      1073741824
    );
    function qg(a) {
      {
        if (a & Kn)
          return "Sync";
        if (a & Ku)
          return "InputContinuousHydration";
        if (a & al)
          return "InputContinuous";
        if (a & Yo)
          return "DefaultHydration";
        if (a & Fi)
          return "Default";
        if (a & Qf)
          return "TransitionHydration";
        if (a & cf)
          return "Transition";
        if (a & Cu)
          return "Retry";
        if (a & Kl)
          return "SelectiveHydration";
        if (a & pf)
          return "IdleHydration";
        if (a & Ru)
          return "Idle";
        if (a & Rl)
          return "Offscreen";
      }
    }
    var oi = -1, td = ff, mf = ql;
    function Zu(a) {
      switch (xn(a)) {
        case Kn:
          return Kn;
        case Ku:
          return Ku;
        case al:
          return al;
        case Yo:
          return Yo;
        case Fi:
          return Fi;
        case Qf:
          return Qf;
        case ff:
        case Xo:
        case Ml:
        case Zf:
        case Wd:
        case ss:
        case Cl:
        case Um:
        case bc:
        case Eo:
        case Ci:
        case Yl:
        case ol:
        case Nm:
        case Xl:
        case df:
          return a & cf;
        case ql:
        case Io:
        case Qu:
        case Jf:
        case ls:
          return a & Cu;
        case Kl:
          return Kl;
        case pf:
          return pf;
        case Ru:
          return Ru;
        case Rl:
          return Rl;
        default:
          return l("Should have found matching lanes. This is a bug in React."), a;
      }
    }
    function Tc(a, s) {
      var v = a.pendingLanes;
      if (v === Bt)
        return Bt;
      var x = Bt, M = a.suspendedLanes, N = a.pingedLanes, G = v & ed;
      if (G !== Bt) {
        var Q = G & ~M;
        if (Q !== Bt)
          x = Zu(Q);
        else {
          var ne = G & N;
          ne !== Bt && (x = Zu(ne));
        }
      } else {
        var Se = v & ~M;
        Se !== Bt ? x = Zu(Se) : N !== Bt && (x = Zu(N));
      }
      if (x === Bt)
        return Bt;
      if (s !== Bt && s !== x && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (s & M) === Bt) {
        var Me = xn(x), et = xn(s);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          Me >= et || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          Me === Fi && (et & cf) !== Bt
        )
          return s;
      }
      (x & al) !== Bt && (x |= v & Fi);
      var Ke = a.entangledLanes;
      if (Ke !== Bt)
        for (var Ct = a.entanglements, At = x & Ke; At > 0; ) {
          var Wt = qa(At), kn = 1 << Wt;
          x |= Ct[Wt], At &= ~kn;
        }
      return x;
    }
    function km(a, s) {
      for (var v = a.eventTimes, x = oi; s > 0; ) {
        var M = qa(s), N = 1 << M, G = v[M];
        G > x && (x = G), s &= ~N;
      }
      return x;
    }
    function g(a, s) {
      switch (a) {
        case Kn:
        case Ku:
        case al:
          return s + 250;
        case Yo:
        case Fi:
        case Qf:
        case ff:
        case Xo:
        case Ml:
        case Zf:
        case Wd:
        case ss:
        case Cl:
        case Um:
        case bc:
        case Eo:
        case Ci:
        case Yl:
        case ol:
        case Nm:
        case Xl:
        case df:
          return s + 5e3;
        case ql:
        case Io:
        case Qu:
        case Jf:
        case ls:
          return oi;
        case Kl:
        case pf:
        case Ru:
        case Rl:
          return oi;
        default:
          return l("Should have found matching lanes. This is a bug in React."), oi;
      }
    }
    function S(a, s) {
      for (var v = a.pendingLanes, x = a.suspendedLanes, M = a.pingedLanes, N = a.expirationTimes, G = v; G > 0; ) {
        var Q = qa(G), ne = 1 << Q, Se = N[Q];
        Se === oi ? ((ne & x) === Bt || (ne & M) !== Bt) && (N[Q] = g(ne, s)) : Se <= s && (a.expiredLanes |= ne), G &= ~ne;
      }
    }
    function D(a) {
      return Zu(a.pendingLanes);
    }
    function z(a) {
      var s = a.pendingLanes & ~Rl;
      return s !== Bt ? s : s & Rl ? Rl : Bt;
    }
    function W(a) {
      return (a & Kn) !== Bt;
    }
    function te(a) {
      return (a & ed) !== Bt;
    }
    function Le(a) {
      return (a & Cu) === a;
    }
    function nt(a) {
      var s = Kn | al | Fi;
      return (a & s) === Bt;
    }
    function It(a) {
      return (a & cf) === a;
    }
    function on(a, s) {
      var v = Ku | al | Yo | Fi;
      return (s & v) !== Bt;
    }
    function mn(a, s) {
      return (s & a.expiredLanes) !== Bt;
    }
    function yr(a) {
      return (a & cf) !== Bt;
    }
    function sr() {
      var a = td;
      return td <<= 1, (td & cf) === Bt && (td = ff), a;
    }
    function ca() {
      var a = mf;
      return mf <<= 1, (mf & Cu) === Bt && (mf = ql), a;
    }
    function xn(a) {
      return a & -a;
    }
    function Si(a) {
      return xn(a);
    }
    function qa(a) {
      return 31 - il(a);
    }
    function _t(a) {
      return qa(a);
    }
    function Xe(a, s) {
      return (a & s) !== Bt;
    }
    function Lt(a, s) {
      return (a & s) === s;
    }
    function Xt(a, s) {
      return a | s;
    }
    function Nn(a, s) {
      return a & ~s;
    }
    function zr(a, s) {
      return a & s;
    }
    function mr(a) {
      return a;
    }
    function ei(a, s) {
      return a !== ci && a < s ? a : s;
    }
    function Pa(a) {
      for (var s = [], v = 0; v < yi; v++)
        s.push(a);
      return s;
    }
    function ti(a, s, v) {
      a.pendingLanes |= s, s !== Ru && (a.suspendedLanes = Bt, a.pingedLanes = Bt);
      var x = a.eventTimes, M = _t(s);
      x[M] = v;
    }
    function wc(a, s) {
      a.suspendedLanes |= s, a.pingedLanes &= ~s;
      for (var v = a.expirationTimes, x = s; x > 0; ) {
        var M = qa(x), N = 1 << M;
        v[M] = oi, x &= ~N;
      }
    }
    function Dh(a, s, v) {
      a.pingedLanes |= a.suspendedLanes & s;
    }
    function T0(a, s) {
      var v = a.pendingLanes & ~s;
      a.pendingLanes = s, a.suspendedLanes = Bt, a.pingedLanes = Bt, a.expiredLanes &= s, a.mutableReadLanes &= s, a.entangledLanes &= s;
      for (var x = a.entanglements, M = a.eventTimes, N = a.expirationTimes, G = v; G > 0; ) {
        var Q = qa(G), ne = 1 << Q;
        x[Q] = Bt, M[Q] = oi, N[Q] = oi, G &= ~ne;
      }
    }
    function Mp(a, s) {
      for (var v = a.entangledLanes |= s, x = a.entanglements, M = v; M; ) {
        var N = qa(M), G = 1 << N;
        // Is this one of the newly entangled lanes?
        G & s | // Is this lane transitively entangled with the newly entangled lanes?
        x[N] & s && (x[N] |= s), M &= ~G;
      }
    }
    function Kg(a, s) {
      var v = xn(s), x;
      switch (v) {
        case al:
          x = Ku;
          break;
        case Fi:
          x = Yo;
          break;
        case ff:
        case Xo:
        case Ml:
        case Zf:
        case Wd:
        case ss:
        case Cl:
        case Um:
        case bc:
        case Eo:
        case Ci:
        case Yl:
        case ol:
        case Nm:
        case Xl:
        case df:
        case ql:
        case Io:
        case Qu:
        case Jf:
        case ls:
          x = Qf;
          break;
        case Ru:
          x = pf;
          break;
        default:
          x = ci;
          break;
      }
      return (x & (a.suspendedLanes | s)) !== ci ? ci : x;
    }
    function Qg(a, s, v) {
      if (Ya)
        for (var x = a.pendingUpdatersLaneMap; v > 0; ) {
          var M = _t(v), N = 1 << M, G = x[M];
          G.add(s), v &= ~N;
        }
    }
    function Fm(a, s) {
      if (Ya)
        for (var v = a.pendingUpdatersLaneMap, x = a.memoizedUpdaters; s > 0; ) {
          var M = _t(s), N = 1 << M, G = v[M];
          G.size > 0 && (G.forEach(function(Q) {
            var ne = Q.alternate;
            (ne === null || !x.has(ne)) && x.add(Q);
          }), G.clear()), s &= ~N;
        }
    }
    function Zg(a, s) {
      return null;
    }
    var Us = Kn, us = al, vf = Fi, Cp = Ru, jd = ci;
    function Ju() {
      return jd;
    }
    function bo(a) {
      jd = a;
    }
    function Rp(a, s) {
      var v = jd;
      try {
        return jd = a, s();
      } finally {
        jd = v;
      }
    }
    function Ns(a, s) {
      return a !== 0 && a < s ? a : s;
    }
    function w0(a, s) {
      return a === 0 || a > s ? a : s;
    }
    function Jg(a, s) {
      return a !== 0 && a < s;
    }
    function Ap(a) {
      var s = xn(a);
      return Jg(Us, s) ? Jg(us, s) ? te(s) ? vf : Cp : us : Us;
    }
    function Bo(a) {
      var s = a.current.memoizedState;
      return s.isDehydrated;
    }
    var M0;
    function In(a) {
      M0 = a;
    }
    function Dp(a) {
      M0(a);
    }
    var zm;
    function x_(a) {
      zm = a;
    }
    var C0;
    function Lp(a) {
      C0 = a;
    }
    var Dv;
    function R0(a) {
      Dv = a;
    }
    var Lh;
    function Op(a) {
      Lh = a;
    }
    var Pp = !1, $d = [], Ho = null, Oi = null, Ka = null, qo = /* @__PURE__ */ new Map(), Au = /* @__PURE__ */ new Map(), Yd = [], gf = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function E_(a) {
      return gf.indexOf(a) > -1;
    }
    function Al(a, s, v, x, M) {
      return {
        blockedOn: a,
        domEventName: s,
        eventSystemFlags: v,
        nativeEvent: M,
        targetContainers: [x]
      };
    }
    function A0(a, s) {
      switch (a) {
        case "focusin":
        case "focusout":
          Ho = null;
          break;
        case "dragenter":
        case "dragleave":
          Oi = null;
          break;
        case "mouseover":
        case "mouseout":
          Ka = null;
          break;
        case "pointerover":
        case "pointerout": {
          var v = s.pointerId;
          qo.delete(v);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var x = s.pointerId;
          Au.delete(x);
          break;
        }
      }
    }
    function Oh(a, s, v, x, M, N) {
      if (a === null || a.nativeEvent !== N) {
        var G = Al(s, v, x, M, N);
        if (s !== null) {
          var Q = Km(s);
          Q !== null && zm(Q);
        }
        return G;
      }
      a.eventSystemFlags |= x;
      var ne = a.targetContainers;
      return M !== null && ne.indexOf(M) === -1 && ne.push(M), a;
    }
    function Lv(a, s, v, x, M) {
      switch (s) {
        case "focusin": {
          var N = M;
          return Ho = Oh(Ho, a, s, v, x, N), !0;
        }
        case "dragenter": {
          var G = M;
          return Oi = Oh(Oi, a, s, v, x, G), !0;
        }
        case "mouseover": {
          var Q = M;
          return Ka = Oh(Ka, a, s, v, x, Q), !0;
        }
        case "pointerover": {
          var ne = M, Se = ne.pointerId;
          return qo.set(Se, Oh(qo.get(Se) || null, a, s, v, x, ne)), !0;
        }
        case "gotpointercapture": {
          var Me = M, et = Me.pointerId;
          return Au.set(et, Oh(Au.get(et) || null, a, s, v, x, Me)), !0;
        }
      }
      return !1;
    }
    function D0(a) {
      var s = Jv(a.target);
      if (s !== null) {
        var v = No(s);
        if (v !== null) {
          var x = v.tag;
          if (x === B) {
            var M = Am(v);
            if (M !== null) {
              a.blockedOn = M, Lh(a.priority, function() {
                C0(v);
              });
              return;
            }
          } else if (x === _) {
            var N = v.stateNode;
            if (Bo(N)) {
              a.blockedOn = Tp(v);
              return;
            }
          }
        }
      }
      a.blockedOn = null;
    }
    function ey(a) {
      for (var s = Dv(), v = {
        blockedOn: null,
        target: a,
        priority: s
      }, x = 0; x < Yd.length && Jg(s, Yd[x].priority); x++)
        ;
      Yd.splice(x, 0, v), x === 0 && D0(v);
    }
    function ty(a) {
      if (a.blockedOn !== null)
        return !1;
      for (var s = a.targetContainers; s.length > 0; ) {
        var v = s[0], x = Uh(a.domEventName, a.eventSystemFlags, v, a.nativeEvent);
        if (x === null) {
          var M = a.nativeEvent, N = new M.constructor(M.type, M);
          Hf(N), M.target.dispatchEvent(N), Mm();
        } else {
          var G = Km(x);
          return G !== null && zm(G), a.blockedOn = x, !1;
        }
        s.shift();
      }
      return !0;
    }
    function Ov(a, s, v) {
      ty(a) && v.delete(s);
    }
    function Xd() {
      Pp = !1, Ho !== null && ty(Ho) && (Ho = null), Oi !== null && ty(Oi) && (Oi = null), Ka !== null && ty(Ka) && (Ka = null), qo.forEach(Ov), Au.forEach(Ov);
    }
    function $i(a, s) {
      a.blockedOn === s && (a.blockedOn = null, Pp || (Pp = !0, e.unstable_scheduleCallback(e.unstable_NormalPriority, Xd)));
    }
    function Ar(a) {
      if ($d.length > 0) {
        $i($d[0], a);
        for (var s = 1; s < $d.length; s++) {
          var v = $d[s];
          v.blockedOn === a && (v.blockedOn = null);
        }
      }
      Ho !== null && $i(Ho, a), Oi !== null && $i(Oi, a), Ka !== null && $i(Ka, a);
      var x = function(Q) {
        return $i(Q, a);
      };
      qo.forEach(x), Au.forEach(x);
      for (var M = 0; M < Yd.length; M++) {
        var N = Yd[M];
        N.blockedOn === a && (N.blockedOn = null);
      }
      for (; Yd.length > 0; ) {
        var G = Yd[0];
        if (G.blockedOn !== null)
          break;
        D0(G), G.blockedOn === null && Yd.shift();
      }
    }
    var Bi = t.ReactCurrentBatchConfig, Sa = !0;
    function Ha(a) {
      Sa = !!a;
    }
    function ec() {
      return Sa;
    }
    function Im(a, s, v) {
      var x = Dl(s), M;
      switch (x) {
        case Us:
          M = cs;
          break;
        case us:
          M = Pv;
          break;
        case vf:
        default:
          M = nd;
          break;
      }
      return M.bind(null, s, v, a);
    }
    function cs(a, s, v, x) {
      var M = Ju(), N = Bi.transition;
      Bi.transition = null;
      try {
        bo(Us), nd(a, s, v, x);
      } finally {
        bo(M), Bi.transition = N;
      }
    }
    function Pv(a, s, v, x) {
      var M = Ju(), N = Bi.transition;
      Bi.transition = null;
      try {
        bo(us), nd(a, s, v, x);
      } finally {
        bo(M), Bi.transition = N;
      }
    }
    function nd(a, s, v, x) {
      Sa && Uv(a, s, v, x);
    }
    function Uv(a, s, v, x) {
      var M = Uh(a, s, v, x);
      if (M === null) {
        Dr(a, s, x, Ph, v), A0(a, x);
        return;
      }
      if (Lv(M, a, s, v, x)) {
        x.stopPropagation();
        return;
      }
      if (A0(a, x), s & $o && E_(a)) {
        for (; M !== null; ) {
          var N = Km(M);
          N !== null && Dp(N);
          var G = Uh(a, s, v, x);
          if (G === null && Dr(a, s, x, Ph, v), G === M)
            break;
          M = G;
        }
        M !== null && x.stopPropagation();
        return;
      }
      Dr(a, s, x, null, v);
    }
    var Ph = null;
    function Uh(a, s, v, x) {
      Ph = null;
      var M = Zt(x), N = Jv(M);
      if (N !== null) {
        var G = No(N);
        if (G === null)
          N = null;
        else {
          var Q = G.tag;
          if (Q === B) {
            var ne = Am(G);
            if (ne !== null)
              return ne;
            N = null;
          } else if (Q === _) {
            var Se = G.stateNode;
            if (Bo(Se))
              return Tp(G);
            N = null;
          } else
            G !== N && (N = null);
        }
      }
      return Ph = N, null;
    }
    function Dl(a) {
      switch (a) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return Us;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return us;
        case "message": {
          var s = Mh();
          switch (s) {
            case Dm:
              return Us;
            case bl:
              return us;
            case bu:
            case Ch:
              return vf;
            case af:
              return Cp;
            default:
              return vf;
          }
        }
        default:
          return vf;
      }
    }
    function Nv(a, s, v) {
      return a.addEventListener(s, v, !1), v;
    }
    function Nh(a, s, v) {
      return a.addEventListener(s, v, !0), v;
    }
    function yf(a, s, v, x) {
      return a.addEventListener(s, v, {
        capture: !0,
        passive: x
      }), v;
    }
    function ny(a, s, v, x) {
      return a.addEventListener(s, v, {
        passive: x
      }), v;
    }
    var Up = null, rd = null, kh = null;
    function qd(a) {
      return Up = a, rd = kv(), !0;
    }
    function Fh() {
      Up = null, rd = null, kh = null;
    }
    function Bm() {
      if (kh)
        return kh;
      var a, s = rd, v = s.length, x, M = kv(), N = M.length;
      for (a = 0; a < v && s[a] === M[a]; a++)
        ;
      var G = v - a;
      for (x = 1; x <= G && s[v - x] === M[N - x]; x++)
        ;
      var Q = x > 1 ? 1 - x : void 0;
      return kh = M.slice(a, Q), kh;
    }
    function kv() {
      return "value" in Up ? Up.value : Up.textContent;
    }
    function Mc(a) {
      var s, v = a.keyCode;
      return "charCode" in a ? (s = a.charCode, s === 0 && v === 13 && (s = 13)) : s = v, s === 10 && (s = 13), s >= 32 || s === 13 ? s : 0;
    }
    function zh() {
      return !0;
    }
    function Qi() {
      return !1;
    }
    function To(a) {
      function s(v, x, M, N, G) {
        this._reactName = v, this._targetInst = M, this.type = x, this.nativeEvent = N, this.target = G, this.currentTarget = null;
        for (var Q in a)
          if (a.hasOwnProperty(Q)) {
            var ne = a[Q];
            ne ? this[Q] = ne(N) : this[Q] = N[Q];
          }
        var Se = N.defaultPrevented != null ? N.defaultPrevented : N.returnValue === !1;
        return Se ? this.isDefaultPrevented = zh : this.isDefaultPrevented = Qi, this.isPropagationStopped = Qi, this;
      }
      return Rn(s.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var v = this.nativeEvent;
          v && (v.preventDefault ? v.preventDefault() : typeof v.returnValue != "unknown" && (v.returnValue = !1), this.isDefaultPrevented = zh);
        },
        stopPropagation: function() {
          var v = this.nativeEvent;
          v && (v.stopPropagation ? v.stopPropagation() : typeof v.cancelBubble != "unknown" && (v.cancelBubble = !0), this.isPropagationStopped = zh);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: zh
      }), s;
    }
    var ks = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(a) {
        return a.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, Fs = To(ks), Ih = Rn({}, ks, {
      view: 0,
      detail: 0
    }), Fv = To(Ih), Np, ry, Ll;
    function zv(a) {
      a !== Ll && (Ll && a.type === "mousemove" ? (Np = a.screenX - Ll.screenX, ry = a.screenY - Ll.screenY) : (Np = 0, ry = 0), Ll = a);
    }
    var Kd = Rn({}, Ih, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: oy,
      button: 0,
      buttons: 0,
      relatedTarget: function(a) {
        return a.relatedTarget === void 0 ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
      },
      movementX: function(a) {
        return "movementX" in a ? a.movementX : (zv(a), Np);
      },
      movementY: function(a) {
        return "movementY" in a ? a.movementY : ry;
      }
    }), Qd = To(Kd), iy = Rn({}, Kd, {
      dataTransfer: 0
    }), Cc = To(iy), L0 = Rn({}, Ih, {
      relatedTarget: 0
    }), ay = To(L0), O0 = Rn({}, ks, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), Bh = To(O0), Hh = Rn({}, ks, {
      clipboardData: function(a) {
        return "clipboardData" in a ? a.clipboardData : window.clipboardData;
      }
    }), Iv = To(Hh), Bv = Rn({}, ks, {
      data: 0
    }), Hm = To(Bv), Zd = Hm, P0 = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Sf = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function Vm(a) {
      if (a.key) {
        var s = P0[a.key] || a.key;
        if (s !== "Unidentified")
          return s;
      }
      if (a.type === "keypress") {
        var v = Mc(a);
        return v === 13 ? "Enter" : String.fromCharCode(v);
      }
      return a.type === "keydown" || a.type === "keyup" ? Sf[a.keyCode] || "Unidentified" : "";
    }
    var uo = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function U0(a) {
      var s = this, v = s.nativeEvent;
      if (v.getModifierState)
        return v.getModifierState(a);
      var x = uo[a];
      return x ? !!v[x] : !1;
    }
    function oy(a) {
      return U0;
    }
    var b_ = Rn({}, Ih, {
      key: Vm,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: oy,
      // Legacy Interface
      charCode: function(a) {
        return a.type === "keypress" ? Mc(a) : 0;
      },
      keyCode: function(a) {
        return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
      },
      which: function(a) {
        return a.type === "keypress" ? Mc(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
      }
    }), T_ = To(b_), Gm = Rn({}, Kd, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), tc = To(Gm), N0 = Rn({}, Ih, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: oy
    }), sl = To(N0), Hv = Rn({}, ks, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), iE = To(Hv), Ql = Rn({}, Kd, {
      deltaX: function(a) {
        return "deltaX" in a ? a.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in a ? -a.wheelDeltaX : 0
        );
      },
      deltaY: function(a) {
        return "deltaY" in a ? a.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in a ? -a.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in a ? -a.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), Jd = To(Ql), kp = [9, 13, 27, 32], Vh = 229, Du = rt && "CompositionEvent" in window, fa = null;
    rt && "documentMode" in document && (fa = document.documentMode);
    var Gh = rt && "TextEvent" in window && !fa, Qa = rt && (!Du || fa && fa > 8 && fa <= 11), zs = 32, Vv = String.fromCharCode(zs);
    function sy() {
      st("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), st("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), st("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), st("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var Gv = !1;
    function wn(a) {
      return (a.ctrlKey || a.altKey || a.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(a.ctrlKey && a.altKey);
    }
    function Zl(a) {
      switch (a) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function Wv(a, s) {
      return a === "keydown" && s.keyCode === Vh;
    }
    function Fp(a, s) {
      switch (a) {
        case "keyup":
          return kp.indexOf(s.keyCode) !== -1;
        case "keydown":
          return s.keyCode !== Vh;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function Wh(a) {
      var s = a.detail;
      return typeof s == "object" && "data" in s ? s.data : null;
    }
    function Zi(a) {
      return a.locale === "ko";
    }
    var Za = !1;
    function Vo(a, s, v, x, M) {
      var N, G;
      if (Du ? N = Zl(s) : Za ? Fp(s, x) && (N = "onCompositionEnd") : Wv(s, x) && (N = "onCompositionStart"), !N)
        return null;
      Qa && !Zi(x) && (!Za && N === "onCompositionStart" ? Za = qd(M) : N === "onCompositionEnd" && Za && (G = Bm()));
      var Q = qv(v, N);
      if (Q.length > 0) {
        var ne = new Hm(N, s, null, x, M);
        if (a.push({
          event: ne,
          listeners: Q
        }), G)
          ne.data = G;
        else {
          var Se = Wh(x);
          Se !== null && (ne.data = Se);
        }
      }
    }
    function zp(a, s) {
      switch (a) {
        case "compositionend":
          return Wh(s);
        case "keypress":
          var v = s.which;
          return v !== zs ? null : (Gv = !0, Vv);
        case "textInput":
          var x = s.data;
          return x === Vv && Gv ? null : x;
        default:
          return null;
      }
    }
    function Wm(a, s) {
      if (Za) {
        if (a === "compositionend" || !Du && Fp(a, s)) {
          var v = Bm();
          return Fh(), Za = !1, v;
        }
        return null;
      }
      switch (a) {
        case "paste":
          return null;
        case "keypress":
          if (!wn(s)) {
            if (s.char && s.char.length > 1)
              return s.char;
            if (s.which)
              return String.fromCharCode(s.which);
          }
          return null;
        case "compositionend":
          return Qa && !Zi(s) ? null : s.data;
        default:
          return null;
      }
    }
    function jv(a, s, v, x, M) {
      var N;
      if (Gh ? N = zp(s, x) : N = Wm(s, x), !N)
        return null;
      var G = qv(v, "onBeforeInput");
      if (G.length > 0) {
        var Q = new Zd("onBeforeInput", "beforeinput", null, x, M);
        a.push({
          event: Q,
          listeners: G
        }), Q.data = N;
      }
    }
    function ly(a, s, v, x, M, N, G) {
      Vo(a, s, v, x, M), jv(a, s, v, x, M);
    }
    var aE = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function Vt(a) {
      var s = a && a.nodeName && a.nodeName.toLowerCase();
      return s === "input" ? !!aE[a.type] : s === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function Rc(a) {
      if (!rt)
        return !1;
      var s = "on" + a, v = s in document;
      if (!v) {
        var x = document.createElement("div");
        x.setAttribute(s, "return;"), v = typeof x[s] == "function";
      }
      return v;
    }
    function _f() {
      st("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function f(a, s, v, x) {
      jl(x);
      var M = qv(s, "onChange");
      if (M.length > 0) {
        var N = new Fs("onChange", "change", null, v, x);
        a.push({
          event: N,
          listeners: M
        });
      }
    }
    var m = null, b = null;
    function O(a) {
      var s = a.nodeName && a.nodeName.toLowerCase();
      return s === "select" || s === "input" && a.type === "file";
    }
    function I(a) {
      var s = [];
      f(s, b, a, Zt(a)), bh($, s);
    }
    function $(a) {
      hE(a, 0);
    }
    function pe(a) {
      var s = ul(a);
      if ($s(s))
        return a;
    }
    function Ue(a, s) {
      if (a === "change")
        return s;
    }
    var Ge = !1;
    rt && (Ge = Rc("input") && (!document.documentMode || document.documentMode > 9));
    function Rt(a, s) {
      m = a, b = s, m.attachEvent("onpropertychange", en);
    }
    function nn() {
      m && (m.detachEvent("onpropertychange", en), m = null, b = null);
    }
    function en(a) {
      a.propertyName === "value" && pe(b) && I(a);
    }
    function Qt(a, s, v) {
      a === "focusin" ? (nn(), Rt(s, v)) : a === "focusout" && nn();
    }
    function Dn(a, s) {
      if (a === "selectionchange" || a === "keyup" || a === "keydown")
        return pe(b);
    }
    function Bn(a) {
      var s = a.nodeName;
      return s && s.toLowerCase() === "input" && (a.type === "checkbox" || a.type === "radio");
    }
    function Gn(a, s) {
      if (a === "click")
        return pe(s);
    }
    function co(a, s) {
      if (a === "input" || a === "change")
        return pe(s);
    }
    function ht(a) {
      var s = a._wrapperState;
      !s || !s.controlled || a.type !== "number" || Zn(a, "number", a.value);
    }
    function Je(a, s, v, x, M, N, G) {
      var Q = v ? ul(v) : window, ne, Se;
      if (O(Q) ? ne = Ue : Vt(Q) ? Ge ? ne = co : (ne = Dn, Se = Qt) : Bn(Q) && (ne = Gn), ne) {
        var Me = ne(s, v);
        if (Me) {
          f(a, Me, x, M);
          return;
        }
      }
      Se && Se(s, Q, v), s === "focusout" && ht(Q);
    }
    function bt() {
      oe("onMouseEnter", ["mouseout", "mouseover"]), oe("onMouseLeave", ["mouseout", "mouseover"]), oe("onPointerEnter", ["pointerout", "pointerover"]), oe("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function dn(a, s, v, x, M, N, G) {
      var Q = s === "mouseover" || s === "pointerover", ne = s === "mouseout" || s === "pointerout";
      if (Q && !Eh(x)) {
        var Se = x.relatedTarget || x.fromElement;
        if (Se && (Jv(Se) || eS(Se)))
          return;
      }
      if (!(!ne && !Q)) {
        var Me;
        if (M.window === M)
          Me = M;
        else {
          var et = M.ownerDocument;
          et ? Me = et.defaultView || et.parentWindow : Me = window;
        }
        var Ke, Ct;
        if (ne) {
          var At = x.relatedTarget || x.toElement;
          if (Ke = v, Ct = At ? Jv(At) : null, Ct !== null) {
            var Wt = No(Ct);
            (Ct !== Wt || Ct.tag !== w && Ct.tag !== R) && (Ct = null);
          }
        } else
          Ke = null, Ct = v;
        if (Ke !== Ct) {
          var kn = Qd, Sr = "onMouseLeave", ur = "onMouseEnter", Vi = "mouse";
          (s === "pointerout" || s === "pointerover") && (kn = tc, Sr = "onPointerLeave", ur = "onPointerEnter", Vi = "pointer");
          var Pi = Ke == null ? Me : ul(Ke), yt = Ct == null ? Me : ul(Ct), jt = new kn(Sr, Vi + "leave", Ke, x, M);
          jt.target = Pi, jt.relatedTarget = yt;
          var St = null, un = Jv(M);
          if (un === v) {
            var Fn = new kn(ur, Vi + "enter", Ct, x, M);
            Fn.target = yt, Fn.relatedTarget = Pi, St = Fn;
          }
          H_(a, jt, St, Ke, Ct);
        }
      }
    }
    function Wn(a, s) {
      return a === s && (a !== 0 || 1 / a === 1 / s) || a !== a && s !== s;
    }
    var Vn = typeof Object.is == "function" ? Object.is : Wn;
    function lr(a, s) {
      if (Vn(a, s))
        return !0;
      if (typeof a != "object" || a === null || typeof s != "object" || s === null)
        return !1;
      var v = Object.keys(a), x = Object.keys(s);
      if (v.length !== x.length)
        return !1;
      for (var M = 0; M < v.length; M++) {
        var N = v[M];
        if (!qe.call(s, N) || !Vn(a[N], s[N]))
          return !1;
      }
      return !0;
    }
    function Cr(a) {
      for (; a && a.firstChild; )
        a = a.firstChild;
      return a;
    }
    function fs(a) {
      for (; a; ) {
        if (a.nextSibling)
          return a.nextSibling;
        a = a.parentNode;
      }
    }
    function zi(a, s) {
      for (var v = Cr(a), x = 0, M = 0; v; ) {
        if (v.nodeType === Bu) {
          if (M = x + v.textContent.length, x <= s && M >= s)
            return {
              node: v,
              offset: s - x
            };
          x = M;
        }
        v = Cr(fs(v));
      }
    }
    function Ac(a) {
      var s = a.ownerDocument, v = s && s.defaultView || window, x = v.getSelection && v.getSelection();
      if (!x || x.rangeCount === 0)
        return null;
      var M = x.anchorNode, N = x.anchorOffset, G = x.focusNode, Q = x.focusOffset;
      try {
        M.nodeType, G.nodeType;
      } catch {
        return null;
      }
      return uy(a, M, N, G, Q);
    }
    function uy(a, s, v, x, M) {
      var N = 0, G = -1, Q = -1, ne = 0, Se = 0, Me = a, et = null;
      e:
        for (; ; ) {
          for (var Ke = null; Me === s && (v === 0 || Me.nodeType === Bu) && (G = N + v), Me === x && (M === 0 || Me.nodeType === Bu) && (Q = N + M), Me.nodeType === Bu && (N += Me.nodeValue.length), (Ke = Me.firstChild) !== null; )
            et = Me, Me = Ke;
          for (; ; ) {
            if (Me === a)
              break e;
            if (et === s && ++ne === v && (G = N), et === x && ++Se === M && (Q = N), (Ke = Me.nextSibling) !== null)
              break;
            Me = et, et = Me.parentNode;
          }
          Me = Ke;
        }
      return G === -1 || Q === -1 ? null : {
        start: G,
        end: Q
      };
    }
    function w_(a, s) {
      var v = a.ownerDocument || document, x = v && v.defaultView || window;
      if (x.getSelection) {
        var M = x.getSelection(), N = a.textContent.length, G = Math.min(s.start, N), Q = s.end === void 0 ? G : Math.min(s.end, N);
        if (!M.extend && G > Q) {
          var ne = Q;
          Q = G, G = ne;
        }
        var Se = zi(a, G), Me = zi(a, Q);
        if (Se && Me) {
          if (M.rangeCount === 1 && M.anchorNode === Se.node && M.anchorOffset === Se.offset && M.focusNode === Me.node && M.focusOffset === Me.offset)
            return;
          var et = v.createRange();
          et.setStart(Se.node, Se.offset), M.removeAllRanges(), G > Q ? (M.addRange(et), M.extend(Me.node, Me.offset)) : (et.setEnd(Me.node, Me.offset), M.addRange(et));
        }
      }
    }
    function cy(a) {
      return a && a.nodeType === Bu;
    }
    function M_(a, s) {
      return !a || !s ? !1 : a === s ? !0 : cy(a) ? !1 : cy(s) ? M_(a, s.parentNode) : "contains" in a ? a.contains(s) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(s) & 16) : !1;
    }
    function C_(a) {
      return a && a.ownerDocument && M_(a.ownerDocument.documentElement, a);
    }
    function k0(a) {
      try {
        return typeof a.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function F0() {
      for (var a = window, s = Oo(); s instanceof a.HTMLIFrameElement; ) {
        if (k0(s))
          a = s.contentWindow;
        else
          return s;
        s = Oo(a.document);
      }
      return s;
    }
    function $v(a) {
      var s = a && a.nodeName && a.nodeName.toLowerCase();
      return s && (s === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || s === "textarea" || a.contentEditable === "true");
    }
    function Yv() {
      var a = F0();
      return {
        focusedElem: a,
        selectionRange: $v(a) ? R_(a) : null
      };
    }
    function oE(a) {
      var s = F0(), v = a.focusedElem, x = a.selectionRange;
      if (s !== v && C_(v)) {
        x !== null && $v(v) && sE(v, x);
        for (var M = [], N = v; N = N.parentNode; )
          N.nodeType === Xs && M.push({
            element: N,
            left: N.scrollLeft,
            top: N.scrollTop
          });
        typeof v.focus == "function" && v.focus();
        for (var G = 0; G < M.length; G++) {
          var Q = M[G];
          Q.element.scrollLeft = Q.left, Q.element.scrollTop = Q.top;
        }
      }
    }
    function R_(a) {
      var s;
      return "selectionStart" in a ? s = {
        start: a.selectionStart,
        end: a.selectionEnd
      } : s = Ac(a), s || {
        start: 0,
        end: 0
      };
    }
    function sE(a, s) {
      var v = s.start, x = s.end;
      x === void 0 && (x = v), "selectionStart" in a ? (a.selectionStart = v, a.selectionEnd = Math.min(x, a.value.length)) : w_(a, s);
    }
    var A_ = rt && "documentMode" in document && document.documentMode <= 11;
    function pw() {
      st("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var jm = null, fy = null, z0 = null, dy = !1;
    function lE(a) {
      if ("selectionStart" in a && $v(a))
        return {
          start: a.selectionStart,
          end: a.selectionEnd
        };
      var s = a.ownerDocument && a.ownerDocument.defaultView || window, v = s.getSelection();
      return {
        anchorNode: v.anchorNode,
        anchorOffset: v.anchorOffset,
        focusNode: v.focusNode,
        focusOffset: v.focusOffset
      };
    }
    function D_(a) {
      return a.window === a ? a.document : a.nodeType === Fa ? a : a.ownerDocument;
    }
    function L_(a, s, v) {
      var x = D_(v);
      if (!(dy || jm == null || jm !== Oo(x))) {
        var M = lE(jm);
        if (!z0 || !lr(z0, M)) {
          z0 = M;
          var N = qv(fy, "onSelect");
          if (N.length > 0) {
            var G = new Fs("onSelect", "select", null, s, v);
            a.push({
              event: G,
              listeners: N
            }), G.target = jm;
          }
        }
      }
    }
    function O_(a, s, v, x, M, N, G) {
      var Q = v ? ul(v) : window;
      switch (s) {
        case "focusin":
          (Vt(Q) || Q.contentEditable === "true") && (jm = Q, fy = v, z0 = null);
          break;
        case "focusout":
          jm = null, fy = null, z0 = null;
          break;
        case "mousedown":
          dy = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          dy = !1, L_(a, x, M);
          break;
        case "selectionchange":
          if (A_)
            break;
        case "keydown":
        case "keyup":
          L_(a, x, M);
      }
    }
    function hy(a, s) {
      var v = {};
      return v[a.toLowerCase()] = s.toLowerCase(), v["Webkit" + a] = "webkit" + s, v["Moz" + a] = "moz" + s, v;
    }
    var Xv = {
      animationend: hy("Animation", "AnimationEnd"),
      animationiteration: hy("Animation", "AnimationIteration"),
      animationstart: hy("Animation", "AnimationStart"),
      transitionend: hy("Transition", "TransitionEnd")
    }, P_ = {}, mw = {};
    rt && (mw = document.createElement("div").style, "AnimationEvent" in window || (delete Xv.animationend.animation, delete Xv.animationiteration.animation, delete Xv.animationstart.animation), "TransitionEvent" in window || delete Xv.transitionend.transition);
    function py(a) {
      if (P_[a])
        return P_[a];
      if (!Xv[a])
        return a;
      var s = Xv[a];
      for (var v in s)
        if (s.hasOwnProperty(v) && v in mw)
          return P_[a] = s[v];
      return a;
    }
    var uE = py("animationend"), cE = py("animationiteration"), fE = py("animationstart"), vw = py("transitionend"), U_ = /* @__PURE__ */ new Map(), I0 = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function $m(a, s) {
      U_.set(a, s), st(s, [a]);
    }
    function E2() {
      for (var a = 0; a < I0.length; a++) {
        var s = I0[a], v = s.toLowerCase(), x = s[0].toUpperCase() + s.slice(1);
        $m(v, "on" + x);
      }
      $m(uE, "onAnimationEnd"), $m(cE, "onAnimationIteration"), $m(fE, "onAnimationStart"), $m("dblclick", "onDoubleClick"), $m("focusin", "onFocus"), $m("focusout", "onBlur"), $m(vw, "onTransitionEnd");
    }
    function gw(a, s, v, x, M, N, G) {
      var Q = U_.get(s);
      if (Q !== void 0) {
        var ne = Fs, Se = s;
        switch (s) {
          case "keypress":
            if (Mc(x) === 0)
              return;
          case "keydown":
          case "keyup":
            ne = T_;
            break;
          case "focusin":
            Se = "focus", ne = ay;
            break;
          case "focusout":
            Se = "blur", ne = ay;
            break;
          case "beforeblur":
          case "afterblur":
            ne = ay;
            break;
          case "click":
            if (x.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            ne = Qd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            ne = Cc;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            ne = sl;
            break;
          case uE:
          case cE:
          case fE:
            ne = Bh;
            break;
          case vw:
            ne = iE;
            break;
          case "scroll":
            ne = Fv;
            break;
          case "wheel":
            ne = Jd;
            break;
          case "copy":
          case "cut":
          case "paste":
            ne = Iv;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            ne = tc;
            break;
        }
        var Me = (N & $o) !== 0;
        {
          var et = !Me && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          s === "scroll", Ke = _w(v, Q, x.type, Me, et);
          if (Ke.length > 0) {
            var Ct = new ne(Q, Se, null, x, M);
            a.push({
              event: Ct,
              listeners: Ke
            });
          }
        }
      }
    }
    E2(), bt(), _f(), pw(), sy();
    function yw(a, s, v, x, M, N, G) {
      gw(a, s, v, x, M, N);
      var Q = (N & _h) === 0;
      Q && (dn(a, s, v, x, M), Je(a, s, v, x, M), O_(a, s, v, x, M), ly(a, s, v, x, M));
    }
    var my = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], N_ = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(my));
    function dE(a, s, v) {
      var x = a.type || "unknown-event";
      a.currentTarget = v, Zs(x, s, void 0, a), a.currentTarget = null;
    }
    function k_(a, s, v) {
      var x;
      if (v)
        for (var M = s.length - 1; M >= 0; M--) {
          var N = s[M], G = N.instance, Q = N.currentTarget, ne = N.listener;
          if (G !== x && a.isPropagationStopped())
            return;
          dE(a, ne, Q), x = G;
        }
      else
        for (var Se = 0; Se < s.length; Se++) {
          var Me = s[Se], et = Me.instance, Ke = Me.currentTarget, Ct = Me.listener;
          if (et !== x && a.isPropagationStopped())
            return;
          dE(a, Ct, Ke), x = et;
        }
    }
    function hE(a, s) {
      for (var v = (s & $o) !== 0, x = 0; x < a.length; x++) {
        var M = a[x], N = M.event, G = M.listeners;
        k_(N, G, v);
      }
      Gf();
    }
    function Sw(a, s, v, x, M) {
      var N = Zt(v), G = [];
      yw(G, a, x, v, N, s), hE(G, s);
    }
    function Ja(a, s) {
      N_.has(a) || l('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', a);
      var v = !1, x = K2(s), M = xw(a, v);
      x.has(M) || (B0(s, a, ba, v), x.add(M));
    }
    function F_(a, s, v) {
      N_.has(a) && !s && l('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', a);
      var x = 0;
      s && (x |= $o), B0(v, a, x, s);
    }
    var xf = "_reactListening" + Math.random().toString(36).slice(2);
    function nc(a) {
      if (!a[xf]) {
        a[xf] = !0, Fe.forEach(function(v) {
          v !== "selectionchange" && (N_.has(v) || F_(v, !1, a), F_(v, !0, a));
        });
        var s = a.nodeType === Fa ? a : a.ownerDocument;
        s !== null && (s[xf] || (s[xf] = !0, F_("selectionchange", !1, s)));
      }
    }
    function B0(a, s, v, x, M) {
      var N = Im(a, s, v), G = void 0;
      Fd && (s === "touchstart" || s === "touchmove" || s === "wheel") && (G = !0), a = a, x ? G !== void 0 ? yf(a, s, N, G) : Nh(a, s, N) : G !== void 0 ? ny(a, s, N, G) : Nv(a, s, N);
    }
    function z_(a, s) {
      return a === s || a.nodeType === Wa && a.parentNode === s;
    }
    function Dr(a, s, v, x, M) {
      var N = x;
      if (!(s & jr) && !(s & ba)) {
        var G = M;
        if (x !== null) {
          var Q = x;
          e:
            for (; ; ) {
              if (Q === null)
                return;
              var ne = Q.tag;
              if (ne === _ || ne === E) {
                var Se = Q.stateNode.containerInfo;
                if (z_(Se, G))
                  break;
                if (ne === E)
                  for (var Me = Q.return; Me !== null; ) {
                    var et = Me.tag;
                    if (et === _ || et === E) {
                      var Ke = Me.stateNode.containerInfo;
                      if (z_(Ke, G))
                        return;
                    }
                    Me = Me.return;
                  }
                for (; Se !== null; ) {
                  var Ct = Jv(Se);
                  if (Ct === null)
                    return;
                  var At = Ct.tag;
                  if (At === w || At === R) {
                    Q = N = Ct;
                    continue e;
                  }
                  Se = Se.parentNode;
                }
              }
              Q = Q.return;
            }
        }
      }
      bh(function() {
        return Sw(a, s, v, N);
      });
    }
    function id(a, s, v) {
      return {
        instance: a,
        listener: s,
        currentTarget: v
      };
    }
    function _w(a, s, v, x, M, N) {
      for (var G = s !== null ? s + "Capture" : null, Q = x ? G : s, ne = [], Se = a, Me = null; Se !== null; ) {
        var et = Se, Ke = et.stateNode, Ct = et.tag;
        if (Ct === w && Ke !== null && (Me = Ke, Q !== null)) {
          var At = ef(Se, Q);
          At != null && ne.push(id(Se, At, Me));
        }
        if (M)
          break;
        Se = Se.return;
      }
      return ne;
    }
    function qv(a, s) {
      for (var v = s + "Capture", x = [], M = a; M !== null; ) {
        var N = M, G = N.stateNode, Q = N.tag;
        if (Q === w && G !== null) {
          var ne = G, Se = ef(M, v);
          Se != null && x.unshift(id(M, Se, ne));
          var Me = ef(M, s);
          Me != null && x.push(id(M, Me, ne));
        }
        M = M.return;
      }
      return x;
    }
    function jh(a) {
      if (a === null)
        return null;
      do
        a = a.return;
      while (a && a.tag !== w);
      return a || null;
    }
    function I_(a, s) {
      for (var v = a, x = s, M = 0, N = v; N; N = jh(N))
        M++;
      for (var G = 0, Q = x; Q; Q = jh(Q))
        G++;
      for (; M - G > 0; )
        v = jh(v), M--;
      for (; G - M > 0; )
        x = jh(x), G--;
      for (var ne = M; ne--; ) {
        if (v === x || x !== null && v === x.alternate)
          return v;
        v = jh(v), x = jh(x);
      }
      return null;
    }
    function B_(a, s, v, x, M) {
      for (var N = s._reactName, G = [], Q = v; Q !== null && Q !== x; ) {
        var ne = Q, Se = ne.alternate, Me = ne.stateNode, et = ne.tag;
        if (Se !== null && Se === x)
          break;
        if (et === w && Me !== null) {
          var Ke = Me;
          if (M) {
            var Ct = ef(Q, N);
            Ct != null && G.unshift(id(Q, Ct, Ke));
          } else if (!M) {
            var At = ef(Q, N);
            At != null && G.push(id(Q, At, Ke));
          }
        }
        Q = Q.return;
      }
      G.length !== 0 && a.push({
        event: s,
        listeners: G
      });
    }
    function H_(a, s, v, x, M) {
      var N = x && M ? I_(x, M) : null;
      x !== null && B_(a, s, x, N, !1), M !== null && v !== null && B_(a, v, M, N, !0);
    }
    function xw(a, s) {
      return a + "__" + (s ? "capture" : "bubble");
    }
    var Dc = !1, H0 = "dangerouslySetInnerHTML", V_ = "suppressContentEditableWarning", Ip = "suppressHydrationWarning", pE = "autoFocus", Bp = "children", Ym = "style", Kv = "__html", Lc, vy, Lu, G_, gy, V0, Ew;
    Lc = {
      // There are working polyfills for <dialog>. Let people use it.
      dialog: !0,
      // Electron ships a custom <webview> tag to display external web content in
      // an isolated frame and process.
      // This tag is not present in non Electron environments such as JSDom which
      // is often used for testing purposes.
      // @see https://electronjs.org/docs/api/webview-tag
      webview: !0
    }, vy = function(a, s) {
      Jc(a, s), Su(a, s), ji(a, s, {
        registrationNameDependencies: it,
        possibleRegistrationNames: Ot
      });
    }, V0 = rt && !document.documentMode, Lu = function(a, s, v) {
      if (!Dc) {
        var x = G0(v), M = G0(s);
        M !== x && (Dc = !0, l("Prop `%s` did not match. Server: %s Client: %s", a, JSON.stringify(M), JSON.stringify(x)));
      }
    }, G_ = function(a) {
      if (!Dc) {
        Dc = !0;
        var s = [];
        a.forEach(function(v) {
          s.push(v);
        }), l("Extra attributes from the server: %s", s);
      }
    }, gy = function(a, s) {
      s === !1 ? l("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", a, a, a) : l("Expected `%s` listener to be a function, instead got a value of `%s` type.", a, typeof s);
    }, Ew = function(a, s) {
      var v = a.namespaceURI === vu ? a.ownerDocument.createElement(a.tagName) : a.ownerDocument.createElementNS(a.namespaceURI, a.tagName);
      return v.innerHTML = s, v.innerHTML;
    };
    var mE = /\r\n?/g, b2 = /\u0000|\uFFFD/g;
    function G0(a) {
      rn(a);
      var s = typeof a == "string" ? a : "" + a;
      return s.replace(mE, `
`).replace(b2, "");
    }
    function yy(a, s, v, x) {
      var M = G0(s), N = G0(a);
      if (N !== M && (x && (Dc || (Dc = !0, l('Text content did not match. Server: "%s" Client: "%s"', N, M))), v && we))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function vE(a) {
      return a.nodeType === Fa ? a : a.ownerDocument;
    }
    function T2() {
    }
    function W_(a) {
      a.onclick = T2;
    }
    function bw(a, s, v, x, M) {
      for (var N in x)
        if (x.hasOwnProperty(N)) {
          var G = x[N];
          if (N === Ym)
            G && Object.freeze(G), va(s, G);
          else if (N === H0) {
            var Q = G ? G[Kv] : void 0;
            Q != null && Ff(s, Q);
          } else if (N === Bp)
            if (typeof G == "string") {
              var ne = a !== "textarea" || G !== "";
              ne && ea(s, G);
            } else
              typeof G == "number" && ea(s, "" + G);
          else
            N === V_ || N === Ip || N === pE || (it.hasOwnProperty(N) ? G != null && (typeof G != "function" && gy(N, G), N === "onScroll" && Ja("scroll", s)) : G != null && Vr(s, N, G, M));
        }
    }
    function Tw(a, s, v, x) {
      for (var M = 0; M < s.length; M += 2) {
        var N = s[M], G = s[M + 1];
        N === Ym ? va(a, G) : N === H0 ? Ff(a, G) : N === Bp ? ea(a, G) : Vr(a, N, G, x);
      }
    }
    function w2(a, s, v, x) {
      var M, N = vE(v), G, Q = x;
      if (Q === vu && (Q = Ys(a)), Q === vu) {
        if (M = ki(a, s), !M && a !== a.toLowerCase() && l("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", a), a === "script") {
          var ne = N.createElement("div");
          ne.innerHTML = "<script><\/script>";
          var Se = ne.firstChild;
          G = ne.removeChild(Se);
        } else if (typeof s.is == "string")
          G = N.createElement(a, {
            is: s.is
          });
        else if (G = N.createElement(a), a === "select") {
          var Me = G;
          s.multiple ? Me.multiple = !0 : s.size && (Me.size = s.size);
        }
      } else
        G = N.createElementNS(Q, a);
      return Q === vu && !M && Object.prototype.toString.call(G) === "[object HTMLUnknownElement]" && !qe.call(Lc, a) && (Lc[a] = !0, l("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", a)), G;
    }
    function M2(a, s) {
      return vE(s).createTextNode(a);
    }
    function $h(a, s, v, x) {
      var M = ki(s, v);
      vy(s, v);
      var N;
      switch (s) {
        case "dialog":
          Ja("cancel", a), Ja("close", a), N = v;
          break;
        case "iframe":
        case "object":
        case "embed":
          Ja("load", a), N = v;
          break;
        case "video":
        case "audio":
          for (var G = 0; G < my.length; G++)
            Ja(my[G], a);
          N = v;
          break;
        case "source":
          Ja("error", a), N = v;
          break;
        case "img":
        case "image":
        case "link":
          Ja("error", a), Ja("load", a), N = v;
          break;
        case "details":
          Ja("toggle", a), N = v;
          break;
        case "input":
          Ie(a, v), N = ie(a, v), Ja("invalid", a);
          break;
        case "option":
          _r(a, v), N = v;
          break;
        case "select":
          yh(a, v), N = Nf(a, v), Ja("invalid", a);
          break;
        case "textarea":
          Cv(a, v), N = _m(a, v), Ja("invalid", a);
          break;
        default:
          N = v;
      }
      switch (ui(s, N), bw(s, a, x, N, M), s) {
        case "input":
          ma(a), tn(a, v, !1);
          break;
        case "textarea":
          ma(a), wd(a);
          break;
        case "option":
          Zr(a, v);
          break;
        case "select":
          vm(a, v);
          break;
        default:
          typeof N.onClick == "function" && W_(a);
          break;
      }
    }
    function ww(a, s, v, x, M) {
      vy(s, x);
      var N = null, G, Q;
      switch (s) {
        case "input":
          G = ie(a, v), Q = ie(a, x), N = [];
          break;
        case "select":
          G = Nf(a, v), Q = Nf(a, x), N = [];
          break;
        case "textarea":
          G = _m(a, v), Q = _m(a, x), N = [];
          break;
        default:
          G = v, Q = x, typeof G.onClick != "function" && typeof Q.onClick == "function" && W_(a);
          break;
      }
      ui(s, Q);
      var ne, Se, Me = null;
      for (ne in G)
        if (!(Q.hasOwnProperty(ne) || !G.hasOwnProperty(ne) || G[ne] == null))
          if (ne === Ym) {
            var et = G[ne];
            for (Se in et)
              et.hasOwnProperty(Se) && (Me || (Me = {}), Me[Se] = "");
          } else
            ne === H0 || ne === Bp || ne === V_ || ne === Ip || ne === pE || (it.hasOwnProperty(ne) ? N || (N = []) : (N = N || []).push(ne, null));
      for (ne in Q) {
        var Ke = Q[ne], Ct = G != null ? G[ne] : void 0;
        if (!(!Q.hasOwnProperty(ne) || Ke === Ct || Ke == null && Ct == null))
          if (ne === Ym)
            if (Ke && Object.freeze(Ke), Ct) {
              for (Se in Ct)
                Ct.hasOwnProperty(Se) && (!Ke || !Ke.hasOwnProperty(Se)) && (Me || (Me = {}), Me[Se] = "");
              for (Se in Ke)
                Ke.hasOwnProperty(Se) && Ct[Se] !== Ke[Se] && (Me || (Me = {}), Me[Se] = Ke[Se]);
            } else
              Me || (N || (N = []), N.push(ne, Me)), Me = Ke;
          else if (ne === H0) {
            var At = Ke ? Ke[Kv] : void 0, Wt = Ct ? Ct[Kv] : void 0;
            At != null && Wt !== At && (N = N || []).push(ne, At);
          } else
            ne === Bp ? (typeof Ke == "string" || typeof Ke == "number") && (N = N || []).push(ne, "" + Ke) : ne === V_ || ne === Ip || (it.hasOwnProperty(ne) ? (Ke != null && (typeof Ke != "function" && gy(ne, Ke), ne === "onScroll" && Ja("scroll", a)), !N && Ct !== Ke && (N = [])) : (N = N || []).push(ne, Ke));
      }
      return Me && (Sl(Me, Q[Ym]), (N = N || []).push(Ym, Me)), N;
    }
    function Mw(a, s, v, x, M) {
      v === "input" && M.type === "radio" && M.name != null && ct(a, M);
      var N = ki(v, x), G = ki(v, M);
      switch (Tw(a, s, N, G), v) {
        case "input":
          Ut(a, M);
          break;
        case "textarea":
          xm(a, M);
          break;
        case "select":
          gm(a, M);
          break;
      }
    }
    function W0(a) {
      {
        var s = a.toLowerCase();
        return Wi.hasOwnProperty(s) && Wi[s] || null;
      }
    }
    function j0(a, s, v, x, M, N, G) {
      var Q, ne;
      switch (Q = ki(s, v), vy(s, v), s) {
        case "dialog":
          Ja("cancel", a), Ja("close", a);
          break;
        case "iframe":
        case "object":
        case "embed":
          Ja("load", a);
          break;
        case "video":
        case "audio":
          for (var Se = 0; Se < my.length; Se++)
            Ja(my[Se], a);
          break;
        case "source":
          Ja("error", a);
          break;
        case "img":
        case "image":
        case "link":
          Ja("error", a), Ja("load", a);
          break;
        case "details":
          Ja("toggle", a);
          break;
        case "input":
          Ie(a, v), Ja("invalid", a);
          break;
        case "option":
          _r(a, v);
          break;
        case "select":
          yh(a, v), Ja("invalid", a);
          break;
        case "textarea":
          Cv(a, v), Ja("invalid", a);
          break;
      }
      ui(s, v);
      {
        ne = /* @__PURE__ */ new Set();
        for (var Me = a.attributes, et = 0; et < Me.length; et++) {
          var Ke = Me[et].name.toLowerCase();
          switch (Ke) {
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              ne.add(Me[et].name);
          }
        }
      }
      var Ct = null;
      for (var At in v)
        if (v.hasOwnProperty(At)) {
          var Wt = v[At];
          if (At === Bp)
            typeof Wt == "string" ? a.textContent !== Wt && (v[Ip] !== !0 && yy(a.textContent, Wt, N, G), Ct = [Bp, Wt]) : typeof Wt == "number" && a.textContent !== "" + Wt && (v[Ip] !== !0 && yy(a.textContent, Wt, N, G), Ct = [Bp, "" + Wt]);
          else if (it.hasOwnProperty(At))
            Wt != null && (typeof Wt != "function" && gy(At, Wt), At === "onScroll" && Ja("scroll", a));
          else if (G && // Convince Flow we've calculated it (it's DEV-only in this method.)
          typeof Q == "boolean") {
            var kn = void 0, Sr = Q && Ce ? null : Pt(At);
            if (v[Ip] !== !0) {
              if (!(At === V_ || At === Ip || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              At === "value" || At === "checked" || At === "selected")) {
                if (At === H0) {
                  var ur = a.innerHTML, Vi = Wt ? Wt[Kv] : void 0;
                  if (Vi != null) {
                    var Pi = Ew(a, Vi);
                    Pi !== ur && Lu(At, ur, Pi);
                  }
                } else if (At === Ym) {
                  if (ne.delete(At), V0) {
                    var yt = Vl(Wt);
                    kn = a.getAttribute("style"), yt !== kn && Lu(At, kn, yt);
                  }
                } else if (Q && !Ce)
                  ne.delete(At.toLowerCase()), kn = mi(a, At, Wt), Wt !== kn && Lu(At, kn, Wt);
                else if (!tt(At, Sr, Q) && !ve(At, Wt, Sr, Q)) {
                  var jt = !1;
                  if (Sr !== null)
                    ne.delete(Sr.attributeName), kn = Hn(a, At, Wt, Sr);
                  else {
                    var St = x;
                    if (St === vu && (St = Ys(s)), St === vu)
                      ne.delete(At.toLowerCase());
                    else {
                      var un = W0(At);
                      un !== null && un !== At && (jt = !0, ne.delete(un)), ne.delete(At);
                    }
                    kn = mi(a, At, Wt);
                  }
                  var Fn = Ce;
                  !Fn && Wt !== kn && !jt && Lu(At, kn, Wt);
                }
              }
            }
          }
        }
      switch (G && // $FlowFixMe - Should be inferred as not undefined.
      ne.size > 0 && v[Ip] !== !0 && G_(ne), s) {
        case "input":
          ma(a), tn(a, v, !0);
          break;
        case "textarea":
          ma(a), wd(a);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof v.onClick == "function" && W_(a);
          break;
      }
      return Ct;
    }
    function j_(a, s, v) {
      var x = a.nodeValue !== s;
      return x;
    }
    function Sy(a, s) {
      {
        if (Dc)
          return;
        Dc = !0, l("Did not expect server HTML to contain a <%s> in <%s>.", s.nodeName.toLowerCase(), a.nodeName.toLowerCase());
      }
    }
    function $_(a, s) {
      {
        if (Dc)
          return;
        Dc = !0, l('Did not expect server HTML to contain the text node "%s" in <%s>.', s.nodeValue, a.nodeName.toLowerCase());
      }
    }
    function Qv(a, s, v) {
      {
        if (Dc)
          return;
        Dc = !0, l("Expected server HTML to contain a matching <%s> in <%s>.", s, a.nodeName.toLowerCase());
      }
    }
    function ll(a, s) {
      {
        if (s === "" || Dc)
          return;
        Dc = !0, l('Expected server HTML to contain a matching text node for "%s" in <%s>.', s, a.nodeName.toLowerCase());
      }
    }
    function Cw(a, s, v) {
      switch (s) {
        case "input":
          $n(a, v);
          return;
        case "textarea":
          kf(a, v);
          return;
        case "select":
          ym(a, v);
          return;
      }
    }
    var Hp = function() {
    }, rc = function() {
    };
    {
      var gE = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], _y = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], yE = _y.concat(["button"]), SE = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], Y_ = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      rc = function(a, s) {
        var v = Rn({}, a || Y_), x = {
          tag: s
        };
        return _y.indexOf(s) !== -1 && (v.aTagInScope = null, v.buttonTagInScope = null, v.nobrTagInScope = null), yE.indexOf(s) !== -1 && (v.pTagInButtonScope = null), gE.indexOf(s) !== -1 && s !== "address" && s !== "div" && s !== "p" && (v.listItemTagAutoclosing = null, v.dlItemTagAutoclosing = null), v.current = x, s === "form" && (v.formTag = x), s === "a" && (v.aTagInScope = x), s === "button" && (v.buttonTagInScope = x), s === "nobr" && (v.nobrTagInScope = x), s === "p" && (v.pTagInButtonScope = x), s === "li" && (v.listItemTagAutoclosing = x), (s === "dd" || s === "dt") && (v.dlItemTagAutoclosing = x), v;
      };
      var Zv = function(a, s) {
        switch (s) {
          case "select":
            return a === "option" || a === "optgroup" || a === "#text";
          case "optgroup":
            return a === "option" || a === "#text";
          case "option":
            return a === "#text";
          case "tr":
            return a === "th" || a === "td" || a === "style" || a === "script" || a === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return a === "tr" || a === "style" || a === "script" || a === "template";
          case "colgroup":
            return a === "col" || a === "template";
          case "table":
            return a === "caption" || a === "colgroup" || a === "tbody" || a === "tfoot" || a === "thead" || a === "style" || a === "script" || a === "template";
          case "head":
            return a === "base" || a === "basefont" || a === "bgsound" || a === "link" || a === "meta" || a === "title" || a === "noscript" || a === "noframes" || a === "style" || a === "script" || a === "template";
          case "html":
            return a === "head" || a === "body" || a === "frameset";
          case "frameset":
            return a === "frame";
          case "#document":
            return a === "html";
        }
        switch (a) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return s !== "h1" && s !== "h2" && s !== "h3" && s !== "h4" && s !== "h5" && s !== "h6";
          case "rp":
          case "rt":
            return SE.indexOf(s) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return s == null;
        }
        return !0;
      }, _E = function(a, s) {
        switch (a) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return s.pTagInButtonScope;
          case "form":
            return s.formTag || s.pTagInButtonScope;
          case "li":
            return s.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return s.dlItemTagAutoclosing;
          case "button":
            return s.buttonTagInScope;
          case "a":
            return s.aTagInScope;
          case "nobr":
            return s.nobrTagInScope;
        }
        return null;
      }, $0 = {};
      Hp = function(a, s, v) {
        v = v || Y_;
        var x = v.current, M = x && x.tag;
        s != null && (a != null && l("validateDOMNesting: when childText is passed, childTag should be null"), a = "#text");
        var N = Zv(a, M) ? null : x, G = N ? null : _E(a, v), Q = N || G;
        if (Q) {
          var ne = Q.tag, Se = !!N + "|" + a + "|" + ne;
          if (!$0[Se]) {
            $0[Se] = !0;
            var Me = a, et = "";
            if (a === "#text" ? /\S/.test(s) ? Me = "Text nodes" : (Me = "Whitespace text nodes", et = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : Me = "<" + a + ">", N) {
              var Ke = "";
              ne === "table" && a === "tr" && (Ke += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), l("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", Me, ne, et, Ke);
            } else
              l("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", Me, ne);
          }
        }
      };
    }
    var Ol = "suppressHydrationWarning", X_ = "$", Y0 = "/$", xy = "$?", Ey = "$!", Rw = "style", xE = null, EE = null;
    function C2(a) {
      var s, v, x = a.nodeType;
      switch (x) {
        case Fa:
        case za: {
          s = x === Fa ? "#document" : "#fragment";
          var M = a.documentElement;
          v = M ? M.namespaceURI : Yc(null, "");
          break;
        }
        default: {
          var N = x === Wa ? a.parentNode : a, G = N.namespaceURI || null;
          s = N.tagName, v = Yc(G, s);
          break;
        }
      }
      {
        var Q = s.toLowerCase(), ne = rc(null, Q);
        return {
          namespace: v,
          ancestorInfo: ne
        };
      }
    }
    function Aw(a, s, v) {
      {
        var x = a, M = Yc(x.namespace, s), N = rc(x.ancestorInfo, s);
        return {
          namespace: M,
          ancestorInfo: N
        };
      }
    }
    function Dw(a) {
      return a;
    }
    function Lw(a) {
      xE = ec(), EE = Yv();
      var s = null;
      return Ha(!1), s;
    }
    function bE(a) {
      oE(EE), Ha(xE), xE = null, EE = null;
    }
    function Ow(a, s, v, x, M) {
      var N;
      {
        var G = x;
        if (Hp(a, null, G.ancestorInfo), typeof s.children == "string" || typeof s.children == "number") {
          var Q = "" + s.children, ne = rc(G.ancestorInfo, a);
          Hp(null, Q, ne);
        }
        N = G.namespace;
      }
      var Se = w2(a, s, v, N);
      return qm(M, Se), kE(Se, s), Se;
    }
    function R2(a, s) {
      a.appendChild(s);
    }
    function Pw(a, s, v, x, M) {
      switch ($h(a, s, v, x), s) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!v.autoFocus;
        case "img":
          return !0;
        default:
          return !1;
      }
    }
    function A2(a, s, v, x, M, N) {
      {
        var G = N;
        if (typeof x.children != typeof v.children && (typeof x.children == "string" || typeof x.children == "number")) {
          var Q = "" + x.children, ne = rc(G.ancestorInfo, s);
          Hp(null, Q, ne);
        }
      }
      return ww(a, s, v, x);
    }
    function TE(a, s) {
      return a === "textarea" || a === "noscript" || typeof s.children == "string" || typeof s.children == "number" || typeof s.dangerouslySetInnerHTML == "object" && s.dangerouslySetInnerHTML !== null && s.dangerouslySetInnerHTML.__html != null;
    }
    function D2(a, s, v, x) {
      {
        var M = v;
        Hp(null, a, M.ancestorInfo);
      }
      var N = M2(a, s);
      return qm(x, N), N;
    }
    function L2() {
      var a = window.event;
      return a === void 0 ? vf : Dl(a.type);
    }
    var wE = typeof setTimeout == "function" ? setTimeout : void 0, ME = typeof clearTimeout == "function" ? clearTimeout : void 0, by = -1, X0 = typeof Promise == "function" ? Promise : void 0, Uw = typeof queueMicrotask == "function" ? queueMicrotask : typeof X0 < "u" ? function(a) {
      return X0.resolve(null).then(a).catch(O2);
    } : wE;
    function O2(a) {
      setTimeout(function() {
        throw a;
      });
    }
    function Nw(a, s, v, x) {
      switch (s) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          v.autoFocus && a.focus();
          return;
        case "img": {
          v.src && (a.src = v.src);
          return;
        }
      }
    }
    function kw(a, s, v, x, M, N) {
      Mw(a, s, v, x, M), kE(a, M);
    }
    function q_(a) {
      ea(a, "");
    }
    function P2(a, s, v) {
      a.nodeValue = v;
    }
    function CE(a, s) {
      a.appendChild(s);
    }
    function Fw(a, s) {
      var v;
      a.nodeType === Wa ? (v = a.parentNode, v.insertBefore(s, a)) : (v = a, v.appendChild(s));
      var x = a._reactRootContainer;
      x == null && v.onclick === null && W_(v);
    }
    function zw(a, s, v) {
      a.insertBefore(s, v);
    }
    function Iw(a, s, v) {
      a.nodeType === Wa ? a.parentNode.insertBefore(s, v) : a.insertBefore(s, v);
    }
    function K_(a, s) {
      a.removeChild(s);
    }
    function U2(a, s) {
      a.nodeType === Wa ? a.parentNode.removeChild(s) : a.removeChild(s);
    }
    function RE(a, s) {
      var v = s, x = 0;
      do {
        var M = v.nextSibling;
        if (a.removeChild(v), M && M.nodeType === Wa) {
          var N = M.data;
          if (N === Y0)
            if (x === 0) {
              a.removeChild(M), Ar(s);
              return;
            } else
              x--;
          else
            (N === X_ || N === xy || N === Ey) && x++;
        }
        v = M;
      } while (v);
      Ar(s);
    }
    function N2(a, s) {
      a.nodeType === Wa ? RE(a.parentNode, s) : a.nodeType === Xs && RE(a, s), Ar(a);
    }
    function Bw(a) {
      a = a;
      var s = a.style;
      typeof s.setProperty == "function" ? s.setProperty("display", "none", "important") : s.display = "none";
    }
    function k2(a) {
      a.nodeValue = "";
    }
    function F2(a, s) {
      a = a;
      var v = s[Rw], x = v != null && v.hasOwnProperty("display") ? v.display : null;
      a.style.display = Cd("display", x);
    }
    function z2(a, s) {
      a.nodeValue = s;
    }
    function I2(a) {
      a.nodeType === Xs ? a.textContent = "" : a.nodeType === Fa && a.documentElement && a.removeChild(a.documentElement);
    }
    function Hw(a, s, v) {
      return a.nodeType !== Xs || s.toLowerCase() !== a.nodeName.toLowerCase() ? null : a;
    }
    function B2(a, s) {
      return s === "" || a.nodeType !== Bu ? null : a;
    }
    function AE(a) {
      return a.nodeType !== Wa ? null : a;
    }
    function DE(a) {
      return a.data === xy;
    }
    function LE(a) {
      return a.data === Ey;
    }
    function Vw(a) {
      var s = a.nextSibling && a.nextSibling.dataset, v, x, M;
      return s && (v = s.dgst, x = s.msg, M = s.stck), {
        message: x,
        digest: v,
        stack: M
      };
    }
    function H2(a, s) {
      a._reactRetry = s;
    }
    function q0(a) {
      for (; a != null; a = a.nextSibling) {
        var s = a.nodeType;
        if (s === Xs || s === Bu)
          break;
        if (s === Wa) {
          var v = a.data;
          if (v === X_ || v === Ey || v === xy)
            break;
          if (v === Y0)
            return null;
        }
      }
      return a;
    }
    function K0(a) {
      return q0(a.nextSibling);
    }
    function Q_(a) {
      return q0(a.firstChild);
    }
    function Vp(a) {
      return q0(a.firstChild);
    }
    function V2(a) {
      return q0(a.nextSibling);
    }
    function OE(a, s, v, x, M, N, G) {
      qm(N, a), kE(a, v);
      var Q;
      {
        var ne = M;
        Q = ne.namespace;
      }
      var Se = (N.mode & Fr) !== ar;
      return j0(a, s, v, Q, x, Se, G);
    }
    function G2(a, s, v, x) {
      return qm(v, a), v.mode & Fr, j_(a, s);
    }
    function Gw(a, s) {
      qm(s, a);
    }
    function W2(a) {
      for (var s = a.nextSibling, v = 0; s; ) {
        if (s.nodeType === Wa) {
          var x = s.data;
          if (x === Y0) {
            if (v === 0)
              return K0(s);
            v--;
          } else
            (x === X_ || x === Ey || x === xy) && v++;
        }
        s = s.nextSibling;
      }
      return null;
    }
    function PE(a) {
      for (var s = a.previousSibling, v = 0; s; ) {
        if (s.nodeType === Wa) {
          var x = s.data;
          if (x === X_ || x === Ey || x === xy) {
            if (v === 0)
              return s;
            v--;
          } else
            x === Y0 && v++;
        }
        s = s.previousSibling;
      }
      return null;
    }
    function Ww(a) {
      Ar(a);
    }
    function jw(a) {
      Ar(a);
    }
    function UE(a) {
      return a !== "head" && a !== "body";
    }
    function j2(a, s, v, x) {
      var M = !0;
      yy(s.nodeValue, v, x, M);
    }
    function Q0(a, s, v, x, M, N) {
      if (s[Ol] !== !0) {
        var G = !0;
        yy(x.nodeValue, M, N, G);
      }
    }
    function Z_(a, s) {
      s.nodeType === Xs ? Sy(a, s) : s.nodeType === Wa || $_(a, s);
    }
    function $2(a, s) {
      {
        var v = a.parentNode;
        v !== null && (s.nodeType === Xs ? Sy(v, s) : s.nodeType === Wa || $_(v, s));
      }
    }
    function $w(a, s, v, x, M) {
      (M || s[Ol] !== !0) && (x.nodeType === Xs ? Sy(v, x) : x.nodeType === Wa || $_(v, x));
    }
    function Y2(a, s, v) {
      Qv(a, s);
    }
    function Yw(a, s) {
      ll(a, s);
    }
    function Xw(a, s, v) {
      {
        var x = a.parentNode;
        x !== null && Qv(x, s);
      }
    }
    function J_(a, s) {
      {
        var v = a.parentNode;
        v !== null && ll(v, s);
      }
    }
    function Xm(a, s, v, x, M, N) {
      (N || s[Ol] !== !0) && Qv(v, x);
    }
    function X2(a, s, v, x, M) {
      (M || s[Ol] !== !0) && ll(v, x);
    }
    function An(a) {
      l("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", a.nodeName.toLowerCase());
    }
    function Ty(a) {
      nc(a);
    }
    var eh = Math.random().toString(36).slice(2), Ko = "__reactFiber$" + eh, NE = "__reactProps$" + eh, wy = "__reactContainer$" + eh, Z0 = "__reactEvents$" + eh, q2 = "__reactListeners$" + eh, qw = "__reactHandles$" + eh;
    function ex(a) {
      delete a[Ko], delete a[NE], delete a[Z0], delete a[q2], delete a[qw];
    }
    function qm(a, s) {
      s[Ko] = a;
    }
    function J0(a, s) {
      s[wy] = a;
    }
    function Kw(a) {
      a[wy] = null;
    }
    function eS(a) {
      return !!a[wy];
    }
    function Jv(a) {
      var s = a[Ko];
      if (s)
        return s;
      for (var v = a.parentNode; v; ) {
        if (s = v[wy] || v[Ko], s) {
          var x = s.alternate;
          if (s.child !== null || x !== null && x.child !== null)
            for (var M = PE(a); M !== null; ) {
              var N = M[Ko];
              if (N)
                return N;
              M = PE(M);
            }
          return s;
        }
        a = v, v = a.parentNode;
      }
      return null;
    }
    function Km(a) {
      var s = a[Ko] || a[wy];
      return s && (s.tag === w || s.tag === R || s.tag === B || s.tag === _) ? s : null;
    }
    function ul(a) {
      if (a.tag === w || a.tag === R)
        return a.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function ad(a) {
      return a[NE] || null;
    }
    function kE(a, s) {
      a[NE] = s;
    }
    function K2(a) {
      var s = a[Z0];
      return s === void 0 && (s = a[Z0] = /* @__PURE__ */ new Set()), s;
    }
    var Qw = {}, Zw = t.ReactDebugCurrentFrame;
    function tS(a) {
      if (a) {
        var s = a._owner, v = Wo(a.type, a._source, s ? s.type : null);
        Zw.setExtraStackFrame(v);
      } else
        Zw.setExtraStackFrame(null);
    }
    function th(a, s, v, x, M) {
      {
        var N = Function.call.bind(qe);
        for (var G in a)
          if (N(a, G)) {
            var Q = void 0;
            try {
              if (typeof a[G] != "function") {
                var ne = Error((x || "React class") + ": " + v + " type `" + G + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[G] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw ne.name = "Invariant Violation", ne;
              }
              Q = a[G](s, G, x, v, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (Se) {
              Q = Se;
            }
            Q && !(Q instanceof Error) && (tS(M), l("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", x || "React class", v, G, typeof Q), tS(null)), Q instanceof Error && !(Q.message in Qw) && (Qw[Q.message] = !0, tS(M), l("Failed %s type: %s", v, Q.message), tS(null));
          }
      }
    }
    var tx = [], nS;
    nS = [];
    var Gp = -1;
    function Wp(a) {
      return {
        current: a
      };
    }
    function Ou(a, s) {
      if (Gp < 0) {
        l("Unexpected pop.");
        return;
      }
      s !== nS[Gp] && l("Unexpected Fiber popped."), a.current = tx[Gp], tx[Gp] = null, nS[Gp] = null, Gp--;
    }
    function Pu(a, s, v) {
      Gp++, tx[Gp] = a.current, nS[Gp] = v, a.current = s;
    }
    var FE;
    FE = {};
    var Oc = {};
    Object.freeze(Oc);
    var Yh = Wp(Oc), nh = Wp(!1), rS = Oc;
    function Qm(a, s, v) {
      return v && rh(s) ? rS : Yh.current;
    }
    function zE(a, s, v) {
      {
        var x = a.stateNode;
        x.__reactInternalMemoizedUnmaskedChildContext = s, x.__reactInternalMemoizedMaskedChildContext = v;
      }
    }
    function My(a, s) {
      {
        var v = a.type, x = v.contextTypes;
        if (!x)
          return Oc;
        var M = a.stateNode;
        if (M && M.__reactInternalMemoizedUnmaskedChildContext === s)
          return M.__reactInternalMemoizedMaskedChildContext;
        var N = {};
        for (var G in x)
          N[G] = s[G];
        {
          var Q = rr(a) || "Unknown";
          th(x, N, "context", Q);
        }
        return M && zE(a, s, N), N;
      }
    }
    function Cy() {
      return nh.current;
    }
    function rh(a) {
      {
        var s = a.childContextTypes;
        return s != null;
      }
    }
    function nx(a) {
      Ou(nh, a), Ou(Yh, a);
    }
    function Ry(a) {
      Ou(nh, a), Ou(Yh, a);
    }
    function Jw(a, s, v) {
      {
        if (Yh.current !== Oc)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        Pu(Yh, s, a), Pu(nh, v, a);
      }
    }
    function eM(a, s, v) {
      {
        var x = a.stateNode, M = s.childContextTypes;
        if (typeof x.getChildContext != "function") {
          {
            var N = rr(a) || "Unknown";
            FE[N] || (FE[N] = !0, l("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", N, N));
          }
          return v;
        }
        var G = x.getChildContext();
        for (var Q in G)
          if (!(Q in M))
            throw new Error((rr(a) || "Unknown") + '.getChildContext(): key "' + Q + '" is not defined in childContextTypes.');
        {
          var ne = rr(a) || "Unknown";
          th(M, G, "child context", ne);
        }
        return Rn({}, v, G);
      }
    }
    function rx(a) {
      {
        var s = a.stateNode, v = s && s.__reactInternalMemoizedMergedChildContext || Oc;
        return rS = Yh.current, Pu(Yh, v, a), Pu(nh, nh.current, a), !0;
      }
    }
    function tM(a, s, v) {
      {
        var x = a.stateNode;
        if (!x)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (v) {
          var M = eM(a, s, rS);
          x.__reactInternalMemoizedMergedChildContext = M, Ou(nh, a), Ou(Yh, a), Pu(Yh, M, a), Pu(nh, v, a);
        } else
          Ou(nh, a), Pu(nh, v, a);
      }
    }
    function Q2(a) {
      {
        if (!nf(a) || a.tag !== p)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var s = a;
        do {
          switch (s.tag) {
            case _:
              return s.stateNode.context;
            case p: {
              var v = s.type;
              if (rh(v))
                return s.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          s = s.return;
        } while (s !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var Zm = 0, iS = 1, ih = null, IE = !1, ix = !1;
    function nM(a) {
      ih === null ? ih = [a] : ih.push(a);
    }
    function rM(a) {
      IE = !0, nM(a);
    }
    function iM() {
      IE && Jm();
    }
    function Jm() {
      if (!ix && ih !== null) {
        ix = !0;
        var a = 0, s = Ju();
        try {
          var v = !0, x = ih;
          for (bo(Us); a < x.length; a++) {
            var M = x[a];
            do
              M = M(v);
            while (M !== null);
          }
          ih = null, IE = !1;
        } catch (N) {
          throw ih !== null && (ih = ih.slice(a + 1)), Hd(Dm, Jm), N;
        } finally {
          bo(s), ix = !1;
        }
      }
      return null;
    }
    var Ay = [], Dy = 0, ax = null, ox = 0, od = [], sd = 0, eg = null, jp = 1, $p = "";
    function aM(a) {
      return ah(), (a.flags & xu) !== ir;
    }
    function ld(a) {
      return ah(), ox;
    }
    function Z2() {
      var a = $p, s = jp, v = s & ~sx(s);
      return v.toString(32) + a;
    }
    function tg(a, s) {
      ah(), Ay[Dy++] = ox, Ay[Dy++] = ax, ax = a, ox = s;
    }
    function oM(a, s, v) {
      ah(), od[sd++] = jp, od[sd++] = $p, od[sd++] = eg, eg = a;
      var x = jp, M = $p, N = ng(x) - 1, G = x & ~(1 << N), Q = v + 1, ne = ng(s) + N;
      if (ne > 30) {
        var Se = N - N % 5, Me = (1 << Se) - 1, et = (G & Me).toString(32), Ke = G >> Se, Ct = N - Se, At = ng(s) + Ct, Wt = Q << Ct, kn = Wt | Ke, Sr = et + M;
        jp = 1 << At | kn, $p = Sr;
      } else {
        var ur = Q << N, Vi = ur | G, Pi = M;
        jp = 1 << ne | Vi, $p = Pi;
      }
    }
    function BE(a) {
      ah();
      var s = a.return;
      if (s !== null) {
        var v = 1, x = 0;
        tg(a, v), oM(a, v, x);
      }
    }
    function ng(a) {
      return 32 - il(a);
    }
    function sx(a) {
      return 1 << ng(a) - 1;
    }
    function Ly(a) {
      for (; a === ax; )
        ax = Ay[--Dy], Ay[Dy] = null, ox = Ay[--Dy], Ay[Dy] = null;
      for (; a === eg; )
        eg = od[--sd], od[sd] = null, $p = od[--sd], od[sd] = null, jp = od[--sd], od[sd] = null;
    }
    function lx() {
      return ah(), eg !== null ? {
        id: jp,
        overflow: $p
      } : null;
    }
    function ux(a, s) {
      ah(), od[sd++] = jp, od[sd++] = $p, od[sd++] = eg, jp = s.id, $p = s.overflow, eg = a;
    }
    function ah() {
      Va() || l("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var Jl = null, ud = null, oh = !1, rg = !1, ev = null;
    function HE() {
      oh && l("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function cx() {
      rg = !0;
    }
    function VE() {
      return rg;
    }
    function sM(a) {
      var s = a.stateNode.containerInfo;
      return ud = Vp(s), Jl = a, oh = !0, ev = null, rg = !1, !0;
    }
    function J2(a, s, v) {
      return ud = V2(s), Jl = a, oh = !0, ev = null, rg = !1, v !== null && ux(a, v), !0;
    }
    function aS(a, s) {
      switch (a.tag) {
        case _: {
          Z_(a.stateNode.containerInfo, s);
          break;
        }
        case w: {
          var v = (a.mode & Fr) !== ar;
          $w(
            a.type,
            a.memoizedProps,
            a.stateNode,
            s,
            // TODO: Delete this argument when we remove the legacy root API.
            v
          );
          break;
        }
        case B: {
          var x = a.memoizedState;
          x.dehydrated !== null && $2(x.dehydrated, s);
          break;
        }
      }
    }
    function lM(a, s) {
      aS(a, s);
      var v = q6();
      v.stateNode = s, v.return = a;
      var x = a.deletions;
      x === null ? (a.deletions = [v], a.flags |= hi) : x.push(v);
    }
    function GE(a, s) {
      {
        if (rg)
          return;
        switch (a.tag) {
          case _: {
            var v = a.stateNode.containerInfo;
            switch (s.tag) {
              case w:
                var x = s.type;
                s.pendingProps, Y2(v, x);
                break;
              case R:
                var M = s.pendingProps;
                Yw(v, M);
                break;
            }
            break;
          }
          case w: {
            var N = a.type, G = a.memoizedProps, Q = a.stateNode;
            switch (s.tag) {
              case w: {
                var ne = s.type, Se = s.pendingProps, Me = (a.mode & Fr) !== ar;
                Xm(
                  N,
                  G,
                  Q,
                  ne,
                  Se,
                  // TODO: Delete this argument when we remove the legacy root API.
                  Me
                );
                break;
              }
              case R: {
                var et = s.pendingProps, Ke = (a.mode & Fr) !== ar;
                X2(
                  N,
                  G,
                  Q,
                  et,
                  // TODO: Delete this argument when we remove the legacy root API.
                  Ke
                );
                break;
              }
            }
            break;
          }
          case B: {
            var Ct = a.memoizedState, At = Ct.dehydrated;
            if (At !== null)
              switch (s.tag) {
                case w:
                  var Wt = s.type;
                  s.pendingProps, Xw(At, Wt);
                  break;
                case R:
                  var kn = s.pendingProps;
                  J_(At, kn);
                  break;
              }
            break;
          }
          default:
            return;
        }
      }
    }
    function uM(a, s) {
      s.flags = s.flags & ~tl | Jr, GE(a, s);
    }
    function oS(a, s) {
      switch (a.tag) {
        case w: {
          var v = a.type;
          a.pendingProps;
          var x = Hw(s, v);
          return x !== null ? (a.stateNode = x, Jl = a, ud = Q_(x), !0) : !1;
        }
        case R: {
          var M = a.pendingProps, N = B2(s, M);
          return N !== null ? (a.stateNode = N, Jl = a, ud = null, !0) : !1;
        }
        case B: {
          var G = AE(s);
          if (G !== null) {
            var Q = {
              dehydrated: G,
              treeContext: lx(),
              retryLane: Rl
            };
            a.memoizedState = Q;
            var ne = K6(G);
            return ne.return = a, a.child = ne, Jl = a, ud = null, !0;
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function WE(a) {
      return (a.mode & Fr) !== ar && (a.flags & xr) === ir;
    }
    function jE(a) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function $E(a) {
      if (oh) {
        var s = ud;
        if (!s) {
          WE(a) && (GE(Jl, a), jE()), uM(Jl, a), oh = !1, Jl = a;
          return;
        }
        var v = s;
        if (!oS(a, s)) {
          WE(a) && (GE(Jl, a), jE()), s = K0(v);
          var x = Jl;
          if (!s || !oS(a, s)) {
            uM(Jl, a), oh = !1, Jl = a;
            return;
          }
          lM(x, v);
        }
      }
    }
    function eA(a, s, v) {
      var x = a.stateNode, M = !rg, N = OE(x, a.type, a.memoizedProps, s, v, a, M);
      return a.updateQueue = N, N !== null;
    }
    function cM(a) {
      var s = a.stateNode, v = a.memoizedProps, x = G2(s, v, a);
      if (x) {
        var M = Jl;
        if (M !== null)
          switch (M.tag) {
            case _: {
              var N = M.stateNode.containerInfo, G = (M.mode & Fr) !== ar;
              j2(
                N,
                s,
                v,
                // TODO: Delete this argument when we remove the legacy root API.
                G
              );
              break;
            }
            case w: {
              var Q = M.type, ne = M.memoizedProps, Se = M.stateNode, Me = (M.mode & Fr) !== ar;
              Q0(
                Q,
                ne,
                Se,
                s,
                v,
                // TODO: Delete this argument when we remove the legacy root API.
                Me
              );
              break;
            }
          }
      }
      return x;
    }
    function tA(a) {
      var s = a.memoizedState, v = s !== null ? s.dehydrated : null;
      if (!v)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      Gw(v, a);
    }
    function YE(a) {
      var s = a.memoizedState, v = s !== null ? s.dehydrated : null;
      if (!v)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return W2(v);
    }
    function fx(a) {
      for (var s = a.return; s !== null && s.tag !== w && s.tag !== _ && s.tag !== B; )
        s = s.return;
      Jl = s;
    }
    function eo(a) {
      if (a !== Jl)
        return !1;
      if (!oh)
        return fx(a), oh = !0, !1;
      if (a.tag !== _ && (a.tag !== w || UE(a.type) && !TE(a.type, a.memoizedProps))) {
        var s = ud;
        if (s)
          if (WE(a))
            ds(a), jE();
          else
            for (; s; )
              lM(a, s), s = K0(s);
      }
      return fx(a), a.tag === B ? ud = YE(a) : ud = Jl ? K0(a.stateNode) : null, !0;
    }
    function sh() {
      return oh && ud !== null;
    }
    function ds(a) {
      for (var s = ud; s; )
        aS(a, s), s = K0(s);
    }
    function tv() {
      Jl = null, ud = null, oh = !1, rg = !1;
    }
    function eu() {
      ev !== null && (vU(ev), ev = null);
    }
    function Va() {
      return oh;
    }
    function lh(a) {
      ev === null ? ev = [a] : ev.push(a);
    }
    var sS = t.ReactCurrentBatchConfig, ig = null;
    function dx() {
      return sS.transition;
    }
    var ic = {
      recordUnsafeLifecycleWarnings: function(a, s) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(a, s) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var fM = function(a) {
        for (var s = null, v = a; v !== null; )
          v.mode & ai && (s = v), v = v.return;
        return s;
      }, Yp = function(a) {
        var s = [];
        return a.forEach(function(v) {
          s.push(v);
        }), s.sort().join(", ");
      }, Yr = [], Is = [], Ga = [], Go = [], Pc = [], ag = [], fo = /* @__PURE__ */ new Set();
      ic.recordUnsafeLifecycleWarnings = function(a, s) {
        fo.has(a.type) || (typeof s.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        s.componentWillMount.__suppressDeprecationWarning !== !0 && Yr.push(a), a.mode & ai && typeof s.UNSAFE_componentWillMount == "function" && Is.push(a), typeof s.componentWillReceiveProps == "function" && s.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && Ga.push(a), a.mode & ai && typeof s.UNSAFE_componentWillReceiveProps == "function" && Go.push(a), typeof s.componentWillUpdate == "function" && s.componentWillUpdate.__suppressDeprecationWarning !== !0 && Pc.push(a), a.mode & ai && typeof s.UNSAFE_componentWillUpdate == "function" && ag.push(a));
      }, ic.flushPendingUnsafeLifecycleWarnings = function() {
        var a = /* @__PURE__ */ new Set();
        Yr.length > 0 && (Yr.forEach(function(Ke) {
          a.add(rr(Ke) || "Component"), fo.add(Ke.type);
        }), Yr = []);
        var s = /* @__PURE__ */ new Set();
        Is.length > 0 && (Is.forEach(function(Ke) {
          s.add(rr(Ke) || "Component"), fo.add(Ke.type);
        }), Is = []);
        var v = /* @__PURE__ */ new Set();
        Ga.length > 0 && (Ga.forEach(function(Ke) {
          v.add(rr(Ke) || "Component"), fo.add(Ke.type);
        }), Ga = []);
        var x = /* @__PURE__ */ new Set();
        Go.length > 0 && (Go.forEach(function(Ke) {
          x.add(rr(Ke) || "Component"), fo.add(Ke.type);
        }), Go = []);
        var M = /* @__PURE__ */ new Set();
        Pc.length > 0 && (Pc.forEach(function(Ke) {
          M.add(rr(Ke) || "Component"), fo.add(Ke.type);
        }), Pc = []);
        var N = /* @__PURE__ */ new Set();
        if (ag.length > 0 && (ag.forEach(function(Ke) {
          N.add(rr(Ke) || "Component"), fo.add(Ke.type);
        }), ag = []), s.size > 0) {
          var G = Yp(s);
          l(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, G);
        }
        if (x.size > 0) {
          var Q = Yp(x);
          l(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, Q);
        }
        if (N.size > 0) {
          var ne = Yp(N);
          l(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, ne);
        }
        if (a.size > 0) {
          var Se = Yp(a);
          o(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, Se);
        }
        if (v.size > 0) {
          var Me = Yp(v);
          o(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, Me);
        }
        if (M.size > 0) {
          var et = Yp(M);
          o(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, et);
        }
      };
      var nv = /* @__PURE__ */ new Map(), lS = /* @__PURE__ */ new Set();
      ic.recordLegacyContextWarning = function(a, s) {
        var v = fM(a);
        if (v === null) {
          l("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!lS.has(a.type)) {
          var x = nv.get(v);
          (a.type.contextTypes != null || a.type.childContextTypes != null || s !== null && typeof s.getChildContext == "function") && (x === void 0 && (x = [], nv.set(v, x)), x.push(a));
        }
      }, ic.flushLegacyContextWarning = function() {
        nv.forEach(function(a, s) {
          if (a.length !== 0) {
            var v = a[0], x = /* @__PURE__ */ new Set();
            a.forEach(function(N) {
              x.add(rr(N) || "Component"), lS.add(N.type);
            });
            var M = Yp(x);
            try {
              Ti(v), l(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, M);
            } finally {
              oa();
            }
          }
        });
      }, ic.discardPendingWarnings = function() {
        Yr = [], Is = [], Ga = [], Go = [], Pc = [], ag = [], nv = /* @__PURE__ */ new Map();
      };
    }
    function ac(a, s) {
      if (a && a.defaultProps) {
        var v = Rn({}, s), x = a.defaultProps;
        for (var M in x)
          v[M] === void 0 && (v[M] = x[M]);
        return v;
      }
      return s;
    }
    var Oy = Wp(null), og;
    og = {};
    var tu = null, rv = null, hx = null, uS = !1;
    function px() {
      tu = null, rv = null, hx = null, uS = !1;
    }
    function sg() {
      uS = !0;
    }
    function XE() {
      uS = !1;
    }
    function cS(a, s, v) {
      Pu(Oy, s._currentValue, a), s._currentValue = v, s._currentRenderer !== void 0 && s._currentRenderer !== null && s._currentRenderer !== og && l("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), s._currentRenderer = og;
    }
    function fS(a, s) {
      var v = Oy.current;
      Ou(Oy, s), a._currentValue = v;
    }
    function iv(a, s, v) {
      for (var x = a; x !== null; ) {
        var M = x.alternate;
        if (Lt(x.childLanes, s) ? M !== null && !Lt(M.childLanes, s) && (M.childLanes = Xt(M.childLanes, s)) : (x.childLanes = Xt(x.childLanes, s), M !== null && (M.childLanes = Xt(M.childLanes, s))), x === v)
          break;
        x = x.return;
      }
      x !== v && l("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function lg(a, s, v) {
      Xp(a, s, v);
    }
    function Xp(a, s, v) {
      var x = a.child;
      for (x !== null && (x.return = a); x !== null; ) {
        var M = void 0, N = x.dependencies;
        if (N !== null) {
          M = x.child;
          for (var G = N.firstContext; G !== null; ) {
            if (G.context === s) {
              if (x.tag === p) {
                var Q = Si(v), ne = qh(oi, Q);
                ne.tag = Zo;
                var Se = x.updateQueue;
                if (Se !== null) {
                  var Me = Se.shared, et = Me.pending;
                  et === null ? ne.next = ne : (ne.next = et.next, et.next = ne), Me.pending = ne;
                }
              }
              x.lanes = Xt(x.lanes, v);
              var Ke = x.alternate;
              Ke !== null && (Ke.lanes = Xt(Ke.lanes, v)), iv(x.return, v, a), N.lanes = Xt(N.lanes, v);
              break;
            }
            G = G.next;
          }
        } else if (x.tag === k)
          M = x.type === a.type ? null : x.child;
        else if (x.tag === K) {
          var Ct = x.return;
          if (Ct === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Ct.lanes = Xt(Ct.lanes, v);
          var At = Ct.alternate;
          At !== null && (At.lanes = Xt(At.lanes, v)), iv(Ct, v, a), M = x.sibling;
        } else
          M = x.child;
        if (M !== null)
          M.return = x;
        else
          for (M = x; M !== null; ) {
            if (M === a) {
              M = null;
              break;
            }
            var Wt = M.sibling;
            if (Wt !== null) {
              Wt.return = M.return, M = Wt;
              break;
            }
            M = M.return;
          }
        x = M;
      }
    }
    function Xh(a, s) {
      tu = a, rv = null, hx = null;
      var v = a.dependencies;
      if (v !== null) {
        var x = v.firstContext;
        x !== null && (Xe(v.lanes, s) && Rb(), v.firstContext = null);
      }
    }
    function Qo(a) {
      uS && l("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var s = a._currentValue;
      if (hx !== a) {
        var v = {
          context: a,
          memoizedValue: s,
          next: null
        };
        if (rv === null) {
          if (tu === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          rv = v, tu.dependencies = {
            lanes: Bt,
            firstContext: v
          };
        } else
          rv = rv.next = v;
      }
      return s;
    }
    var ug = null;
    function cg(a) {
      ug === null ? ug = [a] : ug.push(a);
    }
    function qE() {
      if (ug !== null) {
        for (var a = 0; a < ug.length; a++) {
          var s = ug[a], v = s.interleaved;
          if (v !== null) {
            s.interleaved = null;
            var x = v.next, M = s.pending;
            if (M !== null) {
              var N = M.next;
              M.next = x, v.next = N;
            }
            s.pending = v;
          }
        }
        ug = null;
      }
    }
    function dM(a, s, v, x) {
      var M = s.interleaved;
      return M === null ? (v.next = v, cg(s)) : (v.next = M.next, M.next = v), s.interleaved = v, Pl(a, x);
    }
    function mx(a, s, v, x) {
      var M = s.interleaved;
      M === null ? (v.next = v, cg(s)) : (v.next = M.next, M.next = v), s.interleaved = v;
    }
    function dS(a, s, v, x) {
      var M = s.interleaved;
      return M === null ? (v.next = v, cg(s)) : (v.next = M.next, M.next = v), s.interleaved = v, Pl(a, x);
    }
    function nu(a, s) {
      return Pl(a, s);
    }
    var vx = Pl;
    function Pl(a, s) {
      a.lanes = Xt(a.lanes, s);
      var v = a.alternate;
      v !== null && (v.lanes = Xt(v.lanes, s)), v === null && (a.flags & (Jr | tl)) !== ir && RU(a);
      for (var x = a, M = a.return; M !== null; )
        M.childLanes = Xt(M.childLanes, s), v = M.alternate, v !== null ? v.childLanes = Xt(v.childLanes, s) : (M.flags & (Jr | tl)) !== ir && RU(a), x = M, M = M.return;
      if (x.tag === _) {
        var N = x.stateNode;
        return N;
      } else
        return null;
    }
    var qp = 0, hM = 1, Zo = 2, KE = 3, fg = !1, gx, ru;
    gx = !1, ru = null;
    function yx(a) {
      var s = {
        baseState: a.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: Bt
        },
        effects: null
      };
      a.updateQueue = s;
    }
    function Sx(a, s) {
      var v = s.updateQueue, x = a.updateQueue;
      if (v === x) {
        var M = {
          baseState: x.baseState,
          firstBaseUpdate: x.firstBaseUpdate,
          lastBaseUpdate: x.lastBaseUpdate,
          shared: x.shared,
          effects: x.effects
        };
        s.updateQueue = M;
      }
    }
    function qh(a, s) {
      var v = {
        eventTime: a,
        lane: s,
        tag: qp,
        payload: null,
        callback: null,
        next: null
      };
      return v;
    }
    function av(a, s, v) {
      var x = a.updateQueue;
      if (x === null)
        return null;
      var M = x.shared;
      if (ru === M && !gx && (l("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), gx = !0), s6()) {
        var N = M.pending;
        return N === null ? s.next = s : (s.next = N.next, N.next = s), M.pending = s, vx(a, v);
      } else
        return dS(a, M, s, v);
    }
    function _x(a, s, v) {
      var x = s.updateQueue;
      if (x !== null) {
        var M = x.shared;
        if (yr(v)) {
          var N = M.lanes;
          N = zr(N, a.pendingLanes);
          var G = Xt(N, v);
          M.lanes = G, Mp(a, G);
        }
      }
    }
    function Kh(a, s) {
      var v = a.updateQueue, x = a.alternate;
      if (x !== null) {
        var M = x.updateQueue;
        if (v === M) {
          var N = null, G = null, Q = v.firstBaseUpdate;
          if (Q !== null) {
            var ne = Q;
            do {
              var Se = {
                eventTime: ne.eventTime,
                lane: ne.lane,
                tag: ne.tag,
                payload: ne.payload,
                callback: ne.callback,
                next: null
              };
              G === null ? N = G = Se : (G.next = Se, G = Se), ne = ne.next;
            } while (ne !== null);
            G === null ? N = G = s : (G.next = s, G = s);
          } else
            N = G = s;
          v = {
            baseState: M.baseState,
            firstBaseUpdate: N,
            lastBaseUpdate: G,
            shared: M.shared,
            effects: M.effects
          }, a.updateQueue = v;
          return;
        }
      }
      var Me = v.lastBaseUpdate;
      Me === null ? v.firstBaseUpdate = s : Me.next = s, v.lastBaseUpdate = s;
    }
    function pM(a, s, v, x, M, N) {
      switch (v.tag) {
        case hM: {
          var G = v.payload;
          if (typeof G == "function") {
            sg();
            var Q = G.call(N, x, M);
            {
              if (a.mode & ai) {
                na(!0);
                try {
                  G.call(N, x, M);
                } finally {
                  na(!1);
                }
              }
              XE();
            }
            return Q;
          }
          return G;
        }
        case KE:
          a.flags = a.flags & ~Uo | xr;
        case qp: {
          var ne = v.payload, Se;
          if (typeof ne == "function") {
            sg(), Se = ne.call(N, x, M);
            {
              if (a.mode & ai) {
                na(!0);
                try {
                  ne.call(N, x, M);
                } finally {
                  na(!1);
                }
              }
              XE();
            }
          } else
            Se = ne;
          return Se == null ? x : Rn({}, x, Se);
        }
        case Zo:
          return fg = !0, x;
      }
      return x;
    }
    function xx(a, s, v, x) {
      var M = a.updateQueue;
      fg = !1, ru = M.shared;
      var N = M.firstBaseUpdate, G = M.lastBaseUpdate, Q = M.shared.pending;
      if (Q !== null) {
        M.shared.pending = null;
        var ne = Q, Se = ne.next;
        ne.next = null, G === null ? N = Se : G.next = Se, G = ne;
        var Me = a.alternate;
        if (Me !== null) {
          var et = Me.updateQueue, Ke = et.lastBaseUpdate;
          Ke !== G && (Ke === null ? et.firstBaseUpdate = Se : Ke.next = Se, et.lastBaseUpdate = ne);
        }
      }
      if (N !== null) {
        var Ct = M.baseState, At = Bt, Wt = null, kn = null, Sr = null, ur = N;
        do {
          var Vi = ur.lane, Pi = ur.eventTime;
          if (Lt(x, Vi)) {
            if (Sr !== null) {
              var jt = {
                eventTime: Pi,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: ci,
                tag: ur.tag,
                payload: ur.payload,
                callback: ur.callback,
                next: null
              };
              Sr = Sr.next = jt;
            }
            Ct = pM(a, M, ur, Ct, s, v);
            var St = ur.callback;
            if (St !== null && // If the update was already committed, we should not queue its
            // callback again.
            ur.lane !== ci) {
              a.flags |= $u;
              var un = M.effects;
              un === null ? M.effects = [ur] : un.push(ur);
            }
          } else {
            var yt = {
              eventTime: Pi,
              lane: Vi,
              tag: ur.tag,
              payload: ur.payload,
              callback: ur.callback,
              next: null
            };
            Sr === null ? (kn = Sr = yt, Wt = Ct) : Sr = Sr.next = yt, At = Xt(At, Vi);
          }
          if (ur = ur.next, ur === null) {
            if (Q = M.shared.pending, Q === null)
              break;
            var Fn = Q, On = Fn.next;
            Fn.next = null, ur = On, M.lastBaseUpdate = Fn, M.shared.pending = null;
          }
        } while (!0);
        Sr === null && (Wt = Ct), M.baseState = Wt, M.firstBaseUpdate = kn, M.lastBaseUpdate = Sr;
        var Ur = M.shared.interleaved;
        if (Ur !== null) {
          var Xr = Ur;
          do
            At = Xt(At, Xr.lane), Xr = Xr.next;
          while (Xr !== Ur);
        } else
          N === null && (M.shared.lanes = Bt);
        Bb(At), a.lanes = At, a.memoizedState = Ct;
      }
      ru = null;
    }
    function nA(a, s) {
      if (typeof a != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + a));
      a.call(s);
    }
    function mM() {
      fg = !1;
    }
    function Ex() {
      return fg;
    }
    function hS(a, s, v) {
      var x = s.effects;
      if (s.effects = null, x !== null)
        for (var M = 0; M < x.length; M++) {
          var N = x[M], G = N.callback;
          G !== null && (N.callback = null, nA(G, v));
        }
    }
    var QE = {}, vM = new n.Component().refs, Py, pS, Kp, bx, Tx, ZE, wx, Uy, JE, mS;
    {
      Py = /* @__PURE__ */ new Set(), pS = /* @__PURE__ */ new Set(), Kp = /* @__PURE__ */ new Set(), bx = /* @__PURE__ */ new Set(), Uy = /* @__PURE__ */ new Set(), Tx = /* @__PURE__ */ new Set(), JE = /* @__PURE__ */ new Set(), mS = /* @__PURE__ */ new Set();
      var gM = /* @__PURE__ */ new Set();
      wx = function(a, s) {
        if (!(a === null || typeof a == "function")) {
          var v = s + "_" + a;
          gM.has(v) || (gM.add(v), l("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", s, a));
        }
      }, ZE = function(a, s) {
        if (s === void 0) {
          var v = Hr(a) || "Component";
          Tx.has(v) || (Tx.add(v), l("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", v));
        }
      }, Object.defineProperty(QE, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(QE);
    }
    function eb(a, s, v, x) {
      var M = a.memoizedState, N = v(x, M);
      {
        if (a.mode & ai) {
          na(!0);
          try {
            N = v(x, M);
          } finally {
            na(!1);
          }
        }
        ZE(s, N);
      }
      var G = N == null ? M : Rn({}, M, N);
      if (a.memoizedState = G, a.lanes === Bt) {
        var Q = a.updateQueue;
        Q.baseState = G;
      }
    }
    var Ny = {
      isMounted: ko,
      enqueueSetState: function(a, s, v) {
        var x = os(a), M = Mf(), N = Zy(x), G = qh(M, N);
        G.payload = s, v != null && (wx(v, "setState"), G.callback = v);
        var Q = av(x, G, N);
        Q !== null && (cu(Q, x, N, M), _x(Q, x, N)), Mu(x, N);
      },
      enqueueReplaceState: function(a, s, v) {
        var x = os(a), M = Mf(), N = Zy(x), G = qh(M, N);
        G.tag = hM, G.payload = s, v != null && (wx(v, "replaceState"), G.callback = v);
        var Q = av(x, G, N);
        Q !== null && (cu(Q, x, N, M), _x(Q, x, N)), Mu(x, N);
      },
      enqueueForceUpdate: function(a, s) {
        var v = os(a), x = Mf(), M = Zy(v), N = qh(x, M);
        N.tag = Zo, s != null && (wx(s, "forceUpdate"), N.callback = s);
        var G = av(v, N, M);
        G !== null && (cu(G, v, M, x), _x(G, v, M)), Ah(v, M);
      }
    };
    function yM(a, s, v, x, M, N, G) {
      var Q = a.stateNode;
      if (typeof Q.shouldComponentUpdate == "function") {
        var ne = Q.shouldComponentUpdate(x, N, G);
        {
          if (a.mode & ai) {
            na(!0);
            try {
              ne = Q.shouldComponentUpdate(x, N, G);
            } finally {
              na(!1);
            }
          }
          ne === void 0 && l("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", Hr(s) || "Component");
        }
        return ne;
      }
      return s.prototype && s.prototype.isPureReactComponent ? !lr(v, x) || !lr(M, N) : !0;
    }
    function rA(a, s, v) {
      var x = a.stateNode;
      {
        var M = Hr(s) || "Component", N = x.render;
        N || (s.prototype && typeof s.prototype.render == "function" ? l("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", M) : l("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", M)), x.getInitialState && !x.getInitialState.isReactClassApproved && !x.state && l("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", M), x.getDefaultProps && !x.getDefaultProps.isReactClassApproved && l("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", M), x.propTypes && l("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", M), x.contextType && l("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", M), x.contextTypes && l("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", M), s.contextType && s.contextTypes && !JE.has(s) && (JE.add(s), l("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", M)), typeof x.componentShouldUpdate == "function" && l("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", M), s.prototype && s.prototype.isPureReactComponent && typeof x.shouldComponentUpdate < "u" && l("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", Hr(s) || "A pure component"), typeof x.componentDidUnmount == "function" && l("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", M), typeof x.componentDidReceiveProps == "function" && l("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", M), typeof x.componentWillRecieveProps == "function" && l("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", M), typeof x.UNSAFE_componentWillRecieveProps == "function" && l("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", M);
        var G = x.props !== v;
        x.props !== void 0 && G && l("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", M, M), x.defaultProps && l("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", M, M), typeof x.getSnapshotBeforeUpdate == "function" && typeof x.componentDidUpdate != "function" && !Kp.has(s) && (Kp.add(s), l("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", Hr(s))), typeof x.getDerivedStateFromProps == "function" && l("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", M), typeof x.getDerivedStateFromError == "function" && l("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", M), typeof s.getSnapshotBeforeUpdate == "function" && l("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", M);
        var Q = x.state;
        Q && (typeof Q != "object" || ii(Q)) && l("%s.state: must be set to an object or null", M), typeof x.getChildContext == "function" && typeof s.childContextTypes != "object" && l("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", M);
      }
    }
    function SM(a, s) {
      s.updater = Ny, a.stateNode = s, Di(s, a), s._reactInternalInstance = QE;
    }
    function tb(a, s, v) {
      var x = !1, M = Oc, N = Oc, G = s.contextType;
      if ("contextType" in s) {
        var Q = (
          // Allow null for conditional declaration
          G === null || G !== void 0 && G.$$typeof === Jt && G._context === void 0
        );
        if (!Q && !mS.has(s)) {
          mS.add(s);
          var ne = "";
          G === void 0 ? ne = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof G != "object" ? ne = " However, it is set to a " + typeof G + "." : G.$$typeof === Ht ? ne = " Did you accidentally pass the Context.Provider instead?" : G._context !== void 0 ? ne = " Did you accidentally pass the Context.Consumer instead?" : ne = " However, it is set to an object with keys {" + Object.keys(G).join(", ") + "}.", l("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", Hr(s) || "Component", ne);
        }
      }
      if (typeof G == "object" && G !== null)
        N = Qo(G);
      else {
        M = Qm(a, s, !0);
        var Se = s.contextTypes;
        x = Se != null, N = x ? My(a, M) : Oc;
      }
      var Me = new s(v, N);
      if (a.mode & ai) {
        na(!0);
        try {
          Me = new s(v, N);
        } finally {
          na(!1);
        }
      }
      var et = a.memoizedState = Me.state !== null && Me.state !== void 0 ? Me.state : null;
      SM(a, Me);
      {
        if (typeof s.getDerivedStateFromProps == "function" && et === null) {
          var Ke = Hr(s) || "Component";
          pS.has(Ke) || (pS.add(Ke), l("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", Ke, Me.state === null ? "null" : "undefined", Ke));
        }
        if (typeof s.getDerivedStateFromProps == "function" || typeof Me.getSnapshotBeforeUpdate == "function") {
          var Ct = null, At = null, Wt = null;
          if (typeof Me.componentWillMount == "function" && Me.componentWillMount.__suppressDeprecationWarning !== !0 ? Ct = "componentWillMount" : typeof Me.UNSAFE_componentWillMount == "function" && (Ct = "UNSAFE_componentWillMount"), typeof Me.componentWillReceiveProps == "function" && Me.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? At = "componentWillReceiveProps" : typeof Me.UNSAFE_componentWillReceiveProps == "function" && (At = "UNSAFE_componentWillReceiveProps"), typeof Me.componentWillUpdate == "function" && Me.componentWillUpdate.__suppressDeprecationWarning !== !0 ? Wt = "componentWillUpdate" : typeof Me.UNSAFE_componentWillUpdate == "function" && (Wt = "UNSAFE_componentWillUpdate"), Ct !== null || At !== null || Wt !== null) {
            var kn = Hr(s) || "Component", Sr = typeof s.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            bx.has(kn) || (bx.add(kn), l(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, kn, Sr, Ct !== null ? `
  ` + Ct : "", At !== null ? `
  ` + At : "", Wt !== null ? `
  ` + Wt : ""));
          }
        }
      }
      return x && zE(a, M, N), Me;
    }
    function _M(a, s) {
      var v = s.state;
      typeof s.componentWillMount == "function" && s.componentWillMount(), typeof s.UNSAFE_componentWillMount == "function" && s.UNSAFE_componentWillMount(), v !== s.state && (l("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", rr(a) || "Component"), Ny.enqueueReplaceState(s, s.state, null));
    }
    function ov(a, s, v, x) {
      var M = s.state;
      if (typeof s.componentWillReceiveProps == "function" && s.componentWillReceiveProps(v, x), typeof s.UNSAFE_componentWillReceiveProps == "function" && s.UNSAFE_componentWillReceiveProps(v, x), s.state !== M) {
        {
          var N = rr(a) || "Component";
          Py.has(N) || (Py.add(N), l("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", N));
        }
        Ny.enqueueReplaceState(s, s.state, null);
      }
    }
    function nb(a, s, v, x) {
      rA(a, s, v);
      var M = a.stateNode;
      M.props = v, M.state = a.memoizedState, M.refs = vM, yx(a);
      var N = s.contextType;
      if (typeof N == "object" && N !== null)
        M.context = Qo(N);
      else {
        var G = Qm(a, s, !0);
        M.context = My(a, G);
      }
      {
        if (M.state === v) {
          var Q = Hr(s) || "Component";
          Uy.has(Q) || (Uy.add(Q), l("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", Q));
        }
        a.mode & ai && ic.recordLegacyContextWarning(a, M), ic.recordUnsafeLifecycleWarnings(a, M);
      }
      M.state = a.memoizedState;
      var ne = s.getDerivedStateFromProps;
      if (typeof ne == "function" && (eb(a, s, ne, v), M.state = a.memoizedState), typeof s.getDerivedStateFromProps != "function" && typeof M.getSnapshotBeforeUpdate != "function" && (typeof M.UNSAFE_componentWillMount == "function" || typeof M.componentWillMount == "function") && (_M(a, M), xx(a, v, M, x), M.state = a.memoizedState), typeof M.componentDidMount == "function") {
        var Se = Yn;
        Se |= $a, (a.mode & Fo) !== ar && (Se |= Mi), a.flags |= Se;
      }
    }
    function Qh(a, s, v, x) {
      var M = a.stateNode, N = a.memoizedProps;
      M.props = N;
      var G = M.context, Q = s.contextType, ne = Oc;
      if (typeof Q == "object" && Q !== null)
        ne = Qo(Q);
      else {
        var Se = Qm(a, s, !0);
        ne = My(a, Se);
      }
      var Me = s.getDerivedStateFromProps, et = typeof Me == "function" || typeof M.getSnapshotBeforeUpdate == "function";
      !et && (typeof M.UNSAFE_componentWillReceiveProps == "function" || typeof M.componentWillReceiveProps == "function") && (N !== v || G !== ne) && ov(a, M, v, ne), mM();
      var Ke = a.memoizedState, Ct = M.state = Ke;
      if (xx(a, v, M, x), Ct = a.memoizedState, N === v && Ke === Ct && !Cy() && !Ex()) {
        if (typeof M.componentDidMount == "function") {
          var At = Yn;
          At |= $a, (a.mode & Fo) !== ar && (At |= Mi), a.flags |= At;
        }
        return !1;
      }
      typeof Me == "function" && (eb(a, s, Me, v), Ct = a.memoizedState);
      var Wt = Ex() || yM(a, s, N, v, Ke, Ct, ne);
      if (Wt) {
        if (!et && (typeof M.UNSAFE_componentWillMount == "function" || typeof M.componentWillMount == "function") && (typeof M.componentWillMount == "function" && M.componentWillMount(), typeof M.UNSAFE_componentWillMount == "function" && M.UNSAFE_componentWillMount()), typeof M.componentDidMount == "function") {
          var kn = Yn;
          kn |= $a, (a.mode & Fo) !== ar && (kn |= Mi), a.flags |= kn;
        }
      } else {
        if (typeof M.componentDidMount == "function") {
          var Sr = Yn;
          Sr |= $a, (a.mode & Fo) !== ar && (Sr |= Mi), a.flags |= Sr;
        }
        a.memoizedProps = v, a.memoizedState = Ct;
      }
      return M.props = v, M.state = Ct, M.context = ne, Wt;
    }
    function iA(a, s, v, x, M) {
      var N = s.stateNode;
      Sx(a, s);
      var G = s.memoizedProps, Q = s.type === s.elementType ? G : ac(s.type, G);
      N.props = Q;
      var ne = s.pendingProps, Se = N.context, Me = v.contextType, et = Oc;
      if (typeof Me == "object" && Me !== null)
        et = Qo(Me);
      else {
        var Ke = Qm(s, v, !0);
        et = My(s, Ke);
      }
      var Ct = v.getDerivedStateFromProps, At = typeof Ct == "function" || typeof N.getSnapshotBeforeUpdate == "function";
      !At && (typeof N.UNSAFE_componentWillReceiveProps == "function" || typeof N.componentWillReceiveProps == "function") && (G !== ne || Se !== et) && ov(s, N, x, et), mM();
      var Wt = s.memoizedState, kn = N.state = Wt;
      if (xx(s, x, N, M), kn = s.memoizedState, G === ne && Wt === kn && !Cy() && !Ex() && !ye)
        return typeof N.componentDidUpdate == "function" && (G !== a.memoizedProps || Wt !== a.memoizedState) && (s.flags |= Yn), typeof N.getSnapshotBeforeUpdate == "function" && (G !== a.memoizedProps || Wt !== a.memoizedState) && (s.flags |= el), !1;
      typeof Ct == "function" && (eb(s, v, Ct, x), kn = s.memoizedState);
      var Sr = Ex() || yM(s, v, Q, x, Wt, kn, et) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      ye;
      return Sr ? (!At && (typeof N.UNSAFE_componentWillUpdate == "function" || typeof N.componentWillUpdate == "function") && (typeof N.componentWillUpdate == "function" && N.componentWillUpdate(x, kn, et), typeof N.UNSAFE_componentWillUpdate == "function" && N.UNSAFE_componentWillUpdate(x, kn, et)), typeof N.componentDidUpdate == "function" && (s.flags |= Yn), typeof N.getSnapshotBeforeUpdate == "function" && (s.flags |= el)) : (typeof N.componentDidUpdate == "function" && (G !== a.memoizedProps || Wt !== a.memoizedState) && (s.flags |= Yn), typeof N.getSnapshotBeforeUpdate == "function" && (G !== a.memoizedProps || Wt !== a.memoizedState) && (s.flags |= el), s.memoizedProps = x, s.memoizedState = kn), N.props = x, N.state = kn, N.context = et, Sr;
    }
    var rb, Mx, ib, ab, ob, sb = function(a, s) {
    };
    rb = !1, Mx = !1, ib = {}, ab = {}, ob = {}, sb = function(a, s) {
      if (!(a === null || typeof a != "object") && !(!a._store || a._store.validated || a.key != null)) {
        if (typeof a._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        a._store.validated = !0;
        var v = rr(s) || "Component";
        ab[v] || (ab[v] = !0, l('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function hs(a, s, v) {
      var x = v.ref;
      if (x !== null && typeof x != "function" && typeof x != "object") {
        if ((a.mode & ai || Ae) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(v._owner && v._self && v._owner.stateNode !== v._self)) {
          var M = rr(a) || "Component";
          ib[M] || (l('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', x), ib[M] = !0);
        }
        if (v._owner) {
          var N = v._owner, G;
          if (N) {
            var Q = N;
            if (Q.tag !== p)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            G = Q.stateNode;
          }
          if (!G)
            throw new Error("Missing owner for string ref " + x + ". This error is likely caused by a bug in React. Please file an issue.");
          var ne = G;
          kt(x, "ref");
          var Se = "" + x;
          if (s !== null && s.ref !== null && typeof s.ref == "function" && s.ref._stringRef === Se)
            return s.ref;
          var Me = function(et) {
            var Ke = ne.refs;
            Ke === vM && (Ke = ne.refs = {}), et === null ? delete Ke[Se] : Ke[Se] = et;
          };
          return Me._stringRef = Se, Me;
        } else {
          if (typeof x != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!v._owner)
            throw new Error("Element ref was specified as a string (" + x + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return x;
    }
    function Cx(a, s) {
      var v = Object.prototype.toString.call(s);
      throw new Error("Objects are not valid as a React child (found: " + (v === "[object Object]" ? "object with keys {" + Object.keys(s).join(", ") + "}" : v) + "). If you meant to render a collection of children, use an array instead.");
    }
    function vS(a) {
      {
        var s = rr(a) || "Component";
        if (ob[s])
          return;
        ob[s] = !0, l("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function xM(a) {
      var s = a._payload, v = a._init;
      return v(s);
    }
    function EM(a) {
      function s(yt, jt) {
        if (a) {
          var St = yt.deletions;
          St === null ? (yt.deletions = [jt], yt.flags |= hi) : St.push(jt);
        }
      }
      function v(yt, jt) {
        if (!a)
          return null;
        for (var St = jt; St !== null; )
          s(yt, St), St = St.sibling;
        return null;
      }
      function x(yt, jt) {
        for (var St = /* @__PURE__ */ new Map(), un = jt; un !== null; )
          un.key !== null ? St.set(un.key, un) : St.set(un.index, un), un = un.sibling;
        return St;
      }
      function M(yt, jt) {
        var St = NS(yt, jt);
        return St.index = 0, St.sibling = null, St;
      }
      function N(yt, jt, St) {
        if (yt.index = St, !a)
          return yt.flags |= xu, jt;
        var un = yt.alternate;
        if (un !== null) {
          var Fn = un.index;
          return Fn < jt ? (yt.flags |= Jr, jt) : Fn;
        } else
          return yt.flags |= Jr, jt;
      }
      function G(yt) {
        return a && yt.alternate === null && (yt.flags |= Jr), yt;
      }
      function Q(yt, jt, St, un) {
        if (jt === null || jt.tag !== R) {
          var Fn = sD(St, yt.mode, un);
          return Fn.return = yt, Fn;
        } else {
          var On = M(jt, St);
          return On.return = yt, On;
        }
      }
      function ne(yt, jt, St, un) {
        var Fn = St.type;
        if (Fn === Ui)
          return Me(yt, jt, St.props.children, un, St.key);
        if (jt !== null && (jt.elementType === Fn || // Keep this check inline so it only runs on the false path:
        OU(jt, St) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof Fn == "object" && Fn !== null && Fn.$$typeof === je && xM(Fn) === jt.type)) {
          var On = M(jt, St.props);
          return On.ref = hs(yt, jt, St), On.return = yt, On._debugSource = St._source, On._debugOwner = St._owner, On;
        }
        var Ur = oD(St, yt.mode, un);
        return Ur.ref = hs(yt, jt, St), Ur.return = yt, Ur;
      }
      function Se(yt, jt, St, un) {
        if (jt === null || jt.tag !== E || jt.stateNode.containerInfo !== St.containerInfo || jt.stateNode.implementation !== St.implementation) {
          var Fn = lD(St, yt.mode, un);
          return Fn.return = yt, Fn;
        } else {
          var On = M(jt, St.children || []);
          return On.return = yt, On;
        }
      }
      function Me(yt, jt, St, un, Fn) {
        if (jt === null || jt.tag !== U) {
          var On = e0(St, yt.mode, un, Fn);
          return On.return = yt, On;
        } else {
          var Ur = M(jt, St);
          return Ur.return = yt, Ur;
        }
      }
      function et(yt, jt, St) {
        if (typeof jt == "string" && jt !== "" || typeof jt == "number") {
          var un = sD("" + jt, yt.mode, St);
          return un.return = yt, un;
        }
        if (typeof jt == "object" && jt !== null) {
          switch (jt.$$typeof) {
            case Gr: {
              var Fn = oD(jt, yt.mode, St);
              return Fn.ref = hs(yt, null, jt), Fn.return = yt, Fn;
            }
            case Or: {
              var On = lD(jt, yt.mode, St);
              return On.return = yt, On;
            }
            case je: {
              var Ur = jt._payload, Xr = jt._init;
              return et(yt, Xr(Ur), St);
            }
          }
          if (ii(jt) || Wr(jt)) {
            var Ua = e0(jt, yt.mode, St, null);
            return Ua.return = yt, Ua;
          }
          Cx(yt, jt);
        }
        return typeof jt == "function" && vS(yt), null;
      }
      function Ke(yt, jt, St, un) {
        var Fn = jt !== null ? jt.key : null;
        if (typeof St == "string" && St !== "" || typeof St == "number")
          return Fn !== null ? null : Q(yt, jt, "" + St, un);
        if (typeof St == "object" && St !== null) {
          switch (St.$$typeof) {
            case Gr:
              return St.key === Fn ? ne(yt, jt, St, un) : null;
            case Or:
              return St.key === Fn ? Se(yt, jt, St, un) : null;
            case je: {
              var On = St._payload, Ur = St._init;
              return Ke(yt, jt, Ur(On), un);
            }
          }
          if (ii(St) || Wr(St))
            return Fn !== null ? null : Me(yt, jt, St, un, null);
          Cx(yt, St);
        }
        return typeof St == "function" && vS(yt), null;
      }
      function Ct(yt, jt, St, un, Fn) {
        if (typeof un == "string" && un !== "" || typeof un == "number") {
          var On = yt.get(St) || null;
          return Q(jt, On, "" + un, Fn);
        }
        if (typeof un == "object" && un !== null) {
          switch (un.$$typeof) {
            case Gr: {
              var Ur = yt.get(un.key === null ? St : un.key) || null;
              return ne(jt, Ur, un, Fn);
            }
            case Or: {
              var Xr = yt.get(un.key === null ? St : un.key) || null;
              return Se(jt, Xr, un, Fn);
            }
            case je:
              var Ua = un._payload, ia = un._init;
              return Ct(yt, jt, St, ia(Ua), Fn);
          }
          if (ii(un) || Wr(un)) {
            var dl = yt.get(St) || null;
            return Me(jt, dl, un, Fn, null);
          }
          Cx(jt, un);
        }
        return typeof un == "function" && vS(jt), null;
      }
      function At(yt, jt, St) {
        {
          if (typeof yt != "object" || yt === null)
            return jt;
          switch (yt.$$typeof) {
            case Gr:
            case Or:
              sb(yt, St);
              var un = yt.key;
              if (typeof un != "string")
                break;
              if (jt === null) {
                jt = /* @__PURE__ */ new Set(), jt.add(un);
                break;
              }
              if (!jt.has(un)) {
                jt.add(un);
                break;
              }
              l("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", un);
              break;
            case je:
              var Fn = yt._payload, On = yt._init;
              At(On(Fn), jt, St);
              break;
          }
        }
        return jt;
      }
      function Wt(yt, jt, St, un) {
        for (var Fn = null, On = 0; On < St.length; On++) {
          var Ur = St[On];
          Fn = At(Ur, Fn, yt);
        }
        for (var Xr = null, Ua = null, ia = jt, dl = 0, aa = 0, Hs = null; ia !== null && aa < St.length; aa++) {
          ia.index > aa ? (Hs = ia, ia = null) : Hs = ia.sibling;
          var zc = Ke(yt, ia, St[aa], un);
          if (zc === null) {
            ia === null && (ia = Hs);
            break;
          }
          a && ia && zc.alternate === null && s(yt, ia), dl = N(zc, dl, aa), Ua === null ? Xr = zc : Ua.sibling = zc, Ua = zc, ia = Hs;
        }
        if (aa === St.length) {
          if (v(yt, ia), Va()) {
            var fc = aa;
            tg(yt, fc);
          }
          return Xr;
        }
        if (ia === null) {
          for (; aa < St.length; aa++) {
            var fh = et(yt, St[aa], un);
            fh !== null && (dl = N(fh, dl, aa), Ua === null ? Xr = fh : Ua.sibling = fh, Ua = fh);
          }
          if (Va()) {
            var Cf = aa;
            tg(yt, Cf);
          }
          return Xr;
        }
        for (var Rf = x(yt, ia); aa < St.length; aa++) {
          var Ic = Ct(Rf, yt, aa, St[aa], un);
          Ic !== null && (a && Ic.alternate !== null && Rf.delete(Ic.key === null ? aa : Ic.key), dl = N(Ic, dl, aa), Ua === null ? Xr = Ic : Ua.sibling = Ic, Ua = Ic);
        }
        if (a && Rf.forEach(function(Kx) {
          return s(yt, Kx);
        }), Va()) {
          var bg = aa;
          tg(yt, bg);
        }
        return Xr;
      }
      function kn(yt, jt, St, un) {
        var Fn = Wr(St);
        if (typeof Fn != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          St[Symbol.toStringTag] === "Generator" && (Mx || l("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), Mx = !0), St.entries === Fn && (rb || l("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), rb = !0);
          var On = Fn.call(St);
          if (On)
            for (var Ur = null, Xr = On.next(); !Xr.done; Xr = On.next()) {
              var Ua = Xr.value;
              Ur = At(Ua, Ur, yt);
            }
        }
        var ia = Fn.call(St);
        if (ia == null)
          throw new Error("An iterable object provided no iterator.");
        for (var dl = null, aa = null, Hs = jt, zc = 0, fc = 0, fh = null, Cf = ia.next(); Hs !== null && !Cf.done; fc++, Cf = ia.next()) {
          Hs.index > fc ? (fh = Hs, Hs = null) : fh = Hs.sibling;
          var Rf = Ke(yt, Hs, Cf.value, un);
          if (Rf === null) {
            Hs === null && (Hs = fh);
            break;
          }
          a && Hs && Rf.alternate === null && s(yt, Hs), zc = N(Rf, zc, fc), aa === null ? dl = Rf : aa.sibling = Rf, aa = Rf, Hs = fh;
        }
        if (Cf.done) {
          if (v(yt, Hs), Va()) {
            var Ic = fc;
            tg(yt, Ic);
          }
          return dl;
        }
        if (Hs === null) {
          for (; !Cf.done; fc++, Cf = ia.next()) {
            var bg = et(yt, Cf.value, un);
            bg !== null && (zc = N(bg, zc, fc), aa === null ? dl = bg : aa.sibling = bg, aa = bg);
          }
          if (Va()) {
            var Kx = fc;
            tg(yt, Kx);
          }
          return dl;
        }
        for (var jb = x(yt, Hs); !Cf.done; fc++, Cf = ia.next()) {
          var pv = Ct(jb, yt, fc, Cf.value, un);
          pv !== null && (a && pv.alternate !== null && jb.delete(pv.key === null ? fc : pv.key), zc = N(pv, zc, fc), aa === null ? dl = pv : aa.sibling = pv, aa = pv);
        }
        if (a && jb.forEach(function(C8) {
          return s(yt, C8);
        }), Va()) {
          var M8 = fc;
          tg(yt, M8);
        }
        return dl;
      }
      function Sr(yt, jt, St, un) {
        if (jt !== null && jt.tag === R) {
          v(yt, jt.sibling);
          var Fn = M(jt, St);
          return Fn.return = yt, Fn;
        }
        v(yt, jt);
        var On = sD(St, yt.mode, un);
        return On.return = yt, On;
      }
      function ur(yt, jt, St, un) {
        for (var Fn = St.key, On = jt; On !== null; ) {
          if (On.key === Fn) {
            var Ur = St.type;
            if (Ur === Ui) {
              if (On.tag === U) {
                v(yt, On.sibling);
                var Xr = M(On, St.props.children);
                return Xr.return = yt, Xr._debugSource = St._source, Xr._debugOwner = St._owner, Xr;
              }
            } else if (On.elementType === Ur || // Keep this check inline so it only runs on the false path:
            OU(On, St) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof Ur == "object" && Ur !== null && Ur.$$typeof === je && xM(Ur) === On.type) {
              v(yt, On.sibling);
              var Ua = M(On, St.props);
              return Ua.ref = hs(yt, On, St), Ua.return = yt, Ua._debugSource = St._source, Ua._debugOwner = St._owner, Ua;
            }
            v(yt, On);
            break;
          } else
            s(yt, On);
          On = On.sibling;
        }
        if (St.type === Ui) {
          var ia = e0(St.props.children, yt.mode, un, St.key);
          return ia.return = yt, ia;
        } else {
          var dl = oD(St, yt.mode, un);
          return dl.ref = hs(yt, jt, St), dl.return = yt, dl;
        }
      }
      function Vi(yt, jt, St, un) {
        for (var Fn = St.key, On = jt; On !== null; ) {
          if (On.key === Fn)
            if (On.tag === E && On.stateNode.containerInfo === St.containerInfo && On.stateNode.implementation === St.implementation) {
              v(yt, On.sibling);
              var Ur = M(On, St.children || []);
              return Ur.return = yt, Ur;
            } else {
              v(yt, On);
              break;
            }
          else
            s(yt, On);
          On = On.sibling;
        }
        var Xr = lD(St, yt.mode, un);
        return Xr.return = yt, Xr;
      }
      function Pi(yt, jt, St, un) {
        var Fn = typeof St == "object" && St !== null && St.type === Ui && St.key === null;
        if (Fn && (St = St.props.children), typeof St == "object" && St !== null) {
          switch (St.$$typeof) {
            case Gr:
              return G(ur(yt, jt, St, un));
            case Or:
              return G(Vi(yt, jt, St, un));
            case je:
              var On = St._payload, Ur = St._init;
              return Pi(yt, jt, Ur(On), un);
          }
          if (ii(St))
            return Wt(yt, jt, St, un);
          if (Wr(St))
            return kn(yt, jt, St, un);
          Cx(yt, St);
        }
        return typeof St == "string" && St !== "" || typeof St == "number" ? G(Sr(yt, jt, "" + St, un)) : (typeof St == "function" && vS(yt), v(yt, jt));
      }
      return Pi;
    }
    var ky = EM(!0), bM = EM(!1);
    function aA(a, s) {
      if (a !== null && s.child !== a.child)
        throw new Error("Resuming work not yet implemented.");
      if (s.child !== null) {
        var v = s.child, x = NS(v, v.pendingProps);
        for (s.child = x, x.return = s; v.sibling !== null; )
          v = v.sibling, x = x.sibling = NS(v, v.pendingProps), x.return = s;
        x.sibling = null;
      }
    }
    function TM(a, s) {
      for (var v = a.child; v !== null; )
        W6(v, s), v = v.sibling;
    }
    var sv = {}, uh = Wp(sv), Fy = Wp(sv), zy = Wp(sv);
    function Rx(a) {
      if (a === sv)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return a;
    }
    function lb() {
      var a = Rx(zy.current);
      return a;
    }
    function gS(a, s) {
      Pu(zy, s, a), Pu(Fy, a, a), Pu(uh, sv, a);
      var v = C2(s);
      Ou(uh, a), Pu(uh, v, a);
    }
    function Iy(a) {
      Ou(uh, a), Ou(Fy, a), Ou(zy, a);
    }
    function dg() {
      var a = Rx(uh.current);
      return a;
    }
    function Ax(a) {
      Rx(zy.current);
      var s = Rx(uh.current), v = Aw(s, a.type);
      s !== v && (Pu(Fy, a, a), Pu(uh, v, a));
    }
    function By(a) {
      Fy.current === a && (Ou(uh, a), Ou(Fy, a));
    }
    var wM = 0, ub = 1, MM = 1, yS = 2, Jo = Wp(wM);
    function lv(a, s) {
      return (a & s) !== 0;
    }
    function Hy(a) {
      return a & ub;
    }
    function uv(a, s) {
      return a & ub | s;
    }
    function cb(a, s) {
      return a | s;
    }
    function Zh(a, s) {
      Pu(Jo, s, a);
    }
    function hg(a) {
      Ou(Jo, a);
    }
    function CM(a, s) {
      var v = a.memoizedState;
      return v !== null ? v.dehydrated !== null : (a.memoizedProps, !0);
    }
    function Dx(a) {
      for (var s = a; s !== null; ) {
        if (s.tag === B) {
          var v = s.memoizedState;
          if (v !== null) {
            var x = v.dehydrated;
            if (x === null || DE(x) || LE(x))
              return s;
          }
        } else if (s.tag === fe && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        s.memoizedProps.revealOrder !== void 0) {
          var M = (s.flags & xr) !== ir;
          if (M)
            return s;
        } else if (s.child !== null) {
          s.child.return = s, s = s.child;
          continue;
        }
        if (s === a)
          return null;
        for (; s.sibling === null; ) {
          if (s.return === null || s.return === a)
            return null;
          s = s.return;
        }
        s.sibling.return = s.return, s = s.sibling;
      }
      return null;
    }
    var Uc = (
      /*   */
      0
    ), ps = (
      /* */
      1
    ), Jh = (
      /*  */
      2
    ), ms = (
      /*    */
      4
    ), iu = (
      /*   */
      8
    ), fb = [];
    function SS() {
      for (var a = 0; a < fb.length; a++) {
        var s = fb[a];
        s._workInProgressVersionPrimary = null;
      }
      fb.length = 0;
    }
    function RM(a, s) {
      var v = s._getVersion, x = v(s._source);
      a.mutableSourceEagerHydrationData == null ? a.mutableSourceEagerHydrationData = [s, x] : a.mutableSourceEagerHydrationData.push(s, x);
    }
    var Ln = t.ReactCurrentDispatcher, au = t.ReactCurrentBatchConfig, _S, Vy;
    _S = /* @__PURE__ */ new Set();
    var pg = Bt, Ii = null, cl = null, fl = null, Gy = !1, mg = !1, cd = 0, oA = 0, sA = 25, Kt = null, Ef = null, ep = -1, db = !1;
    function ra() {
      {
        var a = Kt;
        Ef === null ? Ef = [a] : Ef.push(a);
      }
    }
    function Sn() {
      {
        var a = Kt;
        Ef !== null && (ep++, Ef[ep] !== a && lA(a));
      }
    }
    function vg(a) {
      a != null && !ii(a) && l("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", Kt, typeof a);
    }
    function lA(a) {
      {
        var s = rr(Ii);
        if (!_S.has(s) && (_S.add(s), Ef !== null)) {
          for (var v = "", x = 30, M = 0; M <= ep; M++) {
            for (var N = Ef[M], G = M === ep ? a : N, Q = M + 1 + ". " + N; Q.length < x; )
              Q += " ";
            Q += G + `
`, v += Q;
          }
          l(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, s, v);
        }
      }
    }
    function ou() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function hb(a, s) {
      if (db)
        return !1;
      if (s === null)
        return l("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", Kt), !1;
      a.length !== s.length && l(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, Kt, "[" + s.join(", ") + "]", "[" + a.join(", ") + "]");
      for (var v = 0; v < s.length && v < a.length; v++)
        if (!Vn(a[v], s[v]))
          return !1;
      return !0;
    }
    function Wy(a, s, v, x, M, N) {
      pg = N, Ii = s, Ef = a !== null ? a._debugHookTypes : null, ep = -1, db = a !== null && a.type !== s.type, s.memoizedState = null, s.updateQueue = null, s.lanes = Bt, a !== null && a.memoizedState !== null ? Ln.current = hn : Ef !== null ? Ln.current = Tt : Ln.current = qt;
      var G = v(x, M);
      if (mg) {
        var Q = 0;
        do {
          if (mg = !1, cd = 0, Q >= sA)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          Q += 1, db = !1, cl = null, fl = null, s.updateQueue = null, ep = -1, Ln.current = er, G = v(x, M);
        } while (mg);
      }
      Ln.current = wt, s._debugHookTypes = Ef;
      var ne = cl !== null && cl.next !== null;
      if (pg = Bt, Ii = null, cl = null, fl = null, Kt = null, Ef = null, ep = -1, a !== null && (a.flags & cn) !== (s.flags & cn) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (a.mode & Fr) !== ar && l("Internal React error: Expected static flag was missing. Please notify the React team."), Gy = !1, ne)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return G;
    }
    function cv() {
      var a = cd !== 0;
      return cd = 0, a;
    }
    function Lx(a, s, v) {
      s.updateQueue = a.updateQueue, (s.mode & Fo) !== ar ? s.flags &= ~(Eu | Mi | ga | Yn) : s.flags &= ~(ga | Yn), a.lanes = Nn(a.lanes, v);
    }
    function pb() {
      if (Ln.current = wt, Gy) {
        for (var a = Ii.memoizedState; a !== null; ) {
          var s = a.queue;
          s !== null && (s.pending = null), a = a.next;
        }
        Gy = !1;
      }
      pg = Bt, Ii = null, cl = null, fl = null, Ef = null, ep = -1, Kt = null, gt = !1, mg = !1, cd = 0;
    }
    function tp() {
      var a = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return fl === null ? Ii.memoizedState = fl = a : fl = fl.next = a, fl;
    }
    function fd() {
      var a;
      if (cl === null) {
        var s = Ii.alternate;
        s !== null ? a = s.memoizedState : a = null;
      } else
        a = cl.next;
      var v;
      if (fl === null ? v = Ii.memoizedState : v = fl.next, v !== null)
        fl = v, v = fl.next, cl = a;
      else {
        if (a === null)
          throw new Error("Rendered more hooks than during the previous render.");
        cl = a;
        var x = {
          memoizedState: cl.memoizedState,
          baseState: cl.baseState,
          baseQueue: cl.baseQueue,
          queue: cl.queue,
          next: null
        };
        fl === null ? Ii.memoizedState = fl = x : fl = fl.next = x;
      }
      return fl;
    }
    function AM() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function mb(a, s) {
      return typeof s == "function" ? s(a) : s;
    }
    function Ox(a, s, v) {
      var x = tp(), M;
      v !== void 0 ? M = v(s) : M = s, x.memoizedState = x.baseState = M;
      var N = {
        pending: null,
        interleaved: null,
        lanes: Bt,
        dispatch: null,
        lastRenderedReducer: a,
        lastRenderedState: M
      };
      x.queue = N;
      var G = N.dispatch = fn.bind(null, Ii, N);
      return [x.memoizedState, G];
    }
    function vb(a, s, v) {
      var x = fd(), M = x.queue;
      if (M === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      M.lastRenderedReducer = a;
      var N = cl, G = N.baseQueue, Q = M.pending;
      if (Q !== null) {
        if (G !== null) {
          var ne = G.next, Se = Q.next;
          G.next = Se, Q.next = ne;
        }
        N.baseQueue !== G && l("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), N.baseQueue = G = Q, M.pending = null;
      }
      if (G !== null) {
        var Me = G.next, et = N.baseState, Ke = null, Ct = null, At = null, Wt = Me;
        do {
          var kn = Wt.lane;
          if (Lt(pg, kn)) {
            if (At !== null) {
              var ur = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: ci,
                action: Wt.action,
                hasEagerState: Wt.hasEagerState,
                eagerState: Wt.eagerState,
                next: null
              };
              At = At.next = ur;
            }
            if (Wt.hasEagerState)
              et = Wt.eagerState;
            else {
              var Vi = Wt.action;
              et = a(et, Vi);
            }
          } else {
            var Sr = {
              lane: kn,
              action: Wt.action,
              hasEagerState: Wt.hasEagerState,
              eagerState: Wt.eagerState,
              next: null
            };
            At === null ? (Ct = At = Sr, Ke = et) : At = At.next = Sr, Ii.lanes = Xt(Ii.lanes, kn), Bb(kn);
          }
          Wt = Wt.next;
        } while (Wt !== null && Wt !== Me);
        At === null ? Ke = et : At.next = Ct, Vn(et, x.memoizedState) || Rb(), x.memoizedState = et, x.baseState = Ke, x.baseQueue = At, M.lastRenderedState = et;
      }
      var Pi = M.interleaved;
      if (Pi !== null) {
        var yt = Pi;
        do {
          var jt = yt.lane;
          Ii.lanes = Xt(Ii.lanes, jt), Bb(jt), yt = yt.next;
        } while (yt !== Pi);
      } else
        G === null && (M.lanes = Bt);
      var St = M.dispatch;
      return [x.memoizedState, St];
    }
    function gb(a, s, v) {
      var x = fd(), M = x.queue;
      if (M === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      M.lastRenderedReducer = a;
      var N = M.dispatch, G = M.pending, Q = x.memoizedState;
      if (G !== null) {
        M.pending = null;
        var ne = G.next, Se = ne;
        do {
          var Me = Se.action;
          Q = a(Q, Me), Se = Se.next;
        } while (Se !== ne);
        Vn(Q, x.memoizedState) || Rb(), x.memoizedState = Q, x.baseQueue === null && (x.baseState = Q), M.lastRenderedState = Q;
      }
      return [Q, N];
    }
    function uA(a, s, v) {
    }
    function DM(a, s, v) {
    }
    function yb(a, s, v) {
      var x = Ii, M = tp(), N, G = Va();
      if (G) {
        if (v === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        N = v(), Vy || N !== v() && (l("The result of getServerSnapshot should be cached to avoid an infinite loop"), Vy = !0);
      } else {
        if (N = s(), !Vy) {
          var Q = s();
          Vn(N, Q) || (l("The result of getSnapshot should be cached to avoid an infinite loop"), Vy = !0);
        }
        var ne = WM();
        if (ne === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        on(ne, pg) || LM(x, s, N);
      }
      M.memoizedState = N;
      var Se = {
        value: N,
        getSnapshot: s
      };
      return M.queue = Se, TS(_b.bind(null, x, Se, a), [a]), x.flags |= ga, jy(ps | iu, Sb.bind(null, x, Se, N, s), void 0, null), N;
    }
    function Px(a, s, v) {
      var x = Ii, M = fd(), N = s();
      if (!Vy) {
        var G = s();
        Vn(N, G) || (l("The result of getSnapshot should be cached to avoid an infinite loop"), Vy = !0);
      }
      var Q = M.memoizedState, ne = !Vn(Q, N);
      ne && (M.memoizedState = N, Rb());
      var Se = M.queue;
      if (Yy(_b.bind(null, x, Se, a), [a]), Se.getSnapshot !== s || ne || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      fl !== null && fl.memoizedState.tag & ps) {
        x.flags |= ga, jy(ps | iu, Sb.bind(null, x, Se, N, s), void 0, null);
        var Me = WM();
        if (Me === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        on(Me, pg) || LM(x, s, N);
      }
      return N;
    }
    function LM(a, s, v) {
      a.flags |= jf;
      var x = {
        getSnapshot: s,
        value: v
      }, M = Ii.updateQueue;
      if (M === null)
        M = AM(), Ii.updateQueue = M, M.stores = [x];
      else {
        var N = M.stores;
        N === null ? M.stores = [x] : N.push(x);
      }
    }
    function Sb(a, s, v, x) {
      s.value = v, s.getSnapshot = x, xb(s) && Eb(a);
    }
    function _b(a, s, v) {
      var x = function() {
        xb(s) && Eb(a);
      };
      return v(x);
    }
    function xb(a) {
      var s = a.getSnapshot, v = a.value;
      try {
        var x = s();
        return !Vn(v, x);
      } catch {
        return !0;
      }
    }
    function Eb(a) {
      var s = nu(a, Kn);
      s !== null && cu(s, a, Kn, oi);
    }
    function xS(a) {
      var s = tp();
      typeof a == "function" && (a = a()), s.memoizedState = s.baseState = a;
      var v = {
        pending: null,
        interleaved: null,
        lanes: Bt,
        dispatch: null,
        lastRenderedReducer: mb,
        lastRenderedState: a
      };
      s.queue = v;
      var x = v.dispatch = vr.bind(null, Ii, v);
      return [s.memoizedState, x];
    }
    function Ux(a) {
      return vb(mb);
    }
    function Nx(a) {
      return gb(mb);
    }
    function jy(a, s, v, x) {
      var M = {
        tag: a,
        create: s,
        destroy: v,
        deps: x,
        // Circular
        next: null
      }, N = Ii.updateQueue;
      if (N === null)
        N = AM(), Ii.updateQueue = N, N.lastEffect = M.next = M;
      else {
        var G = N.lastEffect;
        if (G === null)
          N.lastEffect = M.next = M;
        else {
          var Q = G.next;
          G.next = M, M.next = Q, N.lastEffect = M;
        }
      }
      return M;
    }
    function kx(a) {
      var s = tp();
      {
        var v = {
          current: a
        };
        return s.memoizedState = v, v;
      }
    }
    function ES(a) {
      var s = fd();
      return s.memoizedState;
    }
    function $y(a, s, v, x) {
      var M = tp(), N = x === void 0 ? null : x;
      Ii.flags |= a, M.memoizedState = jy(ps | s, v, void 0, N);
    }
    function bS(a, s, v, x) {
      var M = fd(), N = x === void 0 ? null : x, G = void 0;
      if (cl !== null) {
        var Q = cl.memoizedState;
        if (G = Q.destroy, N !== null) {
          var ne = Q.deps;
          if (hb(N, ne)) {
            M.memoizedState = jy(s, v, G, N);
            return;
          }
        }
      }
      Ii.flags |= a, M.memoizedState = jy(ps | s, v, G, N);
    }
    function TS(a, s) {
      return (Ii.mode & Fo) !== ar ? $y(Eu | ga | Yu, iu, a, s) : $y(ga | Yu, iu, a, s);
    }
    function Yy(a, s) {
      return bS(ga, iu, a, s);
    }
    function Fx(a, s) {
      return $y(Yn, Jh, a, s);
    }
    function wS(a, s) {
      return bS(Yn, Jh, a, s);
    }
    function zx(a, s) {
      var v = Yn;
      return v |= $a, (Ii.mode & Fo) !== ar && (v |= Mi), $y(v, ms, a, s);
    }
    function MS(a, s) {
      return bS(Yn, ms, a, s);
    }
    function bb(a, s) {
      if (typeof s == "function") {
        var v = s, x = a();
        return v(x), function() {
          v(null);
        };
      } else if (s != null) {
        var M = s;
        M.hasOwnProperty("current") || l("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(M).join(", ") + "}");
        var N = a();
        return M.current = N, function() {
          M.current = null;
        };
      }
    }
    function CS(a, s, v) {
      typeof s != "function" && l("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", s !== null ? typeof s : "null");
      var x = v != null ? v.concat([a]) : null, M = Yn;
      return M |= $a, (Ii.mode & Fo) !== ar && (M |= Mi), $y(M, ms, bb.bind(null, s, a), x);
    }
    function Ix(a, s, v) {
      typeof s != "function" && l("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", s !== null ? typeof s : "null");
      var x = v != null ? v.concat([a]) : null;
      return bS(Yn, ms, bb.bind(null, s, a), x);
    }
    function cA(a, s) {
    }
    var Bx = cA;
    function Tb(a, s) {
      var v = tp(), x = s === void 0 ? null : s;
      return v.memoizedState = [a, x], a;
    }
    function c(a, s) {
      var v = fd(), x = s === void 0 ? null : s, M = v.memoizedState;
      if (M !== null && x !== null) {
        var N = M[1];
        if (hb(x, N))
          return M[0];
      }
      return v.memoizedState = [a, x], a;
    }
    function d(a, s) {
      var v = tp(), x = s === void 0 ? null : s, M = a();
      return v.memoizedState = [M, x], M;
    }
    function T(a, s) {
      var v = fd(), x = s === void 0 ? null : s, M = v.memoizedState;
      if (M !== null && x !== null) {
        var N = M[1];
        if (hb(x, N))
          return M[0];
      }
      var G = a();
      return v.memoizedState = [G, x], G;
    }
    function C(a) {
      var s = tp();
      return s.memoizedState = a, a;
    }
    function P(a) {
      var s = fd(), v = cl, x = v.memoizedState;
      return J(s, x, a);
    }
    function V(a) {
      var s = fd();
      if (cl === null)
        return s.memoizedState = a, a;
      var v = cl.memoizedState;
      return J(s, v, a);
    }
    function J(a, s, v) {
      var x = !nt(pg);
      if (x) {
        if (!Vn(v, s)) {
          var M = sr();
          Ii.lanes = Xt(Ii.lanes, M), Bb(M), a.baseState = !0;
        }
        return s;
      } else
        return a.baseState && (a.baseState = !1, Rb()), a.memoizedState = v, v;
    }
    function ce(a, s, v) {
      var x = Ju();
      bo(Ns(x, us)), a(!0);
      var M = au.transition;
      au.transition = {};
      var N = au.transition;
      au.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        a(!1), s();
      } finally {
        if (bo(x), au.transition = M, M === null && N._updatedFibers) {
          var G = N._updatedFibers.size;
          G > 10 && o("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), N._updatedFibers.clear();
        }
      }
    }
    function ge() {
      var a = xS(!1), s = a[0], v = a[1], x = ce.bind(null, v), M = tp();
      return M.memoizedState = x, [s, x];
    }
    function Oe() {
      var a = Ux(), s = a[0], v = fd(), x = v.memoizedState;
      return [s, x];
    }
    function Ve() {
      var a = Nx(), s = a[0], v = fd(), x = v.memoizedState;
      return [s, x];
    }
    var gt = !1;
    function Ft() {
      return gt;
    }
    function Gt() {
      var a = tp(), s = WM(), v = s.identifierPrefix, x;
      if (Va()) {
        var M = Z2();
        x = ":" + v + "R" + M;
        var N = cd++;
        N > 0 && (x += "H" + N.toString(32)), x += ":";
      } else {
        var G = oA++;
        x = ":" + v + "r" + G.toString(32) + ":";
      }
      return a.memoizedState = x, x;
    }
    function an() {
      var a = fd(), s = a.memoizedState;
      return s;
    }
    function fn(a, s, v) {
      typeof arguments[3] == "function" && l("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var x = Zy(a), M = {
        lane: x,
        action: v,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (ni(a))
        Er(s, M);
      else {
        var N = dM(a, s, M, x);
        if (N !== null) {
          var G = Mf();
          cu(N, a, x, G), to(N, s, x);
        }
      }
      no(a, x);
    }
    function vr(a, s, v) {
      typeof arguments[3] == "function" && l("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var x = Zy(a), M = {
        lane: x,
        action: v,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (ni(a))
        Er(s, M);
      else {
        var N = a.alternate;
        if (a.lanes === Bt && (N === null || N.lanes === Bt)) {
          var G = s.lastRenderedReducer;
          if (G !== null) {
            var Q;
            Q = Ln.current, Ln.current = Ir;
            try {
              var ne = s.lastRenderedState, Se = G(ne, v);
              if (M.hasEagerState = !0, M.eagerState = Se, Vn(Se, ne)) {
                mx(a, s, M, x);
                return;
              }
            } catch {
            } finally {
              Ln.current = Q;
            }
          }
        }
        var Me = dM(a, s, M, x);
        if (Me !== null) {
          var et = Mf();
          cu(Me, a, x, et), to(Me, s, x);
        }
      }
      no(a, x);
    }
    function ni(a) {
      var s = a.alternate;
      return a === Ii || s !== null && s === Ii;
    }
    function Er(a, s) {
      mg = Gy = !0;
      var v = a.pending;
      v === null ? s.next = s : (s.next = v.next, v.next = s), a.pending = s;
    }
    function to(a, s, v) {
      if (yr(v)) {
        var x = s.lanes;
        x = zr(x, a.pendingLanes);
        var M = Xt(x, v);
        s.lanes = M, Mp(a, M);
      }
    }
    function no(a, s, v) {
      Mu(a, s);
    }
    var wt = {
      readContext: Qo,
      useCallback: ou,
      useContext: ou,
      useEffect: ou,
      useImperativeHandle: ou,
      useInsertionEffect: ou,
      useLayoutEffect: ou,
      useMemo: ou,
      useReducer: ou,
      useRef: ou,
      useState: ou,
      useDebugValue: ou,
      useDeferredValue: ou,
      useTransition: ou,
      useMutableSource: ou,
      useSyncExternalStore: ou,
      useId: ou,
      unstable_isNewReconciler: de
    }, qt = null, Tt = null, hn = null, er = null, bn = null, Ir = null, Yi = null;
    {
      var wa = function() {
        l("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, Tn = function() {
        l("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      qt = {
        readContext: function(a) {
          return Qo(a);
        },
        useCallback: function(a, s) {
          return Kt = "useCallback", ra(), vg(s), Tb(a, s);
        },
        useContext: function(a) {
          return Kt = "useContext", ra(), Qo(a);
        },
        useEffect: function(a, s) {
          return Kt = "useEffect", ra(), vg(s), TS(a, s);
        },
        useImperativeHandle: function(a, s, v) {
          return Kt = "useImperativeHandle", ra(), vg(v), CS(a, s, v);
        },
        useInsertionEffect: function(a, s) {
          return Kt = "useInsertionEffect", ra(), vg(s), Fx(a, s);
        },
        useLayoutEffect: function(a, s) {
          return Kt = "useLayoutEffect", ra(), vg(s), zx(a, s);
        },
        useMemo: function(a, s) {
          Kt = "useMemo", ra(), vg(s);
          var v = Ln.current;
          Ln.current = bn;
          try {
            return d(a, s);
          } finally {
            Ln.current = v;
          }
        },
        useReducer: function(a, s, v) {
          Kt = "useReducer", ra();
          var x = Ln.current;
          Ln.current = bn;
          try {
            return Ox(a, s, v);
          } finally {
            Ln.current = x;
          }
        },
        useRef: function(a) {
          return Kt = "useRef", ra(), kx(a);
        },
        useState: function(a) {
          Kt = "useState", ra();
          var s = Ln.current;
          Ln.current = bn;
          try {
            return xS(a);
          } finally {
            Ln.current = s;
          }
        },
        useDebugValue: function(a, s) {
          return Kt = "useDebugValue", ra(), void 0;
        },
        useDeferredValue: function(a) {
          return Kt = "useDeferredValue", ra(), C(a);
        },
        useTransition: function() {
          return Kt = "useTransition", ra(), ge();
        },
        useMutableSource: function(a, s, v) {
          return Kt = "useMutableSource", ra(), void 0;
        },
        useSyncExternalStore: function(a, s, v) {
          return Kt = "useSyncExternalStore", ra(), yb(a, s, v);
        },
        useId: function() {
          return Kt = "useId", ra(), Gt();
        },
        unstable_isNewReconciler: de
      }, Tt = {
        readContext: function(a) {
          return Qo(a);
        },
        useCallback: function(a, s) {
          return Kt = "useCallback", Sn(), Tb(a, s);
        },
        useContext: function(a) {
          return Kt = "useContext", Sn(), Qo(a);
        },
        useEffect: function(a, s) {
          return Kt = "useEffect", Sn(), TS(a, s);
        },
        useImperativeHandle: function(a, s, v) {
          return Kt = "useImperativeHandle", Sn(), CS(a, s, v);
        },
        useInsertionEffect: function(a, s) {
          return Kt = "useInsertionEffect", Sn(), Fx(a, s);
        },
        useLayoutEffect: function(a, s) {
          return Kt = "useLayoutEffect", Sn(), zx(a, s);
        },
        useMemo: function(a, s) {
          Kt = "useMemo", Sn();
          var v = Ln.current;
          Ln.current = bn;
          try {
            return d(a, s);
          } finally {
            Ln.current = v;
          }
        },
        useReducer: function(a, s, v) {
          Kt = "useReducer", Sn();
          var x = Ln.current;
          Ln.current = bn;
          try {
            return Ox(a, s, v);
          } finally {
            Ln.current = x;
          }
        },
        useRef: function(a) {
          return Kt = "useRef", Sn(), kx(a);
        },
        useState: function(a) {
          Kt = "useState", Sn();
          var s = Ln.current;
          Ln.current = bn;
          try {
            return xS(a);
          } finally {
            Ln.current = s;
          }
        },
        useDebugValue: function(a, s) {
          return Kt = "useDebugValue", Sn(), void 0;
        },
        useDeferredValue: function(a) {
          return Kt = "useDeferredValue", Sn(), C(a);
        },
        useTransition: function() {
          return Kt = "useTransition", Sn(), ge();
        },
        useMutableSource: function(a, s, v) {
          return Kt = "useMutableSource", Sn(), void 0;
        },
        useSyncExternalStore: function(a, s, v) {
          return Kt = "useSyncExternalStore", Sn(), yb(a, s, v);
        },
        useId: function() {
          return Kt = "useId", Sn(), Gt();
        },
        unstable_isNewReconciler: de
      }, hn = {
        readContext: function(a) {
          return Qo(a);
        },
        useCallback: function(a, s) {
          return Kt = "useCallback", Sn(), c(a, s);
        },
        useContext: function(a) {
          return Kt = "useContext", Sn(), Qo(a);
        },
        useEffect: function(a, s) {
          return Kt = "useEffect", Sn(), Yy(a, s);
        },
        useImperativeHandle: function(a, s, v) {
          return Kt = "useImperativeHandle", Sn(), Ix(a, s, v);
        },
        useInsertionEffect: function(a, s) {
          return Kt = "useInsertionEffect", Sn(), wS(a, s);
        },
        useLayoutEffect: function(a, s) {
          return Kt = "useLayoutEffect", Sn(), MS(a, s);
        },
        useMemo: function(a, s) {
          Kt = "useMemo", Sn();
          var v = Ln.current;
          Ln.current = Ir;
          try {
            return T(a, s);
          } finally {
            Ln.current = v;
          }
        },
        useReducer: function(a, s, v) {
          Kt = "useReducer", Sn();
          var x = Ln.current;
          Ln.current = Ir;
          try {
            return vb(a, s, v);
          } finally {
            Ln.current = x;
          }
        },
        useRef: function(a) {
          return Kt = "useRef", Sn(), ES();
        },
        useState: function(a) {
          Kt = "useState", Sn();
          var s = Ln.current;
          Ln.current = Ir;
          try {
            return Ux(a);
          } finally {
            Ln.current = s;
          }
        },
        useDebugValue: function(a, s) {
          return Kt = "useDebugValue", Sn(), Bx();
        },
        useDeferredValue: function(a) {
          return Kt = "useDeferredValue", Sn(), P(a);
        },
        useTransition: function() {
          return Kt = "useTransition", Sn(), Oe();
        },
        useMutableSource: function(a, s, v) {
          return Kt = "useMutableSource", Sn(), void 0;
        },
        useSyncExternalStore: function(a, s, v) {
          return Kt = "useSyncExternalStore", Sn(), Px(a, s);
        },
        useId: function() {
          return Kt = "useId", Sn(), an();
        },
        unstable_isNewReconciler: de
      }, er = {
        readContext: function(a) {
          return Qo(a);
        },
        useCallback: function(a, s) {
          return Kt = "useCallback", Sn(), c(a, s);
        },
        useContext: function(a) {
          return Kt = "useContext", Sn(), Qo(a);
        },
        useEffect: function(a, s) {
          return Kt = "useEffect", Sn(), Yy(a, s);
        },
        useImperativeHandle: function(a, s, v) {
          return Kt = "useImperativeHandle", Sn(), Ix(a, s, v);
        },
        useInsertionEffect: function(a, s) {
          return Kt = "useInsertionEffect", Sn(), wS(a, s);
        },
        useLayoutEffect: function(a, s) {
          return Kt = "useLayoutEffect", Sn(), MS(a, s);
        },
        useMemo: function(a, s) {
          Kt = "useMemo", Sn();
          var v = Ln.current;
          Ln.current = Yi;
          try {
            return T(a, s);
          } finally {
            Ln.current = v;
          }
        },
        useReducer: function(a, s, v) {
          Kt = "useReducer", Sn();
          var x = Ln.current;
          Ln.current = Yi;
          try {
            return gb(a, s, v);
          } finally {
            Ln.current = x;
          }
        },
        useRef: function(a) {
          return Kt = "useRef", Sn(), ES();
        },
        useState: function(a) {
          Kt = "useState", Sn();
          var s = Ln.current;
          Ln.current = Yi;
          try {
            return Nx(a);
          } finally {
            Ln.current = s;
          }
        },
        useDebugValue: function(a, s) {
          return Kt = "useDebugValue", Sn(), Bx();
        },
        useDeferredValue: function(a) {
          return Kt = "useDeferredValue", Sn(), V(a);
        },
        useTransition: function() {
          return Kt = "useTransition", Sn(), Ve();
        },
        useMutableSource: function(a, s, v) {
          return Kt = "useMutableSource", Sn(), void 0;
        },
        useSyncExternalStore: function(a, s, v) {
          return Kt = "useSyncExternalStore", Sn(), Px(a, s);
        },
        useId: function() {
          return Kt = "useId", Sn(), an();
        },
        unstable_isNewReconciler: de
      }, bn = {
        readContext: function(a) {
          return wa(), Qo(a);
        },
        useCallback: function(a, s) {
          return Kt = "useCallback", Tn(), ra(), Tb(a, s);
        },
        useContext: function(a) {
          return Kt = "useContext", Tn(), ra(), Qo(a);
        },
        useEffect: function(a, s) {
          return Kt = "useEffect", Tn(), ra(), TS(a, s);
        },
        useImperativeHandle: function(a, s, v) {
          return Kt = "useImperativeHandle", Tn(), ra(), CS(a, s, v);
        },
        useInsertionEffect: function(a, s) {
          return Kt = "useInsertionEffect", Tn(), ra(), Fx(a, s);
        },
        useLayoutEffect: function(a, s) {
          return Kt = "useLayoutEffect", Tn(), ra(), zx(a, s);
        },
        useMemo: function(a, s) {
          Kt = "useMemo", Tn(), ra();
          var v = Ln.current;
          Ln.current = bn;
          try {
            return d(a, s);
          } finally {
            Ln.current = v;
          }
        },
        useReducer: function(a, s, v) {
          Kt = "useReducer", Tn(), ra();
          var x = Ln.current;
          Ln.current = bn;
          try {
            return Ox(a, s, v);
          } finally {
            Ln.current = x;
          }
        },
        useRef: function(a) {
          return Kt = "useRef", Tn(), ra(), kx(a);
        },
        useState: function(a) {
          Kt = "useState", Tn(), ra();
          var s = Ln.current;
          Ln.current = bn;
          try {
            return xS(a);
          } finally {
            Ln.current = s;
          }
        },
        useDebugValue: function(a, s) {
          return Kt = "useDebugValue", Tn(), ra(), void 0;
        },
        useDeferredValue: function(a) {
          return Kt = "useDeferredValue", Tn(), ra(), C(a);
        },
        useTransition: function() {
          return Kt = "useTransition", Tn(), ra(), ge();
        },
        useMutableSource: function(a, s, v) {
          return Kt = "useMutableSource", Tn(), ra(), void 0;
        },
        useSyncExternalStore: function(a, s, v) {
          return Kt = "useSyncExternalStore", Tn(), ra(), yb(a, s, v);
        },
        useId: function() {
          return Kt = "useId", Tn(), ra(), Gt();
        },
        unstable_isNewReconciler: de
      }, Ir = {
        readContext: function(a) {
          return wa(), Qo(a);
        },
        useCallback: function(a, s) {
          return Kt = "useCallback", Tn(), Sn(), c(a, s);
        },
        useContext: function(a) {
          return Kt = "useContext", Tn(), Sn(), Qo(a);
        },
        useEffect: function(a, s) {
          return Kt = "useEffect", Tn(), Sn(), Yy(a, s);
        },
        useImperativeHandle: function(a, s, v) {
          return Kt = "useImperativeHandle", Tn(), Sn(), Ix(a, s, v);
        },
        useInsertionEffect: function(a, s) {
          return Kt = "useInsertionEffect", Tn(), Sn(), wS(a, s);
        },
        useLayoutEffect: function(a, s) {
          return Kt = "useLayoutEffect", Tn(), Sn(), MS(a, s);
        },
        useMemo: function(a, s) {
          Kt = "useMemo", Tn(), Sn();
          var v = Ln.current;
          Ln.current = Ir;
          try {
            return T(a, s);
          } finally {
            Ln.current = v;
          }
        },
        useReducer: function(a, s, v) {
          Kt = "useReducer", Tn(), Sn();
          var x = Ln.current;
          Ln.current = Ir;
          try {
            return vb(a, s, v);
          } finally {
            Ln.current = x;
          }
        },
        useRef: function(a) {
          return Kt = "useRef", Tn(), Sn(), ES();
        },
        useState: function(a) {
          Kt = "useState", Tn(), Sn();
          var s = Ln.current;
          Ln.current = Ir;
          try {
            return Ux(a);
          } finally {
            Ln.current = s;
          }
        },
        useDebugValue: function(a, s) {
          return Kt = "useDebugValue", Tn(), Sn(), Bx();
        },
        useDeferredValue: function(a) {
          return Kt = "useDeferredValue", Tn(), Sn(), P(a);
        },
        useTransition: function() {
          return Kt = "useTransition", Tn(), Sn(), Oe();
        },
        useMutableSource: function(a, s, v) {
          return Kt = "useMutableSource", Tn(), Sn(), void 0;
        },
        useSyncExternalStore: function(a, s, v) {
          return Kt = "useSyncExternalStore", Tn(), Sn(), Px(a, s);
        },
        useId: function() {
          return Kt = "useId", Tn(), Sn(), an();
        },
        unstable_isNewReconciler: de
      }, Yi = {
        readContext: function(a) {
          return wa(), Qo(a);
        },
        useCallback: function(a, s) {
          return Kt = "useCallback", Tn(), Sn(), c(a, s);
        },
        useContext: function(a) {
          return Kt = "useContext", Tn(), Sn(), Qo(a);
        },
        useEffect: function(a, s) {
          return Kt = "useEffect", Tn(), Sn(), Yy(a, s);
        },
        useImperativeHandle: function(a, s, v) {
          return Kt = "useImperativeHandle", Tn(), Sn(), Ix(a, s, v);
        },
        useInsertionEffect: function(a, s) {
          return Kt = "useInsertionEffect", Tn(), Sn(), wS(a, s);
        },
        useLayoutEffect: function(a, s) {
          return Kt = "useLayoutEffect", Tn(), Sn(), MS(a, s);
        },
        useMemo: function(a, s) {
          Kt = "useMemo", Tn(), Sn();
          var v = Ln.current;
          Ln.current = Ir;
          try {
            return T(a, s);
          } finally {
            Ln.current = v;
          }
        },
        useReducer: function(a, s, v) {
          Kt = "useReducer", Tn(), Sn();
          var x = Ln.current;
          Ln.current = Ir;
          try {
            return gb(a, s, v);
          } finally {
            Ln.current = x;
          }
        },
        useRef: function(a) {
          return Kt = "useRef", Tn(), Sn(), ES();
        },
        useState: function(a) {
          Kt = "useState", Tn(), Sn();
          var s = Ln.current;
          Ln.current = Ir;
          try {
            return Nx(a);
          } finally {
            Ln.current = s;
          }
        },
        useDebugValue: function(a, s) {
          return Kt = "useDebugValue", Tn(), Sn(), Bx();
        },
        useDeferredValue: function(a) {
          return Kt = "useDeferredValue", Tn(), Sn(), V(a);
        },
        useTransition: function() {
          return Kt = "useTransition", Tn(), Sn(), Ve();
        },
        useMutableSource: function(a, s, v) {
          return Kt = "useMutableSource", Tn(), Sn(), void 0;
        },
        useSyncExternalStore: function(a, s, v) {
          return Kt = "useSyncExternalStore", Tn(), Sn(), Px(a, s);
        },
        useId: function() {
          return Kt = "useId", Tn(), Sn(), an();
        },
        unstable_isNewReconciler: de
      };
    }
    var _a = e.unstable_now, Xi = 0, si = -1, ho = -1, ro = -1, Nc = !1, Bs = !1;
    function kc() {
      return Nc;
    }
    function bf() {
      Bs = !0;
    }
    function np() {
      Nc = !1, Bs = !1;
    }
    function Xy() {
      Nc = Bs, Bs = !1;
    }
    function gg() {
      return Xi;
    }
    function Fc() {
      Xi = _a();
    }
    function Qp(a) {
      ho = _a(), a.actualStartTime < 0 && (a.actualStartTime = _a());
    }
    function Hx(a) {
      ho = -1;
    }
    function RS(a, s) {
      if (ho >= 0) {
        var v = _a() - ho;
        a.actualDuration += v, s && (a.selfBaseDuration = v), ho = -1;
      }
    }
    function rp(a) {
      if (si >= 0) {
        var s = _a() - si;
        si = -1;
        for (var v = a.return; v !== null; ) {
          switch (v.tag) {
            case _:
              var x = v.stateNode;
              x.effectDuration += s;
              return;
            case H:
              var M = v.stateNode;
              M.effectDuration += s;
              return;
          }
          v = v.return;
        }
      }
    }
    function wb(a) {
      if (ro >= 0) {
        var s = _a() - ro;
        ro = -1;
        for (var v = a.return; v !== null; ) {
          switch (v.tag) {
            case _:
              var x = v.stateNode;
              x !== null && (x.passiveEffectDuration += s);
              return;
            case H:
              var M = v.stateNode;
              M !== null && (M.passiveEffectDuration += s);
              return;
          }
          v = v.return;
        }
      }
    }
    function fv() {
      si = _a();
    }
    function fA() {
      ro = _a();
    }
    function dA(a) {
      for (var s = a.child; s; )
        a.actualDuration += s.actualDuration, s = s.sibling;
    }
    function AS(a, s) {
      return {
        value: a,
        source: s,
        stack: rs(s),
        digest: null
      };
    }
    function hA(a, s, v) {
      return {
        value: a,
        source: null,
        stack: v ?? null,
        digest: s ?? null
      };
    }
    function LH(a, s) {
      return !0;
    }
    function pA(a, s) {
      try {
        var v = LH(a, s);
        if (v === !1)
          return;
        var x = s.value, M = s.source, N = s.stack, G = N !== null ? N : "";
        if (x != null && x._suppressLogging) {
          if (a.tag === p)
            return;
          console.error(x);
        }
        var Q = M ? rr(M) : null, ne = Q ? "The above error occurred in the <" + Q + "> component:" : "The above error occurred in one of your React components:", Se;
        if (a.tag === _)
          Se = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var Me = rr(a) || "Anonymous";
          Se = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + Me + ".");
        }
        var et = ne + `
` + G + `

` + ("" + Se);
        console.error(et);
      } catch (Ke) {
        setTimeout(function() {
          throw Ke;
        });
      }
    }
    var OH = typeof WeakMap == "function" ? WeakMap : Map;
    function E3(a, s, v) {
      var x = qh(oi, v);
      x.tag = KE, x.payload = {
        element: null
      };
      var M = s.value;
      return x.callback = function() {
        T6(M), pA(a, s);
      }, x;
    }
    function mA(a, s, v) {
      var x = qh(oi, v);
      x.tag = KE;
      var M = a.type.getDerivedStateFromError;
      if (typeof M == "function") {
        var N = s.value;
        x.payload = function() {
          return M(N);
        }, x.callback = function() {
          PU(a), pA(a, s);
        };
      }
      var G = a.stateNode;
      return G !== null && typeof G.componentDidCatch == "function" && (x.callback = function() {
        PU(a), pA(a, s), typeof M != "function" && E6(this);
        var ne = s.value, Se = s.stack;
        this.componentDidCatch(ne, {
          componentStack: Se !== null ? Se : ""
        }), typeof M != "function" && (Xe(a.lanes, Kn) || l("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", rr(a) || "Unknown"));
      }), x;
    }
    function b3(a, s, v) {
      var x = a.pingCache, M;
      if (x === null ? (x = a.pingCache = new OH(), M = /* @__PURE__ */ new Set(), x.set(s, M)) : (M = x.get(s), M === void 0 && (M = /* @__PURE__ */ new Set(), x.set(s, M))), !M.has(v)) {
        M.add(v);
        var N = w6.bind(null, a, s, v);
        Ya && Hb(a, v), s.then(N, N);
      }
    }
    function PH(a, s, v, x) {
      var M = a.updateQueue;
      if (M === null) {
        var N = /* @__PURE__ */ new Set();
        N.add(v), a.updateQueue = N;
      } else
        M.add(v);
    }
    function UH(a, s) {
      var v = a.tag;
      if ((a.mode & Fr) === ar && (v === h || v === F || v === Y)) {
        var x = a.alternate;
        x ? (a.updateQueue = x.updateQueue, a.memoizedState = x.memoizedState, a.lanes = x.lanes) : (a.updateQueue = null, a.memoizedState = null);
      }
    }
    function T3(a) {
      var s = a;
      do {
        if (s.tag === B && CM(s))
          return s;
        s = s.return;
      } while (s !== null);
      return null;
    }
    function w3(a, s, v, x, M) {
      if ((a.mode & Fr) === ar) {
        if (a === s)
          a.flags |= Uo;
        else {
          if (a.flags |= xr, v.flags |= wh, v.flags &= ~(xc | As), v.tag === p) {
            var N = v.alternate;
            if (N === null)
              v.tag = Z;
            else {
              var G = qh(oi, Kn);
              G.tag = Zo, av(v, G, Kn);
            }
          }
          v.lanes = Xt(v.lanes, Kn);
        }
        return a;
      }
      return a.flags |= Uo, a.lanes = M, a;
    }
    function NH(a, s, v, x, M) {
      if (v.flags |= As, Ya && Hb(a, M), x !== null && typeof x == "object" && typeof x.then == "function") {
        var N = x;
        UH(v), Va() && v.mode & Fr && cx();
        var G = T3(s);
        if (G !== null) {
          G.flags &= ~Ia, w3(G, s, v, a, M), G.mode & Fr && b3(a, N, M), PH(G, a, N);
          return;
        } else {
          if (!W(M)) {
            b3(a, N, M), XA();
            return;
          }
          var Q = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          x = Q;
        }
      } else if (Va() && v.mode & Fr) {
        cx();
        var ne = T3(s);
        if (ne !== null) {
          (ne.flags & Uo) === ir && (ne.flags |= Ia), w3(ne, s, v, a, M), lh(AS(x, v));
          return;
        }
      }
      x = AS(x, v), p6(x);
      var Se = s;
      do {
        switch (Se.tag) {
          case _: {
            var Me = x;
            Se.flags |= Uo;
            var et = Si(M);
            Se.lanes = Xt(Se.lanes, et);
            var Ke = E3(Se, Me, et);
            Kh(Se, Ke);
            return;
          }
          case p:
            var Ct = x, At = Se.type, Wt = Se.stateNode;
            if ((Se.flags & xr) === ir && (typeof At.getDerivedStateFromError == "function" || Wt !== null && typeof Wt.componentDidCatch == "function" && !TU(Wt))) {
              Se.flags |= Uo;
              var kn = Si(M);
              Se.lanes = Xt(Se.lanes, kn);
              var Sr = mA(Se, Ct, kn);
              Kh(Se, Sr);
              return;
            }
            break;
        }
        Se = Se.return;
      } while (Se !== null);
    }
    function kH() {
      return null;
    }
    var Mb = t.ReactCurrentOwner, Zp = !1, vA, Cb, gA, yA, SA, DS, _A, OM;
    vA = {}, Cb = {}, gA = {}, yA = {}, SA = {}, DS = !1, _A = {}, OM = {};
    function Tf(a, s, v, x) {
      a === null ? s.child = bM(s, null, v, x) : s.child = ky(s, a.child, v, x);
    }
    function FH(a, s, v, x) {
      s.child = ky(s, a.child, null, x), s.child = ky(s, null, v, x);
    }
    function M3(a, s, v, x, M) {
      if (s.type !== s.elementType) {
        var N = v.propTypes;
        N && th(
          N,
          x,
          // Resolved props
          "prop",
          Hr(v)
        );
      }
      var G = v.render, Q = s.ref, ne, Se;
      Xh(s, M), ua(s);
      {
        if (Mb.current = s, Qr(!0), ne = Wy(a, s, G, x, Q, M), Se = cv(), s.mode & ai) {
          na(!0);
          try {
            ne = Wy(a, s, G, x, Q, M), Se = cv();
          } finally {
            na(!1);
          }
        }
        Qr(!1);
      }
      return ya(), a !== null && !Zp ? (Lx(a, s, M), yg(a, s, M)) : (Va() && Se && BE(s), s.flags |= Li, Tf(a, s, ne, M), s.child);
    }
    function C3(a, s, v, x, M) {
      if (a === null) {
        var N = v.type;
        if (V6(N) && v.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        v.defaultProps === void 0) {
          var G = N;
          return G = qx(N), s.tag = Y, s.type = G, bA(s, N), R3(a, s, G, x, M);
        }
        {
          var Q = N.propTypes;
          Q && th(
            Q,
            x,
            // Resolved props
            "prop",
            Hr(N)
          );
        }
        var ne = aD(v.type, null, x, s, s.mode, M);
        return ne.ref = s.ref, ne.return = s, s.child = ne, ne;
      }
      {
        var Se = v.type, Me = Se.propTypes;
        Me && th(
          Me,
          x,
          // Resolved props
          "prop",
          Hr(Se)
        );
      }
      var et = a.child, Ke = AA(a, M);
      if (!Ke) {
        var Ct = et.memoizedProps, At = v.compare;
        if (At = At !== null ? At : lr, At(Ct, x) && a.ref === s.ref)
          return yg(a, s, M);
      }
      s.flags |= Li;
      var Wt = NS(et, x);
      return Wt.ref = s.ref, Wt.return = s, s.child = Wt, Wt;
    }
    function R3(a, s, v, x, M) {
      if (s.type !== s.elementType) {
        var N = s.elementType;
        if (N.$$typeof === je) {
          var G = N, Q = G._payload, ne = G._init;
          try {
            N = ne(Q);
          } catch {
            N = null;
          }
          var Se = N && N.propTypes;
          Se && th(
            Se,
            x,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            Hr(N)
          );
        }
      }
      if (a !== null) {
        var Me = a.memoizedProps;
        if (lr(Me, x) && a.ref === s.ref && // Prevent bailout if the implementation changed due to hot reload.
        s.type === a.type)
          if (Zp = !1, s.pendingProps = x = Me, AA(a, M))
            (a.flags & wh) !== ir && (Zp = !0);
          else
            return s.lanes = a.lanes, yg(a, s, M);
      }
      return xA(a, s, v, x, M);
    }
    function A3(a, s, v) {
      var x = s.pendingProps, M = x.children, N = a !== null ? a.memoizedState : null;
      if (x.mode === "hidden" || X)
        if ((s.mode & Fr) === ar) {
          var G = {
            baseLanes: Bt,
            cachePool: null,
            transitions: null
          };
          s.memoizedState = G, jM(s, v);
        } else if (Xe(v, Rl)) {
          var et = {
            baseLanes: Bt,
            cachePool: null,
            transitions: null
          };
          s.memoizedState = et;
          var Ke = N !== null ? N.baseLanes : v;
          jM(s, Ke);
        } else {
          var Q = null, ne;
          if (N !== null) {
            var Se = N.baseLanes;
            ne = Xt(Se, v);
          } else
            ne = v;
          s.lanes = s.childLanes = Rl;
          var Me = {
            baseLanes: ne,
            cachePool: Q,
            transitions: null
          };
          return s.memoizedState = Me, s.updateQueue = null, jM(s, ne), null;
        }
      else {
        var Ct;
        N !== null ? (Ct = Xt(N.baseLanes, v), s.memoizedState = null) : Ct = v, jM(s, Ct);
      }
      return Tf(a, s, M, v), s.child;
    }
    function zH(a, s, v) {
      var x = s.pendingProps;
      return Tf(a, s, x, v), s.child;
    }
    function IH(a, s, v) {
      var x = s.pendingProps.children;
      return Tf(a, s, x, v), s.child;
    }
    function BH(a, s, v) {
      {
        s.flags |= Yn;
        {
          var x = s.stateNode;
          x.effectDuration = 0, x.passiveEffectDuration = 0;
        }
      }
      var M = s.pendingProps, N = M.children;
      return Tf(a, s, N, v), s.child;
    }
    function D3(a, s) {
      var v = s.ref;
      (a === null && v !== null || a !== null && a.ref !== v) && (s.flags |= Rs, s.flags |= $f);
    }
    function xA(a, s, v, x, M) {
      if (s.type !== s.elementType) {
        var N = v.propTypes;
        N && th(
          N,
          x,
          // Resolved props
          "prop",
          Hr(v)
        );
      }
      var G;
      {
        var Q = Qm(s, v, !0);
        G = My(s, Q);
      }
      var ne, Se;
      Xh(s, M), ua(s);
      {
        if (Mb.current = s, Qr(!0), ne = Wy(a, s, v, x, G, M), Se = cv(), s.mode & ai) {
          na(!0);
          try {
            ne = Wy(a, s, v, x, G, M), Se = cv();
          } finally {
            na(!1);
          }
        }
        Qr(!1);
      }
      return ya(), a !== null && !Zp ? (Lx(a, s, M), yg(a, s, M)) : (Va() && Se && BE(s), s.flags |= Li, Tf(a, s, ne, M), s.child);
    }
    function L3(a, s, v, x, M) {
      {
        switch (r8(s)) {
          case !1: {
            var N = s.stateNode, G = s.type, Q = new G(s.memoizedProps, N.context), ne = Q.state;
            N.updater.enqueueSetState(N, ne, null);
            break;
          }
          case !0: {
            s.flags |= xr, s.flags |= Uo;
            var Se = new Error("Simulated error coming from DevTools"), Me = Si(M);
            s.lanes = Xt(s.lanes, Me);
            var et = mA(s, AS(Se, s), Me);
            Kh(s, et);
            break;
          }
        }
        if (s.type !== s.elementType) {
          var Ke = v.propTypes;
          Ke && th(
            Ke,
            x,
            // Resolved props
            "prop",
            Hr(v)
          );
        }
      }
      var Ct;
      rh(v) ? (Ct = !0, rx(s)) : Ct = !1, Xh(s, M);
      var At = s.stateNode, Wt;
      At === null ? (UM(a, s), tb(s, v, x), nb(s, v, x, M), Wt = !0) : a === null ? Wt = Qh(s, v, x, M) : Wt = iA(a, s, v, x, M);
      var kn = EA(a, s, v, Wt, Ct, M);
      {
        var Sr = s.stateNode;
        Wt && Sr.props !== x && (DS || l("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", rr(s) || "a component"), DS = !0);
      }
      return kn;
    }
    function EA(a, s, v, x, M, N) {
      D3(a, s);
      var G = (s.flags & xr) !== ir;
      if (!x && !G)
        return M && tM(s, v, !1), yg(a, s, N);
      var Q = s.stateNode;
      Mb.current = s;
      var ne;
      if (G && typeof v.getDerivedStateFromError != "function")
        ne = null, Hx();
      else {
        ua(s);
        {
          if (Qr(!0), ne = Q.render(), s.mode & ai) {
            na(!0);
            try {
              Q.render();
            } finally {
              na(!1);
            }
          }
          Qr(!1);
        }
        ya();
      }
      return s.flags |= Li, a !== null && G ? FH(a, s, ne, N) : Tf(a, s, ne, N), s.memoizedState = Q.state, M && tM(s, v, !0), s.child;
    }
    function O3(a) {
      var s = a.stateNode;
      s.pendingContext ? Jw(a, s.pendingContext, s.pendingContext !== s.context) : s.context && Jw(a, s.context, !1), gS(a, s.containerInfo);
    }
    function HH(a, s, v) {
      if (O3(s), a === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var x = s.pendingProps, M = s.memoizedState, N = M.element;
      Sx(a, s), xx(s, x, null, v);
      var G = s.memoizedState;
      s.stateNode;
      var Q = G.element;
      if (M.isDehydrated) {
        var ne = {
          element: Q,
          isDehydrated: !1,
          cache: G.cache,
          pendingSuspenseBoundaries: G.pendingSuspenseBoundaries,
          transitions: G.transitions
        }, Se = s.updateQueue;
        if (Se.baseState = ne, s.memoizedState = ne, s.flags & Ia) {
          var Me = AS(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), s);
          return P3(a, s, Q, v, Me);
        } else if (Q !== N) {
          var et = AS(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), s);
          return P3(a, s, Q, v, et);
        } else {
          sM(s);
          var Ke = bM(s, null, Q, v);
          s.child = Ke;
          for (var Ct = Ke; Ct; )
            Ct.flags = Ct.flags & ~Jr | tl, Ct = Ct.sibling;
        }
      } else {
        if (tv(), Q === N)
          return yg(a, s, v);
        Tf(a, s, Q, v);
      }
      return s.child;
    }
    function P3(a, s, v, x, M) {
      return tv(), lh(M), s.flags |= Ia, Tf(a, s, v, x), s.child;
    }
    function VH(a, s, v) {
      Ax(s), a === null && $E(s);
      var x = s.type, M = s.pendingProps, N = a !== null ? a.memoizedProps : null, G = M.children, Q = TE(x, M);
      return Q ? G = null : N !== null && TE(x, N) && (s.flags |= wi), D3(a, s), Tf(a, s, G, v), s.child;
    }
    function GH(a, s) {
      return a === null && $E(s), null;
    }
    function WH(a, s, v, x) {
      UM(a, s);
      var M = s.pendingProps, N = v, G = N._payload, Q = N._init, ne = Q(G);
      s.type = ne;
      var Se = s.tag = G6(ne), Me = ac(ne, M), et;
      switch (Se) {
        case h:
          return bA(s, ne), s.type = ne = qx(ne), et = xA(null, s, ne, Me, x), et;
        case p:
          return s.type = ne = JA(ne), et = L3(null, s, ne, Me, x), et;
        case F:
          return s.type = ne = eD(ne), et = M3(null, s, ne, Me, x), et;
        case j: {
          if (s.type !== s.elementType) {
            var Ke = ne.propTypes;
            Ke && th(
              Ke,
              Me,
              // Resolved for outer only
              "prop",
              Hr(ne)
            );
          }
          return et = C3(
            null,
            s,
            ne,
            ac(ne.type, Me),
            // The inner type can have defaults too
            x
          ), et;
        }
      }
      var Ct = "";
      throw ne !== null && typeof ne == "object" && ne.$$typeof === je && (Ct = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + ne + ". " + ("Lazy element type must resolve to a class or function." + Ct));
    }
    function jH(a, s, v, x, M) {
      UM(a, s), s.tag = p;
      var N;
      return rh(v) ? (N = !0, rx(s)) : N = !1, Xh(s, M), tb(s, v, x), nb(s, v, x, M), EA(null, s, v, !0, N, M);
    }
    function $H(a, s, v, x) {
      UM(a, s);
      var M = s.pendingProps, N;
      {
        var G = Qm(s, v, !1);
        N = My(s, G);
      }
      Xh(s, x);
      var Q, ne;
      ua(s);
      {
        if (v.prototype && typeof v.prototype.render == "function") {
          var Se = Hr(v) || "Unknown";
          vA[Se] || (l("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", Se, Se), vA[Se] = !0);
        }
        s.mode & ai && ic.recordLegacyContextWarning(s, null), Qr(!0), Mb.current = s, Q = Wy(null, s, v, M, N, x), ne = cv(), Qr(!1);
      }
      if (ya(), s.flags |= Li, typeof Q == "object" && Q !== null && typeof Q.render == "function" && Q.$$typeof === void 0) {
        var Me = Hr(v) || "Unknown";
        Cb[Me] || (l("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", Me, Me, Me), Cb[Me] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof Q == "object" && Q !== null && typeof Q.render == "function" && Q.$$typeof === void 0
      ) {
        {
          var et = Hr(v) || "Unknown";
          Cb[et] || (l("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", et, et, et), Cb[et] = !0);
        }
        s.tag = p, s.memoizedState = null, s.updateQueue = null;
        var Ke = !1;
        return rh(v) ? (Ke = !0, rx(s)) : Ke = !1, s.memoizedState = Q.state !== null && Q.state !== void 0 ? Q.state : null, yx(s), SM(s, Q), nb(s, v, M, x), EA(null, s, v, !0, Ke, x);
      } else {
        if (s.tag = h, s.mode & ai) {
          na(!0);
          try {
            Q = Wy(null, s, v, M, N, x), ne = cv();
          } finally {
            na(!1);
          }
        }
        return Va() && ne && BE(s), Tf(null, s, Q, x), bA(s, v), s.child;
      }
    }
    function bA(a, s) {
      {
        if (s && s.childContextTypes && l("%s(...): childContextTypes cannot be defined on a function component.", s.displayName || s.name || "Component"), a.ref !== null) {
          var v = "", x = Lo();
          x && (v += `

Check the render method of \`` + x + "`.");
          var M = x || "", N = a._debugSource;
          N && (M = N.fileName + ":" + N.lineNumber), SA[M] || (SA[M] = !0, l("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", v));
        }
        if (typeof s.getDerivedStateFromProps == "function") {
          var G = Hr(s) || "Unknown";
          yA[G] || (l("%s: Function components do not support getDerivedStateFromProps.", G), yA[G] = !0);
        }
        if (typeof s.contextType == "object" && s.contextType !== null) {
          var Q = Hr(s) || "Unknown";
          gA[Q] || (l("%s: Function components do not support contextType.", Q), gA[Q] = !0);
        }
      }
    }
    var TA = {
      dehydrated: null,
      treeContext: null,
      retryLane: ci
    };
    function wA(a) {
      return {
        baseLanes: a,
        cachePool: kH(),
        transitions: null
      };
    }
    function YH(a, s) {
      var v = null;
      return {
        baseLanes: Xt(a.baseLanes, s),
        cachePool: v,
        transitions: a.transitions
      };
    }
    function XH(a, s, v, x) {
      if (s !== null) {
        var M = s.memoizedState;
        if (M === null)
          return !1;
      }
      return lv(a, yS);
    }
    function qH(a, s) {
      return Nn(a.childLanes, s);
    }
    function U3(a, s, v) {
      var x = s.pendingProps;
      i8(s) && (s.flags |= xr);
      var M = Jo.current, N = !1, G = (s.flags & xr) !== ir;
      if (G || XH(M, a) ? (N = !0, s.flags &= ~xr) : (a === null || a.memoizedState !== null) && (M = cb(M, MM)), M = Hy(M), Zh(s, M), a === null) {
        $E(s);
        var Q = s.memoizedState;
        if (Q !== null) {
          var ne = Q.dehydrated;
          if (ne !== null)
            return eV(s, ne);
        }
        var Se = x.children, Me = x.fallback;
        if (N) {
          var et = KH(s, Se, Me, v), Ke = s.child;
          return Ke.memoizedState = wA(v), s.memoizedState = TA, et;
        } else
          return MA(s, Se);
      } else {
        var Ct = a.memoizedState;
        if (Ct !== null) {
          var At = Ct.dehydrated;
          if (At !== null)
            return tV(a, s, G, x, At, Ct, v);
        }
        if (N) {
          var Wt = x.fallback, kn = x.children, Sr = ZH(a, s, kn, Wt, v), ur = s.child, Vi = a.child.memoizedState;
          return ur.memoizedState = Vi === null ? wA(v) : YH(Vi, v), ur.childLanes = qH(a, v), s.memoizedState = TA, Sr;
        } else {
          var Pi = x.children, yt = QH(a, s, Pi, v);
          return s.memoizedState = null, yt;
        }
      }
    }
    function MA(a, s, v) {
      var x = a.mode, M = {
        mode: "visible",
        children: s
      }, N = CA(M, x);
      return N.return = a, a.child = N, N;
    }
    function KH(a, s, v, x) {
      var M = a.mode, N = a.child, G = {
        mode: "hidden",
        children: s
      }, Q, ne;
      return (M & Fr) === ar && N !== null ? (Q = N, Q.childLanes = Bt, Q.pendingProps = G, a.mode & or && (Q.actualDuration = 0, Q.actualStartTime = -1, Q.selfBaseDuration = 0, Q.treeBaseDuration = 0), ne = e0(v, M, x, null)) : (Q = CA(G, M), ne = e0(v, M, x, null)), Q.return = a, ne.return = a, Q.sibling = ne, a.child = Q, ne;
    }
    function CA(a, s, v) {
      return NU(a, s, Bt, null);
    }
    function N3(a, s) {
      return NS(a, s);
    }
    function QH(a, s, v, x) {
      var M = a.child, N = M.sibling, G = N3(M, {
        mode: "visible",
        children: v
      });
      if ((s.mode & Fr) === ar && (G.lanes = x), G.return = s, G.sibling = null, N !== null) {
        var Q = s.deletions;
        Q === null ? (s.deletions = [N], s.flags |= hi) : Q.push(N);
      }
      return s.child = G, G;
    }
    function ZH(a, s, v, x, M) {
      var N = s.mode, G = a.child, Q = G.sibling, ne = {
        mode: "hidden",
        children: v
      }, Se;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (N & Fr) === ar && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        s.child !== G
      ) {
        var Me = s.child;
        Se = Me, Se.childLanes = Bt, Se.pendingProps = ne, s.mode & or && (Se.actualDuration = 0, Se.actualStartTime = -1, Se.selfBaseDuration = G.selfBaseDuration, Se.treeBaseDuration = G.treeBaseDuration), s.deletions = null;
      } else
        Se = N3(G, ne), Se.subtreeFlags = G.subtreeFlags & cn;
      var et;
      return Q !== null ? et = NS(Q, x) : (et = e0(x, N, M, null), et.flags |= Jr), et.return = s, Se.return = s, Se.sibling = et, s.child = Se, et;
    }
    function PM(a, s, v, x) {
      x !== null && lh(x), ky(s, a.child, null, v);
      var M = s.pendingProps, N = M.children, G = MA(s, N);
      return G.flags |= Jr, s.memoizedState = null, G;
    }
    function JH(a, s, v, x, M) {
      var N = s.mode, G = {
        mode: "visible",
        children: v
      }, Q = CA(G, N), ne = e0(x, N, M, null);
      return ne.flags |= Jr, Q.return = s, ne.return = s, Q.sibling = ne, s.child = Q, (s.mode & Fr) !== ar && ky(s, a.child, null, M), ne;
    }
    function eV(a, s, v) {
      return (a.mode & Fr) === ar ? (l("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), a.lanes = Kn) : LE(s) ? a.lanes = Yo : a.lanes = Rl, null;
    }
    function tV(a, s, v, x, M, N, G) {
      if (v)
        if (s.flags & Ia) {
          s.flags &= ~Ia;
          var yt = hA(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
          return PM(a, s, G, yt);
        } else {
          if (s.memoizedState !== null)
            return s.child = a.child, s.flags |= xr, null;
          var jt = x.children, St = x.fallback, un = JH(a, s, jt, St, G), Fn = s.child;
          return Fn.memoizedState = wA(G), s.memoizedState = TA, un;
        }
      else {
        if (HE(), (s.mode & Fr) === ar)
          return PM(
            a,
            s,
            G,
            // TODO: When we delete legacy mode, we should make this error argument
            // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null
          );
        if (LE(M)) {
          var Q, ne, Se;
          {
            var Me = Vw(M);
            Q = Me.digest, ne = Me.message, Se = Me.stack;
          }
          var et;
          ne ? et = new Error(ne) : et = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
          var Ke = hA(et, Q, Se);
          return PM(a, s, G, Ke);
        }
        var Ct = Xe(G, a.childLanes);
        if (Zp || Ct) {
          var At = WM();
          if (At !== null) {
            var Wt = Kg(At, G);
            if (Wt !== ci && Wt !== N.retryLane) {
              N.retryLane = Wt;
              var kn = oi;
              nu(a, Wt), cu(At, a, Wt, kn);
            }
          }
          XA();
          var Sr = hA(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
          return PM(a, s, G, Sr);
        } else if (DE(M)) {
          s.flags |= xr, s.child = a.child;
          var ur = M6.bind(null, a);
          return H2(M, ur), null;
        } else {
          J2(s, M, N.treeContext);
          var Vi = x.children, Pi = MA(s, Vi);
          return Pi.flags |= tl, Pi;
        }
      }
    }
    function k3(a, s, v) {
      a.lanes = Xt(a.lanes, s);
      var x = a.alternate;
      x !== null && (x.lanes = Xt(x.lanes, s)), iv(a.return, s, v);
    }
    function nV(a, s, v) {
      for (var x = s; x !== null; ) {
        if (x.tag === B) {
          var M = x.memoizedState;
          M !== null && k3(x, v, a);
        } else if (x.tag === fe)
          k3(x, v, a);
        else if (x.child !== null) {
          x.child.return = x, x = x.child;
          continue;
        }
        if (x === a)
          return;
        for (; x.sibling === null; ) {
          if (x.return === null || x.return === a)
            return;
          x = x.return;
        }
        x.sibling.return = x.return, x = x.sibling;
      }
    }
    function rV(a) {
      for (var s = a, v = null; s !== null; ) {
        var x = s.alternate;
        x !== null && Dx(x) === null && (v = s), s = s.sibling;
      }
      return v;
    }
    function iV(a) {
      if (a !== void 0 && a !== "forwards" && a !== "backwards" && a !== "together" && !_A[a])
        if (_A[a] = !0, typeof a == "string")
          switch (a.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              l('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', a, a.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              l('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', a, a.toLowerCase());
              break;
            }
            default:
              l('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', a);
              break;
          }
        else
          l('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', a);
    }
    function aV(a, s) {
      a !== void 0 && !OM[a] && (a !== "collapsed" && a !== "hidden" ? (OM[a] = !0, l('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', a)) : s !== "forwards" && s !== "backwards" && (OM[a] = !0, l('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', a)));
    }
    function F3(a, s) {
      {
        var v = ii(a), x = !v && typeof Wr(a) == "function";
        if (v || x) {
          var M = v ? "array" : "iterable";
          return l("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", M, s, M), !1;
        }
      }
      return !0;
    }
    function oV(a, s) {
      if ((s === "forwards" || s === "backwards") && a !== void 0 && a !== null && a !== !1)
        if (ii(a)) {
          for (var v = 0; v < a.length; v++)
            if (!F3(a[v], v))
              return;
        } else {
          var x = Wr(a);
          if (typeof x == "function") {
            var M = x.call(a);
            if (M)
              for (var N = M.next(), G = 0; !N.done; N = M.next()) {
                if (!F3(N.value, G))
                  return;
                G++;
              }
          } else
            l('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', s);
        }
    }
    function RA(a, s, v, x, M) {
      var N = a.memoizedState;
      N === null ? a.memoizedState = {
        isBackwards: s,
        rendering: null,
        renderingStartTime: 0,
        last: x,
        tail: v,
        tailMode: M
      } : (N.isBackwards = s, N.rendering = null, N.renderingStartTime = 0, N.last = x, N.tail = v, N.tailMode = M);
    }
    function z3(a, s, v) {
      var x = s.pendingProps, M = x.revealOrder, N = x.tail, G = x.children;
      iV(M), aV(N, M), oV(G, M), Tf(a, s, G, v);
      var Q = Jo.current, ne = lv(Q, yS);
      if (ne)
        Q = uv(Q, yS), s.flags |= xr;
      else {
        var Se = a !== null && (a.flags & xr) !== ir;
        Se && nV(s, s.child, v), Q = Hy(Q);
      }
      if (Zh(s, Q), (s.mode & Fr) === ar)
        s.memoizedState = null;
      else
        switch (M) {
          case "forwards": {
            var Me = rV(s.child), et;
            Me === null ? (et = s.child, s.child = null) : (et = Me.sibling, Me.sibling = null), RA(
              s,
              !1,
              // isBackwards
              et,
              Me,
              N
            );
            break;
          }
          case "backwards": {
            var Ke = null, Ct = s.child;
            for (s.child = null; Ct !== null; ) {
              var At = Ct.alternate;
              if (At !== null && Dx(At) === null) {
                s.child = Ct;
                break;
              }
              var Wt = Ct.sibling;
              Ct.sibling = Ke, Ke = Ct, Ct = Wt;
            }
            RA(
              s,
              !0,
              // isBackwards
              Ke,
              null,
              // last
              N
            );
            break;
          }
          case "together": {
            RA(
              s,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            s.memoizedState = null;
        }
      return s.child;
    }
    function sV(a, s, v) {
      gS(s, s.stateNode.containerInfo);
      var x = s.pendingProps;
      return a === null ? s.child = ky(s, null, x, v) : Tf(a, s, x, v), s.child;
    }
    var I3 = !1;
    function lV(a, s, v) {
      var x = s.type, M = x._context, N = s.pendingProps, G = s.memoizedProps, Q = N.value;
      {
        "value" in N || I3 || (I3 = !0, l("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var ne = s.type.propTypes;
        ne && th(ne, N, "prop", "Context.Provider");
      }
      if (cS(s, M, Q), G !== null) {
        var Se = G.value;
        if (Vn(Se, Q)) {
          if (G.children === N.children && !Cy())
            return yg(a, s, v);
        } else
          lg(s, M, v);
      }
      var Me = N.children;
      return Tf(a, s, Me, v), s.child;
    }
    var B3 = !1;
    function uV(a, s, v) {
      var x = s.type;
      x._context === void 0 ? x !== x.Consumer && (B3 || (B3 = !0, l("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : x = x._context;
      var M = s.pendingProps, N = M.children;
      typeof N != "function" && l("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), Xh(s, v);
      var G = Qo(x);
      ua(s);
      var Q;
      return Mb.current = s, Qr(!0), Q = N(G), Qr(!1), ya(), s.flags |= Li, Tf(a, s, Q, v), s.child;
    }
    function Rb() {
      Zp = !0;
    }
    function UM(a, s) {
      (s.mode & Fr) === ar && a !== null && (a.alternate = null, s.alternate = null, s.flags |= Jr);
    }
    function yg(a, s, v) {
      return a !== null && (s.dependencies = a.dependencies), Hx(), Bb(s.lanes), Xe(v, s.childLanes) ? (aA(a, s), s.child) : null;
    }
    function cV(a, s, v) {
      {
        var x = s.return;
        if (x === null)
          throw new Error("Cannot swap the root fiber.");
        if (a.alternate = null, s.alternate = null, v.index = s.index, v.sibling = s.sibling, v.return = s.return, v.ref = s.ref, s === x.child)
          x.child = v;
        else {
          var M = x.child;
          if (M === null)
            throw new Error("Expected parent to have a child.");
          for (; M.sibling !== s; )
            if (M = M.sibling, M === null)
              throw new Error("Expected to find the previous sibling.");
          M.sibling = v;
        }
        var N = x.deletions;
        return N === null ? (x.deletions = [a], x.flags |= hi) : N.push(a), v.flags |= Jr, v;
      }
    }
    function AA(a, s) {
      var v = a.lanes;
      return !!Xe(v, s);
    }
    function fV(a, s, v) {
      switch (s.tag) {
        case _:
          O3(s), s.stateNode, tv();
          break;
        case w:
          Ax(s);
          break;
        case p: {
          var x = s.type;
          rh(x) && rx(s);
          break;
        }
        case E:
          gS(s, s.stateNode.containerInfo);
          break;
        case k: {
          var M = s.memoizedProps.value, N = s.type._context;
          cS(s, N, M);
          break;
        }
        case H:
          {
            var G = Xe(v, s.childLanes);
            G && (s.flags |= Yn);
            {
              var Q = s.stateNode;
              Q.effectDuration = 0, Q.passiveEffectDuration = 0;
            }
          }
          break;
        case B: {
          var ne = s.memoizedState;
          if (ne !== null) {
            if (ne.dehydrated !== null)
              return Zh(s, Hy(Jo.current)), s.flags |= xr, null;
            var Se = s.child, Me = Se.childLanes;
            if (Xe(v, Me))
              return U3(a, s, v);
            Zh(s, Hy(Jo.current));
            var et = yg(a, s, v);
            return et !== null ? et.sibling : null;
          } else
            Zh(s, Hy(Jo.current));
          break;
        }
        case fe: {
          var Ke = (a.flags & xr) !== ir, Ct = Xe(v, s.childLanes);
          if (Ke) {
            if (Ct)
              return z3(a, s, v);
            s.flags |= xr;
          }
          var At = s.memoizedState;
          if (At !== null && (At.rendering = null, At.tail = null, At.lastEffect = null), Zh(s, Jo.current), Ct)
            break;
          return null;
        }
        case he:
        case me:
          return s.lanes = Bt, A3(a, s, v);
      }
      return yg(a, s, v);
    }
    function H3(a, s, v) {
      if (s._debugNeedsRemount && a !== null)
        return cV(a, s, aD(s.type, s.key, s.pendingProps, s._debugOwner || null, s.mode, s.lanes));
      if (a !== null) {
        var x = a.memoizedProps, M = s.pendingProps;
        if (x !== M || Cy() || // Force a re-render if the implementation changed due to hot reload:
        s.type !== a.type)
          Zp = !0;
        else {
          var N = AA(a, v);
          if (!N && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (s.flags & xr) === ir)
            return Zp = !1, fV(a, s, v);
          (a.flags & wh) !== ir ? Zp = !0 : Zp = !1;
        }
      } else if (Zp = !1, Va() && aM(s)) {
        var G = s.index, Q = ld();
        oM(s, Q, G);
      }
      switch (s.lanes = Bt, s.tag) {
        case y:
          return $H(a, s, s.type, v);
        case ee: {
          var ne = s.elementType;
          return WH(a, s, ne, v);
        }
        case h: {
          var Se = s.type, Me = s.pendingProps, et = s.elementType === Se ? Me : ac(Se, Me);
          return xA(a, s, Se, et, v);
        }
        case p: {
          var Ke = s.type, Ct = s.pendingProps, At = s.elementType === Ke ? Ct : ac(Ke, Ct);
          return L3(a, s, Ke, At, v);
        }
        case _:
          return HH(a, s, v);
        case w:
          return VH(a, s, v);
        case R:
          return GH(a, s);
        case B:
          return U3(a, s, v);
        case E:
          return sV(a, s, v);
        case F: {
          var Wt = s.type, kn = s.pendingProps, Sr = s.elementType === Wt ? kn : ac(Wt, kn);
          return M3(a, s, Wt, Sr, v);
        }
        case U:
          return zH(a, s, v);
        case L:
          return IH(a, s, v);
        case H:
          return BH(a, s, v);
        case k:
          return lV(a, s, v);
        case A:
          return uV(a, s, v);
        case j: {
          var ur = s.type, Vi = s.pendingProps, Pi = ac(ur, Vi);
          if (s.type !== s.elementType) {
            var yt = ur.propTypes;
            yt && th(
              yt,
              Pi,
              // Resolved for outer only
              "prop",
              Hr(ur)
            );
          }
          return Pi = ac(ur.type, Pi), C3(a, s, ur, Pi, v);
        }
        case Y:
          return R3(a, s, s.type, s.pendingProps, v);
        case Z: {
          var jt = s.type, St = s.pendingProps, un = s.elementType === jt ? St : ac(jt, St);
          return jH(a, s, jt, un, v);
        }
        case fe:
          return z3(a, s, v);
        case se:
          break;
        case he:
          return A3(a, s, v);
      }
      throw new Error("Unknown unit of work tag (" + s.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function Vx(a) {
      a.flags |= Yn;
    }
    function V3(a) {
      a.flags |= Rs, a.flags |= $f;
    }
    var G3, DA, W3, j3;
    G3 = function(a, s, v, x) {
      for (var M = s.child; M !== null; ) {
        if (M.tag === w || M.tag === R)
          R2(a, M.stateNode);
        else if (M.tag !== E) {
          if (M.child !== null) {
            M.child.return = M, M = M.child;
            continue;
          }
        }
        if (M === s)
          return;
        for (; M.sibling === null; ) {
          if (M.return === null || M.return === s)
            return;
          M = M.return;
        }
        M.sibling.return = M.return, M = M.sibling;
      }
    }, DA = function(a, s) {
    }, W3 = function(a, s, v, x, M) {
      var N = a.memoizedProps;
      if (N !== x) {
        var G = s.stateNode, Q = dg(), ne = A2(G, v, N, x, M, Q);
        s.updateQueue = ne, ne && Vx(s);
      }
    }, j3 = function(a, s, v, x) {
      v !== x && Vx(s);
    };
    function Ab(a, s) {
      if (!Va())
        switch (a.tailMode) {
          case "hidden": {
            for (var v = a.tail, x = null; v !== null; )
              v.alternate !== null && (x = v), v = v.sibling;
            x === null ? a.tail = null : x.sibling = null;
            break;
          }
          case "collapsed": {
            for (var M = a.tail, N = null; M !== null; )
              M.alternate !== null && (N = M), M = M.sibling;
            N === null ? !s && a.tail !== null ? a.tail.sibling = null : a.tail = null : N.sibling = null;
            break;
          }
        }
    }
    function oc(a) {
      var s = a.alternate !== null && a.alternate.child === a.child, v = Bt, x = ir;
      if (s) {
        if ((a.mode & or) !== ar) {
          for (var ne = a.selfBaseDuration, Se = a.child; Se !== null; )
            v = Xt(v, Xt(Se.lanes, Se.childLanes)), x |= Se.subtreeFlags & cn, x |= Se.flags & cn, ne += Se.treeBaseDuration, Se = Se.sibling;
          a.treeBaseDuration = ne;
        } else
          for (var Me = a.child; Me !== null; )
            v = Xt(v, Xt(Me.lanes, Me.childLanes)), x |= Me.subtreeFlags & cn, x |= Me.flags & cn, Me.return = a, Me = Me.sibling;
        a.subtreeFlags |= x;
      } else {
        if ((a.mode & or) !== ar) {
          for (var M = a.actualDuration, N = a.selfBaseDuration, G = a.child; G !== null; )
            v = Xt(v, Xt(G.lanes, G.childLanes)), x |= G.subtreeFlags, x |= G.flags, M += G.actualDuration, N += G.treeBaseDuration, G = G.sibling;
          a.actualDuration = M, a.treeBaseDuration = N;
        } else
          for (var Q = a.child; Q !== null; )
            v = Xt(v, Xt(Q.lanes, Q.childLanes)), x |= Q.subtreeFlags, x |= Q.flags, Q.return = a, Q = Q.sibling;
        a.subtreeFlags |= x;
      }
      return a.childLanes = v, s;
    }
    function dV(a, s, v) {
      if (sh() && (s.mode & Fr) !== ar && (s.flags & xr) === ir)
        return ds(s), tv(), s.flags |= Ia | As | Uo, !1;
      var x = eo(s);
      if (v !== null && v.dehydrated !== null)
        if (a === null) {
          if (!x)
            throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
          if (tA(s), oc(s), (s.mode & or) !== ar) {
            var M = v !== null;
            if (M) {
              var N = s.child;
              N !== null && (s.treeBaseDuration -= N.treeBaseDuration);
            }
          }
          return !1;
        } else {
          if (tv(), (s.flags & xr) === ir && (s.memoizedState = null), s.flags |= Yn, oc(s), (s.mode & or) !== ar) {
            var G = v !== null;
            if (G) {
              var Q = s.child;
              Q !== null && (s.treeBaseDuration -= Q.treeBaseDuration);
            }
          }
          return !1;
        }
      else
        return eu(), !0;
    }
    function $3(a, s, v) {
      var x = s.pendingProps;
      switch (Ly(s), s.tag) {
        case y:
        case ee:
        case Y:
        case h:
        case F:
        case U:
        case L:
        case H:
        case A:
        case j:
          return oc(s), null;
        case p: {
          var M = s.type;
          return rh(M) && nx(s), oc(s), null;
        }
        case _: {
          var N = s.stateNode;
          if (Iy(s), Ry(s), SS(), N.pendingContext && (N.context = N.pendingContext, N.pendingContext = null), a === null || a.child === null) {
            var G = eo(s);
            if (G)
              Vx(s);
            else if (a !== null) {
              var Q = a.memoizedState;
              // Check if this is a client root
              (!Q.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (s.flags & Ia) !== ir) && (s.flags |= el, eu());
            }
          }
          return DA(a, s), oc(s), null;
        }
        case w: {
          By(s);
          var ne = lb(), Se = s.type;
          if (a !== null && s.stateNode != null)
            W3(a, s, Se, x, ne), a.ref !== s.ref && V3(s);
          else {
            if (!x) {
              if (s.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return oc(s), null;
            }
            var Me = dg(), et = eo(s);
            if (et)
              eA(s, ne, Me) && Vx(s);
            else {
              var Ke = Ow(Se, x, ne, Me, s);
              G3(Ke, s, !1, !1), s.stateNode = Ke, Pw(Ke, Se, x, ne) && Vx(s);
            }
            s.ref !== null && V3(s);
          }
          return oc(s), null;
        }
        case R: {
          var Ct = x;
          if (a && s.stateNode != null) {
            var At = a.memoizedProps;
            j3(a, s, At, Ct);
          } else {
            if (typeof Ct != "string" && s.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var Wt = lb(), kn = dg(), Sr = eo(s);
            Sr ? cM(s) && Vx(s) : s.stateNode = D2(Ct, Wt, kn, s);
          }
          return oc(s), null;
        }
        case B: {
          hg(s);
          var ur = s.memoizedState;
          if (a === null || a.memoizedState !== null && a.memoizedState.dehydrated !== null) {
            var Vi = dV(a, s, ur);
            if (!Vi)
              return s.flags & Uo ? s : null;
          }
          if ((s.flags & xr) !== ir)
            return s.lanes = v, (s.mode & or) !== ar && dA(s), s;
          var Pi = ur !== null, yt = a !== null && a.memoizedState !== null;
          if (Pi !== yt && Pi) {
            var jt = s.child;
            if (jt.flags |= _c, (s.mode & Fr) !== ar) {
              var St = a === null && (s.memoizedProps.unstable_avoidThisFallback !== !0 || !q);
              St || lv(Jo.current, MM) ? h6() : XA();
            }
          }
          var un = s.updateQueue;
          if (un !== null && (s.flags |= Yn), oc(s), (s.mode & or) !== ar && Pi) {
            var Fn = s.child;
            Fn !== null && (s.treeBaseDuration -= Fn.treeBaseDuration);
          }
          return null;
        }
        case E:
          return Iy(s), DA(a, s), a === null && Ty(s.stateNode.containerInfo), oc(s), null;
        case k:
          var On = s.type._context;
          return fS(On, s), oc(s), null;
        case Z: {
          var Ur = s.type;
          return rh(Ur) && nx(s), oc(s), null;
        }
        case fe: {
          hg(s);
          var Xr = s.memoizedState;
          if (Xr === null)
            return oc(s), null;
          var Ua = (s.flags & xr) !== ir, ia = Xr.rendering;
          if (ia === null)
            if (Ua)
              Ab(Xr, !1);
            else {
              var dl = m6() && (a === null || (a.flags & xr) === ir);
              if (!dl)
                for (var aa = s.child; aa !== null; ) {
                  var Hs = Dx(aa);
                  if (Hs !== null) {
                    Ua = !0, s.flags |= xr, Ab(Xr, !1);
                    var zc = Hs.updateQueue;
                    return zc !== null && (s.updateQueue = zc, s.flags |= Yn), s.subtreeFlags = ir, TM(s, v), Zh(s, uv(Jo.current, yS)), s.child;
                  }
                  aa = aa.sibling;
                }
              Xr.tail !== null && Ta() > hU() && (s.flags |= xr, Ua = !0, Ab(Xr, !1), s.lanes = hf);
            }
          else {
            if (!Ua) {
              var fc = Dx(ia);
              if (fc !== null) {
                s.flags |= xr, Ua = !0;
                var fh = fc.updateQueue;
                if (fh !== null && (s.updateQueue = fh, s.flags |= Yn), Ab(Xr, !0), Xr.tail === null && Xr.tailMode === "hidden" && !ia.alternate && !Va())
                  return oc(s), null;
              } else
                // The time it took to render last row is greater than the remaining
                // time we have to render. So rendering one more row would likely
                // exceed it.
                Ta() * 2 - Xr.renderingStartTime > hU() && v !== Rl && (s.flags |= xr, Ua = !0, Ab(Xr, !1), s.lanes = hf);
            }
            if (Xr.isBackwards)
              ia.sibling = s.child, s.child = ia;
            else {
              var Cf = Xr.last;
              Cf !== null ? Cf.sibling = ia : s.child = ia, Xr.last = ia;
            }
          }
          if (Xr.tail !== null) {
            var Rf = Xr.tail;
            Xr.rendering = Rf, Xr.tail = Rf.sibling, Xr.renderingStartTime = Ta(), Rf.sibling = null;
            var Ic = Jo.current;
            return Ua ? Ic = uv(Ic, yS) : Ic = Hy(Ic), Zh(s, Ic), Rf;
          }
          return oc(s), null;
        }
        case se:
          break;
        case he:
        case me: {
          YA(s);
          var bg = s.memoizedState, Kx = bg !== null;
          if (a !== null) {
            var jb = a.memoizedState, pv = jb !== null;
            pv !== Kx && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !X && (s.flags |= _c);
          }
          return !Kx || (s.mode & Fr) === ar ? oc(s) : Xe(hv, Rl) && (oc(s), s.subtreeFlags & (Jr | Yn) && (s.flags |= _c)), null;
        }
        case Ee:
          return null;
        case be:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + s.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function hV(a, s, v) {
      switch (Ly(s), s.tag) {
        case p: {
          var x = s.type;
          rh(x) && nx(s);
          var M = s.flags;
          return M & Uo ? (s.flags = M & ~Uo | xr, (s.mode & or) !== ar && dA(s), s) : null;
        }
        case _: {
          s.stateNode, Iy(s), Ry(s), SS();
          var N = s.flags;
          return (N & Uo) !== ir && (N & xr) === ir ? (s.flags = N & ~Uo | xr, s) : null;
        }
        case w:
          return By(s), null;
        case B: {
          hg(s);
          var G = s.memoizedState;
          if (G !== null && G.dehydrated !== null) {
            if (s.alternate === null)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            tv();
          }
          var Q = s.flags;
          return Q & Uo ? (s.flags = Q & ~Uo | xr, (s.mode & or) !== ar && dA(s), s) : null;
        }
        case fe:
          return hg(s), null;
        case E:
          return Iy(s), null;
        case k:
          var ne = s.type._context;
          return fS(ne, s), null;
        case he:
        case me:
          return YA(s), null;
        case Ee:
          return null;
        default:
          return null;
      }
    }
    function Y3(a, s, v) {
      switch (Ly(s), s.tag) {
        case p: {
          var x = s.type.childContextTypes;
          x != null && nx(s);
          break;
        }
        case _: {
          s.stateNode, Iy(s), Ry(s), SS();
          break;
        }
        case w: {
          By(s);
          break;
        }
        case E:
          Iy(s);
          break;
        case B:
          hg(s);
          break;
        case fe:
          hg(s);
          break;
        case k:
          var M = s.type._context;
          fS(M, s);
          break;
        case he:
        case me:
          YA(s);
          break;
      }
    }
    var X3 = null;
    X3 = /* @__PURE__ */ new Set();
    var NM = !1, sc = !1, pV = typeof WeakSet == "function" ? WeakSet : Set, Xn = null, Gx = null, Wx = null;
    function mV(a) {
      Sc(null, function() {
        throw a;
      }), Id();
    }
    var vV = function(a, s) {
      if (s.props = a.memoizedProps, s.state = a.memoizedState, a.mode & or)
        try {
          fv(), s.componentWillUnmount();
        } finally {
          rp(a);
        }
      else
        s.componentWillUnmount();
    };
    function q3(a, s) {
      try {
        qy(ms, a);
      } catch (v) {
        po(a, s, v);
      }
    }
    function LA(a, s, v) {
      try {
        vV(a, v);
      } catch (x) {
        po(a, s, x);
      }
    }
    function gV(a, s, v) {
      try {
        v.componentDidMount();
      } catch (x) {
        po(a, s, x);
      }
    }
    function K3(a, s) {
      try {
        Z3(a);
      } catch (v) {
        po(a, s, v);
      }
    }
    function jx(a, s) {
      var v = a.ref;
      if (v !== null)
        if (typeof v == "function") {
          var x;
          try {
            if (Ne && Pe && a.mode & or)
              try {
                fv(), x = v(null);
              } finally {
                rp(a);
              }
            else
              x = v(null);
          } catch (M) {
            po(a, s, M);
          }
          typeof x == "function" && l("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", rr(a));
        } else
          v.current = null;
    }
    function kM(a, s, v) {
      try {
        v();
      } catch (x) {
        po(a, s, x);
      }
    }
    var Q3 = !1;
    function yV(a, s) {
      Lw(a.containerInfo), Xn = s, SV();
      var v = Q3;
      return Q3 = !1, v;
    }
    function SV() {
      for (; Xn !== null; ) {
        var a = Xn, s = a.child;
        (a.subtreeFlags & Rr) !== ir && s !== null ? (s.return = a, Xn = s) : _V();
      }
    }
    function _V() {
      for (; Xn !== null; ) {
        var a = Xn;
        Ti(a);
        try {
          xV(a);
        } catch (v) {
          po(a, a.return, v);
        }
        oa();
        var s = a.sibling;
        if (s !== null) {
          s.return = a.return, Xn = s;
          return;
        }
        Xn = a.return;
      }
    }
    function xV(a) {
      var s = a.alternate, v = a.flags;
      if ((v & el) !== ir) {
        switch (Ti(a), a.tag) {
          case h:
          case F:
          case Y:
            break;
          case p: {
            if (s !== null) {
              var x = s.memoizedProps, M = s.memoizedState, N = a.stateNode;
              a.type === a.elementType && !DS && (N.props !== a.memoizedProps && l("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", rr(a) || "instance"), N.state !== a.memoizedState && l("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", rr(a) || "instance"));
              var G = N.getSnapshotBeforeUpdate(a.elementType === a.type ? x : ac(a.type, x), M);
              {
                var Q = X3;
                G === void 0 && !Q.has(a.type) && (Q.add(a.type), l("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", rr(a)));
              }
              N.__reactInternalSnapshotBeforeUpdate = G;
            }
            break;
          }
          case _: {
            {
              var ne = a.stateNode;
              I2(ne.containerInfo);
            }
            break;
          }
          case w:
          case R:
          case E:
          case Z:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        oa();
      }
    }
    function Jp(a, s, v) {
      var x = s.updateQueue, M = x !== null ? x.lastEffect : null;
      if (M !== null) {
        var N = M.next, G = N;
        do {
          if ((G.tag & a) === a) {
            var Q = G.destroy;
            G.destroy = void 0, Q !== void 0 && ((a & iu) !== Uc ? of(s) : (a & ms) !== Uc && Tu(s), (a & Jh) !== Uc && Vb(!0), kM(s, v, Q), (a & Jh) !== Uc && Vb(!1), (a & iu) !== Uc ? xo() : (a & ms) !== Uc && Xf());
          }
          G = G.next;
        } while (G !== N);
      }
    }
    function qy(a, s) {
      var v = s.updateQueue, x = v !== null ? v.lastEffect : null;
      if (x !== null) {
        var M = x.next, N = M;
        do {
          if ((N.tag & a) === a) {
            (a & iu) !== Uc ? gi(s) : (a & ms) !== Uc && Vd(s);
            var G = N.create;
            (a & Jh) !== Uc && Vb(!0), N.destroy = G(), (a & Jh) !== Uc && Vb(!1), (a & iu) !== Uc ? nl() : (a & ms) !== Uc && qu();
            {
              var Q = N.destroy;
              if (Q !== void 0 && typeof Q != "function") {
                var ne = void 0;
                (N.tag & ms) !== ir ? ne = "useLayoutEffect" : (N.tag & Jh) !== ir ? ne = "useInsertionEffect" : ne = "useEffect";
                var Se = void 0;
                Q === null ? Se = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof Q.then == "function" ? Se = `

It looks like you wrote ` + ne + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + ne + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : Se = " You returned: " + Q, l("%s must not return anything besides a function, which is used for clean-up.%s", ne, Se);
              }
            }
          }
          N = N.next;
        } while (N !== M);
      }
    }
    function EV(a, s) {
      if ((s.flags & Yn) !== ir)
        switch (s.tag) {
          case H: {
            var v = s.stateNode.passiveEffectDuration, x = s.memoizedProps, M = x.id, N = x.onPostCommit, G = gg(), Q = s.alternate === null ? "mount" : "update";
            kc() && (Q = "nested-update"), typeof N == "function" && N(M, Q, v, G);
            var ne = s.return;
            e:
              for (; ne !== null; ) {
                switch (ne.tag) {
                  case _:
                    var Se = ne.stateNode;
                    Se.passiveEffectDuration += v;
                    break e;
                  case H:
                    var Me = ne.stateNode;
                    Me.passiveEffectDuration += v;
                    break e;
                }
                ne = ne.return;
              }
            break;
          }
        }
    }
    function bV(a, s, v, x) {
      if ((v.flags & Ba) !== ir)
        switch (v.tag) {
          case h:
          case F:
          case Y: {
            if (!sc)
              if (v.mode & or)
                try {
                  fv(), qy(ms | ps, v);
                } finally {
                  rp(v);
                }
              else
                qy(ms | ps, v);
            break;
          }
          case p: {
            var M = v.stateNode;
            if (v.flags & Yn && !sc)
              if (s === null)
                if (v.type === v.elementType && !DS && (M.props !== v.memoizedProps && l("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", rr(v) || "instance"), M.state !== v.memoizedState && l("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", rr(v) || "instance")), v.mode & or)
                  try {
                    fv(), M.componentDidMount();
                  } finally {
                    rp(v);
                  }
                else
                  M.componentDidMount();
              else {
                var N = v.elementType === v.type ? s.memoizedProps : ac(v.type, s.memoizedProps), G = s.memoizedState;
                if (v.type === v.elementType && !DS && (M.props !== v.memoizedProps && l("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", rr(v) || "instance"), M.state !== v.memoizedState && l("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", rr(v) || "instance")), v.mode & or)
                  try {
                    fv(), M.componentDidUpdate(N, G, M.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    rp(v);
                  }
                else
                  M.componentDidUpdate(N, G, M.__reactInternalSnapshotBeforeUpdate);
              }
            var Q = v.updateQueue;
            Q !== null && (v.type === v.elementType && !DS && (M.props !== v.memoizedProps && l("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", rr(v) || "instance"), M.state !== v.memoizedState && l("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", rr(v) || "instance")), hS(v, Q, M));
            break;
          }
          case _: {
            var ne = v.updateQueue;
            if (ne !== null) {
              var Se = null;
              if (v.child !== null)
                switch (v.child.tag) {
                  case w:
                    Se = v.child.stateNode;
                    break;
                  case p:
                    Se = v.child.stateNode;
                    break;
                }
              hS(v, ne, Se);
            }
            break;
          }
          case w: {
            var Me = v.stateNode;
            if (s === null && v.flags & Yn) {
              var et = v.type, Ke = v.memoizedProps;
              Nw(Me, et, Ke);
            }
            break;
          }
          case R:
            break;
          case E:
            break;
          case H: {
            {
              var Ct = v.memoizedProps, At = Ct.onCommit, Wt = Ct.onRender, kn = v.stateNode.effectDuration, Sr = gg(), ur = s === null ? "mount" : "update";
              kc() && (ur = "nested-update"), typeof Wt == "function" && Wt(v.memoizedProps.id, ur, v.actualDuration, v.treeBaseDuration, v.actualStartTime, Sr);
              {
                typeof At == "function" && At(v.memoizedProps.id, ur, kn, Sr), _6(v);
                var Vi = v.return;
                e:
                  for (; Vi !== null; ) {
                    switch (Vi.tag) {
                      case _:
                        var Pi = Vi.stateNode;
                        Pi.effectDuration += kn;
                        break e;
                      case H:
                        var yt = Vi.stateNode;
                        yt.effectDuration += kn;
                        break e;
                    }
                    Vi = Vi.return;
                  }
              }
            }
            break;
          }
          case B: {
            LV(a, v);
            break;
          }
          case fe:
          case Z:
          case se:
          case he:
          case me:
          case be:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      sc || v.flags & Rs && Z3(v);
    }
    function TV(a) {
      switch (a.tag) {
        case h:
        case F:
        case Y: {
          if (a.mode & or)
            try {
              fv(), q3(a, a.return);
            } finally {
              rp(a);
            }
          else
            q3(a, a.return);
          break;
        }
        case p: {
          var s = a.stateNode;
          typeof s.componentDidMount == "function" && gV(a, a.return, s), K3(a, a.return);
          break;
        }
        case w: {
          K3(a, a.return);
          break;
        }
      }
    }
    function wV(a, s) {
      for (var v = null, x = a; ; ) {
        if (x.tag === w) {
          if (v === null) {
            v = x;
            try {
              var M = x.stateNode;
              s ? Bw(M) : F2(x.stateNode, x.memoizedProps);
            } catch (G) {
              po(a, a.return, G);
            }
          }
        } else if (x.tag === R) {
          if (v === null)
            try {
              var N = x.stateNode;
              s ? k2(N) : z2(N, x.memoizedProps);
            } catch (G) {
              po(a, a.return, G);
            }
        } else if (!((x.tag === he || x.tag === me) && x.memoizedState !== null && x !== a)) {
          if (x.child !== null) {
            x.child.return = x, x = x.child;
            continue;
          }
        }
        if (x === a)
          return;
        for (; x.sibling === null; ) {
          if (x.return === null || x.return === a)
            return;
          v === x && (v = null), x = x.return;
        }
        v === x && (v = null), x.sibling.return = x.return, x = x.sibling;
      }
    }
    function Z3(a) {
      var s = a.ref;
      if (s !== null) {
        var v = a.stateNode, x;
        switch (a.tag) {
          case w:
            x = v;
            break;
          default:
            x = v;
        }
        if (typeof s == "function") {
          var M;
          if (a.mode & or)
            try {
              fv(), M = s(x);
            } finally {
              rp(a);
            }
          else
            M = s(x);
          typeof M == "function" && l("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", rr(a));
        } else
          s.hasOwnProperty("current") || l("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", rr(a)), s.current = x;
      }
    }
    function MV(a) {
      var s = a.alternate;
      s !== null && (s.return = null), a.return = null;
    }
    function J3(a) {
      var s = a.alternate;
      s !== null && (a.alternate = null, J3(s));
      {
        if (a.child = null, a.deletions = null, a.sibling = null, a.tag === w) {
          var v = a.stateNode;
          v !== null && ex(v);
        }
        a.stateNode = null, a._debugOwner = null, a.return = null, a.dependencies = null, a.memoizedProps = null, a.memoizedState = null, a.pendingProps = null, a.stateNode = null, a.updateQueue = null;
      }
    }
    function CV(a) {
      for (var s = a.return; s !== null; ) {
        if (eU(s))
          return s;
        s = s.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function eU(a) {
      return a.tag === w || a.tag === _ || a.tag === E;
    }
    function tU(a) {
      var s = a;
      e:
        for (; ; ) {
          for (; s.sibling === null; ) {
            if (s.return === null || eU(s.return))
              return null;
            s = s.return;
          }
          for (s.sibling.return = s.return, s = s.sibling; s.tag !== w && s.tag !== R && s.tag !== K; ) {
            if (s.flags & Jr || s.child === null || s.tag === E)
              continue e;
            s.child.return = s, s = s.child;
          }
          if (!(s.flags & Jr))
            return s.stateNode;
        }
    }
    function RV(a) {
      var s = CV(a);
      switch (s.tag) {
        case w: {
          var v = s.stateNode;
          s.flags & wi && (q_(v), s.flags &= ~wi);
          var x = tU(a);
          PA(a, x, v);
          break;
        }
        case _:
        case E: {
          var M = s.stateNode.containerInfo, N = tU(a);
          OA(a, N, M);
          break;
        }
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function OA(a, s, v) {
      var x = a.tag, M = x === w || x === R;
      if (M) {
        var N = a.stateNode;
        s ? Iw(v, N, s) : Fw(v, N);
      } else if (x !== E) {
        var G = a.child;
        if (G !== null) {
          OA(G, s, v);
          for (var Q = G.sibling; Q !== null; )
            OA(Q, s, v), Q = Q.sibling;
        }
      }
    }
    function PA(a, s, v) {
      var x = a.tag, M = x === w || x === R;
      if (M) {
        var N = a.stateNode;
        s ? zw(v, N, s) : CE(v, N);
      } else if (x !== E) {
        var G = a.child;
        if (G !== null) {
          PA(G, s, v);
          for (var Q = G.sibling; Q !== null; )
            PA(Q, s, v), Q = Q.sibling;
        }
      }
    }
    var lc = null, em = !1;
    function AV(a, s, v) {
      {
        var x = s;
        e:
          for (; x !== null; ) {
            switch (x.tag) {
              case w: {
                lc = x.stateNode, em = !1;
                break e;
              }
              case _: {
                lc = x.stateNode.containerInfo, em = !0;
                break e;
              }
              case E: {
                lc = x.stateNode.containerInfo, em = !0;
                break e;
              }
            }
            x = x.return;
          }
        if (lc === null)
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        nU(a, s, v), lc = null, em = !1;
      }
      MV(v);
    }
    function Ky(a, s, v) {
      for (var x = v.child; x !== null; )
        nU(a, s, x), x = x.sibling;
    }
    function nU(a, s, v) {
      switch (_n(v), v.tag) {
        case w:
          sc || jx(v, s);
        case R: {
          {
            var x = lc, M = em;
            lc = null, Ky(a, s, v), lc = x, em = M, lc !== null && (em ? U2(lc, v.stateNode) : K_(lc, v.stateNode));
          }
          return;
        }
        case K: {
          lc !== null && (em ? N2(lc, v.stateNode) : RE(lc, v.stateNode));
          return;
        }
        case E: {
          {
            var N = lc, G = em;
            lc = v.stateNode.containerInfo, em = !0, Ky(a, s, v), lc = N, em = G;
          }
          return;
        }
        case h:
        case F:
        case j:
        case Y: {
          if (!sc) {
            var Q = v.updateQueue;
            if (Q !== null) {
              var ne = Q.lastEffect;
              if (ne !== null) {
                var Se = ne.next, Me = Se;
                do {
                  var et = Me, Ke = et.destroy, Ct = et.tag;
                  Ke !== void 0 && ((Ct & Jh) !== Uc ? kM(v, s, Ke) : (Ct & ms) !== Uc && (Tu(v), v.mode & or ? (fv(), kM(v, s, Ke), rp(v)) : kM(v, s, Ke), Xf())), Me = Me.next;
                } while (Me !== Se);
              }
            }
          }
          Ky(a, s, v);
          return;
        }
        case p: {
          if (!sc) {
            jx(v, s);
            var At = v.stateNode;
            typeof At.componentWillUnmount == "function" && LA(v, s, At);
          }
          Ky(a, s, v);
          return;
        }
        case se: {
          Ky(a, s, v);
          return;
        }
        case he: {
          if (
            // TODO: Remove this dead flag
            v.mode & Fr
          ) {
            var Wt = sc;
            sc = Wt || v.memoizedState !== null, Ky(a, s, v), sc = Wt;
          } else
            Ky(a, s, v);
          break;
        }
        default: {
          Ky(a, s, v);
          return;
        }
      }
    }
    function DV(a) {
      a.memoizedState;
    }
    function LV(a, s) {
      var v = s.memoizedState;
      if (v === null) {
        var x = s.alternate;
        if (x !== null) {
          var M = x.memoizedState;
          if (M !== null) {
            var N = M.dehydrated;
            N !== null && jw(N);
          }
        }
      }
    }
    function rU(a) {
      var s = a.updateQueue;
      if (s !== null) {
        a.updateQueue = null;
        var v = a.stateNode;
        v === null && (v = a.stateNode = new pV()), s.forEach(function(x) {
          var M = C6.bind(null, a, x);
          if (!v.has(x)) {
            if (v.add(x), Ya)
              if (Gx !== null && Wx !== null)
                Hb(Wx, Gx);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            x.then(M, M);
          }
        });
      }
    }
    function OV(a, s, v) {
      Gx = v, Wx = a, Ti(s), iU(s, a), Ti(s), Gx = null, Wx = null;
    }
    function tm(a, s, v) {
      var x = s.deletions;
      if (x !== null)
        for (var M = 0; M < x.length; M++) {
          var N = x[M];
          try {
            AV(a, s, N);
          } catch (ne) {
            po(N, s, ne);
          }
        }
      var G = Td();
      if (s.subtreeFlags & So)
        for (var Q = s.child; Q !== null; )
          Ti(Q), iU(Q, a), Q = Q.sibling;
      Ti(G);
    }
    function iU(a, s, v) {
      var x = a.alternate, M = a.flags;
      switch (a.tag) {
        case h:
        case F:
        case j:
        case Y: {
          if (tm(s, a), dv(a), M & Yn) {
            try {
              Jp(Jh | ps, a, a.return), qy(Jh | ps, a);
            } catch (Ur) {
              po(a, a.return, Ur);
            }
            if (a.mode & or) {
              try {
                fv(), Jp(ms | ps, a, a.return);
              } catch (Ur) {
                po(a, a.return, Ur);
              }
              rp(a);
            } else
              try {
                Jp(ms | ps, a, a.return);
              } catch (Ur) {
                po(a, a.return, Ur);
              }
          }
          return;
        }
        case p: {
          tm(s, a), dv(a), M & Rs && x !== null && jx(x, x.return);
          return;
        }
        case w: {
          tm(s, a), dv(a), M & Rs && x !== null && jx(x, x.return);
          {
            if (a.flags & wi) {
              var N = a.stateNode;
              try {
                q_(N);
              } catch (Ur) {
                po(a, a.return, Ur);
              }
            }
            if (M & Yn) {
              var G = a.stateNode;
              if (G != null) {
                var Q = a.memoizedProps, ne = x !== null ? x.memoizedProps : Q, Se = a.type, Me = a.updateQueue;
                if (a.updateQueue = null, Me !== null)
                  try {
                    kw(G, Me, Se, ne, Q, a);
                  } catch (Ur) {
                    po(a, a.return, Ur);
                  }
              }
            }
          }
          return;
        }
        case R: {
          if (tm(s, a), dv(a), M & Yn) {
            if (a.stateNode === null)
              throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
            var et = a.stateNode, Ke = a.memoizedProps, Ct = x !== null ? x.memoizedProps : Ke;
            try {
              P2(et, Ct, Ke);
            } catch (Ur) {
              po(a, a.return, Ur);
            }
          }
          return;
        }
        case _: {
          if (tm(s, a), dv(a), M & Yn && x !== null) {
            var At = x.memoizedState;
            if (At.isDehydrated)
              try {
                Ww(s.containerInfo);
              } catch (Ur) {
                po(a, a.return, Ur);
              }
          }
          return;
        }
        case E: {
          tm(s, a), dv(a);
          return;
        }
        case B: {
          tm(s, a), dv(a);
          var Wt = a.child;
          if (Wt.flags & _c) {
            var kn = Wt.stateNode, Sr = Wt.memoizedState, ur = Sr !== null;
            if (kn.isHidden = ur, ur) {
              var Vi = Wt.alternate !== null && Wt.alternate.memoizedState !== null;
              Vi || d6();
            }
          }
          if (M & Yn) {
            try {
              DV(a);
            } catch (Ur) {
              po(a, a.return, Ur);
            }
            rU(a);
          }
          return;
        }
        case he: {
          var Pi = x !== null && x.memoizedState !== null;
          if (
            // TODO: Remove this dead flag
            a.mode & Fr
          ) {
            var yt = sc;
            sc = yt || Pi, tm(s, a), sc = yt;
          } else
            tm(s, a);
          if (dv(a), M & _c) {
            var jt = a.stateNode, St = a.memoizedState, un = St !== null, Fn = a;
            if (jt.isHidden = un, un && !Pi && (Fn.mode & Fr) !== ar) {
              Xn = Fn;
              for (var On = Fn.child; On !== null; )
                Xn = On, UV(On), On = On.sibling;
            }
            wV(Fn, un);
          }
          return;
        }
        case fe: {
          tm(s, a), dv(a), M & Yn && rU(a);
          return;
        }
        case se:
          return;
        default: {
          tm(s, a), dv(a);
          return;
        }
      }
    }
    function dv(a) {
      var s = a.flags;
      if (s & Jr) {
        try {
          RV(a);
        } catch (v) {
          po(a, a.return, v);
        }
        a.flags &= ~Jr;
      }
      s & tl && (a.flags &= ~tl);
    }
    function PV(a, s, v) {
      Gx = v, Wx = s, Xn = a, aU(a, s, v), Gx = null, Wx = null;
    }
    function aU(a, s, v) {
      for (var x = (a.mode & Fr) !== ar; Xn !== null; ) {
        var M = Xn, N = M.child;
        if (M.tag === he && x) {
          var G = M.memoizedState !== null, Q = G || NM;
          if (Q) {
            UA(a, s, v);
            continue;
          } else {
            var ne = M.alternate, Se = ne !== null && ne.memoizedState !== null, Me = Se || sc, et = NM, Ke = sc;
            NM = Q, sc = Me, sc && !Ke && (Xn = M, NV(M));
            for (var Ct = N; Ct !== null; )
              Xn = Ct, aU(
                Ct,
                // New root; bubble back up to here and stop.
                s,
                v
              ), Ct = Ct.sibling;
            Xn = M, NM = et, sc = Ke, UA(a, s, v);
            continue;
          }
        }
        (M.subtreeFlags & Ba) !== ir && N !== null ? (N.return = M, Xn = N) : UA(a, s, v);
      }
    }
    function UA(a, s, v) {
      for (; Xn !== null; ) {
        var x = Xn;
        if ((x.flags & Ba) !== ir) {
          var M = x.alternate;
          Ti(x);
          try {
            bV(s, M, x, v);
          } catch (G) {
            po(x, x.return, G);
          }
          oa();
        }
        if (x === a) {
          Xn = null;
          return;
        }
        var N = x.sibling;
        if (N !== null) {
          N.return = x.return, Xn = N;
          return;
        }
        Xn = x.return;
      }
    }
    function UV(a) {
      for (; Xn !== null; ) {
        var s = Xn, v = s.child;
        switch (s.tag) {
          case h:
          case F:
          case j:
          case Y: {
            if (s.mode & or)
              try {
                fv(), Jp(ms, s, s.return);
              } finally {
                rp(s);
              }
            else
              Jp(ms, s, s.return);
            break;
          }
          case p: {
            jx(s, s.return);
            var x = s.stateNode;
            typeof x.componentWillUnmount == "function" && LA(s, s.return, x);
            break;
          }
          case w: {
            jx(s, s.return);
            break;
          }
          case he: {
            var M = s.memoizedState !== null;
            if (M) {
              oU(a);
              continue;
            }
            break;
          }
        }
        v !== null ? (v.return = s, Xn = v) : oU(a);
      }
    }
    function oU(a) {
      for (; Xn !== null; ) {
        var s = Xn;
        if (s === a) {
          Xn = null;
          return;
        }
        var v = s.sibling;
        if (v !== null) {
          v.return = s.return, Xn = v;
          return;
        }
        Xn = s.return;
      }
    }
    function NV(a) {
      for (; Xn !== null; ) {
        var s = Xn, v = s.child;
        if (s.tag === he) {
          var x = s.memoizedState !== null;
          if (x) {
            sU(a);
            continue;
          }
        }
        v !== null ? (v.return = s, Xn = v) : sU(a);
      }
    }
    function sU(a) {
      for (; Xn !== null; ) {
        var s = Xn;
        Ti(s);
        try {
          TV(s);
        } catch (x) {
          po(s, s.return, x);
        }
        if (oa(), s === a) {
          Xn = null;
          return;
        }
        var v = s.sibling;
        if (v !== null) {
          v.return = s.return, Xn = v;
          return;
        }
        Xn = s.return;
      }
    }
    function kV(a, s, v, x) {
      Xn = s, FV(s, a, v, x);
    }
    function FV(a, s, v, x) {
      for (; Xn !== null; ) {
        var M = Xn, N = M.child;
        (M.subtreeFlags & Xu) !== ir && N !== null ? (N.return = M, Xn = N) : zV(a, s, v, x);
      }
    }
    function zV(a, s, v, x) {
      for (; Xn !== null; ) {
        var M = Xn;
        if ((M.flags & ga) !== ir) {
          Ti(M);
          try {
            IV(s, M, v, x);
          } catch (G) {
            po(M, M.return, G);
          }
          oa();
        }
        if (M === a) {
          Xn = null;
          return;
        }
        var N = M.sibling;
        if (N !== null) {
          N.return = M.return, Xn = N;
          return;
        }
        Xn = M.return;
      }
    }
    function IV(a, s, v, x) {
      switch (s.tag) {
        case h:
        case F:
        case Y: {
          if (s.mode & or) {
            fA();
            try {
              qy(iu | ps, s);
            } finally {
              wb(s);
            }
          } else
            qy(iu | ps, s);
          break;
        }
      }
    }
    function BV(a) {
      Xn = a, HV();
    }
    function HV() {
      for (; Xn !== null; ) {
        var a = Xn, s = a.child;
        if ((Xn.flags & hi) !== ir) {
          var v = a.deletions;
          if (v !== null) {
            for (var x = 0; x < v.length; x++) {
              var M = v[x];
              Xn = M, WV(M, a);
            }
            {
              var N = a.alternate;
              if (N !== null) {
                var G = N.child;
                if (G !== null) {
                  N.child = null;
                  do {
                    var Q = G.sibling;
                    G.sibling = null, G = Q;
                  } while (G !== null);
                }
              }
            }
            Xn = a;
          }
        }
        (a.subtreeFlags & Xu) !== ir && s !== null ? (s.return = a, Xn = s) : VV();
      }
    }
    function VV() {
      for (; Xn !== null; ) {
        var a = Xn;
        (a.flags & ga) !== ir && (Ti(a), GV(a), oa());
        var s = a.sibling;
        if (s !== null) {
          s.return = a.return, Xn = s;
          return;
        }
        Xn = a.return;
      }
    }
    function GV(a) {
      switch (a.tag) {
        case h:
        case F:
        case Y: {
          a.mode & or ? (fA(), Jp(iu | ps, a, a.return), wb(a)) : Jp(iu | ps, a, a.return);
          break;
        }
      }
    }
    function WV(a, s) {
      for (; Xn !== null; ) {
        var v = Xn;
        Ti(v), $V(v, s), oa();
        var x = v.child;
        x !== null ? (x.return = v, Xn = x) : jV(a);
      }
    }
    function jV(a) {
      for (; Xn !== null; ) {
        var s = Xn, v = s.sibling, x = s.return;
        if (J3(s), s === a) {
          Xn = null;
          return;
        }
        if (v !== null) {
          v.return = x, Xn = v;
          return;
        }
        Xn = x;
      }
    }
    function $V(a, s) {
      switch (a.tag) {
        case h:
        case F:
        case Y: {
          a.mode & or ? (fA(), Jp(iu, a, s), wb(a)) : Jp(iu, a, s);
          break;
        }
      }
    }
    function YV(a) {
      switch (a.tag) {
        case h:
        case F:
        case Y: {
          try {
            qy(ms | ps, a);
          } catch (v) {
            po(a, a.return, v);
          }
          break;
        }
        case p: {
          var s = a.stateNode;
          try {
            s.componentDidMount();
          } catch (v) {
            po(a, a.return, v);
          }
          break;
        }
      }
    }
    function XV(a) {
      switch (a.tag) {
        case h:
        case F:
        case Y: {
          try {
            qy(iu | ps, a);
          } catch (s) {
            po(a, a.return, s);
          }
          break;
        }
      }
    }
    function qV(a) {
      switch (a.tag) {
        case h:
        case F:
        case Y: {
          try {
            Jp(ms | ps, a, a.return);
          } catch (v) {
            po(a, a.return, v);
          }
          break;
        }
        case p: {
          var s = a.stateNode;
          typeof s.componentWillUnmount == "function" && LA(a, a.return, s);
          break;
        }
      }
    }
    function KV(a) {
      switch (a.tag) {
        case h:
        case F:
        case Y:
          try {
            Jp(iu | ps, a, a.return);
          } catch (s) {
            po(a, a.return, s);
          }
      }
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var Db = Symbol.for;
      Db("selector.component"), Db("selector.has_pseudo_class"), Db("selector.role"), Db("selector.test_id"), Db("selector.text");
    }
    var QV = [];
    function ZV() {
      QV.forEach(function(a) {
        return a();
      });
    }
    var JV = t.ReactCurrentActQueue;
    function e6(a) {
      {
        var s = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), v = typeof jest < "u";
        return v && s !== !1;
      }
    }
    function lU() {
      {
        var a = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !a && JV.current !== null && l("The current testing environment is not configured to support act(...)"), a;
      }
    }
    var t6 = Math.ceil, NA = t.ReactCurrentDispatcher, kA = t.ReactCurrentOwner, uc = t.ReactCurrentBatchConfig, nm = t.ReactCurrentActQueue, su = (
      /*             */
      0
    ), uU = (
      /*               */
      1
    ), cc = (
      /*                */
      2
    ), ip = (
      /*                */
      4
    ), Sg = 0, Lb = 1, LS = 2, FM = 3, Ob = 4, cU = 5, FA = 6, Hi = su, wf = null, vs = null, lu = Bt, hv = Bt, zA = Wp(Bt), uu = Sg, Pb = null, zM = Bt, Ub = Bt, IM = Bt, Nb = null, dd = null, IA = 0, fU = 500, dU = 1 / 0, n6 = 500, _g = null;
    function kb() {
      dU = Ta() + n6;
    }
    function hU() {
      return dU;
    }
    var BM = !1, BA = null, $x = null, OS = !1, Qy = null, Fb = Bt, HA = [], VA = null, r6 = 50, zb = 0, GA = null, WA = !1, HM = !1, i6 = 50, Yx = 0, VM = null, Ib = oi, GM = Bt, pU = !1;
    function WM() {
      return wf;
    }
    function Mf() {
      return (Hi & (cc | ip)) !== su ? Ta() : (Ib !== oi || (Ib = Ta()), Ib);
    }
    function Zy(a) {
      var s = a.mode;
      if ((s & Fr) === ar)
        return Kn;
      if ((Hi & cc) !== su && lu !== Bt)
        return Si(lu);
      var v = dx() !== ig;
      if (v) {
        if (uc.transition !== null) {
          var x = uc.transition;
          x._updatedFibers || (x._updatedFibers = /* @__PURE__ */ new Set()), x._updatedFibers.add(a);
        }
        return GM === ci && (GM = sr()), GM;
      }
      var M = Ju();
      if (M !== ci)
        return M;
      var N = L2();
      return N;
    }
    function a6(a) {
      var s = a.mode;
      return (s & Fr) === ar ? Kn : ca();
    }
    function cu(a, s, v, x) {
      A6(), pU && l("useInsertionEffect must not schedule updates."), WA && (HM = !0), ti(a, v, x), (Hi & cc) !== Bt && a === wf ? O6(s) : (Ya && Qg(a, s, v), P6(s), a === wf && ((Hi & cc) === su && (Ub = Xt(Ub, v)), uu === Ob && Jy(a, lu)), hd(a, x), v === Kn && Hi === su && (s.mode & Fr) === ar && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !nm.isBatchingLegacy && (kb(), iM()));
    }
    function o6(a, s, v) {
      var x = a.current;
      x.lanes = s, ti(a, s, v), hd(a, v);
    }
    function s6(a) {
      return (
        // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
        // decided not to enable it.
        (Hi & cc) !== su
      );
    }
    function hd(a, s) {
      var v = a.callbackNode;
      S(a, s);
      var x = Tc(a, a === wf ? lu : Bt);
      if (x === Bt) {
        v !== null && DU(v), a.callbackNode = null, a.callbackPriority = ci;
        return;
      }
      var M = xn(x), N = a.callbackPriority;
      if (N === M && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(nm.current !== null && v !== QA)) {
        v == null && N !== Kn && l("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      v != null && DU(v);
      var G;
      if (M === Kn)
        a.tag === Zm ? (nm.isBatchingLegacy !== null && (nm.didScheduleLegacyUpdate = !0), rM(gU.bind(null, a))) : nM(gU.bind(null, a)), nm.current !== null ? nm.current.push(Jm) : Uw(function() {
          (Hi & (cc | ip)) === su && Jm();
        }), G = null;
      else {
        var Q;
        switch (Ap(x)) {
          case Us:
            Q = Dm;
            break;
          case us:
            Q = bl;
            break;
          case vf:
            Q = bu;
            break;
          case Cp:
            Q = af;
            break;
          default:
            Q = bu;
            break;
        }
        G = ZA(Q, mU.bind(null, a));
      }
      a.callbackPriority = M, a.callbackNode = G;
    }
    function mU(a, s) {
      if (np(), Ib = oi, GM = Bt, (Hi & (cc | ip)) !== su)
        throw new Error("Should not already be working.");
      var v = a.callbackNode, x = Eg();
      if (x && a.callbackNode !== v)
        return null;
      var M = Tc(a, a === wf ? lu : Bt);
      if (M === Bt)
        return null;
      var N = !on(a, M) && !mn(a, M) && !s, G = N ? g6(a, M) : $M(a, M);
      if (G !== Sg) {
        if (G === LS) {
          var Q = z(a);
          Q !== Bt && (M = Q, G = jA(a, Q));
        }
        if (G === Lb) {
          var ne = Pb;
          throw PS(a, Bt), Jy(a, M), hd(a, Ta()), ne;
        }
        if (G === FA)
          Jy(a, M);
        else {
          var Se = !on(a, M), Me = a.current.alternate;
          if (Se && !u6(Me)) {
            if (G = $M(a, M), G === LS) {
              var et = z(a);
              et !== Bt && (M = et, G = jA(a, et));
            }
            if (G === Lb) {
              var Ke = Pb;
              throw PS(a, Bt), Jy(a, M), hd(a, Ta()), Ke;
            }
          }
          a.finishedWork = Me, a.finishedLanes = M, l6(a, G, M);
        }
      }
      return hd(a, Ta()), a.callbackNode === v ? mU.bind(null, a) : null;
    }
    function jA(a, s) {
      var v = Nb;
      if (Bo(a)) {
        var x = PS(a, s);
        x.flags |= Ia, An(a.containerInfo);
      }
      var M = $M(a, s);
      if (M !== LS) {
        var N = dd;
        dd = v, N !== null && vU(N);
      }
      return M;
    }
    function vU(a) {
      dd === null ? dd = a : dd.push.apply(dd, a);
    }
    function l6(a, s, v) {
      switch (s) {
        case Sg:
        case Lb:
          throw new Error("Root did not complete. This is a bug in React.");
        case LS: {
          US(a, dd, _g);
          break;
        }
        case FM: {
          if (Jy(a, v), Le(v) && // do not delay if we're inside an act() scope
          !LU()) {
            var x = IA + fU - Ta();
            if (x > 10) {
              var M = Tc(a, Bt);
              if (M !== Bt)
                break;
              var N = a.suspendedLanes;
              if (!Lt(N, v)) {
                Mf(), Dh(a, N);
                break;
              }
              a.timeoutHandle = wE(US.bind(null, a, dd, _g), x);
              break;
            }
          }
          US(a, dd, _g);
          break;
        }
        case Ob: {
          if (Jy(a, v), It(v))
            break;
          if (!LU()) {
            var G = km(a, v), Q = G, ne = Ta() - Q, Se = R6(ne) - ne;
            if (Se > 10) {
              a.timeoutHandle = wE(US.bind(null, a, dd, _g), Se);
              break;
            }
          }
          US(a, dd, _g);
          break;
        }
        case cU: {
          US(a, dd, _g);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function u6(a) {
      for (var s = a; ; ) {
        if (s.flags & jf) {
          var v = s.updateQueue;
          if (v !== null) {
            var x = v.stores;
            if (x !== null)
              for (var M = 0; M < x.length; M++) {
                var N = x[M], G = N.getSnapshot, Q = N.value;
                try {
                  if (!Vn(G(), Q))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var ne = s.child;
        if (s.subtreeFlags & jf && ne !== null) {
          ne.return = s, s = ne;
          continue;
        }
        if (s === a)
          return !0;
        for (; s.sibling === null; ) {
          if (s.return === null || s.return === a)
            return !0;
          s = s.return;
        }
        s.sibling.return = s.return, s = s.sibling;
      }
      return !0;
    }
    function Jy(a, s) {
      s = Nn(s, IM), s = Nn(s, Ub), wc(a, s);
    }
    function gU(a) {
      if (Xy(), (Hi & (cc | ip)) !== su)
        throw new Error("Should not already be working.");
      Eg();
      var s = Tc(a, Bt);
      if (!Xe(s, Kn))
        return hd(a, Ta()), null;
      var v = $M(a, s);
      if (a.tag !== Zm && v === LS) {
        var x = z(a);
        x !== Bt && (s = x, v = jA(a, x));
      }
      if (v === Lb) {
        var M = Pb;
        throw PS(a, Bt), Jy(a, s), hd(a, Ta()), M;
      }
      if (v === FA)
        throw new Error("Root did not complete. This is a bug in React.");
      var N = a.current.alternate;
      return a.finishedWork = N, a.finishedLanes = s, US(a, dd, _g), hd(a, Ta()), null;
    }
    function c6(a, s) {
      s !== Bt && (Mp(a, Xt(s, Kn)), hd(a, Ta()), (Hi & (cc | ip)) === su && (kb(), Jm()));
    }
    function $A(a, s) {
      var v = Hi;
      Hi |= uU;
      try {
        return a(s);
      } finally {
        Hi = v, Hi === su && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !nm.isBatchingLegacy && (kb(), iM());
      }
    }
    function f6(a, s, v, x, M) {
      var N = Ju(), G = uc.transition;
      try {
        return uc.transition = null, bo(Us), a(s, v, x, M);
      } finally {
        bo(N), uc.transition = G, Hi === su && kb();
      }
    }
    function xg(a) {
      Qy !== null && Qy.tag === Zm && (Hi & (cc | ip)) === su && Eg();
      var s = Hi;
      Hi |= uU;
      var v = uc.transition, x = Ju();
      try {
        return uc.transition = null, bo(Us), a ? a() : void 0;
      } finally {
        bo(x), uc.transition = v, Hi = s, (Hi & (cc | ip)) === su && Jm();
      }
    }
    function yU() {
      return (Hi & (cc | ip)) !== su;
    }
    function jM(a, s) {
      Pu(zA, hv, a), hv = Xt(hv, s);
    }
    function YA(a) {
      hv = zA.current, Ou(zA, a);
    }
    function PS(a, s) {
      a.finishedWork = null, a.finishedLanes = Bt;
      var v = a.timeoutHandle;
      if (v !== by && (a.timeoutHandle = by, ME(v)), vs !== null)
        for (var x = vs.return; x !== null; ) {
          var M = x.alternate;
          Y3(M, x), x = x.return;
        }
      wf = a;
      var N = NS(a.current, null);
      return vs = N, lu = hv = s, uu = Sg, Pb = null, zM = Bt, Ub = Bt, IM = Bt, Nb = null, dd = null, qE(), ic.discardPendingWarnings(), N;
    }
    function SU(a, s) {
      do {
        var v = vs;
        try {
          if (px(), pb(), oa(), kA.current = null, v === null || v.return === null) {
            uu = Lb, Pb = s, vs = null;
            return;
          }
          if (Ne && v.mode & or && RS(v, !0), De)
            if (ya(), s !== null && typeof s == "object" && typeof s.then == "function") {
              var x = s;
              rl(v, x, lu);
            } else
              qf(v, s, lu);
          NH(a, v.return, v, s, lu), bU(v);
        } catch (M) {
          s = M, vs === v && v !== null ? (v = v.return, vs = v) : v = vs;
          continue;
        }
        return;
      } while (!0);
    }
    function _U() {
      var a = NA.current;
      return NA.current = wt, a === null ? wt : a;
    }
    function xU(a) {
      NA.current = a;
    }
    function d6() {
      IA = Ta();
    }
    function Bb(a) {
      zM = Xt(a, zM);
    }
    function h6() {
      uu === Sg && (uu = FM);
    }
    function XA() {
      (uu === Sg || uu === FM || uu === LS) && (uu = Ob), wf !== null && (te(zM) || te(Ub)) && Jy(wf, lu);
    }
    function p6(a) {
      uu !== Ob && (uu = LS), Nb === null ? Nb = [a] : Nb.push(a);
    }
    function m6() {
      return uu === Sg;
    }
    function $M(a, s) {
      var v = Hi;
      Hi |= cc;
      var x = _U();
      if (wf !== a || lu !== s) {
        if (Ya) {
          var M = a.memoizedUpdaters;
          M.size > 0 && (Hb(a, lu), M.clear()), Fm(a, s);
        }
        _g = Zg(), PS(a, s);
      }
      Tl(s);
      do
        try {
          v6();
          break;
        } catch (N) {
          SU(a, N);
        }
      while (!0);
      if (px(), Hi = v, xU(x), vs !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return lf(), wf = null, lu = Bt, uu;
    }
    function v6() {
      for (; vs !== null; )
        EU(vs);
    }
    function g6(a, s) {
      var v = Hi;
      Hi |= cc;
      var x = _U();
      if (wf !== a || lu !== s) {
        if (Ya) {
          var M = a.memoizedUpdaters;
          M.size > 0 && (Hb(a, lu), M.clear()), Fm(a, s);
        }
        _g = Zg(), kb(), PS(a, s);
      }
      Tl(s);
      do
        try {
          y6();
          break;
        } catch (N) {
          SU(a, N);
        }
      while (!0);
      return px(), xU(x), Hi = v, vs !== null ? (wu(), Sg) : (lf(), wf = null, lu = Bt, uu);
    }
    function y6() {
      for (; vs !== null && !Ls(); )
        EU(vs);
    }
    function EU(a) {
      var s = a.alternate;
      Ti(a);
      var v;
      (a.mode & or) !== ar ? (Qp(a), v = qA(s, a, hv), RS(a, !0)) : v = qA(s, a, hv), oa(), a.memoizedProps = a.pendingProps, v === null ? bU(a) : vs = v, kA.current = null;
    }
    function bU(a) {
      var s = a;
      do {
        var v = s.alternate, x = s.return;
        if ((s.flags & As) === ir) {
          Ti(s);
          var M = void 0;
          if ((s.mode & or) === ar ? M = $3(v, s, hv) : (Qp(s), M = $3(v, s, hv), RS(s, !1)), oa(), M !== null) {
            vs = M;
            return;
          }
        } else {
          var N = hV(v, s);
          if (N !== null) {
            N.flags &= Av, vs = N;
            return;
          }
          if ((s.mode & or) !== ar) {
            RS(s, !1);
            for (var G = s.actualDuration, Q = s.child; Q !== null; )
              G += Q.actualDuration, Q = Q.sibling;
            s.actualDuration = G;
          }
          if (x !== null)
            x.flags |= As, x.subtreeFlags = ir, x.deletions = null;
          else {
            uu = FA, vs = null;
            return;
          }
        }
        var ne = s.sibling;
        if (ne !== null) {
          vs = ne;
          return;
        }
        s = x, vs = s;
      } while (s !== null);
      uu === Sg && (uu = cU);
    }
    function US(a, s, v) {
      var x = Ju(), M = uc.transition;
      try {
        uc.transition = null, bo(Us), S6(a, s, v, x);
      } finally {
        uc.transition = M, bo(x);
      }
      return null;
    }
    function S6(a, s, v, x) {
      do
        Eg();
      while (Qy !== null);
      if (D6(), (Hi & (cc | ip)) !== su)
        throw new Error("Should not already be working.");
      var M = a.finishedWork, N = a.finishedLanes;
      if (Oa(N), M === null)
        return $r(), null;
      if (N === Bt && l("root.finishedLanes should not be empty during a commit. This is a bug in React."), a.finishedWork = null, a.finishedLanes = Bt, M === a.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      a.callbackNode = null, a.callbackPriority = ci;
      var G = Xt(M.lanes, M.childLanes);
      T0(a, G), a === wf && (wf = null, vs = null, lu = Bt), ((M.subtreeFlags & Xu) !== ir || (M.flags & Xu) !== ir) && (OS || (OS = !0, VA = v, ZA(bu, function() {
        return Eg(), null;
      })));
      var Q = (M.subtreeFlags & (Rr | So | Ba | Xu)) !== ir, ne = (M.flags & (Rr | So | Ba | Xu)) !== ir;
      if (Q || ne) {
        var Se = uc.transition;
        uc.transition = null;
        var Me = Ju();
        bo(Us);
        var et = Hi;
        Hi |= ip, kA.current = null, yV(a, M), Fc(), OV(a, M, N), bE(a.containerInfo), a.current = M, Pm(N), PV(M, a, N), Kf(), _o(), Hi = et, bo(Me), uc.transition = Se;
      } else
        a.current = M, Fc();
      var Ke = OS;
      if (OS ? (OS = !1, Qy = a, Fb = N) : (Yx = 0, VM = null), G = a.pendingLanes, G === Bt && ($x = null), Ke || CU(a.current, !1), Os(M.stateNode, x), Ya && a.memoizedUpdaters.clear(), ZV(), hd(a, Ta()), s !== null)
        for (var Ct = a.onRecoverableError, At = 0; At < s.length; At++) {
          var Wt = s[At], kn = Wt.stack, Sr = Wt.digest;
          Ct(Wt.value, {
            componentStack: kn,
            digest: Sr
          });
        }
      if (BM) {
        BM = !1;
        var ur = BA;
        throw BA = null, ur;
      }
      return Xe(Fb, Kn) && a.tag !== Zm && Eg(), G = a.pendingLanes, Xe(G, Kn) ? (bf(), a === GA ? zb++ : (zb = 0, GA = a)) : zb = 0, Jm(), $r(), null;
    }
    function Eg() {
      if (Qy !== null) {
        var a = Ap(Fb), s = w0(vf, a), v = uc.transition, x = Ju();
        try {
          return uc.transition = null, bo(s), x6();
        } finally {
          bo(x), uc.transition = v;
        }
      }
      return !1;
    }
    function _6(a) {
      HA.push(a), OS || (OS = !0, ZA(bu, function() {
        return Eg(), null;
      }));
    }
    function x6() {
      if (Qy === null)
        return !1;
      var a = VA;
      VA = null;
      var s = Qy, v = Fb;
      if (Qy = null, Fb = Bt, (Hi & (cc | ip)) !== su)
        throw new Error("Cannot flush passive effects while already rendering.");
      WA = !0, HM = !1, Gd(v);
      var x = Hi;
      Hi |= ip, BV(s.current), kV(s, s.current, v, a);
      {
        var M = HA;
        HA = [];
        for (var N = 0; N < M.length; N++) {
          var G = M[N];
          EV(s, G);
        }
      }
      sf(), CU(s.current, !0), Hi = x, Jm(), HM ? s === VM ? Yx++ : (Yx = 0, VM = s) : Yx = 0, WA = !1, HM = !1, La(s);
      {
        var Q = s.current.stateNode;
        Q.effectDuration = 0, Q.passiveEffectDuration = 0;
      }
      return !0;
    }
    function TU(a) {
      return $x !== null && $x.has(a);
    }
    function E6(a) {
      $x === null ? $x = /* @__PURE__ */ new Set([a]) : $x.add(a);
    }
    function b6(a) {
      BM || (BM = !0, BA = a);
    }
    var T6 = b6;
    function wU(a, s, v) {
      var x = AS(v, s), M = E3(a, x, Kn), N = av(a, M, Kn), G = Mf();
      N !== null && (ti(N, Kn, G), hd(N, G));
    }
    function po(a, s, v) {
      if (mV(v), Vb(!1), a.tag === _) {
        wU(a, a, v);
        return;
      }
      var x = null;
      for (x = s; x !== null; ) {
        if (x.tag === _) {
          wU(x, a, v);
          return;
        } else if (x.tag === p) {
          var M = x.type, N = x.stateNode;
          if (typeof M.getDerivedStateFromError == "function" || typeof N.componentDidCatch == "function" && !TU(N)) {
            var G = AS(v, a), Q = mA(x, G, Kn), ne = av(x, Q, Kn), Se = Mf();
            ne !== null && (ti(ne, Kn, Se), hd(ne, Se));
            return;
          }
        }
        x = x.return;
      }
      l(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, v);
    }
    function w6(a, s, v) {
      var x = a.pingCache;
      x !== null && x.delete(s);
      var M = Mf();
      Dh(a, v), U6(a), wf === a && Lt(lu, v) && (uu === Ob || uu === FM && Le(lu) && Ta() - IA < fU ? PS(a, Bt) : IM = Xt(IM, v)), hd(a, M);
    }
    function MU(a, s) {
      s === ci && (s = a6(a));
      var v = Mf(), x = nu(a, s);
      x !== null && (ti(x, s, v), hd(x, v));
    }
    function M6(a) {
      var s = a.memoizedState, v = ci;
      s !== null && (v = s.retryLane), MU(a, v);
    }
    function C6(a, s) {
      var v = ci, x;
      switch (a.tag) {
        case B:
          x = a.stateNode;
          var M = a.memoizedState;
          M !== null && (v = M.retryLane);
          break;
        case fe:
          x = a.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      x !== null && x.delete(s), MU(a, v);
    }
    function R6(a) {
      return a < 120 ? 120 : a < 480 ? 480 : a < 1080 ? 1080 : a < 1920 ? 1920 : a < 3e3 ? 3e3 : a < 4320 ? 4320 : t6(a / 1960) * 1960;
    }
    function A6() {
      if (zb > r6)
        throw zb = 0, GA = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      Yx > i6 && (Yx = 0, VM = null, l("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function D6() {
      ic.flushLegacyContextWarning(), ic.flushPendingUnsafeLifecycleWarnings();
    }
    function CU(a, s) {
      Ti(a), YM(a, Mi, qV), s && YM(a, Eu, KV), YM(a, Mi, YV), s && YM(a, Eu, XV), oa();
    }
    function YM(a, s, v) {
      for (var x = a, M = null; x !== null; ) {
        var N = x.subtreeFlags & s;
        x !== M && x.child !== null && N !== ir ? x = x.child : ((x.flags & s) !== ir && v(x), x.sibling !== null ? x = x.sibling : x = M = x.return);
      }
    }
    var XM = null;
    function RU(a) {
      {
        if ((Hi & cc) !== su || !(a.mode & Fr))
          return;
        var s = a.tag;
        if (s !== y && s !== _ && s !== p && s !== h && s !== F && s !== j && s !== Y)
          return;
        var v = rr(a) || "ReactComponent";
        if (XM !== null) {
          if (XM.has(v))
            return;
          XM.add(v);
        } else
          XM = /* @__PURE__ */ new Set([v]);
        var x = Ni;
        try {
          Ti(a), l("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          x ? Ti(a) : oa();
        }
      }
    }
    var qA;
    {
      var L6 = null;
      qA = function(a, s, v) {
        var x = kU(L6, s);
        try {
          return H3(a, s, v);
        } catch (N) {
          if (VE() || N !== null && typeof N == "object" && typeof N.then == "function")
            throw N;
          if (px(), pb(), Y3(a, s), kU(s, x), s.mode & or && Qp(s), Sc(null, H3, null, a, s, v), Wf()) {
            var M = Id();
            typeof M == "object" && M !== null && M._suppressLogging && typeof N == "object" && N !== null && !N._suppressLogging && (N._suppressLogging = !0);
          }
          throw N;
        }
      };
    }
    var AU = !1, KA;
    KA = /* @__PURE__ */ new Set();
    function O6(a) {
      if (gr && !Ft())
        switch (a.tag) {
          case h:
          case F:
          case Y: {
            var s = vs && rr(vs) || "Unknown", v = s;
            if (!KA.has(v)) {
              KA.add(v);
              var x = rr(a) || "Unknown";
              l("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", x, s, s);
            }
            break;
          }
          case p: {
            AU || (l("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), AU = !0);
            break;
          }
        }
    }
    function Hb(a, s) {
      if (Ya) {
        var v = a.memoizedUpdaters;
        v.forEach(function(x) {
          Qg(a, x, s);
        });
      }
    }
    var QA = {};
    function ZA(a, s) {
      {
        var v = nm.current;
        return v !== null ? (v.push(s), QA) : Hd(a, s);
      }
    }
    function DU(a) {
      if (a !== QA)
        return Yf(a);
    }
    function LU() {
      return nm.current !== null;
    }
    function P6(a) {
      {
        if (a.mode & Fr) {
          if (!lU())
            return;
        } else if (!e6() || Hi !== su || a.tag !== h && a.tag !== F && a.tag !== Y)
          return;
        if (nm.current === null) {
          var s = Ni;
          try {
            Ti(a), l(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, rr(a));
          } finally {
            s ? Ti(a) : oa();
          }
        }
      }
    }
    function U6(a) {
      a.tag !== Zm && lU() && nm.current === null && l(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    function Vb(a) {
      pU = a;
    }
    var ap = null, Xx = null, N6 = function(a) {
      ap = a;
    };
    function qx(a) {
      {
        if (ap === null)
          return a;
        var s = ap(a);
        return s === void 0 ? a : s.current;
      }
    }
    function JA(a) {
      return qx(a);
    }
    function eD(a) {
      {
        if (ap === null)
          return a;
        var s = ap(a);
        if (s === void 0) {
          if (a != null && typeof a.render == "function") {
            var v = qx(a.render);
            if (a.render !== v) {
              var x = {
                $$typeof: pn,
                render: v
              };
              return a.displayName !== void 0 && (x.displayName = a.displayName), x;
            }
          }
          return a;
        }
        return s.current;
      }
    }
    function OU(a, s) {
      {
        if (ap === null)
          return !1;
        var v = a.elementType, x = s.type, M = !1, N = typeof x == "object" && x !== null ? x.$$typeof : null;
        switch (a.tag) {
          case p: {
            typeof x == "function" && (M = !0);
            break;
          }
          case h: {
            (typeof x == "function" || N === je) && (M = !0);
            break;
          }
          case F: {
            (N === pn || N === je) && (M = !0);
            break;
          }
          case j:
          case Y: {
            (N === at || N === je) && (M = !0);
            break;
          }
          default:
            return !1;
        }
        if (M) {
          var G = ap(v);
          if (G !== void 0 && G === ap(x))
            return !0;
        }
        return !1;
      }
    }
    function PU(a) {
      {
        if (ap === null || typeof WeakSet != "function")
          return;
        Xx === null && (Xx = /* @__PURE__ */ new WeakSet()), Xx.add(a);
      }
    }
    var k6 = function(a, s) {
      {
        if (ap === null)
          return;
        var v = s.staleFamilies, x = s.updatedFamilies;
        Eg(), xg(function() {
          tD(a.current, x, v);
        });
      }
    }, F6 = function(a, s) {
      {
        if (a.context !== Oc)
          return;
        Eg(), xg(function() {
          Gb(s, a, null, null);
        });
      }
    };
    function tD(a, s, v) {
      {
        var x = a.alternate, M = a.child, N = a.sibling, G = a.tag, Q = a.type, ne = null;
        switch (G) {
          case h:
          case Y:
          case p:
            ne = Q;
            break;
          case F:
            ne = Q.render;
            break;
        }
        if (ap === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var Se = !1, Me = !1;
        if (ne !== null) {
          var et = ap(ne);
          et !== void 0 && (v.has(et) ? Me = !0 : s.has(et) && (G === p ? Me = !0 : Se = !0));
        }
        if (Xx !== null && (Xx.has(a) || x !== null && Xx.has(x)) && (Me = !0), Me && (a._debugNeedsRemount = !0), Me || Se) {
          var Ke = nu(a, Kn);
          Ke !== null && cu(Ke, a, Kn, oi);
        }
        M !== null && !Me && tD(M, s, v), N !== null && tD(N, s, v);
      }
    }
    var z6 = function(a, s) {
      {
        var v = /* @__PURE__ */ new Set(), x = new Set(s.map(function(M) {
          return M.current;
        }));
        return nD(a.current, x, v), v;
      }
    };
    function nD(a, s, v) {
      {
        var x = a.child, M = a.sibling, N = a.tag, G = a.type, Q = null;
        switch (N) {
          case h:
          case Y:
          case p:
            Q = G;
            break;
          case F:
            Q = G.render;
            break;
        }
        var ne = !1;
        Q !== null && s.has(Q) && (ne = !0), ne ? I6(a, v) : x !== null && nD(x, s, v), M !== null && nD(M, s, v);
      }
    }
    function I6(a, s) {
      {
        var v = B6(a, s);
        if (v)
          return;
        for (var x = a; ; ) {
          switch (x.tag) {
            case w:
              s.add(x.stateNode);
              return;
            case E:
              s.add(x.stateNode.containerInfo);
              return;
            case _:
              s.add(x.stateNode.containerInfo);
              return;
          }
          if (x.return === null)
            throw new Error("Expected to reach root first.");
          x = x.return;
        }
      }
    }
    function B6(a, s) {
      for (var v = a, x = !1; ; ) {
        if (v.tag === w)
          x = !0, s.add(v.stateNode);
        else if (v.child !== null) {
          v.child.return = v, v = v.child;
          continue;
        }
        if (v === a)
          return x;
        for (; v.sibling === null; ) {
          if (v.return === null || v.return === a)
            return x;
          v = v.return;
        }
        v.sibling.return = v.return, v = v.sibling;
      }
      return !1;
    }
    var rD;
    {
      rD = !1;
      try {
        var UU = Object.preventExtensions({});
      } catch {
        rD = !0;
      }
    }
    function H6(a, s, v, x) {
      this.tag = a, this.key = v, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = s, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = x, this.flags = ir, this.subtreeFlags = ir, this.deletions = null, this.lanes = Bt, this.childLanes = Bt, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !rD && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var ch = function(a, s, v, x) {
      return new H6(a, s, v, x);
    };
    function iD(a) {
      var s = a.prototype;
      return !!(s && s.isReactComponent);
    }
    function V6(a) {
      return typeof a == "function" && !iD(a) && a.defaultProps === void 0;
    }
    function G6(a) {
      if (typeof a == "function")
        return iD(a) ? p : h;
      if (a != null) {
        var s = a.$$typeof;
        if (s === pn)
          return F;
        if (s === at)
          return j;
      }
      return y;
    }
    function NS(a, s) {
      var v = a.alternate;
      v === null ? (v = ch(a.tag, s, a.key, a.mode), v.elementType = a.elementType, v.type = a.type, v.stateNode = a.stateNode, v._debugSource = a._debugSource, v._debugOwner = a._debugOwner, v._debugHookTypes = a._debugHookTypes, v.alternate = a, a.alternate = v) : (v.pendingProps = s, v.type = a.type, v.flags = ir, v.subtreeFlags = ir, v.deletions = null, v.actualDuration = 0, v.actualStartTime = -1), v.flags = a.flags & cn, v.childLanes = a.childLanes, v.lanes = a.lanes, v.child = a.child, v.memoizedProps = a.memoizedProps, v.memoizedState = a.memoizedState, v.updateQueue = a.updateQueue;
      var x = a.dependencies;
      switch (v.dependencies = x === null ? null : {
        lanes: x.lanes,
        firstContext: x.firstContext
      }, v.sibling = a.sibling, v.index = a.index, v.ref = a.ref, v.selfBaseDuration = a.selfBaseDuration, v.treeBaseDuration = a.treeBaseDuration, v._debugNeedsRemount = a._debugNeedsRemount, v.tag) {
        case y:
        case h:
        case Y:
          v.type = qx(a.type);
          break;
        case p:
          v.type = JA(a.type);
          break;
        case F:
          v.type = eD(a.type);
          break;
      }
      return v;
    }
    function W6(a, s) {
      a.flags &= cn | Jr;
      var v = a.alternate;
      if (v === null)
        a.childLanes = Bt, a.lanes = s, a.child = null, a.subtreeFlags = ir, a.memoizedProps = null, a.memoizedState = null, a.updateQueue = null, a.dependencies = null, a.stateNode = null, a.selfBaseDuration = 0, a.treeBaseDuration = 0;
      else {
        a.childLanes = v.childLanes, a.lanes = v.lanes, a.child = v.child, a.subtreeFlags = ir, a.deletions = null, a.memoizedProps = v.memoizedProps, a.memoizedState = v.memoizedState, a.updateQueue = v.updateQueue, a.type = v.type;
        var x = v.dependencies;
        a.dependencies = x === null ? null : {
          lanes: x.lanes,
          firstContext: x.firstContext
        }, a.selfBaseDuration = v.selfBaseDuration, a.treeBaseDuration = v.treeBaseDuration;
      }
      return a;
    }
    function j6(a, s, v) {
      var x;
      return a === iS ? (x = Fr, s === !0 && (x |= ai, x |= Fo)) : x = ar, Ya && (x |= or), ch(_, null, null, x);
    }
    function aD(a, s, v, x, M, N) {
      var G = y, Q = a;
      if (typeof a == "function")
        iD(a) ? (G = p, Q = JA(Q)) : Q = qx(Q);
      else if (typeof a == "string")
        G = w;
      else
        e:
          switch (a) {
            case Ui:
              return e0(v.children, M, N, s);
            case fi:
              G = L, M |= ai, (M & Fr) !== ar && (M |= Fo);
              break;
            case ke:
              return $6(v, M, N, s);
            case _e:
              return Y6(v, M, N, s);
            case Qe:
              return X6(v, M, N, s);
            case vn:
              return NU(v, M, N, s);
            case Mn:
            case vt:
            case zn:
            case pr:
            case sn:
            default: {
              if (typeof a == "object" && a !== null)
                switch (a.$$typeof) {
                  case Ht:
                    G = k;
                    break e;
                  case Jt:
                    G = A;
                    break e;
                  case pn:
                    G = F, Q = eD(Q);
                    break e;
                  case at:
                    G = j;
                    break e;
                  case je:
                    G = ee, Q = null;
                    break e;
                }
              var ne = "";
              {
                (a === void 0 || typeof a == "object" && a !== null && Object.keys(a).length === 0) && (ne += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
                var Se = x ? rr(x) : null;
                Se && (ne += `

Check the render method of \`` + Se + "`.");
              }
              throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (a == null ? a : typeof a) + "." + ne));
            }
          }
      var Me = ch(G, v, s, M);
      return Me.elementType = a, Me.type = Q, Me.lanes = N, Me._debugOwner = x, Me;
    }
    function oD(a, s, v) {
      var x = null;
      x = a._owner;
      var M = a.type, N = a.key, G = a.props, Q = aD(M, N, G, x, s, v);
      return Q._debugSource = a._source, Q._debugOwner = a._owner, Q;
    }
    function e0(a, s, v, x) {
      var M = ch(U, a, x, s);
      return M.lanes = v, M;
    }
    function $6(a, s, v, x) {
      typeof a.id != "string" && l('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof a.id);
      var M = ch(H, a, x, s | or);
      return M.elementType = ke, M.lanes = v, M.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, M;
    }
    function Y6(a, s, v, x) {
      var M = ch(B, a, x, s);
      return M.elementType = _e, M.lanes = v, M;
    }
    function X6(a, s, v, x) {
      var M = ch(fe, a, x, s);
      return M.elementType = Qe, M.lanes = v, M;
    }
    function NU(a, s, v, x) {
      var M = ch(he, a, x, s);
      M.elementType = vn, M.lanes = v;
      var N = {
        isHidden: !1
      };
      return M.stateNode = N, M;
    }
    function sD(a, s, v) {
      var x = ch(R, a, null, s);
      return x.lanes = v, x;
    }
    function q6() {
      var a = ch(w, null, null, ar);
      return a.elementType = "DELETED", a;
    }
    function K6(a) {
      var s = ch(K, null, null, ar);
      return s.stateNode = a, s;
    }
    function lD(a, s, v) {
      var x = a.children !== null ? a.children : [], M = ch(E, x, a.key, s);
      return M.lanes = v, M.stateNode = {
        containerInfo: a.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: a.implementation
      }, M;
    }
    function kU(a, s) {
      return a === null && (a = ch(y, null, null, ar)), a.tag = s.tag, a.key = s.key, a.elementType = s.elementType, a.type = s.type, a.stateNode = s.stateNode, a.return = s.return, a.child = s.child, a.sibling = s.sibling, a.index = s.index, a.ref = s.ref, a.pendingProps = s.pendingProps, a.memoizedProps = s.memoizedProps, a.updateQueue = s.updateQueue, a.memoizedState = s.memoizedState, a.dependencies = s.dependencies, a.mode = s.mode, a.flags = s.flags, a.subtreeFlags = s.subtreeFlags, a.deletions = s.deletions, a.lanes = s.lanes, a.childLanes = s.childLanes, a.alternate = s.alternate, a.actualDuration = s.actualDuration, a.actualStartTime = s.actualStartTime, a.selfBaseDuration = s.selfBaseDuration, a.treeBaseDuration = s.treeBaseDuration, a._debugSource = s._debugSource, a._debugOwner = s._debugOwner, a._debugNeedsRemount = s._debugNeedsRemount, a._debugHookTypes = s._debugHookTypes, a;
    }
    function Q6(a, s, v, x, M) {
      this.tag = s, this.containerInfo = a, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = by, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = ci, this.eventTimes = Pa(Bt), this.expirationTimes = Pa(oi), this.pendingLanes = Bt, this.suspendedLanes = Bt, this.pingedLanes = Bt, this.expiredLanes = Bt, this.mutableReadLanes = Bt, this.finishedLanes = Bt, this.entangledLanes = Bt, this.entanglements = Pa(Bt), this.identifierPrefix = x, this.onRecoverableError = M, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var N = this.pendingUpdatersLaneMap = [], G = 0; G < yi; G++)
          N.push(/* @__PURE__ */ new Set());
      }
      switch (s) {
        case iS:
          this._debugRootType = v ? "hydrateRoot()" : "createRoot()";
          break;
        case Zm:
          this._debugRootType = v ? "hydrate()" : "render()";
          break;
      }
    }
    function FU(a, s, v, x, M, N, G, Q, ne, Se) {
      var Me = new Q6(a, s, v, Q, ne), et = j6(s, N);
      Me.current = et, et.stateNode = Me;
      {
        var Ke = {
          element: x,
          isDehydrated: v,
          cache: null,
          // not enabled yet
          transitions: null,
          pendingSuspenseBoundaries: null
        };
        et.memoizedState = Ke;
      }
      return yx(et), Me;
    }
    var uD = "18.2.0";
    function Z6(a, s, v) {
      var x = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return Dt(x), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: Or,
        key: x == null ? null : "" + x,
        children: a,
        containerInfo: s,
        implementation: v
      };
    }
    var cD, fD;
    cD = !1, fD = {};
    function zU(a) {
      if (!a)
        return Oc;
      var s = os(a), v = Q2(s);
      if (s.tag === p) {
        var x = s.type;
        if (rh(x))
          return eM(s, x, v);
      }
      return v;
    }
    function J6(a, s) {
      {
        var v = os(a);
        if (v === void 0) {
          if (typeof a.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var x = Object.keys(a).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + x);
        }
        var M = El(v);
        if (M === null)
          return null;
        if (M.mode & ai) {
          var N = rr(v) || "Component";
          if (!fD[N]) {
            fD[N] = !0;
            var G = Ni;
            try {
              Ti(M), v.mode & ai ? l("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", s, s, N) : l("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", s, s, N);
            } finally {
              G ? Ti(G) : oa();
            }
          }
        }
        return M.stateNode;
      }
    }
    function IU(a, s, v, x, M, N, G, Q) {
      var ne = !1, Se = null;
      return FU(a, s, ne, Se, v, x, M, N, G);
    }
    function BU(a, s, v, x, M, N, G, Q, ne, Se) {
      var Me = !0, et = FU(v, x, Me, a, M, N, G, Q, ne);
      et.context = zU(null);
      var Ke = et.current, Ct = Mf(), At = Zy(Ke), Wt = qh(Ct, At);
      return Wt.callback = s ?? null, av(Ke, Wt, At), o6(et, At, Ct), et;
    }
    function Gb(a, s, v, x) {
      Om(s, a);
      var M = s.current, N = Mf(), G = Zy(M);
      wl(G);
      var Q = zU(v);
      s.context === null ? s.context = Q : s.pendingContext = Q, gr && Ni !== null && !cD && (cD = !0, l(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, rr(Ni) || "Unknown"));
      var ne = qh(N, G);
      ne.payload = {
        element: a
      }, x = x === void 0 ? null : x, x !== null && (typeof x != "function" && l("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", x), ne.callback = x);
      var Se = av(M, ne, G);
      return Se !== null && (cu(Se, M, G, N), _x(Se, M, G)), G;
    }
    function qM(a) {
      var s = a.current;
      if (!s.child)
        return null;
      switch (s.child.tag) {
        case w:
          return s.child.stateNode;
        default:
          return s.child.stateNode;
      }
    }
    function e8(a) {
      switch (a.tag) {
        case _: {
          var s = a.stateNode;
          if (Bo(s)) {
            var v = D(s);
            c6(s, v);
          }
          break;
        }
        case B: {
          xg(function() {
            var M = nu(a, Kn);
            if (M !== null) {
              var N = Mf();
              cu(M, a, Kn, N);
            }
          });
          var x = Kn;
          dD(a, x);
          break;
        }
      }
    }
    function HU(a, s) {
      var v = a.memoizedState;
      v !== null && v.dehydrated !== null && (v.retryLane = ei(v.retryLane, s));
    }
    function dD(a, s) {
      HU(a, s);
      var v = a.alternate;
      v && HU(v, s);
    }
    function t8(a) {
      if (a.tag === B) {
        var s = Kl, v = nu(a, s);
        if (v !== null) {
          var x = Mf();
          cu(v, a, s, x);
        }
        dD(a, s);
      }
    }
    function n8(a) {
      if (a.tag === B) {
        var s = Zy(a), v = nu(a, s);
        if (v !== null) {
          var x = Mf();
          cu(v, a, s, x);
        }
        dD(a, s);
      }
    }
    function VU(a) {
      var s = Bd(a);
      return s === null ? null : s.stateNode;
    }
    var GU = function(a) {
      return null;
    };
    function r8(a) {
      return GU(a);
    }
    var WU = function(a) {
      return !1;
    };
    function i8(a) {
      return WU(a);
    }
    var jU = null, $U = null, YU = null, XU = null, qU = null, KU = null, QU = null, ZU = null, JU = null;
    {
      var eN = function(a, s, v) {
        var x = s[v], M = ii(a) ? a.slice() : Rn({}, a);
        return v + 1 === s.length ? (ii(M) ? M.splice(x, 1) : delete M[x], M) : (M[x] = eN(a[x], s, v + 1), M);
      }, tN = function(a, s) {
        return eN(a, s, 0);
      }, nN = function(a, s, v, x) {
        var M = s[x], N = ii(a) ? a.slice() : Rn({}, a);
        if (x + 1 === s.length) {
          var G = v[x];
          N[G] = N[M], ii(N) ? N.splice(M, 1) : delete N[M];
        } else
          N[M] = nN(
            // $FlowFixMe number or string is fine here
            a[M],
            s,
            v,
            x + 1
          );
        return N;
      }, rN = function(a, s, v) {
        if (s.length !== v.length) {
          o("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var x = 0; x < v.length - 1; x++)
            if (s[x] !== v[x]) {
              o("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return nN(a, s, v, 0);
      }, iN = function(a, s, v, x) {
        if (v >= s.length)
          return x;
        var M = s[v], N = ii(a) ? a.slice() : Rn({}, a);
        return N[M] = iN(a[M], s, v + 1, x), N;
      }, aN = function(a, s, v) {
        return iN(a, s, 0, v);
      }, hD = function(a, s) {
        for (var v = a.memoizedState; v !== null && s > 0; )
          v = v.next, s--;
        return v;
      };
      jU = function(a, s, v, x) {
        var M = hD(a, s);
        if (M !== null) {
          var N = aN(M.memoizedState, v, x);
          M.memoizedState = N, M.baseState = N, a.memoizedProps = Rn({}, a.memoizedProps);
          var G = nu(a, Kn);
          G !== null && cu(G, a, Kn, oi);
        }
      }, $U = function(a, s, v) {
        var x = hD(a, s);
        if (x !== null) {
          var M = tN(x.memoizedState, v);
          x.memoizedState = M, x.baseState = M, a.memoizedProps = Rn({}, a.memoizedProps);
          var N = nu(a, Kn);
          N !== null && cu(N, a, Kn, oi);
        }
      }, YU = function(a, s, v, x) {
        var M = hD(a, s);
        if (M !== null) {
          var N = rN(M.memoizedState, v, x);
          M.memoizedState = N, M.baseState = N, a.memoizedProps = Rn({}, a.memoizedProps);
          var G = nu(a, Kn);
          G !== null && cu(G, a, Kn, oi);
        }
      }, XU = function(a, s, v) {
        a.pendingProps = aN(a.memoizedProps, s, v), a.alternate && (a.alternate.pendingProps = a.pendingProps);
        var x = nu(a, Kn);
        x !== null && cu(x, a, Kn, oi);
      }, qU = function(a, s) {
        a.pendingProps = tN(a.memoizedProps, s), a.alternate && (a.alternate.pendingProps = a.pendingProps);
        var v = nu(a, Kn);
        v !== null && cu(v, a, Kn, oi);
      }, KU = function(a, s, v) {
        a.pendingProps = rN(a.memoizedProps, s, v), a.alternate && (a.alternate.pendingProps = a.pendingProps);
        var x = nu(a, Kn);
        x !== null && cu(x, a, Kn, oi);
      }, QU = function(a) {
        var s = nu(a, Kn);
        s !== null && cu(s, a, Kn, oi);
      }, ZU = function(a) {
        GU = a;
      }, JU = function(a) {
        WU = a;
      };
    }
    function a8(a) {
      var s = El(a);
      return s === null ? null : s.stateNode;
    }
    function o8(a) {
      return null;
    }
    function s8() {
      return Ni;
    }
    function l8(a) {
      var s = a.findFiberByHostInstance, v = t.ReactCurrentDispatcher;
      return wp({
        bundleType: a.bundleType,
        version: a.version,
        rendererPackageName: a.rendererPackageName,
        rendererConfig: a.rendererConfig,
        overrideHookState: jU,
        overrideHookStateDeletePath: $U,
        overrideHookStateRenamePath: YU,
        overrideProps: XU,
        overridePropsDeletePath: qU,
        overridePropsRenamePath: KU,
        setErrorHandler: ZU,
        setSuspenseHandler: JU,
        scheduleUpdate: QU,
        currentDispatcherRef: v,
        findHostInstanceByFiber: a8,
        findFiberByHostInstance: s || o8,
        // React Refresh
        findHostInstancesForRefresh: z6,
        scheduleRefresh: k6,
        scheduleRoot: F6,
        setRefreshHandler: N6,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: s8,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: uD
      });
    }
    var oN = typeof reportError == "function" ? (
      // In modern browsers, reportError will dispatch an error event,
      // emulating an uncaught JavaScript error.
      reportError
    ) : function(a) {
      console.error(a);
    };
    function pD(a) {
      this._internalRoot = a;
    }
    KM.prototype.render = pD.prototype.render = function(a) {
      var s = this._internalRoot;
      if (s === null)
        throw new Error("Cannot update an unmounted root.");
      {
        typeof arguments[1] == "function" ? l("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : QM(arguments[1]) ? l("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && l("You passed a second argument to root.render(...) but it only accepts one argument.");
        var v = s.containerInfo;
        if (v.nodeType !== Wa) {
          var x = VU(s.current);
          x && x.parentNode !== v && l("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      Gb(a, s, null, null);
    }, KM.prototype.unmount = pD.prototype.unmount = function() {
      typeof arguments[0] == "function" && l("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var a = this._internalRoot;
      if (a !== null) {
        this._internalRoot = null;
        var s = a.containerInfo;
        yU() && l("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), xg(function() {
          Gb(null, a, null, null);
        }), Kw(s);
      }
    };
    function u8(a, s) {
      if (!QM(a))
        throw new Error("createRoot(...): Target container is not a DOM element.");
      sN(a);
      var v = !1, x = !1, M = "", N = oN;
      s != null && (s.hydrate ? o("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof s == "object" && s !== null && s.$$typeof === Gr && l(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), s.unstable_strictMode === !0 && (v = !0), s.identifierPrefix !== void 0 && (M = s.identifierPrefix), s.onRecoverableError !== void 0 && (N = s.onRecoverableError), s.transitionCallbacks !== void 0 && s.transitionCallbacks);
      var G = IU(a, iS, null, v, x, M, N);
      J0(G.current, a);
      var Q = a.nodeType === Wa ? a.parentNode : a;
      return nc(Q), new pD(G);
    }
    function KM(a) {
      this._internalRoot = a;
    }
    function c8(a) {
      a && ey(a);
    }
    KM.prototype.unstable_scheduleHydration = c8;
    function f8(a, s, v) {
      if (!QM(a))
        throw new Error("hydrateRoot(...): Target container is not a DOM element.");
      sN(a), s === void 0 && l("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
      var x = v ?? null, M = v != null && v.hydratedSources || null, N = !1, G = !1, Q = "", ne = oN;
      v != null && (v.unstable_strictMode === !0 && (N = !0), v.identifierPrefix !== void 0 && (Q = v.identifierPrefix), v.onRecoverableError !== void 0 && (ne = v.onRecoverableError));
      var Se = BU(s, null, a, iS, x, N, G, Q, ne);
      if (J0(Se.current, a), nc(a), M)
        for (var Me = 0; Me < M.length; Me++) {
          var et = M[Me];
          RM(Se, et);
        }
      return new KM(Se);
    }
    function QM(a) {
      return !!(a && (a.nodeType === Xs || a.nodeType === Fa || a.nodeType === za || !ue));
    }
    function Wb(a) {
      return !!(a && (a.nodeType === Xs || a.nodeType === Fa || a.nodeType === za || a.nodeType === Wa && a.nodeValue === " react-mount-point-unstable "));
    }
    function sN(a) {
      a.nodeType === Xs && a.tagName && a.tagName.toUpperCase() === "BODY" && l("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), eS(a) && (a._reactRootContainer ? l("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : l("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    var d8 = t.ReactCurrentOwner, lN;
    lN = function(a) {
      if (a._reactRootContainer && a.nodeType !== Wa) {
        var s = VU(a._reactRootContainer.current);
        s && s.parentNode !== a && l("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var v = !!a._reactRootContainer, x = mD(a), M = !!(x && Km(x));
      M && !v && l("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), a.nodeType === Xs && a.tagName && a.tagName.toUpperCase() === "BODY" && l("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function mD(a) {
      return a ? a.nodeType === Fa ? a.documentElement : a.firstChild : null;
    }
    function uN() {
    }
    function h8(a, s, v, x, M) {
      if (M) {
        if (typeof x == "function") {
          var N = x;
          x = function() {
            var Ke = qM(G);
            N.call(Ke);
          };
        }
        var G = BU(
          s,
          x,
          a,
          Zm,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          uN
        );
        a._reactRootContainer = G, J0(G.current, a);
        var Q = a.nodeType === Wa ? a.parentNode : a;
        return nc(Q), xg(), G;
      } else {
        for (var ne; ne = a.lastChild; )
          a.removeChild(ne);
        if (typeof x == "function") {
          var Se = x;
          x = function() {
            var Ke = qM(Me);
            Se.call(Ke);
          };
        }
        var Me = IU(
          a,
          Zm,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          uN
        );
        a._reactRootContainer = Me, J0(Me.current, a);
        var et = a.nodeType === Wa ? a.parentNode : a;
        return nc(et), xg(function() {
          Gb(s, Me, v, x);
        }), Me;
      }
    }
    function p8(a, s) {
      a !== null && typeof a != "function" && l("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", s, a);
    }
    function ZM(a, s, v, x, M) {
      lN(v), p8(M === void 0 ? null : M, "render");
      var N = v._reactRootContainer, G;
      if (!N)
        G = h8(v, s, a, M, x);
      else {
        if (G = N, typeof M == "function") {
          var Q = M;
          M = function() {
            var ne = qM(G);
            Q.call(ne);
          };
        }
        Gb(s, G, a, M);
      }
      return qM(G);
    }
    function m8(a) {
      {
        var s = d8.current;
        if (s !== null && s.stateNode !== null) {
          var v = s.stateNode._warnedAboutRefsInRender;
          v || l("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Hr(s.type) || "A component"), s.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return a == null ? null : a.nodeType === Xs ? a : J6(a, "findDOMNode");
    }
    function v8(a, s, v) {
      if (l("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Wb(s))
        throw new Error("Target container is not a DOM element.");
      {
        var x = eS(s) && s._reactRootContainer === void 0;
        x && l("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
      }
      return ZM(null, a, s, !0, v);
    }
    function g8(a, s, v) {
      if (l("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Wb(s))
        throw new Error("Target container is not a DOM element.");
      {
        var x = eS(s) && s._reactRootContainer === void 0;
        x && l("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return ZM(null, a, s, !1, v);
    }
    function y8(a, s, v, x) {
      if (l("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Wb(v))
        throw new Error("Target container is not a DOM element.");
      if (a == null || !Js(a))
        throw new Error("parentComponent must be a valid React Component");
      return ZM(a, s, v, !1, x);
    }
    function S8(a) {
      if (!Wb(a))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var s = eS(a) && a._reactRootContainer === void 0;
        s && l("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (a._reactRootContainer) {
        {
          var v = mD(a), x = v && !Km(v);
          x && l("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return xg(function() {
          ZM(null, null, a, !1, function() {
            a._reactRootContainer = null, Kw(a);
          });
        }), !0;
      } else {
        {
          var M = mD(a), N = !!(M && Km(M)), G = a.nodeType === Xs && Wb(a.parentNode) && !!a.parentNode._reactRootContainer;
          N && l("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", G ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    In(e8), x_(t8), Lp(n8), R0(Ju), Op(Rp), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && l("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), vc(Cw), Nd($A, f6, xg);
    function _8(a, s) {
      var v = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!QM(s))
        throw new Error("Target container is not a DOM element.");
      return Z6(a, s, null, v);
    }
    function x8(a, s, v, x) {
      return y8(a, s, v, x);
    }
    var vD = {
      usingClientEntryPoint: !1,
      // Keep in sync with ReactTestUtils.js.
      // This is an array for better minification.
      Events: [Km, ul, ad, jl, yc, $A]
    };
    function E8(a, s) {
      return vD.usingClientEntryPoint || l('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), u8(a, s);
    }
    function b8(a, s, v) {
      return vD.usingClientEntryPoint || l('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), f8(a, s, v);
    }
    function T8(a) {
      return yU() && l("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), xg(a);
    }
    var w8 = l8({
      findFiberByHostInstance: Jv,
      bundleType: 1,
      version: uD,
      rendererPackageName: "react-dom"
    });
    if (!w8 && rt && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var cN = window.location.protocol;
      /^(https?|file):$/.test(cN) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (cN === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    md.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vD, md.createPortal = _8, md.createRoot = E8, md.findDOMNode = m8, md.flushSync = T8, md.hydrate = v8, md.hydrateRoot = b8, md.render = g8, md.unmountComponentAtNode = S8, md.unstable_batchedUpdates = $A, md.unstable_renderSubtreeIntoContainer = x8, md.version = uD, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), md;
}
function LB() {
  if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("^_^");
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(LB);
    } catch (n) {
      console.error(n);
    }
  }
}
process.env.NODE_ENV === "production" ? (LB(), CO.exports = Cq()) : CO.exports = Rq();
var h2 = CO.exports;
const OB = /* @__PURE__ */ j1(h2);
function Aq(n, e, t) {
  return Math.max(e, Math.min(n, t));
}
const Gc = {
  toVector(n, e) {
    return n === void 0 && (n = e), Array.isArray(n) ? n : [n, n];
  },
  add(n, e) {
    return [n[0] + e[0], n[1] + e[1]];
  },
  sub(n, e) {
    return [n[0] - e[0], n[1] - e[1]];
  },
  addTo(n, e) {
    n[0] += e[0], n[1] += e[1];
  },
  subTo(n, e) {
    n[0] -= e[0], n[1] -= e[1];
  }
};
function fF(n, e, t) {
  return e === 0 || Math.abs(e) === 1 / 0 ? Math.pow(n, t * 5) : n * e * t / (e + t * n);
}
function dF(n, e, t, r = 0.15) {
  return r === 0 ? Aq(n, e, t) : n < e ? -fF(e - n, t - e, r) + e : n > t ? +fF(n - t, t - e, r) + t : n;
}
function Dq(n, [e, t], [r, i]) {
  const [[o, l], [u, h]] = n;
  return [dF(e, o, l, r), dF(t, u, h, i)];
}
function Lq(n, e) {
  if (typeof n != "object" || n === null)
    return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var r = t.call(n, e || "default");
    if (typeof r != "object")
      return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function Oq(n) {
  var e = Lq(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
function gd(n, e, t) {
  return e = Oq(e), e in n ? Object.defineProperty(n, e, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : n[e] = t, n;
}
function hF(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(n);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(n, i).enumerable;
    })), t.push.apply(t, r);
  }
  return t;
}
function xs(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2 ? hF(Object(t), !0).forEach(function(r) {
      gd(n, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t)) : hF(Object(t)).forEach(function(r) {
      Object.defineProperty(n, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return n;
}
const PB = {
  pointer: {
    start: "down",
    change: "move",
    end: "up"
  },
  mouse: {
    start: "down",
    change: "move",
    end: "up"
  },
  touch: {
    start: "start",
    change: "move",
    end: "end"
  },
  gesture: {
    start: "start",
    change: "change",
    end: "end"
  }
};
function pF(n) {
  return n ? n[0].toUpperCase() + n.slice(1) : "";
}
const Pq = ["enter", "leave"];
function Uq(n = !1, e) {
  return n && !Pq.includes(e);
}
function Nq(n, e = "", t = !1) {
  const r = PB[n], i = r && r[e] || e;
  return "on" + pF(n) + pF(i) + (Uq(t, i) ? "Capture" : "");
}
const kq = ["gotpointercapture", "lostpointercapture"];
function Fq(n) {
  let e = n.substring(2).toLowerCase();
  const t = !!~e.indexOf("passive");
  t && (e = e.replace("passive", ""));
  const r = kq.includes(e) ? "capturecapture" : "capture", i = !!~e.indexOf(r);
  return i && (e = e.replace("capture", "")), {
    device: e,
    capture: i,
    passive: t
  };
}
function zq(n, e = "") {
  const t = PB[n], r = t && t[e] || e;
  return n + r;
}
function p2(n) {
  return "touches" in n;
}
function UB(n) {
  return p2(n) ? "touch" : "pointerType" in n ? n.pointerType : "mouse";
}
function Iq(n) {
  return Array.from(n.touches).filter((e) => {
    var t, r;
    return e.target === n.currentTarget || ((t = n.currentTarget) === null || t === void 0 || (r = t.contains) === null || r === void 0 ? void 0 : r.call(t, e.target));
  });
}
function Bq(n) {
  return n.type === "touchend" || n.type === "touchcancel" ? n.changedTouches : n.targetTouches;
}
function NB(n) {
  return p2(n) ? Bq(n)[0] : n;
}
function Hq(n) {
  return Iq(n).map((e) => e.identifier);
}
function cL(n) {
  const e = NB(n);
  return p2(n) ? e.identifier : e.pointerId;
}
function mF(n) {
  const e = NB(n);
  return [e.clientX, e.clientY];
}
function Vq(n) {
  const e = {};
  if ("buttons" in n && (e.buttons = n.buttons), "shiftKey" in n) {
    const {
      shiftKey: t,
      altKey: r,
      metaKey: i,
      ctrlKey: o
    } = n;
    Object.assign(e, {
      shiftKey: t,
      altKey: r,
      metaKey: i,
      ctrlKey: o
    });
  }
  return e;
}
function _R(n, ...e) {
  return typeof n == "function" ? n(...e) : n;
}
function Gq() {
}
function Wq(...n) {
  return n.length === 0 ? Gq : n.length === 1 ? n[0] : function() {
    let e;
    for (const t of n)
      e = t.apply(this, arguments) || e;
    return e;
  };
}
function vF(n, e) {
  return Object.assign({}, e, n || {});
}
const jq = 32;
class $q {
  constructor(e, t, r) {
    this.ctrl = e, this.args = t, this.key = r, this.state || (this.state = {}, this.computeValues([0, 0]), this.computeInitial(), this.init && this.init(), this.reset());
  }
  get state() {
    return this.ctrl.state[this.key];
  }
  set state(e) {
    this.ctrl.state[this.key] = e;
  }
  get shared() {
    return this.ctrl.state.shared;
  }
  get eventStore() {
    return this.ctrl.gestureEventStores[this.key];
  }
  get timeoutStore() {
    return this.ctrl.gestureTimeoutStores[this.key];
  }
  get config() {
    return this.ctrl.config[this.key];
  }
  get sharedConfig() {
    return this.ctrl.config.shared;
  }
  get handler() {
    return this.ctrl.handlers[this.key];
  }
  reset() {
    const {
      state: e,
      shared: t,
      ingKey: r,
      args: i
    } = this;
    t[r] = e._active = e.active = e._blocked = e._force = !1, e._step = [!1, !1], e.intentional = !1, e._movement = [0, 0], e._distance = [0, 0], e._direction = [0, 0], e._delta = [0, 0], e._bounds = [[-1 / 0, 1 / 0], [-1 / 0, 1 / 0]], e.args = i, e.axis = void 0, e.memo = void 0, e.elapsedTime = e.timeDelta = 0, e.direction = [0, 0], e.distance = [0, 0], e.overflow = [0, 0], e._movementBound = [!1, !1], e.velocity = [0, 0], e.movement = [0, 0], e.delta = [0, 0], e.timeStamp = 0;
  }
  start(e) {
    const t = this.state, r = this.config;
    t._active || (this.reset(), this.computeInitial(), t._active = !0, t.target = e.target, t.currentTarget = e.currentTarget, t.lastOffset = r.from ? _R(r.from, t) : t.offset, t.offset = t.lastOffset, t.startTime = t.timeStamp = e.timeStamp);
  }
  computeValues(e) {
    const t = this.state;
    t._values = e, t.values = this.config.transform(e);
  }
  computeInitial() {
    const e = this.state;
    e._initial = e._values, e.initial = e.values;
  }
  compute(e) {
    const {
      state: t,
      config: r,
      shared: i
    } = this;
    t.args = this.args;
    let o = 0;
    if (e && (t.event = e, r.preventDefault && e.cancelable && t.event.preventDefault(), t.type = e.type, i.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size, i.locked = !!document.pointerLockElement, Object.assign(i, Vq(e)), i.down = i.pressed = i.buttons % 2 === 1 || i.touches > 0, o = e.timeStamp - t.timeStamp, t.timeStamp = e.timeStamp, t.elapsedTime = t.timeStamp - t.startTime), t._active) {
      const j = t._delta.map(Math.abs);
      Gc.addTo(t._distance, j);
    }
    this.axisIntent && this.axisIntent(e);
    const [l, u] = t._movement, [h, p] = r.threshold, {
      _step: y,
      values: _
    } = t;
    if (r.hasCustomTransform ? (y[0] === !1 && (y[0] = Math.abs(l) >= h && _[0]), y[1] === !1 && (y[1] = Math.abs(u) >= p && _[1])) : (y[0] === !1 && (y[0] = Math.abs(l) >= h && Math.sign(l) * h), y[1] === !1 && (y[1] = Math.abs(u) >= p && Math.sign(u) * p)), t.intentional = y[0] !== !1 || y[1] !== !1, !t.intentional)
      return;
    const E = [0, 0];
    if (r.hasCustomTransform) {
      const [j, Y] = _;
      E[0] = y[0] !== !1 ? j - y[0] : 0, E[1] = y[1] !== !1 ? Y - y[1] : 0;
    } else
      E[0] = y[0] !== !1 ? l - y[0] : 0, E[1] = y[1] !== !1 ? u - y[1] : 0;
    this.restrictToAxis && !t._blocked && this.restrictToAxis(E);
    const w = t.offset, R = t._active && !t._blocked || t.active;
    R && (t.first = t._active && !t.active, t.last = !t._active && t.active, t.active = i[this.ingKey] = t._active, e && (t.first && ("bounds" in r && (t._bounds = _R(r.bounds, t)), this.setup && this.setup()), t.movement = E, this.computeOffset()));
    const [U, L] = t.offset, [[A, k], [F, H]] = t._bounds;
    t.overflow = [U < A ? -1 : U > k ? 1 : 0, L < F ? -1 : L > H ? 1 : 0], t._movementBound[0] = t.overflow[0] ? t._movementBound[0] === !1 ? t._movement[0] : t._movementBound[0] : !1, t._movementBound[1] = t.overflow[1] ? t._movementBound[1] === !1 ? t._movement[1] : t._movementBound[1] : !1;
    const B = t._active ? r.rubberband || [0, 0] : [0, 0];
    if (t.offset = Dq(t._bounds, t.offset, B), t.delta = Gc.sub(t.offset, w), this.computeMovement(), R && (!t.last || o > jq)) {
      t.delta = Gc.sub(t.offset, w);
      const j = t.delta.map(Math.abs);
      Gc.addTo(t.distance, j), t.direction = t.delta.map(Math.sign), t._direction = t._delta.map(Math.sign), !t.first && o > 0 && (t.velocity = [j[0] / o, j[1] / o], t.timeDelta = o);
    }
  }
  emit() {
    const e = this.state, t = this.shared, r = this.config;
    if (e._active || this.clean(), (e._blocked || !e.intentional) && !e._force && !r.triggerAllEvents)
      return;
    const i = this.handler(xs(xs(xs({}, t), e), {}, {
      [this.aliasKey]: e.values
    }));
    i !== void 0 && (e.memo = i);
  }
  clean() {
    this.eventStore.clean(), this.timeoutStore.clean();
  }
}
function Yq([n, e], t) {
  const r = Math.abs(n), i = Math.abs(e);
  if (r > i && r > t)
    return "x";
  if (i > r && i > t)
    return "y";
}
class Xq extends $q {
  constructor(...e) {
    super(...e), gd(this, "aliasKey", "xy");
  }
  reset() {
    super.reset(), this.state.axis = void 0;
  }
  init() {
    this.state.offset = [0, 0], this.state.lastOffset = [0, 0];
  }
  computeOffset() {
    this.state.offset = Gc.add(this.state.lastOffset, this.state.movement);
  }
  computeMovement() {
    this.state.movement = Gc.sub(this.state.offset, this.state.lastOffset);
  }
  axisIntent(e) {
    const t = this.state, r = this.config;
    if (!t.axis && e) {
      const i = typeof r.axisThreshold == "object" ? r.axisThreshold[UB(e)] : r.axisThreshold;
      t.axis = Yq(t._movement, i);
    }
    t._blocked = (r.lockDirection || !!r.axis) && !t.axis || !!r.axis && r.axis !== t.axis;
  }
  restrictToAxis(e) {
    if (this.config.axis || this.config.lockDirection)
      switch (this.state.axis) {
        case "x":
          e[1] = 0;
          break;
        case "y":
          e[0] = 0;
          break;
      }
  }
}
const gF = (n) => n, yF = 0.15, qP = {
  enabled(n = !0) {
    return n;
  },
  eventOptions(n, e, t) {
    return xs(xs({}, t.shared.eventOptions), n);
  },
  preventDefault(n = !1) {
    return n;
  },
  triggerAllEvents(n = !1) {
    return n;
  },
  rubberband(n = 0) {
    switch (n) {
      case !0:
        return [yF, yF];
      case !1:
        return [0, 0];
      default:
        return Gc.toVector(n);
    }
  },
  from(n) {
    if (typeof n == "function")
      return n;
    if (n != null)
      return Gc.toVector(n);
  },
  transform(n, e, t) {
    const r = n || t.shared.transform;
    if (this.hasCustomTransform = !!r, process.env.NODE_ENV === "development") {
      const i = r || gF;
      return (o) => {
        const l = i(o);
        return (!isFinite(l[0]) || !isFinite(l[1])) && console.warn(`[@use-gesture]: config.transform() must produce a valid result, but it was: [${l[0]},${[1]}]`), l;
      };
    }
    return r || gF;
  },
  threshold(n) {
    return Gc.toVector(n, 0);
  }
};
process.env.NODE_ENV === "development" && Object.assign(qP, {
  domTarget(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `domTarget` option has been renamed to `target`.");
    return NaN;
  },
  lockDirection(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `lockDirection` option has been merged with `axis`. Use it as in `{ axis: 'lock' }`");
    return NaN;
  },
  initial(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `initial` option has been renamed to `from`.");
    return NaN;
  }
});
const qq = 0, aw = xs(xs({}, qP), {}, {
  axis(n, e, {
    axis: t
  }) {
    if (this.lockDirection = t === "lock", !this.lockDirection)
      return t;
  },
  axisThreshold(n = qq) {
    return n;
  },
  bounds(n = {}) {
    if (typeof n == "function")
      return (o) => aw.bounds(n(o));
    if ("current" in n)
      return () => n.current;
    if (typeof HTMLElement == "function" && n instanceof HTMLElement)
      return n;
    const {
      left: e = -1 / 0,
      right: t = 1 / 0,
      top: r = -1 / 0,
      bottom: i = 1 / 0
    } = n;
    return [[e, t], [r, i]];
  }
}), SF = {
  ArrowRight: (n, e = 1) => [n * e, 0],
  ArrowLeft: (n, e = 1) => [-1 * n * e, 0],
  ArrowUp: (n, e = 1) => [0, -1 * n * e],
  ArrowDown: (n, e = 1) => [0, n * e]
};
class Kq extends Xq {
  constructor(...e) {
    super(...e), gd(this, "ingKey", "dragging");
  }
  reset() {
    super.reset();
    const e = this.state;
    e._pointerId = void 0, e._pointerActive = !1, e._keyboardActive = !1, e._preventScroll = !1, e._delayed = !1, e.swipe = [0, 0], e.tap = !1, e.canceled = !1, e.cancel = this.cancel.bind(this);
  }
  setup() {
    const e = this.state;
    if (e._bounds instanceof HTMLElement) {
      const t = e._bounds.getBoundingClientRect(), r = e.currentTarget.getBoundingClientRect(), i = {
        left: t.left - r.left + e.offset[0],
        right: t.right - r.right + e.offset[0],
        top: t.top - r.top + e.offset[1],
        bottom: t.bottom - r.bottom + e.offset[1]
      };
      e._bounds = aw.bounds(i);
    }
  }
  cancel() {
    const e = this.state;
    e.canceled || (e.canceled = !0, e._active = !1, setTimeout(() => {
      this.compute(), this.emit();
    }, 0));
  }
  setActive() {
    this.state._active = this.state._pointerActive || this.state._keyboardActive;
  }
  clean() {
    this.pointerClean(), this.state._pointerActive = !1, this.state._keyboardActive = !1, super.clean();
  }
  pointerDown(e) {
    const t = this.config, r = this.state;
    if (e.buttons != null && (Array.isArray(t.pointerButtons) ? !t.pointerButtons.includes(e.buttons) : t.pointerButtons !== -1 && t.pointerButtons !== e.buttons))
      return;
    const i = this.ctrl.setEventIds(e);
    t.pointerCapture && e.target.setPointerCapture(e.pointerId), !(i && i.size > 1 && r._pointerActive) && (this.start(e), this.setupPointer(e), r._pointerId = cL(e), r._pointerActive = !0, this.computeValues(mF(e)), this.computeInitial(), t.preventScrollAxis && UB(e) !== "mouse" ? (r._active = !1, this.setupScrollPrevention(e)) : t.delay > 0 ? (this.setupDelayTrigger(e), t.triggerAllEvents && (this.compute(e), this.emit())) : this.startPointerDrag(e));
  }
  startPointerDrag(e) {
    const t = this.state;
    t._active = !0, t._preventScroll = !0, t._delayed = !1, this.compute(e), this.emit();
  }
  pointerMove(e) {
    const t = this.state, r = this.config;
    if (!t._pointerActive)
      return;
    const i = cL(e);
    if (t._pointerId !== void 0 && i !== t._pointerId)
      return;
    const o = mF(e);
    if (document.pointerLockElement === e.target ? t._delta = [e.movementX, e.movementY] : (t._delta = Gc.sub(o, t._values), this.computeValues(o)), Gc.addTo(t._movement, t._delta), this.compute(e), t._delayed && t.intentional) {
      this.timeoutStore.remove("dragDelay"), t.active = !1, this.startPointerDrag(e);
      return;
    }
    if (r.preventScrollAxis && !t._preventScroll)
      if (t.axis)
        if (t.axis === r.preventScrollAxis || r.preventScrollAxis === "xy") {
          t._active = !1, this.clean();
          return;
        } else {
          this.timeoutStore.remove("startPointerDrag"), this.startPointerDrag(e);
          return;
        }
      else
        return;
    this.emit();
  }
  pointerUp(e) {
    this.ctrl.setEventIds(e);
    try {
      this.config.pointerCapture && e.target.hasPointerCapture(e.pointerId) && e.target.releasePointerCapture(e.pointerId);
    } catch {
      process.env.NODE_ENV === "development" && console.warn("[@use-gesture]: If you see this message, it's likely that you're using an outdated version of `@react-three/fiber`. \n\nPlease upgrade to the latest version.");
    }
    const t = this.state, r = this.config;
    if (!t._active || !t._pointerActive)
      return;
    const i = cL(e);
    if (t._pointerId !== void 0 && i !== t._pointerId)
      return;
    this.state._pointerActive = !1, this.setActive(), this.compute(e);
    const [o, l] = t._distance;
    if (t.tap = o <= r.tapsThreshold && l <= r.tapsThreshold, t.tap && r.filterTaps)
      t._force = !0;
    else {
      const [u, h] = t._delta, [p, y] = t._movement, [_, E] = r.swipe.velocity, [w, R] = r.swipe.distance, U = r.swipe.duration;
      if (t.elapsedTime < U) {
        const L = Math.abs(u / t.timeDelta), A = Math.abs(h / t.timeDelta);
        L > _ && Math.abs(p) > w && (t.swipe[0] = Math.sign(u)), A > E && Math.abs(y) > R && (t.swipe[1] = Math.sign(h));
      }
    }
    this.emit();
  }
  pointerClick(e) {
    !this.state.tap && e.detail > 0 && (e.preventDefault(), e.stopPropagation());
  }
  setupPointer(e) {
    const t = this.config, r = t.device;
    if (process.env.NODE_ENV === "development")
      try {
        if (r === "pointer" && t.preventScrollDelay === void 0) {
          const i = "uv" in e ? e.sourceEvent.currentTarget : e.currentTarget;
          window.getComputedStyle(i).touchAction === "auto" && console.warn("[@use-gesture]: The drag target has its `touch-action` style property set to `auto`. It is recommended to add `touch-action: 'none'` so that the drag gesture behaves correctly on touch-enabled devices. For more information read this: https://use-gesture.netlify.app/docs/extras/#touch-action.\n\nThis message will only show in development mode. It won't appear in production. If this is intended, you can ignore it.", i);
        }
      } catch {
      }
    t.pointerLock && e.currentTarget.requestPointerLock(), t.pointerCapture || (this.eventStore.add(this.sharedConfig.window, r, "change", this.pointerMove.bind(this)), this.eventStore.add(this.sharedConfig.window, r, "end", this.pointerUp.bind(this)), this.eventStore.add(this.sharedConfig.window, r, "cancel", this.pointerUp.bind(this)));
  }
  pointerClean() {
    this.config.pointerLock && document.pointerLockElement === this.state.currentTarget && document.exitPointerLock();
  }
  preventScroll(e) {
    this.state._preventScroll && e.cancelable && e.preventDefault();
  }
  setupScrollPrevention(e) {
    this.state._preventScroll = !1, Qq(e);
    const t = this.eventStore.add(this.sharedConfig.window, "touch", "change", this.preventScroll.bind(this), {
      passive: !1
    });
    this.eventStore.add(this.sharedConfig.window, "touch", "end", t), this.eventStore.add(this.sharedConfig.window, "touch", "cancel", t), this.timeoutStore.add("startPointerDrag", this.startPointerDrag.bind(this), this.config.preventScrollDelay, e);
  }
  setupDelayTrigger(e) {
    this.state._delayed = !0, this.timeoutStore.add("dragDelay", () => {
      this.state._step = [0, 0], this.startPointerDrag(e);
    }, this.config.delay);
  }
  keyDown(e) {
    const t = SF[e.key];
    if (t) {
      const r = this.state, i = e.shiftKey ? 10 : e.altKey ? 0.1 : 1;
      this.start(e), r._delta = t(this.config.keyboardDisplacement, i), r._keyboardActive = !0, Gc.addTo(r._movement, r._delta), this.compute(e), this.emit();
    }
  }
  keyUp(e) {
    e.key in SF && (this.state._keyboardActive = !1, this.setActive(), this.compute(e), this.emit());
  }
  bind(e) {
    const t = this.config.device;
    e(t, "start", this.pointerDown.bind(this)), this.config.pointerCapture && (e(t, "change", this.pointerMove.bind(this)), e(t, "end", this.pointerUp.bind(this)), e(t, "cancel", this.pointerUp.bind(this)), e("lostPointerCapture", "", this.pointerUp.bind(this))), this.config.keys && (e("key", "down", this.keyDown.bind(this)), e("key", "up", this.keyUp.bind(this))), this.config.filterTaps && e("click", "", this.pointerClick.bind(this), {
      capture: !0,
      passive: !1
    });
  }
}
function Qq(n) {
  "persist" in n && typeof n.persist == "function" && n.persist();
}
const ow = typeof window < "u" && window.document && window.document.createElement;
function kB() {
  return ow && "ontouchstart" in window;
}
function Zq() {
  return kB() || ow && window.navigator.maxTouchPoints > 1;
}
function Jq() {
  return ow && "onpointerdown" in window;
}
function eK() {
  return ow && "exitPointerLock" in window.document;
}
function tK() {
  try {
    return "constructor" in GestureEvent;
  } catch {
    return !1;
  }
}
const up = {
  isBrowser: ow,
  gesture: tK(),
  touch: kB(),
  touchscreen: Zq(),
  pointer: Jq(),
  pointerLock: eK()
}, nK = 250, rK = 180, iK = 0.5, aK = 50, oK = 250, sK = 10, _F = {
  mouse: 0,
  touch: 0,
  pen: 8
}, FB = xs(xs({}, aw), {}, {
  device(n, e, {
    pointer: {
      touch: t = !1,
      lock: r = !1,
      mouse: i = !1
    } = {}
  }) {
    return this.pointerLock = r && up.pointerLock, up.touch && t ? "touch" : this.pointerLock ? "mouse" : up.pointer && !i ? "pointer" : up.touch ? "touch" : "mouse";
  },
  preventScrollAxis(n, e, {
    preventScroll: t
  }) {
    if (this.preventScrollDelay = typeof t == "number" ? t : t || t === void 0 && n ? nK : void 0, !(!up.touchscreen || t === !1))
      return n || (t !== void 0 ? "y" : void 0);
  },
  pointerCapture(n, e, {
    pointer: {
      capture: t = !0,
      buttons: r = 1,
      keys: i = !0
    } = {}
  }) {
    return this.pointerButtons = r, this.keys = i, !this.pointerLock && this.device === "pointer" && t;
  },
  threshold(n, e, {
    filterTaps: t = !1,
    tapsThreshold: r = 3,
    axis: i = void 0
  }) {
    const o = Gc.toVector(n, t ? r : i ? 1 : 0);
    return this.filterTaps = t, this.tapsThreshold = r, o;
  },
  swipe({
    velocity: n = iK,
    distance: e = aK,
    duration: t = oK
  } = {}) {
    return {
      velocity: this.transform(Gc.toVector(n)),
      distance: this.transform(Gc.toVector(e)),
      duration: t
    };
  },
  delay(n = 0) {
    switch (n) {
      case !0:
        return rK;
      case !1:
        return 0;
      default:
        return n;
    }
  },
  axisThreshold(n) {
    return n ? xs(xs({}, _F), n) : _F;
  },
  keyboardDisplacement(n = sK) {
    return n;
  }
});
process.env.NODE_ENV === "development" && Object.assign(FB, {
  useTouch(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `useTouch` option has been renamed to `pointer.touch`. Use it as in `{ pointer: { touch: true } }`.");
    return NaN;
  },
  experimental_preventWindowScrollY(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `experimental_preventWindowScrollY` option has been renamed to `preventScroll`.");
    return NaN;
  },
  swipeVelocity(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `swipeVelocity` option has been renamed to `swipe.velocity`. Use it as in `{ swipe: { velocity: 0.5 } }`.");
    return NaN;
  },
  swipeDistance(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `swipeDistance` option has been renamed to `swipe.distance`. Use it as in `{ swipe: { distance: 50 } }`.");
    return NaN;
  },
  swipeDuration(n) {
    if (n !== void 0)
      throw Error("[@use-gesture]: `swipeDuration` option has been renamed to `swipe.duration`. Use it as in `{ swipe: { duration: 250 } }`.");
    return NaN;
  }
});
xs(xs({}, qP), {}, {
  device(n, e, {
    shared: t,
    pointer: {
      touch: r = !1
    } = {}
  }) {
    if (t.target && !up.touch && up.gesture)
      return "gesture";
    if (up.touch && r)
      return "touch";
    if (up.touchscreen) {
      if (up.pointer)
        return "pointer";
      if (up.touch)
        return "touch";
    }
  },
  bounds(n, e, {
    scaleBounds: t = {},
    angleBounds: r = {}
  }) {
    const i = (l) => {
      const u = vF(_R(t, l), {
        min: -1 / 0,
        max: 1 / 0
      });
      return [u.min, u.max];
    }, o = (l) => {
      const u = vF(_R(r, l), {
        min: -1 / 0,
        max: 1 / 0
      });
      return [u.min, u.max];
    };
    return typeof t != "function" && typeof r != "function" ? [i(), o()] : (l) => [i(l), o(l)];
  },
  threshold(n, e, t) {
    return this.lockDirection = t.axis === "lock", Gc.toVector(n, this.lockDirection ? [0.1, 3] : 0);
  },
  modifierKey(n) {
    return n === void 0 ? "ctrlKey" : n;
  },
  pinchOnWheel(n = !0) {
    return n;
  }
});
xs(xs({}, aw), {}, {
  mouseOnly: (n = !0) => n
});
xs(xs({}, aw), {}, {
  mouseOnly: (n = !0) => n
});
const zB = /* @__PURE__ */ new Map(), RO = /* @__PURE__ */ new Map();
function lK(n) {
  zB.set(n.key, n.engine), RO.set(n.key, n.resolver);
}
const uK = {
  key: "drag",
  engine: Kq,
  resolver: FB
};
function cK(n, e) {
  if (n == null)
    return {};
  var t = {}, r = Object.keys(n), i, o;
  for (o = 0; o < r.length; o++)
    i = r[o], !(e.indexOf(i) >= 0) && (t[i] = n[i]);
  return t;
}
function fK(n, e) {
  if (n == null)
    return {};
  var t = cK(n, e), r, i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(n);
    for (i = 0; i < o.length; i++)
      r = o[i], !(e.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(n, r) && (t[r] = n[r]);
  }
  return t;
}
const dK = {
  target(n) {
    if (n)
      return () => "current" in n ? n.current : n;
  },
  enabled(n = !0) {
    return n;
  },
  window(n = up.isBrowser ? window : void 0) {
    return n;
  },
  eventOptions({
    passive: n = !0,
    capture: e = !1
  } = {}) {
    return {
      passive: n,
      capture: e
    };
  },
  transform(n) {
    return n;
  }
}, hK = ["target", "eventOptions", "window", "enabled", "transform"];
function uR(n = {}, e) {
  const t = {};
  for (const [r, i] of Object.entries(e))
    switch (typeof i) {
      case "function":
        if (process.env.NODE_ENV === "development") {
          const o = i.call(t, n[r], r, n);
          Number.isNaN(o) || (t[r] = o);
        } else
          t[r] = i.call(t, n[r], r, n);
        break;
      case "object":
        t[r] = uR(n[r], i);
        break;
      case "boolean":
        i && (t[r] = n[r]);
        break;
    }
  return t;
}
function pK(n, e, t = {}) {
  const r = n, {
    target: i,
    eventOptions: o,
    window: l,
    enabled: u,
    transform: h
  } = r, p = fK(r, hK);
  if (t.shared = uR({
    target: i,
    eventOptions: o,
    window: l,
    enabled: u,
    transform: h
  }, dK), e) {
    const y = RO.get(e);
    t[e] = uR(xs({
      shared: t.shared
    }, p), y);
  } else
    for (const y in p) {
      const _ = RO.get(y);
      if (_)
        t[y] = uR(xs({
          shared: t.shared
        }, p[y]), _);
      else if (process.env.NODE_ENV === "development" && !["drag", "pinch", "scroll", "wheel", "move", "hover"].includes(y)) {
        if (y === "domTarget")
          throw Error("[@use-gesture]: `domTarget` option has been renamed to `target`.");
        console.warn(`[@use-gesture]: Unknown config key \`${y}\` was used. Please read the documentation for further information.`);
      }
    }
  return t;
}
class IB {
  constructor(e, t) {
    gd(this, "_listeners", /* @__PURE__ */ new Set()), this._ctrl = e, this._gestureKey = t;
  }
  add(e, t, r, i, o) {
    const l = this._listeners, u = zq(t, r), h = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {}, p = xs(xs({}, h), o);
    e.addEventListener(u, i, p);
    const y = () => {
      e.removeEventListener(u, i, p), l.delete(y);
    };
    return l.add(y), y;
  }
  clean() {
    this._listeners.forEach((e) => e()), this._listeners.clear();
  }
}
class mK {
  constructor() {
    gd(this, "_timeouts", /* @__PURE__ */ new Map());
  }
  add(e, t, r = 140, ...i) {
    this.remove(e), this._timeouts.set(e, window.setTimeout(t, r, ...i));
  }
  remove(e) {
    const t = this._timeouts.get(e);
    t && window.clearTimeout(t);
  }
  clean() {
    this._timeouts.forEach((e) => void window.clearTimeout(e)), this._timeouts.clear();
  }
}
class vK {
  constructor(e) {
    gd(this, "gestures", /* @__PURE__ */ new Set()), gd(this, "_targetEventStore", new IB(this)), gd(this, "gestureEventStores", {}), gd(this, "gestureTimeoutStores", {}), gd(this, "handlers", {}), gd(this, "config", {}), gd(this, "pointerIds", /* @__PURE__ */ new Set()), gd(this, "touchIds", /* @__PURE__ */ new Set()), gd(this, "state", {
      shared: {
        shiftKey: !1,
        metaKey: !1,
        ctrlKey: !1,
        altKey: !1
      }
    }), gK(this, e);
  }
  setEventIds(e) {
    if (p2(e))
      return this.touchIds = new Set(Hq(e)), this.touchIds;
    if ("pointerId" in e)
      return e.type === "pointerup" || e.type === "pointercancel" ? this.pointerIds.delete(e.pointerId) : e.type === "pointerdown" && this.pointerIds.add(e.pointerId), this.pointerIds;
  }
  applyHandlers(e, t) {
    this.handlers = e, this.nativeHandlers = t;
  }
  applyConfig(e, t) {
    this.config = pK(e, t, this.config);
  }
  clean() {
    this._targetEventStore.clean();
    for (const e of this.gestures)
      this.gestureEventStores[e].clean(), this.gestureTimeoutStores[e].clean();
  }
  effect() {
    return this.config.shared.target && this.bind(), () => this._targetEventStore.clean();
  }
  bind(...e) {
    const t = this.config.shared, r = {};
    let i;
    if (!(t.target && (i = t.target(), !i))) {
      if (t.enabled) {
        for (const l of this.gestures) {
          const u = this.config[l], h = xF(r, u.eventOptions, !!i);
          if (u.enabled) {
            const p = zB.get(l);
            new p(this, e, l).bind(h);
          }
        }
        const o = xF(r, t.eventOptions, !!i);
        for (const l in this.nativeHandlers)
          o(l, "", (u) => this.nativeHandlers[l](xs(xs({}, this.state.shared), {}, {
            event: u,
            args: e
          })), void 0, !0);
      }
      for (const o in r)
        r[o] = Wq(...r[o]);
      if (!i)
        return r;
      for (const o in r) {
        const {
          device: l,
          capture: u,
          passive: h
        } = Fq(o);
        this._targetEventStore.add(i, l, "", r[o], {
          capture: u,
          passive: h
        });
      }
    }
  }
}
function x1(n, e) {
  n.gestures.add(e), n.gestureEventStores[e] = new IB(n, e), n.gestureTimeoutStores[e] = new mK();
}
function gK(n, e) {
  e.drag && x1(n, "drag"), e.wheel && x1(n, "wheel"), e.scroll && x1(n, "scroll"), e.move && x1(n, "move"), e.pinch && x1(n, "pinch"), e.hover && x1(n, "hover");
}
const xF = (n, e, t) => (r, i, o, l = {}, u = !1) => {
  var h, p;
  const y = (h = l.capture) !== null && h !== void 0 ? h : e.capture, _ = (p = l.passive) !== null && p !== void 0 ? p : e.passive;
  let E = u ? r : Nq(r, i, y);
  t && _ && (E += "Passive"), n[E] = n[E] || [], n[E].push(o);
};
function yK(n, e = {}, t, r) {
  const i = Be.useMemo(() => new vK(n), []);
  if (i.applyHandlers(n, r), i.applyConfig(e, t), Be.useEffect(i.effect.bind(i)), Be.useEffect(() => i.clean.bind(i), []), e.target === void 0)
    return i.bind.bind(i);
}
function SK(n, e) {
  return lK(uK), yK({
    drag: n
  }, e || {}, "drag");
}
const _K = (n) => (e, t, r) => {
  const i = r.subscribe;
  return r.subscribe = (l, u, h) => {
    let p = l;
    if (u) {
      const y = (h == null ? void 0 : h.equalityFn) || Object.is;
      let _ = l(r.getState());
      p = (E) => {
        const w = l(E);
        if (!y(_, w)) {
          const R = _;
          u(_ = w, R);
        }
      }, h != null && h.fireImmediately && u(_, _);
    }
    return i(p);
  }, n(e, t, r);
};
var xK = Object.defineProperty, EK = (n, e, t) => e in n ? xK(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, qr = (n, e, t) => (EK(n, typeof e != "symbol" ? e + "" : e, t), t);
const WC = new v_(), EF = new Og(), bK = Math.cos(70 * (Math.PI / 180)), bF = (n, e) => (n % e + e) % e;
let TK = class extends wv {
  constructor(e, t) {
    super(), qr(this, "object"), qr(this, "domElement"), qr(this, "enabled", !0), qr(this, "target", new Re()), qr(this, "minDistance", 0), qr(this, "maxDistance", 1 / 0), qr(this, "minZoom", 0), qr(this, "maxZoom", 1 / 0), qr(this, "minPolarAngle", 0), qr(this, "maxPolarAngle", Math.PI), qr(this, "minAzimuthAngle", -1 / 0), qr(this, "maxAzimuthAngle", 1 / 0), qr(this, "enableDamping", !1), qr(this, "dampingFactor", 0.05), qr(this, "enableZoom", !0), qr(this, "zoomSpeed", 1), qr(this, "enableRotate", !0), qr(this, "rotateSpeed", 1), qr(this, "enablePan", !0), qr(this, "panSpeed", 1), qr(this, "screenSpacePanning", !0), qr(this, "keyPanSpeed", 7), qr(this, "zoomToCursor", !1), qr(this, "autoRotate", !1), qr(this, "autoRotateSpeed", 2), qr(this, "reverseOrbit", !1), qr(this, "reverseHorizontalOrbit", !1), qr(this, "reverseVerticalOrbit", !1), qr(this, "keys", { LEFT: "ArrowLeft", UP: "ArrowUp", RIGHT: "ArrowRight", BOTTOM: "ArrowDown" }), qr(this, "mouseButtons", {
      LEFT: $S.ROTATE,
      MIDDLE: $S.DOLLY,
      RIGHT: $S.PAN
    }), qr(this, "touches", { ONE: YS.ROTATE, TWO: YS.DOLLY_PAN }), qr(this, "target0"), qr(this, "position0"), qr(this, "zoom0"), qr(this, "_domElementKeyEvents", null), qr(this, "getPolarAngle"), qr(this, "getAzimuthalAngle"), qr(this, "setPolarAngle"), qr(this, "setAzimuthalAngle"), qr(this, "getDistance"), qr(this, "listenToKeyEvents"), qr(this, "stopListenToKeyEvents"), qr(this, "saveState"), qr(this, "reset"), qr(this, "update"), qr(this, "connect"), qr(this, "dispose"), this.object = e, this.domElement = t, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = () => y.phi, this.getAzimuthalAngle = () => y.theta, this.setPolarAngle = (Te) => {
      let tt = bF(Te, 2 * Math.PI), pt = y.phi;
      pt < 0 && (pt += 2 * Math.PI), tt < 0 && (tt += 2 * Math.PI);
      let ve = Math.abs(tt - pt);
      2 * Math.PI - ve < ve && (tt < pt ? tt += 2 * Math.PI : pt += 2 * Math.PI), _.phi = tt - pt, r.update();
    }, this.setAzimuthalAngle = (Te) => {
      let tt = bF(Te, 2 * Math.PI), pt = y.theta;
      pt < 0 && (pt += 2 * Math.PI), tt < 0 && (tt += 2 * Math.PI);
      let ve = Math.abs(tt - pt);
      2 * Math.PI - ve < ve && (tt < pt ? tt += 2 * Math.PI : pt += 2 * Math.PI), _.theta = tt - pt, r.update();
    }, this.getDistance = () => r.object.position.distanceTo(r.target), this.listenToKeyEvents = (Te) => {
      Te.addEventListener("keydown", lt), this._domElementKeyEvents = Te;
    }, this.stopListenToKeyEvents = () => {
      this._domElementKeyEvents.removeEventListener("keydown", lt), this._domElementKeyEvents = null;
    }, this.saveState = () => {
      r.target0.copy(r.target), r.position0.copy(r.object.position), r.zoom0 = r.object.zoom;
    }, this.reset = () => {
      r.target.copy(r.target0), r.object.position.copy(r.position0), r.object.zoom = r.zoom0, r.object.updateProjectionMatrix(), r.dispatchEvent(i), r.update(), h = u.NONE;
    }, this.update = (() => {
      const Te = new Re(), tt = new Re(0, 1, 0), pt = new jc().setFromUnitVectors(e.up, tt), ve = pt.clone().invert(), Pt = new Re(), He = new jc(), dt = 2 * Math.PI;
      return function() {
        const Un = r.object.position;
        pt.setFromUnitVectors(e.up, tt), ve.copy(pt).invert(), Te.copy(Un).sub(r.target), Te.applyQuaternion(pt), y.setFromVector3(Te), r.autoRotate && h === u.NONE && me(se()), r.enableDamping ? (y.theta += _.theta * r.dampingFactor, y.phi += _.phi * r.dampingFactor) : (y.theta += _.theta, y.phi += _.phi);
        let jn = r.minAzimuthAngle, cr = r.maxAzimuthAngle;
        isFinite(jn) && isFinite(cr) && (jn < -Math.PI ? jn += dt : jn > Math.PI && (jn -= dt), cr < -Math.PI ? cr += dt : cr > Math.PI && (cr -= dt), jn <= cr ? y.theta = Math.max(jn, Math.min(cr, y.theta)) : y.theta = y.theta > (jn + cr) / 2 ? Math.max(jn, y.theta) : Math.min(cr, y.theta)), y.phi = Math.max(r.minPolarAngle, Math.min(r.maxPolarAngle, y.phi)), y.makeSafe(), r.enableDamping === !0 ? r.target.addScaledVector(w, r.dampingFactor) : r.target.add(w), r.zoomToCursor && Z || r.object.isOrthographicCamera ? y.radius = ue(y.radius) : y.radius = ue(y.radius * E), Te.setFromSpherical(y), Te.applyQuaternion(ve), Un.copy(r.target).add(Te), r.object.lookAt(r.target), r.enableDamping === !0 ? (_.theta *= 1 - r.dampingFactor, _.phi *= 1 - r.dampingFactor, w.multiplyScalar(1 - r.dampingFactor)) : (_.set(0, 0, 0), w.set(0, 0, 0));
        let En = !1;
        if (r.zoomToCursor && Z) {
          let tr = null;
          if (r.object instanceof Ws && r.object.isPerspectiveCamera) {
            const fr = Te.length();
            tr = ue(fr * E);
            const Hn = fr - tr;
            r.object.position.addScaledVector(Y, Hn), r.object.updateMatrixWorld();
          } else if (r.object.isOrthographicCamera) {
            const fr = new Re(ee.x, ee.y, 0);
            fr.unproject(r.object), r.object.zoom = Math.max(r.minZoom, Math.min(r.maxZoom, r.object.zoom / E)), r.object.updateProjectionMatrix(), En = !0;
            const Hn = new Re(ee.x, ee.y, 0);
            Hn.unproject(r.object), r.object.position.sub(Hn).add(fr), r.object.updateMatrixWorld(), tr = Te.length();
          } else
            console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."), r.zoomToCursor = !1;
          tr !== null && (r.screenSpacePanning ? r.target.set(0, 0, -1).transformDirection(r.object.matrix).multiplyScalar(tr).add(r.object.position) : (WC.origin.copy(r.object.position), WC.direction.set(0, 0, -1).transformDirection(r.object.matrix), Math.abs(r.object.up.dot(WC.direction)) < bK ? e.lookAt(r.target) : (EF.setFromNormalAndCoplanarPoint(r.object.up, r.target), WC.intersectPlane(EF, r.target))));
        } else
          r.object instanceof Fg && r.object.isOrthographicCamera && (r.object.zoom = Math.max(r.minZoom, Math.min(r.maxZoom, r.object.zoom / E)), r.object.updateProjectionMatrix(), En = !0);
        return E = 1, Z = !1, En || Pt.distanceToSquared(r.object.position) > p || 8 * (1 - He.dot(r.object.quaternion)) > p ? (r.dispatchEvent(i), Pt.copy(r.object.position), He.copy(r.object.quaternion), En = !1, !0) : !1;
      };
    })(), this.connect = (Te) => {
      Te === document && console.error(
        'THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'
      ), r.domElement = Te, r.domElement.style.touchAction = "none", r.domElement.addEventListener("contextmenu", xe), r.domElement.addEventListener("pointerdown", mt), r.domElement.addEventListener("pointercancel", re), r.domElement.addEventListener("wheel", ut);
    }, this.dispose = () => {
      var Te, tt, pt, ve, Pt, He;
      (Te = r.domElement) == null || Te.removeEventListener("contextmenu", xe), (tt = r.domElement) == null || tt.removeEventListener("pointerdown", mt), (pt = r.domElement) == null || pt.removeEventListener("pointercancel", re), (ve = r.domElement) == null || ve.removeEventListener("wheel", ut), (Pt = r.domElement) == null || Pt.ownerDocument.removeEventListener("pointermove", rn), (He = r.domElement) == null || He.ownerDocument.removeEventListener("pointerup", ae), r._domElementKeyEvents !== null && r._domElementKeyEvents.removeEventListener("keydown", lt);
    };
    const r = this, i = { type: "change" }, o = { type: "start" }, l = { type: "end" }, u = {
      NONE: -1,
      ROTATE: 0,
      DOLLY: 1,
      PAN: 2,
      TOUCH_ROTATE: 3,
      TOUCH_PAN: 4,
      TOUCH_DOLLY_PAN: 5,
      TOUCH_DOLLY_ROTATE: 6
    };
    let h = u.NONE;
    const p = 1e-6, y = new _O(), _ = new _O();
    let E = 1;
    const w = new Re(), R = new $t(), U = new $t(), L = new $t(), A = new $t(), k = new $t(), F = new $t(), H = new $t(), B = new $t(), j = new $t(), Y = new Re(), ee = new $t();
    let Z = !1;
    const K = [], fe = {};
    function se() {
      return 2 * Math.PI / 60 / 60 * r.autoRotateSpeed;
    }
    function he() {
      return Math.pow(0.95, r.zoomSpeed);
    }
    function me(Te) {
      r.reverseOrbit || r.reverseHorizontalOrbit ? _.theta += Te : _.theta -= Te;
    }
    function Ee(Te) {
      r.reverseOrbit || r.reverseVerticalOrbit ? _.phi += Te : _.phi -= Te;
    }
    const be = (() => {
      const Te = new Re();
      return function(pt, ve) {
        Te.setFromMatrixColumn(ve, 0), Te.multiplyScalar(-pt), w.add(Te);
      };
    })(), we = (() => {
      const Te = new Re();
      return function(pt, ve) {
        r.screenSpacePanning === !0 ? Te.setFromMatrixColumn(ve, 1) : (Te.setFromMatrixColumn(ve, 0), Te.crossVectors(r.object.up, Te)), Te.multiplyScalar(pt), w.add(Te);
      };
    })(), de = (() => {
      const Te = new Re();
      return function(pt, ve) {
        const Pt = r.domElement;
        if (Pt && r.object instanceof Ws && r.object.isPerspectiveCamera) {
          const He = r.object.position;
          Te.copy(He).sub(r.target);
          let dt = Te.length();
          dt *= Math.tan(r.object.fov / 2 * Math.PI / 180), be(2 * pt * dt / Pt.clientHeight, r.object.matrix), we(2 * ve * dt / Pt.clientHeight, r.object.matrix);
        } else
          Pt && r.object instanceof Fg && r.object.isOrthographicCamera ? (be(
            pt * (r.object.right - r.object.left) / r.object.zoom / Pt.clientWidth,
            r.object.matrix
          ), we(
            ve * (r.object.top - r.object.bottom) / r.object.zoom / Pt.clientHeight,
            r.object.matrix
          )) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), r.enablePan = !1);
      };
    })();
    function ye(Te) {
      r.object instanceof Ws && r.object.isPerspectiveCamera || r.object instanceof Fg && r.object.isOrthographicCamera ? E /= Te : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), r.enableZoom = !1);
    }
    function X(Te) {
      r.object instanceof Ws && r.object.isPerspectiveCamera || r.object instanceof Fg && r.object.isOrthographicCamera ? E *= Te : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), r.enableZoom = !1);
    }
    function q(Te) {
      if (!r.zoomToCursor || !r.domElement)
        return;
      Z = !0;
      const tt = r.domElement.getBoundingClientRect(), pt = Te.clientX - tt.left, ve = Te.clientY - tt.top, Pt = tt.width, He = tt.height;
      ee.x = pt / Pt * 2 - 1, ee.y = -(ve / He) * 2 + 1, Y.set(ee.x, ee.y, 1).unproject(r.object).sub(r.object.position).normalize();
    }
    function ue(Te) {
      return Math.max(r.minDistance, Math.min(r.maxDistance, Te));
    }
    function Ce(Te) {
      R.set(Te.clientX, Te.clientY);
    }
    function Ae(Te) {
      q(Te), H.set(Te.clientX, Te.clientY);
    }
    function De(Te) {
      A.set(Te.clientX, Te.clientY);
    }
    function Ne(Te) {
      U.set(Te.clientX, Te.clientY), L.subVectors(U, R).multiplyScalar(r.rotateSpeed);
      const tt = r.domElement;
      tt && (me(2 * Math.PI * L.x / tt.clientHeight), Ee(2 * Math.PI * L.y / tt.clientHeight)), R.copy(U), r.update();
    }
    function Pe(Te) {
      B.set(Te.clientX, Te.clientY), j.subVectors(B, H), j.y > 0 ? ye(he()) : j.y < 0 && X(he()), H.copy(B), r.update();
    }
    function Fe(Te) {
      k.set(Te.clientX, Te.clientY), F.subVectors(k, A).multiplyScalar(r.panSpeed), de(F.x, F.y), A.copy(k), r.update();
    }
    function it(Te) {
      q(Te), Te.deltaY < 0 ? X(he()) : Te.deltaY > 0 && ye(he()), r.update();
    }
    function Ot(Te) {
      let tt = !1;
      switch (Te.code) {
        case r.keys.UP:
          de(0, r.keyPanSpeed), tt = !0;
          break;
        case r.keys.BOTTOM:
          de(0, -r.keyPanSpeed), tt = !0;
          break;
        case r.keys.LEFT:
          de(r.keyPanSpeed, 0), tt = !0;
          break;
        case r.keys.RIGHT:
          de(-r.keyPanSpeed, 0), tt = !0;
          break;
      }
      tt && (Te.preventDefault(), r.update());
    }
    function st() {
      if (K.length == 1)
        R.set(K[0].pageX, K[0].pageY);
      else {
        const Te = 0.5 * (K[0].pageX + K[1].pageX), tt = 0.5 * (K[0].pageY + K[1].pageY);
        R.set(Te, tt);
      }
    }
    function oe() {
      if (K.length == 1)
        A.set(K[0].pageX, K[0].pageY);
      else {
        const Te = 0.5 * (K[0].pageX + K[1].pageX), tt = 0.5 * (K[0].pageY + K[1].pageY);
        A.set(Te, tt);
      }
    }
    function rt() {
      const Te = K[0].pageX - K[1].pageX, tt = K[0].pageY - K[1].pageY, pt = Math.sqrt(Te * Te + tt * tt);
      H.set(0, pt);
    }
    function qe() {
      r.enableZoom && rt(), r.enablePan && oe();
    }
    function $e() {
      r.enableZoom && rt(), r.enableRotate && st();
    }
    function Ye(Te) {
      if (K.length == 1)
        U.set(Te.pageX, Te.pageY);
      else {
        const pt = Ze(Te), ve = 0.5 * (Te.pageX + pt.x), Pt = 0.5 * (Te.pageY + pt.y);
        U.set(ve, Pt);
      }
      L.subVectors(U, R).multiplyScalar(r.rotateSpeed);
      const tt = r.domElement;
      tt && (me(2 * Math.PI * L.x / tt.clientHeight), Ee(2 * Math.PI * L.y / tt.clientHeight)), R.copy(U);
    }
    function zt(Te) {
      if (K.length == 1)
        k.set(Te.pageX, Te.pageY);
      else {
        const tt = Ze(Te), pt = 0.5 * (Te.pageX + tt.x), ve = 0.5 * (Te.pageY + tt.y);
        k.set(pt, ve);
      }
      F.subVectors(k, A).multiplyScalar(r.panSpeed), de(F.x, F.y), A.copy(k);
    }
    function ot(Te) {
      const tt = Ze(Te), pt = Te.pageX - tt.x, ve = Te.pageY - tt.y, Pt = Math.sqrt(pt * pt + ve * ve);
      B.set(0, Pt), j.set(0, Math.pow(B.y / H.y, r.zoomSpeed)), ye(j.y), H.copy(B);
    }
    function Dt(Te) {
      r.enableZoom && ot(Te), r.enablePan && zt(Te);
    }
    function kt(Te) {
      r.enableZoom && ot(Te), r.enableRotate && Ye(Te);
    }
    function mt(Te) {
      var tt, pt;
      r.enabled !== !1 && (K.length === 0 && ((tt = r.domElement) == null || tt.ownerDocument.addEventListener("pointermove", rn), (pt = r.domElement) == null || pt.ownerDocument.addEventListener("pointerup", ae)), We(Te), Te.pointerType === "touch" ? Yt(Te) : ze(Te));
    }
    function rn(Te) {
      r.enabled !== !1 && (Te.pointerType === "touch" ? Nt(Te) : xt(Te));
    }
    function ae(Te) {
      var tt, pt, ve;
      ft(Te), K.length === 0 && ((tt = r.domElement) == null || tt.releasePointerCapture(Te.pointerId), (pt = r.domElement) == null || pt.ownerDocument.removeEventListener("pointermove", rn), (ve = r.domElement) == null || ve.ownerDocument.removeEventListener("pointerup", ae)), r.dispatchEvent(l), h = u.NONE;
    }
    function re(Te) {
      ft(Te);
    }
    function ze(Te) {
      let tt;
      switch (Te.button) {
        case 0:
          tt = r.mouseButtons.LEFT;
          break;
        case 1:
          tt = r.mouseButtons.MIDDLE;
          break;
        case 2:
          tt = r.mouseButtons.RIGHT;
          break;
        default:
          tt = -1;
      }
      switch (tt) {
        case $S.DOLLY:
          if (r.enableZoom === !1)
            return;
          Ae(Te), h = u.DOLLY;
          break;
        case $S.ROTATE:
          if (Te.ctrlKey || Te.metaKey || Te.shiftKey) {
            if (r.enablePan === !1)
              return;
            De(Te), h = u.PAN;
          } else {
            if (r.enableRotate === !1)
              return;
            Ce(Te), h = u.ROTATE;
          }
          break;
        case $S.PAN:
          if (Te.ctrlKey || Te.metaKey || Te.shiftKey) {
            if (r.enableRotate === !1)
              return;
            Ce(Te), h = u.ROTATE;
          } else {
            if (r.enablePan === !1)
              return;
            De(Te), h = u.PAN;
          }
          break;
        default:
          h = u.NONE;
      }
      h !== u.NONE && r.dispatchEvent(o);
    }
    function xt(Te) {
      if (r.enabled !== !1)
        switch (h) {
          case u.ROTATE:
            if (r.enableRotate === !1)
              return;
            Ne(Te);
            break;
          case u.DOLLY:
            if (r.enableZoom === !1)
              return;
            Pe(Te);
            break;
          case u.PAN:
            if (r.enablePan === !1)
              return;
            Fe(Te);
            break;
        }
    }
    function ut(Te) {
      r.enabled === !1 || r.enableZoom === !1 || h !== u.NONE && h !== u.ROTATE || (Te.preventDefault(), r.dispatchEvent(o), it(Te), r.dispatchEvent(l));
    }
    function lt(Te) {
      r.enabled === !1 || r.enablePan === !1 || Ot(Te);
    }
    function Yt(Te) {
      switch (Et(Te), K.length) {
        case 1:
          switch (r.touches.ONE) {
            case YS.ROTATE:
              if (r.enableRotate === !1)
                return;
              st(), h = u.TOUCH_ROTATE;
              break;
            case YS.PAN:
              if (r.enablePan === !1)
                return;
              oe(), h = u.TOUCH_PAN;
              break;
            default:
              h = u.NONE;
          }
          break;
        case 2:
          switch (r.touches.TWO) {
            case YS.DOLLY_PAN:
              if (r.enableZoom === !1 && r.enablePan === !1)
                return;
              qe(), h = u.TOUCH_DOLLY_PAN;
              break;
            case YS.DOLLY_ROTATE:
              if (r.enableZoom === !1 && r.enableRotate === !1)
                return;
              $e(), h = u.TOUCH_DOLLY_ROTATE;
              break;
            default:
              h = u.NONE;
          }
          break;
        default:
          h = u.NONE;
      }
      h !== u.NONE && r.dispatchEvent(o);
    }
    function Nt(Te) {
      switch (Et(Te), h) {
        case u.TOUCH_ROTATE:
          if (r.enableRotate === !1)
            return;
          Ye(Te), r.update();
          break;
        case u.TOUCH_PAN:
          if (r.enablePan === !1)
            return;
          zt(Te), r.update();
          break;
        case u.TOUCH_DOLLY_PAN:
          if (r.enableZoom === !1 && r.enablePan === !1)
            return;
          Dt(Te), r.update();
          break;
        case u.TOUCH_DOLLY_ROTATE:
          if (r.enableZoom === !1 && r.enableRotate === !1)
            return;
          kt(Te), r.update();
          break;
        default:
          h = u.NONE;
      }
    }
    function xe(Te) {
      r.enabled !== !1 && Te.preventDefault();
    }
    function We(Te) {
      K.push(Te);
    }
    function ft(Te) {
      delete fe[Te.pointerId];
      for (let tt = 0; tt < K.length; tt++)
        if (K[tt].pointerId == Te.pointerId) {
          K.splice(tt, 1);
          return;
        }
    }
    function Et(Te) {
      let tt = fe[Te.pointerId];
      tt === void 0 && (tt = new $t(), fe[Te.pointerId] = tt), tt.set(Te.pageX, Te.pageY);
    }
    function Ze(Te) {
      const tt = Te.pointerId === K[0].pointerId ? K[1] : K[0];
      return fe[tt.pointerId];
    }
    t !== void 0 && this.connect(t), this.update();
  }
};
function sw(n, e) {
  if (Object.is(n, e))
    return !0;
  if (typeof n != "object" || n === null || typeof e != "object" || e === null)
    return !1;
  const t = Object.keys(n);
  if (t.length !== Object.keys(e).length)
    return !1;
  for (let r = 0; r < t.length; r++)
    if (!Object.prototype.hasOwnProperty.call(e, t[r]) || !Object.is(n[t[r]], e[t[r]]))
      return !1;
  return !0;
}
function wK() {
  var n = /* @__PURE__ */ Object.create(null);
  function e(i, o) {
    var l = i.id, u = i.name, h = i.dependencies;
    h === void 0 && (h = []);
    var p = i.init;
    p === void 0 && (p = function() {
    });
    var y = i.getTransferables;
    if (y === void 0 && (y = null), !n[l])
      try {
        h = h.map(function(E) {
          return E && E.isWorkerModule && (e(E, function(w) {
            if (w instanceof Error)
              throw w;
          }), E = n[E.id].value), E;
        }), p = r("<" + u + ">.init", p), y && (y = r("<" + u + ">.getTransferables", y));
        var _ = null;
        typeof p == "function" ? _ = p.apply(void 0, h) : console.error("worker module init function failed to rehydrate"), n[l] = {
          id: l,
          value: _,
          getTransferables: y
        }, o(_);
      } catch (E) {
        E && E.noLog || console.error(E), o(E);
      }
  }
  function t(i, o) {
    var l, u = i.id, h = i.args;
    (!n[u] || typeof n[u].value != "function") && o(new Error("Worker module " + u + ": not found or its 'init' did not return a function"));
    try {
      var p = (l = n[u]).value.apply(l, h);
      p && typeof p.then == "function" ? p.then(y, function(_) {
        return o(_ instanceof Error ? _ : new Error("" + _));
      }) : y(p);
    } catch (_) {
      o(_);
    }
    function y(_) {
      try {
        var E = n[u].getTransferables && n[u].getTransferables(_);
        (!E || !Array.isArray(E) || !E.length) && (E = void 0), o(_, E);
      } catch (w) {
        console.error(w), o(w);
      }
    }
  }
  function r(i, o) {
    var l = void 0;
    self.troikaDefine = function(h) {
      return l = h;
    };
    var u = URL.createObjectURL(
      new Blob(
        ["/** " + i.replace(/\*/g, "") + ` **/

troikaDefine(
` + o + `
)`],
        { type: "application/javascript" }
      )
    );
    try {
      importScripts(u);
    } catch (h) {
      console.error(h);
    }
    return URL.revokeObjectURL(u), delete self.troikaDefine, l;
  }
  self.addEventListener("message", function(i) {
    var o = i.data, l = o.messageId, u = o.action, h = o.data;
    try {
      u === "registerModule" && e(h, function(p) {
        p instanceof Error ? postMessage({
          messageId: l,
          success: !1,
          error: p.message
        }) : postMessage({
          messageId: l,
          success: !0,
          result: { isCallable: typeof p == "function" }
        });
      }), u === "callModule" && t(h, function(p, y) {
        p instanceof Error ? postMessage({
          messageId: l,
          success: !1,
          error: p.message
        }) : postMessage({
          messageId: l,
          success: !0,
          result: p
        }, y || void 0);
      });
    } catch (p) {
      postMessage({
        messageId: l,
        success: !1,
        error: p.stack
      });
    }
  });
}
function MK(n) {
  var e = function() {
    for (var t = [], r = arguments.length; r--; )
      t[r] = arguments[r];
    return e._getInitResult().then(function(i) {
      if (typeof i == "function")
        return i.apply(void 0, t);
      throw new Error("Worker module function was called but `init` did not return a callable function");
    });
  };
  return e._getInitResult = function() {
    var t = n.dependencies, r = n.init;
    t = Array.isArray(t) ? t.map(
      function(o) {
        return o && o._getInitResult ? o._getInitResult() : o;
      }
    ) : [];
    var i = Promise.all(t).then(function(o) {
      return r.apply(null, o);
    });
    return e._getInitResult = function() {
      return i;
    }, i;
  }, e;
}
var BB = function() {
  var n = !1;
  if (typeof window < "u" && typeof window.document < "u")
    try {
      var e = new Worker(
        URL.createObjectURL(new Blob([""], { type: "application/javascript" }))
      );
      e.terminate(), n = !0;
    } catch (t) {
      typeof process < "u" && process.env.NODE_ENV === "test" || console.log(
        "Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [" + t.message + "]"
      );
    }
  return BB = function() {
    return n;
  }, n;
}, CK = 0, RK = 0, fL = !1, xT = /* @__PURE__ */ Object.create(null), ET = /* @__PURE__ */ Object.create(null), AO = /* @__PURE__ */ Object.create(null);
function lw(n) {
  if ((!n || typeof n.init != "function") && !fL)
    throw new Error("requires `options.init` function");
  var e = n.dependencies, t = n.init, r = n.getTransferables, i = n.workerId;
  if (!BB())
    return MK(n);
  i == null && (i = "#default");
  var o = "workerModule" + ++CK, l = n.name || o, u = null;
  e = e && e.map(function(p) {
    return typeof p == "function" && !p.workerModuleData && (fL = !0, p = lw({
      workerId: i,
      name: "<" + l + "> function dependency: " + p.name,
      init: `function(){return (
` + cR(p) + `
)}`
    }), fL = !1), p && p.workerModuleData && (p = p.workerModuleData), p;
  });
  function h() {
    for (var p = [], y = arguments.length; y--; )
      p[y] = arguments[y];
    if (!u) {
      u = TF(i, "registerModule", h.workerModuleData);
      var _ = function() {
        u = null, ET[i].delete(_);
      };
      (ET[i] || (ET[i] = /* @__PURE__ */ new Set())).add(_);
    }
    return u.then(function(E) {
      var w = E.isCallable;
      if (w)
        return TF(i, "callModule", { id: o, args: p });
      throw new Error("Worker module function was called but `init` did not return a callable function");
    });
  }
  return h.workerModuleData = {
    isWorkerModule: !0,
    id: o,
    name: l,
    dependencies: e,
    init: cR(t),
    getTransferables: r && cR(r)
  }, h;
}
function AK(n) {
  ET[n] && ET[n].forEach(function(e) {
    e();
  }), xT[n] && (xT[n].terminate(), delete xT[n]);
}
function cR(n) {
  var e = n.toString();
  return !/^function/.test(e) && /^\w+\s*\(/.test(e) && (e = "function " + e), e;
}
function DK(n) {
  var e = xT[n];
  if (!e) {
    var t = cR(wK);
    e = xT[n] = new Worker(
      URL.createObjectURL(
        new Blob(
          ["/** Worker Module Bootstrap: " + n.replace(/\*/g, "") + ` **/

;(` + t + ")()"],
          { type: "application/javascript" }
        )
      )
    ), e.onmessage = function(r) {
      var i = r.data, o = i.messageId, l = AO[o];
      if (!l)
        throw new Error("WorkerModule response with empty or unknown messageId");
      delete AO[o], l(i);
    };
  }
  return e;
}
function TF(n, e, t) {
  return new Promise(function(r, i) {
    var o = ++RK;
    AO[o] = function(l) {
      l.success ? r(l.result) : i(new Error("Error in worker " + e + " call: " + l.error));
    }, DK(n).postMessage({
      messageId: o,
      action: e,
      data: t
    });
  });
}
function HB() {
  var n = function(e) {
    function t(ye, X, q, ue, Ce, Ae, De, Ne) {
      var Pe = 1 - De;
      Ne.x = Pe * Pe * ye + 2 * Pe * De * q + De * De * Ce, Ne.y = Pe * Pe * X + 2 * Pe * De * ue + De * De * Ae;
    }
    function r(ye, X, q, ue, Ce, Ae, De, Ne, Pe, Fe) {
      var it = 1 - Pe;
      Fe.x = it * it * it * ye + 3 * it * it * Pe * q + 3 * it * Pe * Pe * Ce + Pe * Pe * Pe * De, Fe.y = it * it * it * X + 3 * it * it * Pe * ue + 3 * it * Pe * Pe * Ae + Pe * Pe * Pe * Ne;
    }
    function i(ye, X) {
      for (var q = /([MLQCZ])([^MLQCZ]*)/g, ue, Ce, Ae, De, Ne; ue = q.exec(ye); ) {
        var Pe = ue[2].replace(/^\s*|\s*$/g, "").split(/[,\s]+/).map(function(Fe) {
          return parseFloat(Fe);
        });
        switch (ue[1]) {
          case "M":
            De = Ce = Pe[0], Ne = Ae = Pe[1];
            break;
          case "L":
            (Pe[0] !== De || Pe[1] !== Ne) && X("L", De, Ne, De = Pe[0], Ne = Pe[1]);
            break;
          case "Q": {
            X("Q", De, Ne, De = Pe[2], Ne = Pe[3], Pe[0], Pe[1]);
            break;
          }
          case "C": {
            X("C", De, Ne, De = Pe[4], Ne = Pe[5], Pe[0], Pe[1], Pe[2], Pe[3]);
            break;
          }
          case "Z":
            (De !== Ce || Ne !== Ae) && X("L", De, Ne, Ce, Ae);
            break;
        }
      }
    }
    function o(ye, X, q) {
      q === void 0 && (q = 16);
      var ue = { x: 0, y: 0 };
      i(ye, function(Ce, Ae, De, Ne, Pe, Fe, it, Ot, st) {
        switch (Ce) {
          case "L":
            X(Ae, De, Ne, Pe);
            break;
          case "Q": {
            for (var oe = Ae, rt = De, qe = 1; qe < q; qe++)
              t(
                Ae,
                De,
                Fe,
                it,
                Ne,
                Pe,
                qe / (q - 1),
                ue
              ), X(oe, rt, ue.x, ue.y), oe = ue.x, rt = ue.y;
            break;
          }
          case "C": {
            for (var $e = Ae, Ye = De, zt = 1; zt < q; zt++)
              r(
                Ae,
                De,
                Fe,
                it,
                Ot,
                st,
                Ne,
                Pe,
                zt / (q - 1),
                ue
              ), X($e, Ye, ue.x, ue.y), $e = ue.x, Ye = ue.y;
            break;
          }
        }
      });
    }
    var l = "precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}", u = "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}", h = /* @__PURE__ */ new WeakMap(), p = {
      premultipliedAlpha: !1,
      preserveDrawingBuffer: !0,
      antialias: !1,
      depth: !1
    };
    function y(ye, X) {
      var q = ye.getContext ? ye.getContext("webgl", p) : ye, ue = h.get(q);
      if (!ue) {
        let it = function($e) {
          var Ye = Ae[$e];
          if (!Ye && (Ye = Ae[$e] = q.getExtension($e), !Ye))
            throw new Error($e + " not supported");
          return Ye;
        }, Ot = function($e, Ye) {
          var zt = q.createShader(Ye);
          return q.shaderSource(zt, $e), q.compileShader(zt), zt;
        }, st = function($e, Ye, zt, ot) {
          if (!De[$e]) {
            var Dt = {}, kt = {}, mt = q.createProgram();
            q.attachShader(mt, Ot(Ye, q.VERTEX_SHADER)), q.attachShader(mt, Ot(zt, q.FRAGMENT_SHADER)), q.linkProgram(mt), De[$e] = {
              program: mt,
              transaction: function(ae) {
                q.useProgram(mt), ae({
                  setUniform: function(ze, xt) {
                    for (var ut = [], lt = arguments.length - 2; lt-- > 0; )
                      ut[lt] = arguments[lt + 2];
                    var Yt = kt[xt] || (kt[xt] = q.getUniformLocation(mt, xt));
                    q["uniform" + ze].apply(q, [Yt].concat(ut));
                  },
                  setAttribute: function(ze, xt, ut, lt, Yt) {
                    var Nt = Dt[ze];
                    Nt || (Nt = Dt[ze] = {
                      buf: q.createBuffer(),
                      // TODO should we destroy our buffers?
                      loc: q.getAttribLocation(mt, ze),
                      data: null
                    }), q.bindBuffer(q.ARRAY_BUFFER, Nt.buf), q.vertexAttribPointer(Nt.loc, xt, q.FLOAT, !1, 0, 0), q.enableVertexAttribArray(Nt.loc), Ce ? q.vertexAttribDivisor(Nt.loc, lt) : it("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(Nt.loc, lt), Yt !== Nt.data && (q.bufferData(q.ARRAY_BUFFER, Yt, ut), Nt.data = Yt);
                  }
                });
              }
            };
          }
          De[$e].transaction(ot);
        }, oe = function($e, Ye) {
          Pe++;
          try {
            q.activeTexture(q.TEXTURE0 + Pe);
            var zt = Ne[$e];
            zt || (zt = Ne[$e] = q.createTexture(), q.bindTexture(q.TEXTURE_2D, zt), q.texParameteri(q.TEXTURE_2D, q.TEXTURE_MIN_FILTER, q.NEAREST), q.texParameteri(q.TEXTURE_2D, q.TEXTURE_MAG_FILTER, q.NEAREST)), q.bindTexture(q.TEXTURE_2D, zt), Ye(zt, Pe);
          } finally {
            Pe--;
          }
        }, rt = function($e, Ye, zt) {
          var ot = q.createFramebuffer();
          Fe.push(ot), q.bindFramebuffer(q.FRAMEBUFFER, ot), q.activeTexture(q.TEXTURE0 + Ye), q.bindTexture(q.TEXTURE_2D, $e), q.framebufferTexture2D(q.FRAMEBUFFER, q.COLOR_ATTACHMENT0, q.TEXTURE_2D, $e, 0);
          try {
            zt(ot);
          } finally {
            q.deleteFramebuffer(ot), q.bindFramebuffer(q.FRAMEBUFFER, Fe[--Fe.length - 1] || null);
          }
        }, qe = function() {
          Ae = {}, De = {}, Ne = {}, Pe = -1, Fe.length = 0;
        };
        var Ce = typeof WebGL2RenderingContext < "u" && q instanceof WebGL2RenderingContext, Ae = {}, De = {}, Ne = {}, Pe = -1, Fe = [];
        q.canvas.addEventListener("webglcontextlost", function($e) {
          qe(), $e.preventDefault();
        }, !1), h.set(q, ue = {
          gl: q,
          isWebGL2: Ce,
          getExtension: it,
          withProgram: st,
          withTexture: oe,
          withTextureFramebuffer: rt,
          handleContextLoss: qe
        });
      }
      X(ue);
    }
    function _(ye, X, q, ue, Ce, Ae, De, Ne) {
      De === void 0 && (De = 15), Ne === void 0 && (Ne = null), y(ye, function(Pe) {
        var Fe = Pe.gl, it = Pe.withProgram, Ot = Pe.withTexture;
        Ot("copy", function(st, oe) {
          Fe.texImage2D(Fe.TEXTURE_2D, 0, Fe.RGBA, Ce, Ae, 0, Fe.RGBA, Fe.UNSIGNED_BYTE, X), it("copy", l, u, function(rt) {
            var qe = rt.setUniform, $e = rt.setAttribute;
            $e("aUV", 2, Fe.STATIC_DRAW, 0, new Float32Array([0, 0, 2, 0, 0, 2])), qe("1i", "image", oe), Fe.bindFramebuffer(Fe.FRAMEBUFFER, Ne || null), Fe.disable(Fe.BLEND), Fe.colorMask(De & 8, De & 4, De & 2, De & 1), Fe.viewport(q, ue, Ce, Ae), Fe.scissor(q, ue, Ce, Ae), Fe.drawArrays(Fe.TRIANGLES, 0, 3);
          });
        });
      });
    }
    function E(ye, X, q) {
      var ue = ye.width, Ce = ye.height;
      y(ye, function(Ae) {
        var De = Ae.gl, Ne = new Uint8Array(ue * Ce * 4);
        De.readPixels(0, 0, ue, Ce, De.RGBA, De.UNSIGNED_BYTE, Ne), ye.width = X, ye.height = q, _(De, Ne, 0, 0, ue, Ce);
      });
    }
    var w = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      withWebGLContext: y,
      renderImageData: _,
      resizeWebGLCanvasWithoutClearing: E
    });
    function R(ye, X, q, ue, Ce, Ae) {
      Ae === void 0 && (Ae = 1);
      var De = new Uint8Array(ye * X), Ne = ue[2] - ue[0], Pe = ue[3] - ue[1], Fe = [];
      o(q, function($e, Ye, zt, ot) {
        Fe.push({
          x1: $e,
          y1: Ye,
          x2: zt,
          y2: ot,
          minX: Math.min($e, zt),
          minY: Math.min(Ye, ot),
          maxX: Math.max($e, zt),
          maxY: Math.max(Ye, ot)
        });
      }), Fe.sort(function($e, Ye) {
        return $e.maxX - Ye.maxX;
      });
      for (var it = 0; it < ye; it++)
        for (var Ot = 0; Ot < X; Ot++) {
          var st = rt(
            ue[0] + Ne * (it + 0.5) / ye,
            ue[1] + Pe * (Ot + 0.5) / X
          ), oe = Math.pow(1 - Math.abs(st) / Ce, Ae) / 2;
          st < 0 && (oe = 1 - oe), oe = Math.max(0, Math.min(255, Math.round(oe * 255))), De[Ot * ye + it] = oe;
        }
      return De;
      function rt($e, Ye) {
        for (var zt = 1 / 0, ot = 1 / 0, Dt = Fe.length; Dt--; ) {
          var kt = Fe[Dt];
          if (kt.maxX + ot <= $e)
            break;
          if ($e + ot > kt.minX && Ye - ot < kt.maxY && Ye + ot > kt.minY) {
            var mt = A($e, Ye, kt.x1, kt.y1, kt.x2, kt.y2);
            mt < zt && (zt = mt, ot = Math.sqrt(zt));
          }
        }
        return qe($e, Ye) && (ot = -ot), ot;
      }
      function qe($e, Ye) {
        for (var zt = 0, ot = Fe.length; ot--; ) {
          var Dt = Fe[ot];
          if (Dt.maxX <= $e)
            break;
          var kt = Dt.y1 > Ye != Dt.y2 > Ye && $e < (Dt.x2 - Dt.x1) * (Ye - Dt.y1) / (Dt.y2 - Dt.y1) + Dt.x1;
          kt && (zt += Dt.y1 < Dt.y2 ? 1 : -1);
        }
        return zt !== 0;
      }
    }
    function U(ye, X, q, ue, Ce, Ae, De, Ne, Pe, Fe) {
      Ae === void 0 && (Ae = 1), Ne === void 0 && (Ne = 0), Pe === void 0 && (Pe = 0), Fe === void 0 && (Fe = 0), L(ye, X, q, ue, Ce, Ae, De, null, Ne, Pe, Fe);
    }
    function L(ye, X, q, ue, Ce, Ae, De, Ne, Pe, Fe, it) {
      Ae === void 0 && (Ae = 1), Pe === void 0 && (Pe = 0), Fe === void 0 && (Fe = 0), it === void 0 && (it = 0);
      for (var Ot = R(ye, X, q, ue, Ce, Ae), st = new Uint8Array(Ot.length * 4), oe = 0; oe < Ot.length; oe++)
        st[oe * 4 + it] = Ot[oe];
      _(De, st, Pe, Fe, ye, X, 1 << 3 - it, Ne);
    }
    function A(ye, X, q, ue, Ce, Ae) {
      var De = Ce - q, Ne = Ae - ue, Pe = De * De + Ne * Ne, Fe = Pe ? Math.max(0, Math.min(1, ((ye - q) * De + (X - ue) * Ne) / Pe)) : 0, it = ye - (q + Fe * De), Ot = X - (ue + Fe * Ne);
      return it * it + Ot * Ot;
    }
    var k = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      generate: R,
      generateIntoCanvas: U,
      generateIntoFramebuffer: L
    }), F = "precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}", H = "precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}", B = "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}", j = new Float32Array([0, 0, 2, 0, 0, 2]), Y = null, ee = !1, Z = {}, K = /* @__PURE__ */ new WeakMap();
    function fe(ye) {
      if (!ee && !Ee(ye))
        throw new Error("WebGL generation not supported");
    }
    function se(ye, X, q, ue, Ce, Ae, De) {
      if (Ae === void 0 && (Ae = 1), De === void 0 && (De = null), !De && (De = Y, !De)) {
        var Ne = typeof OffscreenCanvas == "function" ? new OffscreenCanvas(1, 1) : typeof document < "u" ? document.createElement("canvas") : null;
        if (!Ne)
          throw new Error("OffscreenCanvas or DOM canvas not supported");
        De = Y = Ne.getContext("webgl", { depth: !1 });
      }
      fe(De);
      var Pe = new Uint8Array(ye * X * 4);
      y(De, function(st) {
        var oe = st.gl, rt = st.withTexture, qe = st.withTextureFramebuffer;
        rt("readable", function($e, Ye) {
          oe.texImage2D(oe.TEXTURE_2D, 0, oe.RGBA, ye, X, 0, oe.RGBA, oe.UNSIGNED_BYTE, null), qe($e, Ye, function(zt) {
            me(
              ye,
              X,
              q,
              ue,
              Ce,
              Ae,
              oe,
              zt,
              0,
              0,
              0
              // red channel
            ), oe.readPixels(0, 0, ye, X, oe.RGBA, oe.UNSIGNED_BYTE, Pe);
          });
        });
      });
      for (var Fe = new Uint8Array(ye * X), it = 0, Ot = 0; it < Pe.length; it += 4)
        Fe[Ot++] = Pe[it];
      return Fe;
    }
    function he(ye, X, q, ue, Ce, Ae, De, Ne, Pe, Fe) {
      Ae === void 0 && (Ae = 1), Ne === void 0 && (Ne = 0), Pe === void 0 && (Pe = 0), Fe === void 0 && (Fe = 0), me(ye, X, q, ue, Ce, Ae, De, null, Ne, Pe, Fe);
    }
    function me(ye, X, q, ue, Ce, Ae, De, Ne, Pe, Fe, it) {
      Ae === void 0 && (Ae = 1), Pe === void 0 && (Pe = 0), Fe === void 0 && (Fe = 0), it === void 0 && (it = 0), fe(De);
      var Ot = [];
      o(q, function(st, oe, rt, qe) {
        Ot.push(st, oe, rt, qe);
      }), Ot = new Float32Array(Ot), y(De, function(st) {
        var oe = st.gl, rt = st.isWebGL2, qe = st.getExtension, $e = st.withProgram, Ye = st.withTexture, zt = st.withTextureFramebuffer, ot = st.handleContextLoss;
        if (Ye("rawDistances", function(Dt, kt) {
          (ye !== Dt._lastWidth || X !== Dt._lastHeight) && oe.texImage2D(
            oe.TEXTURE_2D,
            0,
            oe.RGBA,
            Dt._lastWidth = ye,
            Dt._lastHeight = X,
            0,
            oe.RGBA,
            oe.UNSIGNED_BYTE,
            null
          ), $e("main", F, H, function(mt) {
            var rn = mt.setAttribute, ae = mt.setUniform, re = !rt && qe("ANGLE_instanced_arrays"), ze = !rt && qe("EXT_blend_minmax");
            rn("aUV", 2, oe.STATIC_DRAW, 0, j), rn("aLineSegment", 4, oe.DYNAMIC_DRAW, 1, Ot), ae.apply(void 0, ["4f", "uGlyphBounds"].concat(ue)), ae("1f", "uMaxDistance", Ce), ae("1f", "uExponent", Ae), zt(Dt, kt, function(xt) {
              oe.enable(oe.BLEND), oe.colorMask(!0, !0, !0, !0), oe.viewport(0, 0, ye, X), oe.scissor(0, 0, ye, X), oe.blendFunc(oe.ONE, oe.ONE), oe.blendEquationSeparate(oe.FUNC_ADD, rt ? oe.MAX : ze.MAX_EXT), oe.clear(oe.COLOR_BUFFER_BIT), rt ? oe.drawArraysInstanced(oe.TRIANGLES, 0, 3, Ot.length / 4) : re.drawArraysInstancedANGLE(oe.TRIANGLES, 0, 3, Ot.length / 4);
            });
          }), $e("post", l, B, function(mt) {
            mt.setAttribute("aUV", 2, oe.STATIC_DRAW, 0, j), mt.setUniform("1i", "tex", kt), oe.bindFramebuffer(oe.FRAMEBUFFER, Ne), oe.disable(oe.BLEND), oe.colorMask(it === 0, it === 1, it === 2, it === 3), oe.viewport(Pe, Fe, ye, X), oe.scissor(Pe, Fe, ye, X), oe.drawArrays(oe.TRIANGLES, 0, 3);
          });
        }), oe.isContextLost())
          throw ot(), new Error("webgl context lost");
      });
    }
    function Ee(ye) {
      var X = !ye || ye === Y ? Z : ye.canvas || ye, q = K.get(X);
      if (q === void 0) {
        ee = !0;
        var ue = null;
        try {
          var Ce = [
            97,
            106,
            97,
            61,
            99,
            137,
            118,
            80,
            80,
            118,
            137,
            99,
            61,
            97,
            106,
            97
          ], Ae = se(
            4,
            4,
            "M8,8L16,8L24,24L16,24Z",
            [0, 0, 32, 32],
            24,
            1,
            ye
          );
          q = Ae && Ce.length === Ae.length && Ae.every(function(De, Ne) {
            return De === Ce[Ne];
          }), q || (ue = "bad trial run results", console.info(Ce, Ae));
        } catch (De) {
          q = !1, ue = De.message;
        }
        ue && console.warn("WebGL SDF generation not supported:", ue), ee = !1, K.set(X, q);
      }
      return q;
    }
    var be = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      generate: se,
      generateIntoCanvas: he,
      generateIntoFramebuffer: me,
      isSupported: Ee
    });
    function we(ye, X, q, ue, Ce, Ae) {
      Ce === void 0 && (Ce = Math.max(ue[2] - ue[0], ue[3] - ue[1]) / 2), Ae === void 0 && (Ae = 1);
      try {
        return se.apply(be, arguments);
      } catch (De) {
        return console.info("WebGL SDF generation failed, falling back to JS", De), R.apply(k, arguments);
      }
    }
    function de(ye, X, q, ue, Ce, Ae, De, Ne, Pe, Fe) {
      Ce === void 0 && (Ce = Math.max(ue[2] - ue[0], ue[3] - ue[1]) / 2), Ae === void 0 && (Ae = 1), Ne === void 0 && (Ne = 0), Pe === void 0 && (Pe = 0), Fe === void 0 && (Fe = 0);
      try {
        return he.apply(be, arguments);
      } catch (it) {
        return console.info("WebGL SDF generation failed, falling back to JS", it), U.apply(k, arguments);
      }
    }
    return e.forEachPathCommand = i, e.generate = we, e.generateIntoCanvas = de, e.javascript = k, e.pathToLineSegments = o, e.webgl = be, e.webglUtils = w, Object.defineProperty(e, "__esModule", { value: !0 }), e;
  }({});
  return n;
}
function LK() {
  var n = function(e) {
    var t = {
      R: "13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",
      EN: "1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",
      ES: "17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",
      ET: "z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",
      AN: "16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",
      CS: "18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",
      B: "a,3,f+2,2v,690",
      S: "9,2,k",
      WS: "c,k,4f4,1vk+a,u,1j,335",
      ON: "x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",
      BN: "0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",
      NSM: "lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",
      AL: "16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",
      LRO: "6ct",
      RLO: "6cu",
      LRE: "6cq",
      RLE: "6cr",
      PDF: "6cs",
      LRI: "6ee",
      RLI: "6ef",
      FSI: "6eg",
      PDI: "6eh"
    }, r = {}, i = {};
    r.L = 1, i[1] = "L", Object.keys(t).forEach(function(ot, Dt) {
      r[ot] = 1 << Dt + 1, i[r[ot]] = ot;
    }), Object.freeze(r);
    var o = r.LRI | r.RLI | r.FSI, l = r.L | r.R | r.AL, u = r.B | r.S | r.WS | r.ON | r.FSI | r.LRI | r.RLI | r.PDI, h = r.BN | r.RLE | r.LRE | r.RLO | r.LRO | r.PDF, p = r.S | r.WS | r.B | o | r.PDI | h, y = null;
    function _() {
      if (!y) {
        y = /* @__PURE__ */ new Map();
        var ot = function(kt) {
          if (t.hasOwnProperty(kt)) {
            var mt = 0;
            t[kt].split(",").forEach(function(rn) {
              var ae = rn.split("+"), re = ae[0], ze = ae[1];
              re = parseInt(re, 36), ze = ze ? parseInt(ze, 36) : 0, y.set(mt += re, r[kt]);
              for (var xt = 0; xt < ze; xt++)
                y.set(++mt, r[kt]);
            });
          }
        };
        for (var Dt in t)
          ot(Dt);
      }
    }
    function E(ot) {
      return _(), y.get(ot.codePointAt(0)) || r.L;
    }
    function w(ot) {
      return i[E(ot)];
    }
    var R = {
      pairs: "14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",
      canonical: "6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"
    };
    function U(ot, Dt) {
      var kt = 36, mt = 0, rn = /* @__PURE__ */ new Map(), ae = Dt && /* @__PURE__ */ new Map(), re;
      return ot.split(",").forEach(function ze(xt) {
        if (xt.indexOf("+") !== -1)
          for (var ut = +xt; ut--; )
            ze(re);
        else {
          re = xt;
          var lt = xt.split(">"), Yt = lt[0], Nt = lt[1];
          Yt = String.fromCodePoint(mt += parseInt(Yt, kt)), Nt = String.fromCodePoint(mt += parseInt(Nt, kt)), rn.set(Yt, Nt), Dt && ae.set(Nt, Yt);
        }
      }), { map: rn, reverseMap: ae };
    }
    var L, A, k;
    function F() {
      if (!L) {
        var ot = U(R.pairs, !0), Dt = ot.map, kt = ot.reverseMap;
        L = Dt, A = kt, k = U(R.canonical, !1).map;
      }
    }
    function H(ot) {
      return F(), L.get(ot) || null;
    }
    function B(ot) {
      return F(), A.get(ot) || null;
    }
    function j(ot) {
      return F(), k.get(ot) || null;
    }
    var Y = r.L, ee = r.R, Z = r.EN, K = r.ES, fe = r.ET, se = r.AN, he = r.CS, me = r.B, Ee = r.S, be = r.ON, we = r.BN, de = r.NSM, ye = r.AL, X = r.LRO, q = r.RLO, ue = r.LRE, Ce = r.RLE, Ae = r.PDF, De = r.LRI, Ne = r.RLI, Pe = r.FSI, Fe = r.PDI;
    function it(ot, Dt) {
      for (var kt = 125, mt = new Uint32Array(ot.length), rn = 0; rn < ot.length; rn++)
        mt[rn] = E(ot[rn]);
      var ae = /* @__PURE__ */ new Map();
      function re(Jn, Tr) {
        var Mr = mt[Jn];
        mt[Jn] = Tr, ae.set(Mr, ae.get(Mr) - 1), Mr & u && ae.set(u, ae.get(u) - 1), ae.set(Tr, (ae.get(Tr) || 0) + 1), Tr & u && ae.set(u, (ae.get(u) || 0) + 1);
      }
      for (var ze = new Uint8Array(ot.length), xt = /* @__PURE__ */ new Map(), ut = [], lt = null, Yt = 0; Yt < ot.length; Yt++)
        lt || ut.push(lt = {
          start: Yt,
          end: ot.length - 1,
          // 3.3.1 P2-P3: Determine the paragraph level
          level: Dt === "rtl" ? 1 : Dt === "ltr" ? 0 : yn(Yt, !1)
        }), mt[Yt] & me && (lt.end = Yt, lt = null);
      for (var Nt = Ce | ue | q | X | o | Fe | Ae | me, xe = function(Jn) {
        return Jn + (Jn & 1 ? 1 : 2);
      }, We = function(Jn) {
        return Jn + (Jn & 1 ? 2 : 1);
      }, ft = 0; ft < ut.length; ft++) {
        lt = ut[ft];
        var Et = [{
          _level: lt.level,
          _override: 0,
          //0=neutral, 1=L, 2=R
          _isolate: 0
          //bool
        }], Ze = void 0, Te = 0, tt = 0, pt = 0;
        ae.clear();
        for (var ve = lt.start; ve <= lt.end; ve++) {
          var Pt = mt[ve];
          if (Ze = Et[Et.length - 1], ae.set(Pt, (ae.get(Pt) || 0) + 1), Pt & u && ae.set(u, (ae.get(u) || 0) + 1), Pt & Nt)
            if (Pt & (Ce | ue)) {
              ze[ve] = Ze._level;
              var He = (Pt === Ce ? We : xe)(Ze._level);
              He <= kt && !Te && !tt ? Et.push({
                _level: He,
                _override: 0,
                _isolate: 0
              }) : Te || tt++;
            } else if (Pt & (q | X)) {
              ze[ve] = Ze._level;
              var dt = (Pt === q ? We : xe)(Ze._level);
              dt <= kt && !Te && !tt ? Et.push({
                _level: dt,
                _override: Pt & q ? ee : Y,
                _isolate: 0
              }) : Te || tt++;
            } else if (Pt & o) {
              Pt & Pe && (Pt = yn(ve + 1, !0) === 1 ? Ne : De), ze[ve] = Ze._level, Ze._override && re(ve, Ze._override);
              var ln = (Pt === Ne ? We : xe)(Ze._level);
              ln <= kt && Te === 0 && tt === 0 ? (pt++, Et.push({
                _level: ln,
                _override: 0,
                _isolate: 1,
                _isolInitIndex: ve
              })) : Te++;
            } else if (Pt & Fe) {
              if (Te > 0)
                Te--;
              else if (pt > 0) {
                for (tt = 0; !Et[Et.length - 1]._isolate; )
                  Et.pop();
                var Un = Et[Et.length - 1]._isolInitIndex;
                Un != null && (xt.set(Un, ve), xt.set(ve, Un)), Et.pop(), pt--;
              }
              Ze = Et[Et.length - 1], ze[ve] = Ze._level, Ze._override && re(ve, Ze._override);
            } else
              Pt & Ae ? (Te === 0 && (tt > 0 ? tt-- : !Ze._isolate && Et.length > 1 && (Et.pop(), Ze = Et[Et.length - 1])), ze[ve] = Ze._level) : Pt & me && (ze[ve] = lt.level);
          else
            ze[ve] = Ze._level, Ze._override && Pt !== we && re(ve, Ze._override);
        }
        for (var jn = [], cr = null, En = lt.start; En <= lt.end; En++) {
          var tr = mt[En];
          if (!(tr & h)) {
            var fr = ze[En], Hn = tr & o, mi = tr === Fe;
            cr && fr === cr._level ? (cr._end = En, cr._endsWithIsolInit = Hn) : jn.push(cr = {
              _start: En,
              _end: En,
              _level: fr,
              _startsWithPDI: mi,
              _endsWithIsolInit: Hn
            });
          }
        }
        for (var Vr = [], Gr = 0; Gr < jn.length; Gr++) {
          var Or = jn[Gr];
          if (!Or._startsWithPDI || Or._startsWithPDI && !xt.has(Or._start)) {
            for (var Ui = [cr = Or], fi = void 0; cr && cr._endsWithIsolInit && (fi = xt.get(cr._end)) != null; )
              for (var ke = Gr + 1; ke < jn.length; ke++)
                if (jn[ke]._start === fi) {
                  Ui.push(cr = jn[ke]);
                  break;
                }
            for (var Ht = [], Jt = 0; Jt < Ui.length; Jt++)
              for (var pn = Ui[Jt], _e = pn._start; _e <= pn._end; _e++)
                Ht.push(_e);
            for (var Qe = ze[Ht[0]], at = lt.level, je = Ht[0] - 1; je >= 0; je--)
              if (!(mt[je] & h)) {
                at = ze[je];
                break;
              }
            var vt = Ht[Ht.length - 1], sn = ze[vt], vn = lt.level;
            if (!(mt[vt] & o)) {
              for (var Mn = vt + 1; Mn <= lt.end; Mn++)
                if (!(mt[Mn] & h)) {
                  vn = ze[Mn];
                  break;
                }
            }
            Vr.push({
              _seqIndices: Ht,
              _sosType: Math.max(at, Qe) % 2 ? ee : Y,
              _eosType: Math.max(vn, sn) % 2 ? ee : Y
            });
          }
        }
        for (var zn = 0; zn < Vr.length; zn++) {
          var pr = Vr[zn], Mt = pr._seqIndices, dr = pr._sosType, Wr = pr._eosType, Rn = ze[Mt[0]] & 1 ? ee : Y;
          if (ae.get(de))
            for (var Ji = 0; Ji < Mt.length; Ji++) {
              var Ca = Mt[Ji];
              if (mt[Ca] & de) {
                for (var li = dr, qn = Ji - 1; qn >= 0; qn--)
                  if (!(mt[Mt[qn]] & h)) {
                    li = mt[Mt[qn]];
                    break;
                  }
                re(Ca, li & (o | Fe) ? be : li);
              }
            }
          if (ae.get(Z))
            for (var br = 0; br < Mt.length; br++) {
              var hr = Mt[br];
              if (mt[hr] & Z)
                for (var di = br - 1; di >= -1; di--) {
                  var ha = di === -1 ? dr : mt[Mt[di]];
                  if (ha & l) {
                    ha === ye && re(hr, se);
                    break;
                  }
                }
            }
          if (ae.get(ye))
            for (var Kr = 0; Kr < Mt.length; Kr++) {
              var Co = Mt[Kr];
              mt[Co] & ye && re(Co, ee);
            }
          if (ae.get(K) || ae.get(he))
            for (var Ri = 1; Ri < Mt.length - 1; Ri++) {
              var Ai = Mt[Ri];
              if (mt[Ai] & (K | he)) {
                for (var Ea = 0, bi = 0, ns = Ri - 1; ns >= 0 && (Ea = mt[Mt[ns]], !!(Ea & h)); ns--)
                  ;
                for (var Ro = Ri + 1; Ro < Mt.length && (bi = mt[Mt[Ro]], !!(bi & h)); Ro++)
                  ;
                Ea === bi && (mt[Ai] === K ? Ea === Z : Ea & (Z | se)) && re(Ai, Ea);
              }
            }
          if (ae.get(Z))
            for (var Ra = 0; Ra < Mt.length; Ra++) {
              var Ao = Mt[Ra];
              if (mt[Ao] & Z) {
                for (var kl = Ra - 1; kl >= 0 && mt[Mt[kl]] & (fe | h); kl--)
                  re(Mt[kl], Z);
                for (Ra++; Ra < Mt.length && mt[Mt[Ra]] & (fe | h | Z); Ra++)
                  mt[Mt[Ra]] !== Z && re(Mt[Ra], Z);
              }
            }
          if (ae.get(fe) || ae.get(K) || ae.get(he))
            for (var Ts = 0; Ts < Mt.length; Ts++) {
              var bd = Mt[Ts];
              if (mt[bd] & (fe | K | he)) {
                re(bd, be);
                for (var Wo = Ts - 1; Wo >= 0 && mt[Mt[Wo]] & h; Wo--)
                  re(Mt[Wo], be);
                for (var Br = Ts + 1; Br < Mt.length && mt[Mt[Br]] & h; Br++)
                  re(Mt[Br], be);
              }
            }
          if (ae.get(Z))
            for (var rs = 0, Fl = dr; rs < Mt.length; rs++) {
              var Do = Mt[rs], Hr = mt[Do];
              Hr & Z ? Fl === Y && re(Do, Y) : Hr & l && (Fl = Hr);
            }
          if (ae.get(u)) {
            var pa = ee | Z | se, ku = pa | Y, rr = [];
            {
              for (var ml = [], Ni = 0; Ni < Mt.length; Ni++)
                if (mt[Mt[Ni]] & u) {
                  var gr = ot[Mt[Ni]], Lo = void 0;
                  if (H(gr) !== null)
                    if (ml.length < 63)
                      ml.push({ char: gr, seqIndex: Ni });
                    else
                      break;
                  else if ((Lo = B(gr)) !== null)
                    for (var oo = ml.length - 1; oo >= 0; oo--) {
                      var oa = ml[oo].char;
                      if (oa === Lo || oa === B(j(gr)) || H(j(oa)) === gr) {
                        rr.push([ml[oo].seqIndex, Ni]), ml.length = oo;
                        break;
                      }
                    }
                }
              rr.sort(function(Jn, Tr) {
                return Jn[0] - Tr[0];
              });
            }
            for (var Ti = 0; Ti < rr.length; Ti++) {
              for (var Td = rr[Ti], Qr = Td[0], Aa = Td[1], zl = !1, jo = 0, Il = Qr + 1; Il < Aa; Il++) {
                var vl = Mt[Il];
                if (mt[vl] & ku) {
                  zl = !0;
                  var ws = mt[vl] & pa ? ee : Y;
                  if (ws === Rn) {
                    jo = ws;
                    break;
                  }
                }
              }
              if (zl && !jo) {
                jo = dr;
                for (var Ms = Qr - 1; Ms >= 0; Ms--) {
                  var Fu = Mt[Ms];
                  if (mt[Fu] & ku) {
                    var vo = mt[Fu] & pa ? ee : Y;
                    vo !== Rn ? jo = vo : jo = Rn;
                    break;
                  }
                }
              }
              if (jo) {
                if (mt[Mt[Qr]] = mt[Mt[Aa]] = jo, jo !== Rn) {
                  for (var ma = Qr + 1; ma < Mt.length; ma++)
                    if (!(mt[Mt[ma]] & h)) {
                      E(ot[Mt[ma]]) & de && (mt[Mt[ma]] = jo);
                      break;
                    }
                }
                if (jo !== Rn) {
                  for (var $s = Aa + 1; $s < Mt.length; $s++)
                    if (!(mt[Mt[$s]] & h)) {
                      E(ot[Mt[$s]]) & de && (mt[Mt[$s]] = jo);
                      break;
                    }
                }
              }
            }
            for (var Oo = 0; Oo < Mt.length; Oo++)
              if (mt[Mt[Oo]] & u) {
                for (var Bl = Oo, zu = Oo, Po = dr, Iu = Oo - 1; Iu >= 0; Iu--)
                  if (mt[Mt[Iu]] & h)
                    Bl = Iu;
                  else {
                    Po = mt[Mt[Iu]] & pa ? ee : Y;
                    break;
                  }
                for (var is = Wr, ie = Oo + 1; ie < Mt.length; ie++)
                  if (mt[Mt[ie]] & (u | h))
                    zu = ie;
                  else {
                    is = mt[Mt[ie]] & pa ? ee : Y;
                    break;
                  }
                for (var Ie = Bl; Ie <= zu; Ie++)
                  mt[Mt[Ie]] = Po === is ? Po : Rn;
                Oo = zu;
              }
          }
        }
        for (var ct = lt.start; ct <= lt.end; ct++) {
          var Ut = ze[ct], tn = mt[ct];
          if (Ut & 1 ? tn & (Y | Z | se) && ze[ct]++ : tn & ee ? ze[ct]++ : tn & (se | Z) && (ze[ct] += 2), tn & h && (ze[ct] = ct === 0 ? lt.level : ze[ct - 1]), ct === lt.end || E(ot[ct]) & (Ee | me))
            for (var $n = ct; $n >= 0 && E(ot[$n]) & p; $n--)
              ze[$n] = lt.level;
        }
      }
      return {
        levels: ze,
        paragraphs: ut
      };
      function yn(Jn, Tr) {
        for (var Mr = Jn; Mr < ot.length; Mr++) {
          var _r = mt[Mr];
          if (_r & (ee | ye))
            return 1;
          if (_r & (me | Y) || Tr && _r === Fe)
            return 0;
          if (_r & o) {
            var Zr = Zn(Mr);
            Mr = Zr === -1 ? ot.length : Zr;
          }
        }
        return 0;
      }
      function Zn(Jn) {
        for (var Tr = 1, Mr = Jn + 1; Mr < ot.length; Mr++) {
          var _r = mt[Mr];
          if (_r & me)
            break;
          if (_r & Fe) {
            if (--Tr === 0)
              return Mr;
          } else
            _r & o && Tr++;
        }
        return -1;
      }
    }
    var Ot = "14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1", st;
    function oe() {
      if (!st) {
        var ot = U(Ot, !0), Dt = ot.map, kt = ot.reverseMap;
        kt.forEach(function(mt, rn) {
          Dt.set(rn, mt);
        }), st = Dt;
      }
    }
    function rt(ot) {
      return oe(), st.get(ot) || null;
    }
    function qe(ot, Dt, kt, mt) {
      var rn = ot.length;
      kt = Math.max(0, kt == null ? 0 : +kt), mt = Math.min(rn - 1, mt == null ? rn - 1 : +mt);
      for (var ae = /* @__PURE__ */ new Map(), re = kt; re <= mt; re++)
        if (Dt[re] & 1) {
          var ze = rt(ot[re]);
          ze !== null && ae.set(re, ze);
        }
      return ae;
    }
    function $e(ot, Dt, kt, mt) {
      var rn = ot.length;
      kt = Math.max(0, kt == null ? 0 : +kt), mt = Math.min(rn - 1, mt == null ? rn - 1 : +mt);
      var ae = [];
      return Dt.paragraphs.forEach(function(re) {
        var ze = Math.max(kt, re.start), xt = Math.min(mt, re.end);
        if (ze < xt) {
          for (var ut = Dt.levels.slice(ze, xt + 1), lt = xt; lt >= ze && E(ot[lt]) & p; lt--)
            ut[lt] = re.level;
          for (var Yt = re.level, Nt = 1 / 0, xe = 0; xe < ut.length; xe++) {
            var We = ut[xe];
            We > Yt && (Yt = We), We < Nt && (Nt = We | 1);
          }
          for (var ft = Yt; ft >= Nt; ft--)
            for (var Et = 0; Et < ut.length; Et++)
              if (ut[Et] >= ft) {
                for (var Ze = Et; Et + 1 < ut.length && ut[Et + 1] >= ft; )
                  Et++;
                Et > Ze && ae.push([Ze + ze, Et + ze]);
              }
        }
      }), ae;
    }
    function Ye(ot, Dt, kt, mt) {
      var rn = zt(ot, Dt, kt, mt), ae = [].concat(ot);
      return rn.forEach(function(re, ze) {
        ae[ze] = (Dt.levels[re] & 1 ? rt(ot[re]) : null) || ot[re];
      }), ae.join("");
    }
    function zt(ot, Dt, kt, mt) {
      for (var rn = $e(ot, Dt, kt, mt), ae = [], re = 0; re < ot.length; re++)
        ae[re] = re;
      return rn.forEach(function(ze) {
        for (var xt = ze[0], ut = ze[1], lt = ae.slice(xt, ut + 1), Yt = lt.length; Yt--; )
          ae[ut - Yt] = lt[Yt];
      }), ae;
    }
    return e.closingToOpeningBracket = B, e.getBidiCharType = E, e.getBidiCharTypeName = w, e.getCanonicalBracket = j, e.getEmbeddingLevels = it, e.getMirroredCharacter = rt, e.getMirroredCharactersMap = qe, e.getReorderSegments = $e, e.getReorderedIndices = zt, e.getReorderedString = Ye, e.openingToClosingBracket = H, Object.defineProperty(e, "__esModule", { value: !0 }), e;
  }({});
  return n;
}
const VB = /\bvoid\s+main\s*\(\s*\)\s*{/g;
function DO(n) {
  const e = /^[ \t]*#include +<([\w\d./]+)>/gm;
  function t(r, i) {
    let o = pi[i];
    return o ? DO(o) : r;
  }
  return n.replace(e, t);
}
const dc = [];
for (let n = 0; n < 256; n++)
  dc[n] = (n < 16 ? "0" : "") + n.toString(16);
function OK() {
  const n = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, r = Math.random() * 4294967295 | 0;
  return (dc[n & 255] + dc[n >> 8 & 255] + dc[n >> 16 & 255] + dc[n >> 24 & 255] + "-" + dc[e & 255] + dc[e >> 8 & 255] + "-" + dc[e >> 16 & 15 | 64] + dc[e >> 24 & 255] + "-" + dc[t & 63 | 128] + dc[t >> 8 & 255] + "-" + dc[t >> 16 & 255] + dc[t >> 24 & 255] + dc[r & 255] + dc[r >> 8 & 255] + dc[r >> 16 & 255] + dc[r >> 24 & 255]).toUpperCase();
}
const jS = Object.assign || function() {
  let n = arguments[0];
  for (let e = 1, t = arguments.length; e < t; e++) {
    let r = arguments[e];
    if (r)
      for (let i in r)
        Object.prototype.hasOwnProperty.call(r, i) && (n[i] = r[i]);
  }
  return n;
}, PK = Date.now(), wF = /* @__PURE__ */ new WeakMap(), MF = /* @__PURE__ */ new Map();
let UK = 1e10;
function LO(n, e) {
  const t = zK(e);
  let r = wF.get(n);
  if (r || wF.set(n, r = /* @__PURE__ */ Object.create(null)), r[t])
    return new r[t]();
  const i = `_onBeforeCompile${t}`, o = function(p, y) {
    n.onBeforeCompile.call(this, p, y);
    const _ = this.customProgramCacheKey() + "|" + p.vertexShader + "|" + p.fragmentShader;
    let E = MF[_];
    if (!E) {
      const w = NK(this, p, e, t);
      E = MF[_] = w;
    }
    p.vertexShader = E.vertexShader, p.fragmentShader = E.fragmentShader, jS(p.uniforms, this.uniforms), e.timeUniform && (p.uniforms[e.timeUniform] = {
      get value() {
        return Date.now() - PK;
      }
    }), this[i] && this[i](p);
  }, l = function() {
    return u(e.chained ? n : n.clone());
  }, u = function(p) {
    const y = Object.create(p, h);
    return Object.defineProperty(y, "baseMaterial", { value: n }), Object.defineProperty(y, "id", { value: UK++ }), y.uuid = OK(), y.uniforms = jS({}, p.uniforms, e.uniforms), y.defines = jS({}, p.defines, e.defines), y.defines[`TROIKA_DERIVED_MATERIAL_${t}`] = "", y.extensions = jS({}, p.extensions, e.extensions), y._listeners = void 0, y;
  }, h = {
    constructor: { value: l },
    isDerivedMaterial: { value: !0 },
    customProgramCacheKey: {
      writable: !0,
      configurable: !0,
      value: function() {
        return n.customProgramCacheKey() + "|" + t;
      }
    },
    onBeforeCompile: {
      get() {
        return o;
      },
      set(p) {
        this[i] = p;
      }
    },
    copy: {
      writable: !0,
      configurable: !0,
      value: function(p) {
        return n.copy.call(this, p), !n.isShaderMaterial && !n.isDerivedMaterial && (jS(this.extensions, p.extensions), jS(this.defines, p.defines), jS(this.uniforms, xP.clone(p.uniforms))), this;
      }
    },
    clone: {
      writable: !0,
      configurable: !0,
      value: function() {
        const p = new n.constructor();
        return u(p).copy(this);
      }
    },
    /**
     * Utility to get a MeshDepthMaterial that will honor this derived material's vertex
     * transformations and discarded fragments.
     */
    getDepthMaterial: {
      writable: !0,
      configurable: !0,
      value: function() {
        let p = this._depthMaterial;
        return p || (p = this._depthMaterial = LO(
          n.isDerivedMaterial ? n.getDepthMaterial() : new GR({ depthPacking: mP }),
          e
        ), p.defines.IS_DEPTH_MATERIAL = "", p.uniforms = this.uniforms), p;
      }
    },
    /**
     * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex
     * transformations and discarded fragments.
     */
    getDistanceMaterial: {
      writable: !0,
      configurable: !0,
      value: function() {
        let p = this._distanceMaterial;
        return p || (p = this._distanceMaterial = LO(
          n.isDerivedMaterial ? n.getDistanceMaterial() : new WR(),
          e
        ), p.defines.IS_DISTANCE_MATERIAL = "", p.uniforms = this.uniforms), p;
      }
    },
    dispose: {
      writable: !0,
      configurable: !0,
      value() {
        const { _depthMaterial: p, _distanceMaterial: y } = this;
        p && p.dispose(), y && y.dispose(), n.dispose.call(this);
      }
    }
  };
  return r[t] = l, new l();
}
function NK(n, { vertexShader: e, fragmentShader: t }, r, i) {
  let {
    vertexDefs: o,
    vertexMainIntro: l,
    vertexMainOutro: u,
    vertexTransform: h,
    fragmentDefs: p,
    fragmentMainIntro: y,
    fragmentMainOutro: _,
    fragmentColorTransform: E,
    customRewriter: w,
    timeUniform: R
  } = r;
  if (o = o || "", l = l || "", u = u || "", p = p || "", y = y || "", _ = _ || "", (h || w) && (e = DO(e)), (E || w) && (t = t.replace(
    /^[ \t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,
    `
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`
  ), t = DO(t)), w) {
    let U = w({ vertexShader: e, fragmentShader: t });
    e = U.vertexShader, t = U.fragmentShader;
  }
  if (E) {
    let U = [];
    t = t.replace(
      /^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,
      // [^]+? = non-greedy match of any chars including newlines
      (L) => (U.push(L), "")
    ), _ = `${E}
${U.join(`
`)}
${_}`;
  }
  if (R) {
    const U = `
uniform float ${R};
`;
    o = U + o, p = U + p;
  }
  return h && (e = `vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`, o = `${o}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${h}
}
`, l = `
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${l}
`, e = e.replace(/\b(position|normal|uv)\b/g, (U, L, A, k) => /\battribute\s+vec[23]\s+$/.test(k.substr(0, A)) ? L : `troika_${L}_${i}`), n.map && n.map.channel > 0 || (e = e.replace(/\bMAP_UV\b/g, `troika_uv_${i}`))), e = CF(e, i, o, l, u), t = CF(t, i, p, y, _), {
    vertexShader: e,
    fragmentShader: t
  };
}
function CF(n, e, t, r, i) {
  return (r || i || t) && (n = n.replace(
    VB,
    `
${t}
void troikaOrigMain${e}() {`
  ), n += `
void main() {
  ${r}
  troikaOrigMain${e}();
  ${i}
}`), n;
}
function kK(n, e) {
  return n === "uniforms" ? void 0 : typeof e == "function" ? e.toString() : e;
}
let FK = 0;
const RF = /* @__PURE__ */ new Map();
function zK(n) {
  const e = JSON.stringify(n, kK);
  let t = RF.get(e);
  return t == null && RF.set(e, t = ++FK), t;
}
function IK(n, e, t) {
  const {
    defaultFontURL: r
  } = t, i = /* @__PURE__ */ Object.create(null), o = 1 / 0, l = /[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/, u = "[^\\S\\u00A0]", h = new RegExp(`${u}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);
  function p(k, F) {
    function H() {
      const B = (j) => {
        console.error(`Failure loading font ${k}${k === r ? "" : "; trying fallback"}`, j), k !== r && (k = r, H());
      };
      try {
        const j = new XMLHttpRequest();
        j.open("get", k, !0), j.responseType = "arraybuffer", j.onload = function() {
          if (j.status >= 400)
            B(new Error(j.statusText));
          else if (j.status > 0)
            try {
              const Y = n(j.response);
              F(Y);
            } catch (Y) {
              B(Y);
            }
        }, j.onerror = B, j.send();
      } catch (j) {
        B(j);
      }
    }
    H();
  }
  function y(k, F) {
    k || (k = r);
    let H = i[k];
    H ? H.pending ? H.pending.push(F) : F(H) : (i[k] = { pending: [F] }, p(k, (B) => {
      let j = i[k].pending;
      i[k] = B, j.forEach((Y) => Y(B));
    }));
  }
  function _({
    text: k = "",
    font: F = r,
    sdfGlyphSize: H = 64,
    fontSize: B = 1,
    letterSpacing: j = 0,
    lineHeight: Y = "normal",
    maxWidth: ee = o,
    direction: Z,
    textAlign: K = "left",
    textIndent: fe = 0,
    whiteSpace: se = "normal",
    overflowWrap: he = "normal",
    anchorX: me = 0,
    anchorY: Ee = 0,
    includeCaretPositions: be = !1,
    chunkedBoundsSize: we = 8192,
    colorRanges: de = null
  }, ye, X = !1) {
    const q = U(), ue = { fontLoad: 0, typesetting: 0 };
    k.indexOf("\r") > -1 && (console.info("Typesetter: got text with \\r chars; normalizing to \\n"), k = k.replace(/\r\n/g, `
`).replace(/\r/g, `
`)), B = +B, j = +j, ee = +ee, Y = Y || "normal", fe = +fe, y(F, (Ce) => {
      const Ae = isFinite(ee);
      let De = null, Ne = null, Pe = null, Fe = null, it = null, Ot = null, st = null, oe = 0, rt = 0, qe = se !== "nowrap";
      const { ascender: $e, descender: Ye, unitsPerEm: zt, lineGap: ot, capHeight: Dt, xHeight: kt } = Ce;
      ue.fontLoad = U() - q;
      const mt = U(), rn = B / zt;
      Y === "normal" && (Y = ($e - Ye + ot) / zt), Y = Y * B;
      const ae = (Y - ($e - Ye) * rn) / 2, re = -($e * rn + ae), ze = Math.min(Y, ($e - Ye) * rn), xt = ($e + Ye) / 2 * rn - ze / 2;
      let ut = fe, lt = new L();
      const Yt = [lt];
      Ce.forEachGlyph(k, B, j, (We, ft, Et) => {
        const Ze = k.charAt(Et), Te = We.advanceWidth * rn, tt = lt.count;
        let pt;
        if ("isEmpty" in We || (We.isWhitespace = !!Ze && new RegExp(u).test(Ze), We.canBreakAfter = !!Ze && h.test(Ze), We.isEmpty = We.xMin === We.xMax || We.yMin === We.yMax || l.test(Ze)), !We.isWhitespace && !We.isEmpty && rt++, qe && Ae && !We.isWhitespace && ft + Te + ut > ee && tt) {
          if (lt.glyphAt(tt - 1).glyphObj.canBreakAfter)
            pt = new L(), ut = -ft;
          else
            for (let Pt = tt; Pt--; )
              if (Pt === 0 && he === "break-word") {
                pt = new L(), ut = -ft;
                break;
              } else if (lt.glyphAt(Pt).glyphObj.canBreakAfter) {
                pt = lt.splitAt(Pt + 1);
                const He = pt.glyphAt(0).x;
                ut -= He;
                for (let dt = pt.count; dt--; )
                  pt.glyphAt(dt).x -= He;
                break;
              }
          pt && (lt.isSoftWrapped = !0, lt = pt, Yt.push(lt), oe = ee);
        }
        let ve = lt.glyphAt(lt.count);
        ve.glyphObj = We, ve.x = ft + ut, ve.width = Te, ve.charIndex = Et, Ze === `
` && (lt = new L(), Yt.push(lt), ut = -(ft + Te + j * B) + fe);
      }), Yt.forEach((We) => {
        for (let ft = We.count; ft--; ) {
          let { glyphObj: Et, x: Ze, width: Te } = We.glyphAt(ft);
          if (!Et.isWhitespace) {
            We.width = Ze + Te, We.width > oe && (oe = We.width);
            return;
          }
        }
      });
      let Nt = 0, xe = 0;
      if (me && (typeof me == "number" ? Nt = -me : typeof me == "string" && (Nt = -oe * (me === "left" ? 0 : me === "center" ? 0.5 : me === "right" ? 1 : w(me)))), Ee) {
        if (typeof Ee == "number")
          xe = -Ee;
        else if (typeof Ee == "string") {
          let We = Yt.length * Y;
          xe = Ee === "top" ? 0 : Ee === "top-baseline" ? -re : Ee === "top-cap" ? -re - Dt * rn : Ee === "top-ex" ? -re - kt * rn : Ee === "middle" ? We / 2 : Ee === "bottom" ? We : Ee === "bottom-baseline" ? We - ae + Ye * rn : w(Ee) * We;
        }
      }
      if (!X) {
        const We = e.getEmbeddingLevels(k, Z);
        De = new Uint16Array(rt), Ne = new Float32Array(rt * 2), Pe = {}, Ot = [o, o, -o, -o], st = [];
        let ft = re;
        be && (it = new Float32Array(k.length * 3)), de && (Fe = new Uint8Array(rt * 3));
        let Et = 0, Ze = -1, Te = -1, tt, pt;
        if (Yt.forEach((ve, Pt) => {
          let { count: He, width: dt } = ve;
          if (He > 0) {
            let ln = 0;
            for (let fr = He; fr-- && ve.glyphAt(fr).glyphObj.isWhitespace; )
              ln++;
            let Un = 0, jn = 0;
            if (K === "center")
              Un = (oe - dt) / 2;
            else if (K === "right")
              Un = oe - dt;
            else if (K === "justify" && ve.isSoftWrapped) {
              let fr = 0;
              for (let Hn = He - ln; Hn--; )
                ve.glyphAt(Hn).glyphObj.isWhitespace && fr++;
              jn = (oe - dt) / fr;
            }
            if (jn || Un) {
              let fr = 0;
              for (let Hn = 0; Hn < He; Hn++) {
                let mi = ve.glyphAt(Hn);
                const Vr = mi.glyphObj;
                mi.x += Un + fr, jn !== 0 && Vr.isWhitespace && Hn < He - ln && (fr += jn, mi.width += jn);
              }
            }
            const cr = e.getReorderSegments(
              k,
              We,
              ve.glyphAt(0).charIndex,
              ve.glyphAt(ve.count - 1).charIndex
            );
            for (let fr = 0; fr < cr.length; fr++) {
              const [Hn, mi] = cr[fr];
              let Vr = 1 / 0, Gr = -1 / 0;
              for (let Or = 0; Or < He; Or++)
                if (ve.glyphAt(Or).charIndex >= Hn) {
                  let Ui = Or, fi = Or;
                  for (; fi < He; fi++) {
                    let ke = ve.glyphAt(fi);
                    if (ke.charIndex > mi)
                      break;
                    fi < He - ln && (Vr = Math.min(Vr, ke.x), Gr = Math.max(Gr, ke.x + ke.width));
                  }
                  for (let ke = Ui; ke < fi; ke++) {
                    const Ht = ve.glyphAt(ke);
                    Ht.x = Gr - (Ht.x + Ht.width - Vr);
                  }
                  break;
                }
            }
            let En;
            const tr = (fr) => En = fr;
            for (let fr = 0; fr < He; fr++) {
              let Hn = ve.glyphAt(fr);
              En = Hn.glyphObj;
              const mi = En.index, Vr = We.levels[Hn.charIndex] & 1;
              if (Vr) {
                const Gr = e.getMirroredCharacter(k[Hn.charIndex]);
                Gr && Ce.forEachGlyph(Gr, 0, 0, tr);
              }
              if (be) {
                const { charIndex: Gr } = Hn, Or = Hn.x + Nt, Ui = Hn.x + Hn.width + Nt;
                it[Gr * 3] = Vr ? Ui : Or, it[Gr * 3 + 1] = Vr ? Or : Ui, it[Gr * 3 + 2] = ft + xt + xe;
                const fi = Gr - Ze;
                fi > 1 && R(it, Ze, fi), Ze = Gr;
              }
              if (de) {
                const { charIndex: Gr } = Hn;
                for (; Gr > Te; )
                  Te++, de.hasOwnProperty(Te) && (pt = de[Te]);
              }
              if (!En.isWhitespace && !En.isEmpty) {
                const Gr = Et++;
                Pe[mi] || (Pe[mi] = {
                  path: En.path,
                  pathBounds: [En.xMin, En.yMin, En.xMax, En.yMax]
                });
                const Or = Hn.x + Nt, Ui = ft + xe;
                Ne[Gr * 2] = Or, Ne[Gr * 2 + 1] = Ui;
                const fi = Or + En.xMin * rn, ke = Ui + En.yMin * rn, Ht = Or + En.xMax * rn, Jt = Ui + En.yMax * rn;
                fi < Ot[0] && (Ot[0] = fi), ke < Ot[1] && (Ot[1] = ke), Ht > Ot[2] && (Ot[2] = Ht), Jt > Ot[3] && (Ot[3] = Jt), Gr % we === 0 && (tt = { start: Gr, end: Gr, rect: [o, o, -o, -o] }, st.push(tt)), tt.end++;
                const pn = tt.rect;
                if (fi < pn[0] && (pn[0] = fi), ke < pn[1] && (pn[1] = ke), Ht > pn[2] && (pn[2] = Ht), Jt > pn[3] && (pn[3] = Jt), De[Gr] = mi, de) {
                  const _e = Gr * 3;
                  Fe[_e] = pt >> 16 & 255, Fe[_e + 1] = pt >> 8 & 255, Fe[_e + 2] = pt & 255;
                }
              }
            }
          }
          ft -= Y;
        }), it) {
          const ve = k.length - Ze;
          ve > 1 && R(it, Ze, ve);
        }
      }
      ue.typesetting = U() - mt, ye({
        glyphIds: De,
        //font indices for each glyph
        glyphPositions: Ne,
        //x,y of each glyph's origin in layout
        glyphData: Pe,
        //dict holding data about each glyph appearing in the text
        caretPositions: it,
        //startX,endX,bottomY caret positions for each char
        caretHeight: ze,
        //height of cursor from bottom to top
        glyphColors: Fe,
        //color for each glyph, if color ranges supplied
        chunkedBounds: st,
        //total rects per (n=chunkedBoundsSize) consecutive glyphs
        fontSize: B,
        //calculated em height
        unitsPerEm: zt,
        //font units per em
        ascender: $e * rn,
        //font ascender
        descender: Ye * rn,
        //font descender
        capHeight: Dt * rn,
        //font cap-height
        xHeight: kt * rn,
        //font x-height
        lineHeight: Y,
        //computed line height
        topBaseline: re,
        //y coordinate of the top line's baseline
        blockBounds: [
          //bounds for the whole block of text, including vertical padding for lineHeight
          Nt,
          xe - Yt.length * Y,
          Nt + oe,
          xe
        ],
        visibleBounds: Ot,
        //total bounds of visible text paths, may be larger or smaller than blockBounds
        timings: ue
      });
    });
  }
  function E(k, F) {
    _(k, (H) => {
      const [B, j, Y, ee] = H.blockBounds;
      F({
        width: Y - B,
        height: ee - j
      });
    }, { metricsOnly: !0 });
  }
  function w(k) {
    let F = k.match(/^([\d.]+)%$/), H = F ? parseFloat(F[1]) : NaN;
    return isNaN(H) ? 0 : H / 100;
  }
  function R(k, F, H) {
    const B = k[F * 3], j = k[F * 3 + 1], Y = k[F * 3 + 2], ee = (j - B) / H;
    for (let Z = 0; Z < H; Z++) {
      const K = (F + Z) * 3;
      k[K] = B + ee * Z, k[K + 1] = B + ee * (Z + 1), k[K + 2] = Y;
    }
  }
  function U() {
    return (self.performance || Date).now();
  }
  function L() {
    this.data = [];
  }
  const A = ["glyphObj", "x", "width", "charIndex"];
  return L.prototype = {
    width: 0,
    isSoftWrapped: !1,
    get count() {
      return Math.ceil(this.data.length / A.length);
    },
    glyphAt(k) {
      let F = L.flyweight;
      return F.data = this.data, F.index = k, F;
    },
    splitAt(k) {
      let F = new L();
      return F.data = this.data.splice(k * A.length), F;
    }
  }, L.flyweight = A.reduce((k, F, H, B) => (Object.defineProperty(k, F, {
    get() {
      return this.data[this.index * A.length + H];
    },
    set(j) {
      this.data[this.index * A.length + H] = j;
    }
  }), k), { data: null, index: 0 }), {
    typeset: _,
    measure: E,
    loadFont: y
  };
}
const o_ = () => (self.performance || Date).now(), m2 = /* @__PURE__ */ HB();
let AF;
function BK(n, e, t, r, i, o, l, u, h, p, y = !0) {
  return y ? VK(n, e, t, r, i, o, l, u, h, p).then(
    null,
    (_) => (AF || (console.warn("WebGL SDF generation failed, falling back to JS", _), AF = !0), LF(n, e, t, r, i, o, l, u, h, p))
  ) : LF(n, e, t, r, i, o, l, u, h, p);
}
const fR = [], HK = 5;
let OO = 0;
function GB() {
  const n = o_();
  for (; fR.length && o_() - n < HK; )
    fR.shift()();
  OO = fR.length ? setTimeout(GB, 0) : 0;
}
const VK = (...n) => new Promise((e, t) => {
  fR.push(() => {
    const r = o_();
    try {
      m2.webgl.generateIntoCanvas(...n), e({ timing: o_() - r });
    } catch (i) {
      t(i);
    }
  }), OO || (OO = setTimeout(GB, 0));
}), GK = 4, WK = 2e3, DF = {};
let jK = 0;
function LF(n, e, t, r, i, o, l, u, h, p) {
  const y = "TroikaTextSDFGenerator_JS_" + jK++ % GK;
  let _ = DF[y];
  return _ || (_ = DF[y] = {
    workerModule: lw({
      name: y,
      workerId: y,
      dependencies: [
        HB,
        o_
      ],
      init(E, w) {
        const R = E().javascript.generate;
        return function(...U) {
          const L = w();
          return {
            textureData: R(...U),
            timing: w() - L
          };
        };
      },
      getTransferables(E) {
        return [E.textureData.buffer];
      }
    }),
    requests: 0,
    idleTimer: null
  }), _.requests++, clearTimeout(_.idleTimer), _.workerModule(n, e, t, r, i, o).then(({ textureData: E, timing: w }) => {
    const R = o_(), U = new Uint8Array(E.length * 4);
    for (let L = 0; L < E.length; L++)
      U[L * 4 + p] = E[L];
    return m2.webglUtils.renderImageData(l, U, u, h, n, e, 1 << 3 - p), w += o_() - R, --_.requests === 0 && (_.idleTimer = setTimeout(() => {
      AK(y);
    }, WK)), { timing: w };
  });
}
function $K(n) {
  n._warm || (m2.webgl.isSupported(n), n._warm = !0);
}
const YK = m2.webglUtils.resizeWebGLCanvasWithoutClearing;
/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/
function XK() {
  return typeof window > "u" && (self.window = self), function(n) {
    var e = { parse: function(i) {
      var o = e._bin, l = new Uint8Array(i);
      if (o.readASCII(l, 0, 4) == "ttcf") {
        var u = 4;
        o.readUshort(l, u), u += 2, o.readUshort(l, u), u += 2;
        var h = o.readUint(l, u);
        u += 4;
        for (var p = [], y = 0; y < h; y++) {
          var _ = o.readUint(l, u);
          u += 4, p.push(e._readFont(l, _));
        }
        return p;
      }
      return [e._readFont(l, 0)];
    }, _readFont: function(i, o) {
      var l = e._bin, u = o;
      l.readFixed(i, o), o += 4;
      var h = l.readUshort(i, o);
      o += 2, l.readUshort(i, o), o += 2, l.readUshort(i, o), o += 2, l.readUshort(i, o), o += 2;
      for (var p = ["cmap", "head", "hhea", "maxp", "hmtx", "name", "OS/2", "post", "loca", "glyf", "kern", "CFF ", "GPOS", "GSUB", "SVG "], y = { _data: i, _offset: u }, _ = {}, E = 0; E < h; E++) {
        var w = l.readASCII(i, o, 4);
        o += 4, l.readUint(i, o), o += 4;
        var R = l.readUint(i, o);
        o += 4;
        var U = l.readUint(i, o);
        o += 4, _[w] = { offset: R, length: U };
      }
      for (E = 0; E < p.length; E++) {
        var L = p[E];
        _[L] && (y[L.trim()] = e[L.trim()].parse(i, _[L].offset, _[L].length, y));
      }
      return y;
    }, _tabOffset: function(i, o, l) {
      for (var u = e._bin, h = u.readUshort(i, l + 4), p = l + 12, y = 0; y < h; y++) {
        var _ = u.readASCII(i, p, 4);
        p += 4, u.readUint(i, p), p += 4;
        var E = u.readUint(i, p);
        if (p += 4, u.readUint(i, p), p += 4, _ == o)
          return E;
      }
      return 0;
    } };
    e._bin = { readFixed: function(i, o) {
      return (i[o] << 8 | i[o + 1]) + (i[o + 2] << 8 | i[o + 3]) / 65540;
    }, readF2dot14: function(i, o) {
      return e._bin.readShort(i, o) / 16384;
    }, readInt: function(i, o) {
      return e._bin._view(i).getInt32(o);
    }, readInt8: function(i, o) {
      return e._bin._view(i).getInt8(o);
    }, readShort: function(i, o) {
      return e._bin._view(i).getInt16(o);
    }, readUshort: function(i, o) {
      return e._bin._view(i).getUint16(o);
    }, readUshorts: function(i, o, l) {
      for (var u = [], h = 0; h < l; h++)
        u.push(e._bin.readUshort(i, o + 2 * h));
      return u;
    }, readUint: function(i, o) {
      return e._bin._view(i).getUint32(o);
    }, readUint64: function(i, o) {
      return 4294967296 * e._bin.readUint(i, o) + e._bin.readUint(i, o + 4);
    }, readASCII: function(i, o, l) {
      for (var u = "", h = 0; h < l; h++)
        u += String.fromCharCode(i[o + h]);
      return u;
    }, readUnicode: function(i, o, l) {
      for (var u = "", h = 0; h < l; h++) {
        var p = i[o++] << 8 | i[o++];
        u += String.fromCharCode(p);
      }
      return u;
    }, _tdec: typeof window < "u" && window.TextDecoder ? new window.TextDecoder() : null, readUTF8: function(i, o, l) {
      var u = e._bin._tdec;
      return u && o == 0 && l == i.length ? u.decode(i) : e._bin.readASCII(i, o, l);
    }, readBytes: function(i, o, l) {
      for (var u = [], h = 0; h < l; h++)
        u.push(i[o + h]);
      return u;
    }, readASCIIArray: function(i, o, l) {
      for (var u = [], h = 0; h < l; h++)
        u.push(String.fromCharCode(i[o + h]));
      return u;
    }, _view: function(i) {
      return i._dataView || (i._dataView = i.buffer ? new DataView(i.buffer, i.byteOffset, i.byteLength) : new DataView(new Uint8Array(i).buffer));
    } }, e._lctf = {}, e._lctf.parse = function(i, o, l, u, h) {
      var p = e._bin, y = {}, _ = o;
      p.readFixed(i, o), o += 4;
      var E = p.readUshort(i, o);
      o += 2;
      var w = p.readUshort(i, o);
      o += 2;
      var R = p.readUshort(i, o);
      return o += 2, y.scriptList = e._lctf.readScriptList(i, _ + E), y.featureList = e._lctf.readFeatureList(i, _ + w), y.lookupList = e._lctf.readLookupList(i, _ + R, h), y;
    }, e._lctf.readLookupList = function(i, o, l) {
      var u = e._bin, h = o, p = [], y = u.readUshort(i, o);
      o += 2;
      for (var _ = 0; _ < y; _++) {
        var E = u.readUshort(i, o);
        o += 2;
        var w = e._lctf.readLookupTable(i, h + E, l);
        p.push(w);
      }
      return p;
    }, e._lctf.readLookupTable = function(i, o, l) {
      var u = e._bin, h = o, p = { tabs: [] };
      p.ltype = u.readUshort(i, o), o += 2, p.flag = u.readUshort(i, o), o += 2;
      var y = u.readUshort(i, o);
      o += 2;
      for (var _ = p.ltype, E = 0; E < y; E++) {
        var w = u.readUshort(i, o);
        o += 2;
        var R = l(i, _, h + w, p);
        p.tabs.push(R);
      }
      return p;
    }, e._lctf.numOfOnes = function(i) {
      for (var o = 0, l = 0; l < 32; l++)
        i >>> l & 1 && o++;
      return o;
    }, e._lctf.readClassDef = function(i, o) {
      var l = e._bin, u = [], h = l.readUshort(i, o);
      if (o += 2, h == 1) {
        var p = l.readUshort(i, o);
        o += 2;
        var y = l.readUshort(i, o);
        o += 2;
        for (var _ = 0; _ < y; _++)
          u.push(p + _), u.push(p + _), u.push(l.readUshort(i, o)), o += 2;
      }
      if (h == 2) {
        var E = l.readUshort(i, o);
        for (o += 2, _ = 0; _ < E; _++)
          u.push(l.readUshort(i, o)), o += 2, u.push(l.readUshort(i, o)), o += 2, u.push(l.readUshort(i, o)), o += 2;
      }
      return u;
    }, e._lctf.getInterval = function(i, o) {
      for (var l = 0; l < i.length; l += 3) {
        var u = i[l], h = i[l + 1];
        if (i[l + 2], u <= o && o <= h)
          return l;
      }
      return -1;
    }, e._lctf.readCoverage = function(i, o) {
      var l = e._bin, u = {};
      u.fmt = l.readUshort(i, o), o += 2;
      var h = l.readUshort(i, o);
      return o += 2, u.fmt == 1 && (u.tab = l.readUshorts(i, o, h)), u.fmt == 2 && (u.tab = l.readUshorts(i, o, 3 * h)), u;
    }, e._lctf.coverageIndex = function(i, o) {
      var l = i.tab;
      if (i.fmt == 1)
        return l.indexOf(o);
      if (i.fmt == 2) {
        var u = e._lctf.getInterval(l, o);
        if (u != -1)
          return l[u + 2] + (o - l[u]);
      }
      return -1;
    }, e._lctf.readFeatureList = function(i, o) {
      var l = e._bin, u = o, h = [], p = l.readUshort(i, o);
      o += 2;
      for (var y = 0; y < p; y++) {
        var _ = l.readASCII(i, o, 4);
        o += 4;
        var E = l.readUshort(i, o);
        o += 2;
        var w = e._lctf.readFeatureTable(i, u + E);
        w.tag = _.trim(), h.push(w);
      }
      return h;
    }, e._lctf.readFeatureTable = function(i, o) {
      var l = e._bin, u = o, h = {}, p = l.readUshort(i, o);
      o += 2, p > 0 && (h.featureParams = u + p);
      var y = l.readUshort(i, o);
      o += 2, h.tab = [];
      for (var _ = 0; _ < y; _++)
        h.tab.push(l.readUshort(i, o + 2 * _));
      return h;
    }, e._lctf.readScriptList = function(i, o) {
      var l = e._bin, u = o, h = {}, p = l.readUshort(i, o);
      o += 2;
      for (var y = 0; y < p; y++) {
        var _ = l.readASCII(i, o, 4);
        o += 4;
        var E = l.readUshort(i, o);
        o += 2, h[_.trim()] = e._lctf.readScriptTable(i, u + E);
      }
      return h;
    }, e._lctf.readScriptTable = function(i, o) {
      var l = e._bin, u = o, h = {}, p = l.readUshort(i, o);
      o += 2, h.default = e._lctf.readLangSysTable(i, u + p);
      var y = l.readUshort(i, o);
      o += 2;
      for (var _ = 0; _ < y; _++) {
        var E = l.readASCII(i, o, 4);
        o += 4;
        var w = l.readUshort(i, o);
        o += 2, h[E.trim()] = e._lctf.readLangSysTable(i, u + w);
      }
      return h;
    }, e._lctf.readLangSysTable = function(i, o) {
      var l = e._bin, u = {};
      l.readUshort(i, o), o += 2, u.reqFeature = l.readUshort(i, o), o += 2;
      var h = l.readUshort(i, o);
      return o += 2, u.features = l.readUshorts(i, o, h), u;
    }, e.CFF = {}, e.CFF.parse = function(i, o, l) {
      var u = e._bin;
      (i = new Uint8Array(i.buffer, o, l))[o = 0], i[++o], i[++o], i[++o], o++;
      var h = [];
      o = e.CFF.readIndex(i, o, h);
      for (var p = [], y = 0; y < h.length - 1; y++)
        p.push(u.readASCII(i, o + h[y], h[y + 1] - h[y]));
      o += h[h.length - 1];
      var _ = [];
      o = e.CFF.readIndex(i, o, _);
      var E = [];
      for (y = 0; y < _.length - 1; y++)
        E.push(e.CFF.readDict(i, o + _[y], o + _[y + 1]));
      o += _[_.length - 1];
      var w = E[0], R = [];
      o = e.CFF.readIndex(i, o, R);
      var U = [];
      for (y = 0; y < R.length - 1; y++)
        U.push(u.readASCII(i, o + R[y], R[y + 1] - R[y]));
      if (o += R[R.length - 1], e.CFF.readSubrs(i, o, w), w.CharStrings) {
        o = w.CharStrings, R = [], o = e.CFF.readIndex(i, o, R);
        var L = [];
        for (y = 0; y < R.length - 1; y++)
          L.push(u.readBytes(i, o + R[y], R[y + 1] - R[y]));
        w.CharStrings = L;
      }
      if (w.ROS) {
        o = w.FDArray;
        var A = [];
        for (o = e.CFF.readIndex(i, o, A), w.FDArray = [], y = 0; y < A.length - 1; y++) {
          var k = e.CFF.readDict(i, o + A[y], o + A[y + 1]);
          e.CFF._readFDict(i, k, U), w.FDArray.push(k);
        }
        o += A[A.length - 1], o = w.FDSelect, w.FDSelect = [];
        var F = i[o];
        if (o++, F != 3)
          throw F;
        var H = u.readUshort(i, o);
        for (o += 2, y = 0; y < H + 1; y++)
          w.FDSelect.push(u.readUshort(i, o), i[o + 2]), o += 3;
      }
      return w.Encoding && (w.Encoding = e.CFF.readEncoding(i, w.Encoding, w.CharStrings.length)), w.charset && (w.charset = e.CFF.readCharset(i, w.charset, w.CharStrings.length)), e.CFF._readFDict(i, w, U), w;
    }, e.CFF._readFDict = function(i, o, l) {
      var u;
      for (var h in o.Private && (u = o.Private[1], o.Private = e.CFF.readDict(i, u, u + o.Private[0]), o.Private.Subrs && e.CFF.readSubrs(i, u + o.Private.Subrs, o.Private)), o)
        ["FamilyName", "FontName", "FullName", "Notice", "version", "Copyright"].indexOf(h) != -1 && (o[h] = l[o[h] - 426 + 35]);
    }, e.CFF.readSubrs = function(i, o, l) {
      var u = e._bin, h = [];
      o = e.CFF.readIndex(i, o, h);
      var p, y = h.length;
      p = y < 1240 ? 107 : y < 33900 ? 1131 : 32768, l.Bias = p, l.Subrs = [];
      for (var _ = 0; _ < h.length - 1; _++)
        l.Subrs.push(u.readBytes(i, o + h[_], h[_ + 1] - h[_]));
    }, e.CFF.tableSE = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 0, 111, 112, 113, 114, 0, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 0, 124, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 0, 134, 135, 136, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0, 139, 0, 0, 0, 0, 140, 141, 142, 143, 0, 0, 0, 0, 0, 144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0, 0, 0, 0], e.CFF.glyphByUnicode = function(i, o) {
      for (var l = 0; l < i.charset.length; l++)
        if (i.charset[l] == o)
          return l;
      return -1;
    }, e.CFF.glyphBySE = function(i, o) {
      return o < 0 || o > 255 ? -1 : e.CFF.glyphByUnicode(i, e.CFF.tableSE[o]);
    }, e.CFF.readEncoding = function(i, o, l) {
      e._bin;
      var u = [".notdef"], h = i[o];
      if (o++, h != 0)
        throw "error: unknown encoding format: " + h;
      var p = i[o];
      o++;
      for (var y = 0; y < p; y++)
        u.push(i[o + y]);
      return u;
    }, e.CFF.readCharset = function(i, o, l) {
      var u = e._bin, h = [".notdef"], p = i[o];
      if (o++, p == 0)
        for (var y = 0; y < l; y++) {
          var _ = u.readUshort(i, o);
          o += 2, h.push(_);
        }
      else {
        if (p != 1 && p != 2)
          throw "error: format: " + p;
        for (; h.length < l; ) {
          _ = u.readUshort(i, o), o += 2;
          var E = 0;
          for (p == 1 ? (E = i[o], o++) : (E = u.readUshort(i, o), o += 2), y = 0; y <= E; y++)
            h.push(_), _++;
        }
      }
      return h;
    }, e.CFF.readIndex = function(i, o, l) {
      var u = e._bin, h = u.readUshort(i, o) + 1, p = i[o += 2];
      if (o++, p == 1)
        for (var y = 0; y < h; y++)
          l.push(i[o + y]);
      else if (p == 2)
        for (y = 0; y < h; y++)
          l.push(u.readUshort(i, o + 2 * y));
      else if (p == 3)
        for (y = 0; y < h; y++)
          l.push(16777215 & u.readUint(i, o + 3 * y - 1));
      else if (h != 1)
        throw "unsupported offset size: " + p + ", count: " + h;
      return (o += h * p) - 1;
    }, e.CFF.getCharString = function(i, o, l) {
      var u = e._bin, h = i[o], p = i[o + 1];
      i[o + 2], i[o + 3], i[o + 4];
      var y = 1, _ = null, E = null;
      h <= 20 && (_ = h, y = 1), h == 12 && (_ = 100 * h + p, y = 2), 21 <= h && h <= 27 && (_ = h, y = 1), h == 28 && (E = u.readShort(i, o + 1), y = 3), 29 <= h && h <= 31 && (_ = h, y = 1), 32 <= h && h <= 246 && (E = h - 139, y = 1), 247 <= h && h <= 250 && (E = 256 * (h - 247) + p + 108, y = 2), 251 <= h && h <= 254 && (E = 256 * -(h - 251) - p - 108, y = 2), h == 255 && (E = u.readInt(i, o + 1) / 65535, y = 5), l.val = E ?? "o" + _, l.size = y;
    }, e.CFF.readCharString = function(i, o, l) {
      for (var u = o + l, h = e._bin, p = []; o < u; ) {
        var y = i[o], _ = i[o + 1];
        i[o + 2], i[o + 3], i[o + 4];
        var E = 1, w = null, R = null;
        y <= 20 && (w = y, E = 1), y == 12 && (w = 100 * y + _, E = 2), y != 19 && y != 20 || (w = y, E = 2), 21 <= y && y <= 27 && (w = y, E = 1), y == 28 && (R = h.readShort(i, o + 1), E = 3), 29 <= y && y <= 31 && (w = y, E = 1), 32 <= y && y <= 246 && (R = y - 139, E = 1), 247 <= y && y <= 250 && (R = 256 * (y - 247) + _ + 108, E = 2), 251 <= y && y <= 254 && (R = 256 * -(y - 251) - _ - 108, E = 2), y == 255 && (R = h.readInt(i, o + 1) / 65535, E = 5), p.push(R ?? "o" + w), o += E;
      }
      return p;
    }, e.CFF.readDict = function(i, o, l) {
      for (var u = e._bin, h = {}, p = []; o < l; ) {
        var y = i[o], _ = i[o + 1];
        i[o + 2], i[o + 3], i[o + 4];
        var E = 1, w = null, R = null;
        if (y == 28 && (R = u.readShort(i, o + 1), E = 3), y == 29 && (R = u.readInt(i, o + 1), E = 5), 32 <= y && y <= 246 && (R = y - 139, E = 1), 247 <= y && y <= 250 && (R = 256 * (y - 247) + _ + 108, E = 2), 251 <= y && y <= 254 && (R = 256 * -(y - 251) - _ - 108, E = 2), y == 255)
          throw R = u.readInt(i, o + 1) / 65535, E = 5, "unknown number";
        if (y == 30) {
          var U = [];
          for (E = 1; ; ) {
            var L = i[o + E];
            E++;
            var A = L >> 4, k = 15 & L;
            if (A != 15 && U.push(A), k != 15 && U.push(k), k == 15)
              break;
          }
          for (var F = "", H = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, ".", "e", "e-", "reserved", "-", "endOfNumber"], B = 0; B < U.length; B++)
            F += H[U[B]];
          R = parseFloat(F);
        }
        y <= 21 && (w = ["version", "Notice", "FullName", "FamilyName", "Weight", "FontBBox", "BlueValues", "OtherBlues", "FamilyBlues", "FamilyOtherBlues", "StdHW", "StdVW", "escape", "UniqueID", "XUID", "charset", "Encoding", "CharStrings", "Private", "Subrs", "defaultWidthX", "nominalWidthX"][y], E = 1, y == 12 && (w = ["Copyright", "isFixedPitch", "ItalicAngle", "UnderlinePosition", "UnderlineThickness", "PaintType", "CharstringType", "FontMatrix", "StrokeWidth", "BlueScale", "BlueShift", "BlueFuzz", "StemSnapH", "StemSnapV", "ForceBold", 0, 0, "LanguageGroup", "ExpansionFactor", "initialRandomSeed", "SyntheticBase", "PostScript", "BaseFontName", "BaseFontBlend", 0, 0, 0, 0, 0, 0, "ROS", "CIDFontVersion", "CIDFontRevision", "CIDFontType", "CIDCount", "UIDBase", "FDArray", "FDSelect", "FontName"][_], E = 2)), w != null ? (h[w] = p.length == 1 ? p[0] : p, p = []) : p.push(R), o += E;
      }
      return h;
    }, e.cmap = {}, e.cmap.parse = function(i, o, l) {
      i = new Uint8Array(i.buffer, o, l), o = 0;
      var u = e._bin, h = {};
      u.readUshort(i, o), o += 2;
      var p = u.readUshort(i, o);
      o += 2;
      var y = [];
      h.tables = [];
      for (var _ = 0; _ < p; _++) {
        var E = u.readUshort(i, o);
        o += 2;
        var w = u.readUshort(i, o);
        o += 2;
        var R = u.readUint(i, o);
        o += 4;
        var U = "p" + E + "e" + w, L = y.indexOf(R);
        if (L == -1) {
          var A;
          L = h.tables.length, y.push(R);
          var k = u.readUshort(i, R);
          k == 0 ? A = e.cmap.parse0(i, R) : k == 4 ? A = e.cmap.parse4(i, R) : k == 6 ? A = e.cmap.parse6(i, R) : k == 12 ? A = e.cmap.parse12(i, R) : console.debug("unknown format: " + k, E, w, R), h.tables.push(A);
        }
        if (h[U] != null)
          throw "multiple tables for one platform+encoding";
        h[U] = L;
      }
      return h;
    }, e.cmap.parse0 = function(i, o) {
      var l = e._bin, u = {};
      u.format = l.readUshort(i, o), o += 2;
      var h = l.readUshort(i, o);
      o += 2, l.readUshort(i, o), o += 2, u.map = [];
      for (var p = 0; p < h - 6; p++)
        u.map.push(i[o + p]);
      return u;
    }, e.cmap.parse4 = function(i, o) {
      var l = e._bin, u = o, h = {};
      h.format = l.readUshort(i, o), o += 2;
      var p = l.readUshort(i, o);
      o += 2, l.readUshort(i, o), o += 2;
      var y = l.readUshort(i, o);
      o += 2;
      var _ = y / 2;
      h.searchRange = l.readUshort(i, o), o += 2, h.entrySelector = l.readUshort(i, o), o += 2, h.rangeShift = l.readUshort(i, o), o += 2, h.endCount = l.readUshorts(i, o, _), o += 2 * _, o += 2, h.startCount = l.readUshorts(i, o, _), o += 2 * _, h.idDelta = [];
      for (var E = 0; E < _; E++)
        h.idDelta.push(l.readShort(i, o)), o += 2;
      for (h.idRangeOffset = l.readUshorts(i, o, _), o += 2 * _, h.glyphIdArray = []; o < u + p; )
        h.glyphIdArray.push(l.readUshort(i, o)), o += 2;
      return h;
    }, e.cmap.parse6 = function(i, o) {
      var l = e._bin, u = {};
      u.format = l.readUshort(i, o), o += 2, l.readUshort(i, o), o += 2, l.readUshort(i, o), o += 2, u.firstCode = l.readUshort(i, o), o += 2;
      var h = l.readUshort(i, o);
      o += 2, u.glyphIdArray = [];
      for (var p = 0; p < h; p++)
        u.glyphIdArray.push(l.readUshort(i, o)), o += 2;
      return u;
    }, e.cmap.parse12 = function(i, o) {
      var l = e._bin, u = {};
      u.format = l.readUshort(i, o), o += 2, o += 2, l.readUint(i, o), o += 4, l.readUint(i, o), o += 4;
      var h = l.readUint(i, o);
      o += 4, u.groups = [];
      for (var p = 0; p < h; p++) {
        var y = o + 12 * p, _ = l.readUint(i, y + 0), E = l.readUint(i, y + 4), w = l.readUint(i, y + 8);
        u.groups.push([_, E, w]);
      }
      return u;
    }, e.glyf = {}, e.glyf.parse = function(i, o, l, u) {
      for (var h = [], p = 0; p < u.maxp.numGlyphs; p++)
        h.push(null);
      return h;
    }, e.glyf._parseGlyf = function(i, o) {
      var l = e._bin, u = i._data, h = e._tabOffset(u, "glyf", i._offset) + i.loca[o];
      if (i.loca[o] == i.loca[o + 1])
        return null;
      var p = {};
      if (p.noc = l.readShort(u, h), h += 2, p.xMin = l.readShort(u, h), h += 2, p.yMin = l.readShort(u, h), h += 2, p.xMax = l.readShort(u, h), h += 2, p.yMax = l.readShort(u, h), h += 2, p.xMin >= p.xMax || p.yMin >= p.yMax)
        return null;
      if (p.noc > 0) {
        p.endPts = [];
        for (var y = 0; y < p.noc; y++)
          p.endPts.push(l.readUshort(u, h)), h += 2;
        var _ = l.readUshort(u, h);
        if (h += 2, u.length - h < _)
          return null;
        p.instructions = l.readBytes(u, h, _), h += _;
        var E = p.endPts[p.noc - 1] + 1;
        for (p.flags = [], y = 0; y < E; y++) {
          var w = u[h];
          if (h++, p.flags.push(w), (8 & w) != 0) {
            var R = u[h];
            h++;
            for (var U = 0; U < R; U++)
              p.flags.push(w), y++;
          }
        }
        for (p.xs = [], y = 0; y < E; y++) {
          var L = (2 & p.flags[y]) != 0, A = (16 & p.flags[y]) != 0;
          L ? (p.xs.push(A ? u[h] : -u[h]), h++) : A ? p.xs.push(0) : (p.xs.push(l.readShort(u, h)), h += 2);
        }
        for (p.ys = [], y = 0; y < E; y++)
          L = (4 & p.flags[y]) != 0, A = (32 & p.flags[y]) != 0, L ? (p.ys.push(A ? u[h] : -u[h]), h++) : A ? p.ys.push(0) : (p.ys.push(l.readShort(u, h)), h += 2);
        var k = 0, F = 0;
        for (y = 0; y < E; y++)
          k += p.xs[y], F += p.ys[y], p.xs[y] = k, p.ys[y] = F;
      } else {
        var H;
        p.parts = [];
        do {
          H = l.readUshort(u, h), h += 2;
          var B = { m: { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 }, p1: -1, p2: -1 };
          if (p.parts.push(B), B.glyphIndex = l.readUshort(u, h), h += 2, 1 & H) {
            var j = l.readShort(u, h);
            h += 2;
            var Y = l.readShort(u, h);
            h += 2;
          } else
            j = l.readInt8(u, h), h++, Y = l.readInt8(u, h), h++;
          2 & H ? (B.m.tx = j, B.m.ty = Y) : (B.p1 = j, B.p2 = Y), 8 & H ? (B.m.a = B.m.d = l.readF2dot14(u, h), h += 2) : 64 & H ? (B.m.a = l.readF2dot14(u, h), h += 2, B.m.d = l.readF2dot14(u, h), h += 2) : 128 & H && (B.m.a = l.readF2dot14(u, h), h += 2, B.m.b = l.readF2dot14(u, h), h += 2, B.m.c = l.readF2dot14(u, h), h += 2, B.m.d = l.readF2dot14(u, h), h += 2);
        } while (32 & H);
        if (256 & H) {
          var ee = l.readUshort(u, h);
          for (h += 2, p.instr = [], y = 0; y < ee; y++)
            p.instr.push(u[h]), h++;
        }
      }
      return p;
    }, e.GPOS = {}, e.GPOS.parse = function(i, o, l, u) {
      return e._lctf.parse(i, o, l, u, e.GPOS.subt);
    }, e.GPOS.subt = function(i, o, l, u) {
      var h = e._bin, p = l, y = {};
      if (y.fmt = h.readUshort(i, l), l += 2, o == 1 || o == 2 || o == 3 || o == 7 || o == 8 && y.fmt <= 2) {
        var _ = h.readUshort(i, l);
        l += 2, y.coverage = e._lctf.readCoverage(i, _ + p);
      }
      if (o == 1 && y.fmt == 1) {
        var E = h.readUshort(i, l);
        l += 2;
        var w = e._lctf.numOfOnes(E);
        E != 0 && (y.pos = e.GPOS.readValueRecord(i, l, E));
      } else if (o == 2 && y.fmt >= 1 && y.fmt <= 2) {
        E = h.readUshort(i, l), l += 2;
        var R = h.readUshort(i, l);
        l += 2, w = e._lctf.numOfOnes(E);
        var U = e._lctf.numOfOnes(R);
        if (y.fmt == 1) {
          y.pairsets = [];
          var L = h.readUshort(i, l);
          l += 2;
          for (var A = 0; A < L; A++) {
            var k = p + h.readUshort(i, l);
            l += 2;
            var F = h.readUshort(i, k);
            k += 2;
            for (var H = [], B = 0; B < F; B++) {
              var j = h.readUshort(i, k);
              k += 2, E != 0 && (se = e.GPOS.readValueRecord(i, k, E), k += 2 * w), R != 0 && (he = e.GPOS.readValueRecord(i, k, R), k += 2 * U), H.push({ gid2: j, val1: se, val2: he });
            }
            y.pairsets.push(H);
          }
        }
        if (y.fmt == 2) {
          var Y = h.readUshort(i, l);
          l += 2;
          var ee = h.readUshort(i, l);
          l += 2;
          var Z = h.readUshort(i, l);
          l += 2;
          var K = h.readUshort(i, l);
          for (l += 2, y.classDef1 = e._lctf.readClassDef(i, p + Y), y.classDef2 = e._lctf.readClassDef(i, p + ee), y.matrix = [], A = 0; A < Z; A++) {
            var fe = [];
            for (B = 0; B < K; B++) {
              var se = null, he = null;
              E != 0 && (se = e.GPOS.readValueRecord(i, l, E), l += 2 * w), R != 0 && (he = e.GPOS.readValueRecord(i, l, R), l += 2 * U), fe.push({ val1: se, val2: he });
            }
            y.matrix.push(fe);
          }
        }
      } else {
        if (o == 9 && y.fmt == 1) {
          var me = h.readUshort(i, l);
          l += 2;
          var Ee = h.readUint(i, l);
          if (l += 4, u.ltype == 9)
            u.ltype = me;
          else if (u.ltype != me)
            throw "invalid extension substitution";
          return e.GPOS.subt(i, u.ltype, p + Ee);
        }
        console.debug("unsupported GPOS table LookupType", o, "format", y.fmt);
      }
      return y;
    }, e.GPOS.readValueRecord = function(i, o, l) {
      var u = e._bin, h = [];
      return h.push(1 & l ? u.readShort(i, o) : 0), o += 1 & l ? 2 : 0, h.push(2 & l ? u.readShort(i, o) : 0), o += 2 & l ? 2 : 0, h.push(4 & l ? u.readShort(i, o) : 0), o += 4 & l ? 2 : 0, h.push(8 & l ? u.readShort(i, o) : 0), o += 8 & l ? 2 : 0, h;
    }, e.GSUB = {}, e.GSUB.parse = function(i, o, l, u) {
      return e._lctf.parse(i, o, l, u, e.GSUB.subt);
    }, e.GSUB.subt = function(i, o, l, u) {
      var h = e._bin, p = l, y = {};
      if (y.fmt = h.readUshort(i, l), l += 2, o != 1 && o != 4 && o != 5 && o != 6)
        return null;
      if (o == 1 || o == 4 || o == 5 && y.fmt <= 2 || o == 6 && y.fmt <= 2) {
        var _ = h.readUshort(i, l);
        l += 2, y.coverage = e._lctf.readCoverage(i, p + _);
      }
      if (o == 1 && y.fmt >= 1 && y.fmt <= 2) {
        if (y.fmt == 1)
          y.delta = h.readShort(i, l), l += 2;
        else if (y.fmt == 2) {
          var E = h.readUshort(i, l);
          l += 2, y.newg = h.readUshorts(i, l, E), l += 2 * y.newg.length;
        }
      } else if (o == 4) {
        y.vals = [], E = h.readUshort(i, l), l += 2;
        for (var w = 0; w < E; w++) {
          var R = h.readUshort(i, l);
          l += 2, y.vals.push(e.GSUB.readLigatureSet(i, p + R));
        }
      } else if (o == 5 && y.fmt == 2) {
        if (y.fmt == 2) {
          var U = h.readUshort(i, l);
          l += 2, y.cDef = e._lctf.readClassDef(i, p + U), y.scset = [];
          var L = h.readUshort(i, l);
          for (l += 2, w = 0; w < L; w++) {
            var A = h.readUshort(i, l);
            l += 2, y.scset.push(A == 0 ? null : e.GSUB.readSubClassSet(i, p + A));
          }
        }
      } else if (o == 6 && y.fmt == 3) {
        if (y.fmt == 3) {
          for (w = 0; w < 3; w++) {
            E = h.readUshort(i, l), l += 2;
            for (var k = [], F = 0; F < E; F++)
              k.push(e._lctf.readCoverage(i, p + h.readUshort(i, l + 2 * F)));
            l += 2 * E, w == 0 && (y.backCvg = k), w == 1 && (y.inptCvg = k), w == 2 && (y.ahedCvg = k);
          }
          E = h.readUshort(i, l), l += 2, y.lookupRec = e.GSUB.readSubstLookupRecords(i, l, E);
        }
      } else {
        if (o == 7 && y.fmt == 1) {
          var H = h.readUshort(i, l);
          l += 2;
          var B = h.readUint(i, l);
          if (l += 4, u.ltype == 9)
            u.ltype = H;
          else if (u.ltype != H)
            throw "invalid extension substitution";
          return e.GSUB.subt(i, u.ltype, p + B);
        }
        console.debug("unsupported GSUB table LookupType", o, "format", y.fmt);
      }
      return y;
    }, e.GSUB.readSubClassSet = function(i, o) {
      var l = e._bin.readUshort, u = o, h = [], p = l(i, o);
      o += 2;
      for (var y = 0; y < p; y++) {
        var _ = l(i, o);
        o += 2, h.push(e.GSUB.readSubClassRule(i, u + _));
      }
      return h;
    }, e.GSUB.readSubClassRule = function(i, o) {
      var l = e._bin.readUshort, u = {}, h = l(i, o), p = l(i, o += 2);
      o += 2, u.input = [];
      for (var y = 0; y < h - 1; y++)
        u.input.push(l(i, o)), o += 2;
      return u.substLookupRecords = e.GSUB.readSubstLookupRecords(i, o, p), u;
    }, e.GSUB.readSubstLookupRecords = function(i, o, l) {
      for (var u = e._bin.readUshort, h = [], p = 0; p < l; p++)
        h.push(u(i, o), u(i, o + 2)), o += 4;
      return h;
    }, e.GSUB.readChainSubClassSet = function(i, o) {
      var l = e._bin, u = o, h = [], p = l.readUshort(i, o);
      o += 2;
      for (var y = 0; y < p; y++) {
        var _ = l.readUshort(i, o);
        o += 2, h.push(e.GSUB.readChainSubClassRule(i, u + _));
      }
      return h;
    }, e.GSUB.readChainSubClassRule = function(i, o) {
      for (var l = e._bin, u = {}, h = ["backtrack", "input", "lookahead"], p = 0; p < h.length; p++) {
        var y = l.readUshort(i, o);
        o += 2, p == 1 && y--, u[h[p]] = l.readUshorts(i, o, y), o += 2 * u[h[p]].length;
      }
      return y = l.readUshort(i, o), o += 2, u.subst = l.readUshorts(i, o, 2 * y), o += 2 * u.subst.length, u;
    }, e.GSUB.readLigatureSet = function(i, o) {
      var l = e._bin, u = o, h = [], p = l.readUshort(i, o);
      o += 2;
      for (var y = 0; y < p; y++) {
        var _ = l.readUshort(i, o);
        o += 2, h.push(e.GSUB.readLigature(i, u + _));
      }
      return h;
    }, e.GSUB.readLigature = function(i, o) {
      var l = e._bin, u = { chain: [] };
      u.nglyph = l.readUshort(i, o), o += 2;
      var h = l.readUshort(i, o);
      o += 2;
      for (var p = 0; p < h - 1; p++)
        u.chain.push(l.readUshort(i, o)), o += 2;
      return u;
    }, e.head = {}, e.head.parse = function(i, o, l) {
      var u = e._bin, h = {};
      return u.readFixed(i, o), o += 4, h.fontRevision = u.readFixed(i, o), o += 4, u.readUint(i, o), o += 4, u.readUint(i, o), o += 4, h.flags = u.readUshort(i, o), o += 2, h.unitsPerEm = u.readUshort(i, o), o += 2, h.created = u.readUint64(i, o), o += 8, h.modified = u.readUint64(i, o), o += 8, h.xMin = u.readShort(i, o), o += 2, h.yMin = u.readShort(i, o), o += 2, h.xMax = u.readShort(i, o), o += 2, h.yMax = u.readShort(i, o), o += 2, h.macStyle = u.readUshort(i, o), o += 2, h.lowestRecPPEM = u.readUshort(i, o), o += 2, h.fontDirectionHint = u.readShort(i, o), o += 2, h.indexToLocFormat = u.readShort(i, o), o += 2, h.glyphDataFormat = u.readShort(i, o), o += 2, h;
    }, e.hhea = {}, e.hhea.parse = function(i, o, l) {
      var u = e._bin, h = {};
      return u.readFixed(i, o), o += 4, h.ascender = u.readShort(i, o), o += 2, h.descender = u.readShort(i, o), o += 2, h.lineGap = u.readShort(i, o), o += 2, h.advanceWidthMax = u.readUshort(i, o), o += 2, h.minLeftSideBearing = u.readShort(i, o), o += 2, h.minRightSideBearing = u.readShort(i, o), o += 2, h.xMaxExtent = u.readShort(i, o), o += 2, h.caretSlopeRise = u.readShort(i, o), o += 2, h.caretSlopeRun = u.readShort(i, o), o += 2, h.caretOffset = u.readShort(i, o), o += 2, o += 8, h.metricDataFormat = u.readShort(i, o), o += 2, h.numberOfHMetrics = u.readUshort(i, o), o += 2, h;
    }, e.hmtx = {}, e.hmtx.parse = function(i, o, l, u) {
      for (var h = e._bin, p = { aWidth: [], lsBearing: [] }, y = 0, _ = 0, E = 0; E < u.maxp.numGlyphs; E++)
        E < u.hhea.numberOfHMetrics && (y = h.readUshort(i, o), o += 2, _ = h.readShort(i, o), o += 2), p.aWidth.push(y), p.lsBearing.push(_);
      return p;
    }, e.kern = {}, e.kern.parse = function(i, o, l, u) {
      var h = e._bin, p = h.readUshort(i, o);
      if (o += 2, p == 1)
        return e.kern.parseV1(i, o - 2, l, u);
      var y = h.readUshort(i, o);
      o += 2;
      for (var _ = { glyph1: [], rval: [] }, E = 0; E < y; E++) {
        o += 2, l = h.readUshort(i, o), o += 2;
        var w = h.readUshort(i, o);
        o += 2;
        var R = w >>> 8;
        if ((R &= 15) != 0)
          throw "unknown kern table format: " + R;
        o = e.kern.readFormat0(i, o, _);
      }
      return _;
    }, e.kern.parseV1 = function(i, o, l, u) {
      var h = e._bin;
      h.readFixed(i, o), o += 4;
      var p = h.readUint(i, o);
      o += 4;
      for (var y = { glyph1: [], rval: [] }, _ = 0; _ < p; _++) {
        h.readUint(i, o), o += 4;
        var E = h.readUshort(i, o);
        o += 2, h.readUshort(i, o), o += 2;
        var w = E >>> 8;
        if ((w &= 15) != 0)
          throw "unknown kern table format: " + w;
        o = e.kern.readFormat0(i, o, y);
      }
      return y;
    }, e.kern.readFormat0 = function(i, o, l) {
      var u = e._bin, h = -1, p = u.readUshort(i, o);
      o += 2, u.readUshort(i, o), o += 2, u.readUshort(i, o), o += 2, u.readUshort(i, o), o += 2;
      for (var y = 0; y < p; y++) {
        var _ = u.readUshort(i, o);
        o += 2;
        var E = u.readUshort(i, o);
        o += 2;
        var w = u.readShort(i, o);
        o += 2, _ != h && (l.glyph1.push(_), l.rval.push({ glyph2: [], vals: [] }));
        var R = l.rval[l.rval.length - 1];
        R.glyph2.push(E), R.vals.push(w), h = _;
      }
      return o;
    }, e.loca = {}, e.loca.parse = function(i, o, l, u) {
      var h = e._bin, p = [], y = u.head.indexToLocFormat, _ = u.maxp.numGlyphs + 1;
      if (y == 0)
        for (var E = 0; E < _; E++)
          p.push(h.readUshort(i, o + (E << 1)) << 1);
      if (y == 1)
        for (E = 0; E < _; E++)
          p.push(h.readUint(i, o + (E << 2)));
      return p;
    }, e.maxp = {}, e.maxp.parse = function(i, o, l) {
      var u = e._bin, h = {}, p = u.readUint(i, o);
      return o += 4, h.numGlyphs = u.readUshort(i, o), o += 2, p == 65536 && (h.maxPoints = u.readUshort(i, o), o += 2, h.maxContours = u.readUshort(i, o), o += 2, h.maxCompositePoints = u.readUshort(i, o), o += 2, h.maxCompositeContours = u.readUshort(i, o), o += 2, h.maxZones = u.readUshort(i, o), o += 2, h.maxTwilightPoints = u.readUshort(i, o), o += 2, h.maxStorage = u.readUshort(i, o), o += 2, h.maxFunctionDefs = u.readUshort(i, o), o += 2, h.maxInstructionDefs = u.readUshort(i, o), o += 2, h.maxStackElements = u.readUshort(i, o), o += 2, h.maxSizeOfInstructions = u.readUshort(i, o), o += 2, h.maxComponentElements = u.readUshort(i, o), o += 2, h.maxComponentDepth = u.readUshort(i, o), o += 2), h;
    }, e.name = {}, e.name.parse = function(i, o, l) {
      var u = e._bin, h = {};
      u.readUshort(i, o), o += 2;
      var p = u.readUshort(i, o);
      o += 2, u.readUshort(i, o);
      for (var y, _ = ["copyright", "fontFamily", "fontSubfamily", "ID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "urlVendor", "urlDesigner", "licence", "licenceURL", "---", "typoFamilyName", "typoSubfamilyName", "compatibleFull", "sampleText", "postScriptCID", "wwsFamilyName", "wwsSubfamilyName", "lightPalette", "darkPalette"], E = o += 2, w = 0; w < p; w++) {
        var R = u.readUshort(i, o);
        o += 2;
        var U = u.readUshort(i, o);
        o += 2;
        var L = u.readUshort(i, o);
        o += 2;
        var A = u.readUshort(i, o);
        o += 2;
        var k = u.readUshort(i, o);
        o += 2;
        var F = u.readUshort(i, o);
        o += 2;
        var H, B = _[A], j = E + 12 * p + F;
        if (R == 0)
          H = u.readUnicode(i, j, k / 2);
        else if (R == 3 && U == 0)
          H = u.readUnicode(i, j, k / 2);
        else if (U == 0)
          H = u.readASCII(i, j, k);
        else if (U == 1)
          H = u.readUnicode(i, j, k / 2);
        else if (U == 3)
          H = u.readUnicode(i, j, k / 2);
        else {
          if (R != 1)
            throw "unknown encoding " + U + ", platformID: " + R;
          H = u.readASCII(i, j, k), console.debug("reading unknown MAC encoding " + U + " as ASCII");
        }
        var Y = "p" + R + "," + L.toString(16);
        h[Y] == null && (h[Y] = {}), h[Y][B !== void 0 ? B : A] = H, h[Y]._lang = L;
      }
      for (var ee in h)
        if (h[ee].postScriptName != null && h[ee]._lang == 1033)
          return h[ee];
      for (var ee in h)
        if (h[ee].postScriptName != null && h[ee]._lang == 0)
          return h[ee];
      for (var ee in h)
        if (h[ee].postScriptName != null && h[ee]._lang == 3084)
          return h[ee];
      for (var ee in h)
        if (h[ee].postScriptName != null)
          return h[ee];
      for (var ee in h) {
        y = ee;
        break;
      }
      return console.debug("returning name table with languageID " + h[y]._lang), h[y];
    }, e["OS/2"] = {}, e["OS/2"].parse = function(i, o, l) {
      var u = e._bin.readUshort(i, o);
      o += 2;
      var h = {};
      if (u == 0)
        e["OS/2"].version0(i, o, h);
      else if (u == 1)
        e["OS/2"].version1(i, o, h);
      else if (u == 2 || u == 3 || u == 4)
        e["OS/2"].version2(i, o, h);
      else {
        if (u != 5)
          throw "unknown OS/2 table version: " + u;
        e["OS/2"].version5(i, o, h);
      }
      return h;
    }, e["OS/2"].version0 = function(i, o, l) {
      var u = e._bin;
      return l.xAvgCharWidth = u.readShort(i, o), o += 2, l.usWeightClass = u.readUshort(i, o), o += 2, l.usWidthClass = u.readUshort(i, o), o += 2, l.fsType = u.readUshort(i, o), o += 2, l.ySubscriptXSize = u.readShort(i, o), o += 2, l.ySubscriptYSize = u.readShort(i, o), o += 2, l.ySubscriptXOffset = u.readShort(i, o), o += 2, l.ySubscriptYOffset = u.readShort(i, o), o += 2, l.ySuperscriptXSize = u.readShort(i, o), o += 2, l.ySuperscriptYSize = u.readShort(i, o), o += 2, l.ySuperscriptXOffset = u.readShort(i, o), o += 2, l.ySuperscriptYOffset = u.readShort(i, o), o += 2, l.yStrikeoutSize = u.readShort(i, o), o += 2, l.yStrikeoutPosition = u.readShort(i, o), o += 2, l.sFamilyClass = u.readShort(i, o), o += 2, l.panose = u.readBytes(i, o, 10), o += 10, l.ulUnicodeRange1 = u.readUint(i, o), o += 4, l.ulUnicodeRange2 = u.readUint(i, o), o += 4, l.ulUnicodeRange3 = u.readUint(i, o), o += 4, l.ulUnicodeRange4 = u.readUint(i, o), o += 4, l.achVendID = [u.readInt8(i, o), u.readInt8(i, o + 1), u.readInt8(i, o + 2), u.readInt8(i, o + 3)], o += 4, l.fsSelection = u.readUshort(i, o), o += 2, l.usFirstCharIndex = u.readUshort(i, o), o += 2, l.usLastCharIndex = u.readUshort(i, o), o += 2, l.sTypoAscender = u.readShort(i, o), o += 2, l.sTypoDescender = u.readShort(i, o), o += 2, l.sTypoLineGap = u.readShort(i, o), o += 2, l.usWinAscent = u.readUshort(i, o), o += 2, l.usWinDescent = u.readUshort(i, o), o += 2;
    }, e["OS/2"].version1 = function(i, o, l) {
      var u = e._bin;
      return o = e["OS/2"].version0(i, o, l), l.ulCodePageRange1 = u.readUint(i, o), o += 4, l.ulCodePageRange2 = u.readUint(i, o), o += 4;
    }, e["OS/2"].version2 = function(i, o, l) {
      var u = e._bin;
      return o = e["OS/2"].version1(i, o, l), l.sxHeight = u.readShort(i, o), o += 2, l.sCapHeight = u.readShort(i, o), o += 2, l.usDefault = u.readUshort(i, o), o += 2, l.usBreak = u.readUshort(i, o), o += 2, l.usMaxContext = u.readUshort(i, o), o += 2;
    }, e["OS/2"].version5 = function(i, o, l) {
      var u = e._bin;
      return o = e["OS/2"].version2(i, o, l), l.usLowerOpticalPointSize = u.readUshort(i, o), o += 2, l.usUpperOpticalPointSize = u.readUshort(i, o), o += 2;
    }, e.post = {}, e.post.parse = function(i, o, l) {
      var u = e._bin, h = {};
      return h.version = u.readFixed(i, o), o += 4, h.italicAngle = u.readFixed(i, o), o += 4, h.underlinePosition = u.readShort(i, o), o += 2, h.underlineThickness = u.readShort(i, o), o += 2, h;
    }, e == null && (e = {}), e.U == null && (e.U = {}), e.U.codeToGlyph = function(i, o) {
      var l = i.cmap, u = -1;
      if (l.p0e4 != null ? u = l.p0e4 : l.p3e1 != null ? u = l.p3e1 : l.p1e0 != null ? u = l.p1e0 : l.p0e3 != null && (u = l.p0e3), u == -1)
        throw "no familiar platform and encoding!";
      var h = l.tables[u];
      if (h.format == 0)
        return o >= h.map.length ? 0 : h.map[o];
      if (h.format == 4) {
        for (var p = -1, y = 0; y < h.endCount.length; y++)
          if (o <= h.endCount[y]) {
            p = y;
            break;
          }
        return p == -1 || h.startCount[p] > o ? 0 : 65535 & (h.idRangeOffset[p] != 0 ? h.glyphIdArray[o - h.startCount[p] + (h.idRangeOffset[p] >> 1) - (h.idRangeOffset.length - p)] : o + h.idDelta[p]);
      }
      if (h.format == 12) {
        if (o > h.groups[h.groups.length - 1][1])
          return 0;
        for (y = 0; y < h.groups.length; y++) {
          var _ = h.groups[y];
          if (_[0] <= o && o <= _[1])
            return _[2] + (o - _[0]);
        }
        return 0;
      }
      throw "unknown cmap table format " + h.format;
    }, e.U.glyphToPath = function(i, o) {
      var l = { cmds: [], crds: [] };
      if (i.SVG && i.SVG.entries[o]) {
        var u = i.SVG.entries[o];
        return u == null ? l : (typeof u == "string" && (u = e.SVG.toPath(u), i.SVG.entries[o] = u), u);
      }
      if (i.CFF) {
        var h = { x: 0, y: 0, stack: [], nStems: 0, haveWidth: !1, width: i.CFF.Private ? i.CFF.Private.defaultWidthX : 0, open: !1 }, p = i.CFF, y = i.CFF.Private;
        if (p.ROS) {
          for (var _ = 0; p.FDSelect[_ + 2] <= o; )
            _ += 2;
          y = p.FDArray[p.FDSelect[_ + 1]].Private;
        }
        e.U._drawCFF(i.CFF.CharStrings[o], h, p, y, l);
      } else
        i.glyf && e.U._drawGlyf(o, i, l);
      return l;
    }, e.U._drawGlyf = function(i, o, l) {
      var u = o.glyf[i];
      u == null && (u = o.glyf[i] = e.glyf._parseGlyf(o, i)), u != null && (u.noc > -1 ? e.U._simpleGlyph(u, l) : e.U._compoGlyph(u, o, l));
    }, e.U._simpleGlyph = function(i, o) {
      for (var l = 0; l < i.noc; l++) {
        for (var u = l == 0 ? 0 : i.endPts[l - 1] + 1, h = i.endPts[l], p = u; p <= h; p++) {
          var y = p == u ? h : p - 1, _ = p == h ? u : p + 1, E = 1 & i.flags[p], w = 1 & i.flags[y], R = 1 & i.flags[_], U = i.xs[p], L = i.ys[p];
          if (p == u)
            if (E) {
              if (!w) {
                e.U.P.moveTo(o, U, L);
                continue;
              }
              e.U.P.moveTo(o, i.xs[y], i.ys[y]);
            } else
              w ? e.U.P.moveTo(o, i.xs[y], i.ys[y]) : e.U.P.moveTo(o, (i.xs[y] + U) / 2, (i.ys[y] + L) / 2);
          E ? w && e.U.P.lineTo(o, U, L) : R ? e.U.P.qcurveTo(o, U, L, i.xs[_], i.ys[_]) : e.U.P.qcurveTo(o, U, L, (U + i.xs[_]) / 2, (L + i.ys[_]) / 2);
        }
        e.U.P.closePath(o);
      }
    }, e.U._compoGlyph = function(i, o, l) {
      for (var u = 0; u < i.parts.length; u++) {
        var h = { cmds: [], crds: [] }, p = i.parts[u];
        e.U._drawGlyf(p.glyphIndex, o, h);
        for (var y = p.m, _ = 0; _ < h.crds.length; _ += 2) {
          var E = h.crds[_], w = h.crds[_ + 1];
          l.crds.push(E * y.a + w * y.b + y.tx), l.crds.push(E * y.c + w * y.d + y.ty);
        }
        for (_ = 0; _ < h.cmds.length; _++)
          l.cmds.push(h.cmds[_]);
      }
    }, e.U._getGlyphClass = function(i, o) {
      var l = e._lctf.getInterval(o, i);
      return l == -1 ? 0 : o[l + 2];
    }, e.U.getPairAdjustment = function(i, o, l) {
      var u = !1;
      if (i.GPOS)
        for (var h = i.GPOS, p = h.lookupList, y = h.featureList, _ = [], E = 0; E < y.length; E++) {
          var w = y[E];
          if (w.tag == "kern") {
            u = !0;
            for (var R = 0; R < w.tab.length; R++)
              if (!_[w.tab[R]]) {
                _[w.tab[R]] = !0;
                for (var U = p[w.tab[R]], L = 0; L < U.tabs.length; L++)
                  if (U.tabs[L] != null) {
                    var A, k = U.tabs[L];
                    if ((!k.coverage || (A = e._lctf.coverageIndex(k.coverage, o)) != -1) && U.ltype != 1) {
                      if (U.ltype == 2) {
                        var F = null;
                        if (k.fmt == 1) {
                          var H = k.pairsets[A];
                          for (E = 0; E < H.length; E++)
                            H[E].gid2 == l && (F = H[E]);
                        } else if (k.fmt == 2) {
                          var B = e.U._getGlyphClass(o, k.classDef1), j = e.U._getGlyphClass(l, k.classDef2);
                          F = k.matrix[B][j];
                        }
                        if (F) {
                          var Y = 0;
                          return F.val1 && F.val1[2] && (Y += F.val1[2]), F.val2 && F.val2[0] && (Y += F.val2[0]), Y;
                        }
                      }
                    }
                  }
              }
          }
        }
      if (i.kern && !u) {
        var ee = i.kern.glyph1.indexOf(o);
        if (ee != -1) {
          var Z = i.kern.rval[ee].glyph2.indexOf(l);
          if (Z != -1)
            return i.kern.rval[ee].vals[Z];
        }
      }
      return 0;
    }, e.U._applySubs = function(i, o, l, u) {
      for (var h = i.length - o - 1, p = 0; p < l.tabs.length; p++)
        if (l.tabs[p] != null) {
          var y, _ = l.tabs[p];
          if (!_.coverage || (y = e._lctf.coverageIndex(_.coverage, i[o])) != -1) {
            if (l.ltype == 1)
              i[o], _.fmt == 1 ? i[o] = i[o] + _.delta : i[o] = _.newg[y];
            else if (l.ltype == 4)
              for (var E = _.vals[y], w = 0; w < E.length; w++) {
                var R = E[w], U = R.chain.length;
                if (!(U > h)) {
                  for (var L = !0, A = 0, k = 0; k < U; k++) {
                    for (; i[o + A + (1 + k)] == -1; )
                      A++;
                    R.chain[k] != i[o + A + (1 + k)] && (L = !1);
                  }
                  if (L) {
                    for (i[o] = R.nglyph, k = 0; k < U + A; k++)
                      i[o + k + 1] = -1;
                    break;
                  }
                }
              }
            else if (l.ltype == 5 && _.fmt == 2)
              for (var F = e._lctf.getInterval(_.cDef, i[o]), H = _.cDef[F + 2], B = _.scset[H], j = 0; j < B.length; j++) {
                var Y = B[j], ee = Y.input;
                if (!(ee.length > h)) {
                  for (L = !0, k = 0; k < ee.length; k++) {
                    var Z = e._lctf.getInterval(_.cDef, i[o + 1 + k]);
                    if (F == -1 && _.cDef[Z + 2] != ee[k]) {
                      L = !1;
                      break;
                    }
                  }
                  if (L) {
                    var K = Y.substLookupRecords;
                    for (w = 0; w < K.length; w += 2)
                      K[w], K[w + 1];
                  }
                }
              }
            else if (l.ltype == 6 && _.fmt == 3) {
              if (!e.U._glsCovered(i, _.backCvg, o - _.backCvg.length) || !e.U._glsCovered(i, _.inptCvg, o) || !e.U._glsCovered(i, _.ahedCvg, o + _.inptCvg.length))
                continue;
              var fe = _.lookupRec;
              for (j = 0; j < fe.length; j += 2) {
                F = fe[j];
                var se = u[fe[j + 1]];
                e.U._applySubs(i, o + F, se, u);
              }
            }
          }
        }
    }, e.U._glsCovered = function(i, o, l) {
      for (var u = 0; u < o.length; u++)
        if (e._lctf.coverageIndex(o[u], i[l + u]) == -1)
          return !1;
      return !0;
    }, e.U.glyphsToPath = function(i, o, l) {
      for (var u = { cmds: [], crds: [] }, h = 0, p = 0; p < o.length; p++) {
        var y = o[p];
        if (y != -1) {
          for (var _ = p < o.length - 1 && o[p + 1] != -1 ? o[p + 1] : 0, E = e.U.glyphToPath(i, y), w = 0; w < E.crds.length; w += 2)
            u.crds.push(E.crds[w] + h), u.crds.push(E.crds[w + 1]);
          for (l && u.cmds.push(l), w = 0; w < E.cmds.length; w++)
            u.cmds.push(E.cmds[w]);
          l && u.cmds.push("X"), h += i.hmtx.aWidth[y], p < o.length - 1 && (h += e.U.getPairAdjustment(i, y, _));
        }
      }
      return u;
    }, e.U.P = {}, e.U.P.moveTo = function(i, o, l) {
      i.cmds.push("M"), i.crds.push(o, l);
    }, e.U.P.lineTo = function(i, o, l) {
      i.cmds.push("L"), i.crds.push(o, l);
    }, e.U.P.curveTo = function(i, o, l, u, h, p, y) {
      i.cmds.push("C"), i.crds.push(o, l, u, h, p, y);
    }, e.U.P.qcurveTo = function(i, o, l, u, h) {
      i.cmds.push("Q"), i.crds.push(o, l, u, h);
    }, e.U.P.closePath = function(i) {
      i.cmds.push("Z");
    }, e.U._drawCFF = function(i, o, l, u, h) {
      for (var p = o.stack, y = o.nStems, _ = o.haveWidth, E = o.width, w = o.open, R = 0, U = o.x, L = o.y, A = 0, k = 0, F = 0, H = 0, B = 0, j = 0, Y = 0, ee = 0, Z = 0, K = 0, fe = { val: 0, size: 0 }; R < i.length; ) {
        e.CFF.getCharString(i, R, fe);
        var se = fe.val;
        if (R += fe.size, se == "o1" || se == "o18")
          p.length % 2 != 0 && !_ && (E = p.shift() + u.nominalWidthX), y += p.length >> 1, p.length = 0, _ = !0;
        else if (se == "o3" || se == "o23")
          p.length % 2 != 0 && !_ && (E = p.shift() + u.nominalWidthX), y += p.length >> 1, p.length = 0, _ = !0;
        else if (se == "o4")
          p.length > 1 && !_ && (E = p.shift() + u.nominalWidthX, _ = !0), w && e.U.P.closePath(h), L += p.pop(), e.U.P.moveTo(h, U, L), w = !0;
        else if (se == "o5")
          for (; p.length > 0; )
            U += p.shift(), L += p.shift(), e.U.P.lineTo(h, U, L);
        else if (se == "o6" || se == "o7")
          for (var he = p.length, me = se == "o6", Ee = 0; Ee < he; Ee++) {
            var be = p.shift();
            me ? U += be : L += be, me = !me, e.U.P.lineTo(h, U, L);
          }
        else if (se == "o8" || se == "o24") {
          he = p.length;
          for (var we = 0; we + 6 <= he; )
            A = U + p.shift(), k = L + p.shift(), F = A + p.shift(), H = k + p.shift(), U = F + p.shift(), L = H + p.shift(), e.U.P.curveTo(h, A, k, F, H, U, L), we += 6;
          se == "o24" && (U += p.shift(), L += p.shift(), e.U.P.lineTo(h, U, L));
        } else {
          if (se == "o11")
            break;
          if (se == "o1234" || se == "o1235" || se == "o1236" || se == "o1237")
            se == "o1234" && (k = L, F = (A = U + p.shift()) + p.shift(), K = H = k + p.shift(), j = H, ee = L, U = (Y = (B = (Z = F + p.shift()) + p.shift()) + p.shift()) + p.shift(), e.U.P.curveTo(h, A, k, F, H, Z, K), e.U.P.curveTo(h, B, j, Y, ee, U, L)), se == "o1235" && (A = U + p.shift(), k = L + p.shift(), F = A + p.shift(), H = k + p.shift(), Z = F + p.shift(), K = H + p.shift(), B = Z + p.shift(), j = K + p.shift(), Y = B + p.shift(), ee = j + p.shift(), U = Y + p.shift(), L = ee + p.shift(), p.shift(), e.U.P.curveTo(h, A, k, F, H, Z, K), e.U.P.curveTo(h, B, j, Y, ee, U, L)), se == "o1236" && (A = U + p.shift(), k = L + p.shift(), F = A + p.shift(), K = H = k + p.shift(), j = H, Y = (B = (Z = F + p.shift()) + p.shift()) + p.shift(), ee = j + p.shift(), U = Y + p.shift(), e.U.P.curveTo(h, A, k, F, H, Z, K), e.U.P.curveTo(h, B, j, Y, ee, U, L)), se == "o1237" && (A = U + p.shift(), k = L + p.shift(), F = A + p.shift(), H = k + p.shift(), Z = F + p.shift(), K = H + p.shift(), B = Z + p.shift(), j = K + p.shift(), Y = B + p.shift(), ee = j + p.shift(), Math.abs(Y - U) > Math.abs(ee - L) ? U = Y + p.shift() : L = ee + p.shift(), e.U.P.curveTo(h, A, k, F, H, Z, K), e.U.P.curveTo(h, B, j, Y, ee, U, L));
          else if (se == "o14") {
            if (p.length > 0 && !_ && (E = p.shift() + l.nominalWidthX, _ = !0), p.length == 4) {
              var de = p.shift(), ye = p.shift(), X = p.shift(), q = p.shift(), ue = e.CFF.glyphBySE(l, X), Ce = e.CFF.glyphBySE(l, q);
              e.U._drawCFF(l.CharStrings[ue], o, l, u, h), o.x = de, o.y = ye, e.U._drawCFF(l.CharStrings[Ce], o, l, u, h);
            }
            w && (e.U.P.closePath(h), w = !1);
          } else if (se == "o19" || se == "o20")
            p.length % 2 != 0 && !_ && (E = p.shift() + u.nominalWidthX), y += p.length >> 1, p.length = 0, _ = !0, R += y + 7 >> 3;
          else if (se == "o21")
            p.length > 2 && !_ && (E = p.shift() + u.nominalWidthX, _ = !0), L += p.pop(), U += p.pop(), w && e.U.P.closePath(h), e.U.P.moveTo(h, U, L), w = !0;
          else if (se == "o22")
            p.length > 1 && !_ && (E = p.shift() + u.nominalWidthX, _ = !0), U += p.pop(), w && e.U.P.closePath(h), e.U.P.moveTo(h, U, L), w = !0;
          else if (se == "o25") {
            for (; p.length > 6; )
              U += p.shift(), L += p.shift(), e.U.P.lineTo(h, U, L);
            A = U + p.shift(), k = L + p.shift(), F = A + p.shift(), H = k + p.shift(), U = F + p.shift(), L = H + p.shift(), e.U.P.curveTo(h, A, k, F, H, U, L);
          } else if (se == "o26")
            for (p.length % 2 && (U += p.shift()); p.length > 0; )
              A = U, k = L + p.shift(), U = F = A + p.shift(), L = (H = k + p.shift()) + p.shift(), e.U.P.curveTo(h, A, k, F, H, U, L);
          else if (se == "o27")
            for (p.length % 2 && (L += p.shift()); p.length > 0; )
              k = L, F = (A = U + p.shift()) + p.shift(), H = k + p.shift(), U = F + p.shift(), L = H, e.U.P.curveTo(h, A, k, F, H, U, L);
          else if (se == "o10" || se == "o29") {
            var Ae = se == "o10" ? u : l;
            if (p.length == 0)
              console.debug("error: empty stack");
            else {
              var De = p.pop(), Ne = Ae.Subrs[De + Ae.Bias];
              o.x = U, o.y = L, o.nStems = y, o.haveWidth = _, o.width = E, o.open = w, e.U._drawCFF(Ne, o, l, u, h), U = o.x, L = o.y, y = o.nStems, _ = o.haveWidth, E = o.width, w = o.open;
            }
          } else if (se == "o30" || se == "o31") {
            var Pe = p.length, Fe = (we = 0, se == "o31");
            for (we += Pe - (he = -3 & Pe); we < he; )
              Fe ? (k = L, F = (A = U + p.shift()) + p.shift(), L = (H = k + p.shift()) + p.shift(), he - we == 5 ? (U = F + p.shift(), we++) : U = F, Fe = !1) : (A = U, k = L + p.shift(), F = A + p.shift(), H = k + p.shift(), U = F + p.shift(), he - we == 5 ? (L = H + p.shift(), we++) : L = H, Fe = !0), e.U.P.curveTo(h, A, k, F, H, U, L), we += 4;
          } else {
            if ((se + "").charAt(0) == "o")
              throw console.debug("Unknown operation: " + se, i), se;
            p.push(se);
          }
        }
      }
      o.x = U, o.y = L, o.nStems = y, o.haveWidth = _, o.width = E, o.open = w;
    };
    var t = e, r = { Typr: t };
    return n.Typr = t, n.default = r, Object.defineProperty(n, "__esModule", { value: !0 }), n;
  }({}).Typr;
}
/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/
function qK() {
  return function(n) {
    var e = Uint8Array, t = Uint16Array, r = Uint32Array, i = new e([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0]), o = new e([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0]), l = new e([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), u = function(se, he) {
      for (var me = new t(31), Ee = 0; Ee < 31; ++Ee)
        me[Ee] = he += 1 << se[Ee - 1];
      var be = new r(me[30]);
      for (Ee = 1; Ee < 30; ++Ee)
        for (var we = me[Ee]; we < me[Ee + 1]; ++we)
          be[we] = we - me[Ee] << 5 | Ee;
      return [me, be];
    }, h = u(i, 2), p = h[0], y = h[1];
    p[28] = 258, y[258] = 28;
    for (var _ = u(o, 0)[0], E = new t(32768), w = 0; w < 32768; ++w) {
      var R = (43690 & w) >>> 1 | (21845 & w) << 1;
      R = (61680 & (R = (52428 & R) >>> 2 | (13107 & R) << 2)) >>> 4 | (3855 & R) << 4, E[w] = ((65280 & R) >>> 8 | (255 & R) << 8) >>> 1;
    }
    var U = function(se, he, me) {
      for (var Ee = se.length, be = 0, we = new t(he); be < Ee; ++be)
        ++we[se[be] - 1];
      var de, ye = new t(he);
      for (be = 0; be < he; ++be)
        ye[be] = ye[be - 1] + we[be - 1] << 1;
      if (me) {
        de = new t(1 << he);
        var X = 15 - he;
        for (be = 0; be < Ee; ++be)
          if (se[be])
            for (var q = be << 4 | se[be], ue = he - se[be], Ce = ye[se[be] - 1]++ << ue, Ae = Ce | (1 << ue) - 1; Ce <= Ae; ++Ce)
              de[E[Ce] >>> X] = q;
      } else
        for (de = new t(Ee), be = 0; be < Ee; ++be)
          se[be] && (de[be] = E[ye[se[be] - 1]++] >>> 15 - se[be]);
      return de;
    }, L = new e(288);
    for (w = 0; w < 144; ++w)
      L[w] = 8;
    for (w = 144; w < 256; ++w)
      L[w] = 9;
    for (w = 256; w < 280; ++w)
      L[w] = 7;
    for (w = 280; w < 288; ++w)
      L[w] = 8;
    var A = new e(32);
    for (w = 0; w < 32; ++w)
      A[w] = 5;
    var k = U(L, 9, 1), F = U(A, 5, 1), H = function(se) {
      for (var he = se[0], me = 1; me < se.length; ++me)
        se[me] > he && (he = se[me]);
      return he;
    }, B = function(se, he, me) {
      var Ee = he / 8 | 0;
      return (se[Ee] | se[Ee + 1] << 8) >> (7 & he) & me;
    }, j = function(se, he) {
      var me = he / 8 | 0;
      return (se[me] | se[me + 1] << 8 | se[me + 2] << 16) >> (7 & he);
    }, Y = ["unexpected EOF", "invalid block type", "invalid length/literal", "invalid distance", "stream finished", "no stream handler", , "no callback", "invalid UTF-8 data", "extra field too long", "date not in range 1980-2099", "filename too long", "stream finishing", "invalid zip data"], ee = function(se, he, me) {
      var Ee = new Error(he || Y[se]);
      if (Ee.code = se, Error.captureStackTrace && Error.captureStackTrace(Ee, ee), !me)
        throw Ee;
      return Ee;
    }, Z = function(se, he, me) {
      var Ee = se.length;
      if (!Ee || me && !me.l && Ee < 5)
        return he || new e(0);
      var be = !he || me, we = !me || me.i;
      me || (me = {}), he || (he = new e(3 * Ee));
      var de, ye = function(Ze) {
        var Te = he.length;
        if (Ze > Te) {
          var tt = new e(Math.max(2 * Te, Ze));
          tt.set(he), he = tt;
        }
      }, X = me.f || 0, q = me.p || 0, ue = me.b || 0, Ce = me.l, Ae = me.d, De = me.m, Ne = me.n, Pe = 8 * Ee;
      do {
        if (!Ce) {
          me.f = X = B(se, q, 1);
          var Fe = B(se, q + 1, 3);
          if (q += 3, !Fe) {
            var it = se[(kt = ((de = q) / 8 | 0) + (7 & de && 1) + 4) - 4] | se[kt - 3] << 8, Ot = kt + it;
            if (Ot > Ee) {
              we && ee(0);
              break;
            }
            be && ye(ue + it), he.set(se.subarray(kt, Ot), ue), me.b = ue += it, me.p = q = 8 * Ot;
            continue;
          }
          if (Fe == 1)
            Ce = k, Ae = F, De = 9, Ne = 5;
          else if (Fe == 2) {
            var st = B(se, q, 31) + 257, oe = B(se, q + 10, 15) + 4, rt = st + B(se, q + 5, 31) + 1;
            q += 14;
            for (var qe = new e(rt), $e = new e(19), Ye = 0; Ye < oe; ++Ye)
              $e[l[Ye]] = B(se, q + 3 * Ye, 7);
            q += 3 * oe;
            var zt = H($e), ot = (1 << zt) - 1, Dt = U($e, zt, 1);
            for (Ye = 0; Ye < rt; ) {
              var kt, mt = Dt[B(se, q, ot)];
              if (q += 15 & mt, (kt = mt >>> 4) < 16)
                qe[Ye++] = kt;
              else {
                var rn = 0, ae = 0;
                for (kt == 16 ? (ae = 3 + B(se, q, 3), q += 2, rn = qe[Ye - 1]) : kt == 17 ? (ae = 3 + B(se, q, 7), q += 3) : kt == 18 && (ae = 11 + B(se, q, 127), q += 7); ae--; )
                  qe[Ye++] = rn;
              }
            }
            var re = qe.subarray(0, st), ze = qe.subarray(st);
            De = H(re), Ne = H(ze), Ce = U(re, De, 1), Ae = U(ze, Ne, 1);
          } else
            ee(1);
          if (q > Pe) {
            we && ee(0);
            break;
          }
        }
        be && ye(ue + 131072);
        for (var xt = (1 << De) - 1, ut = (1 << Ne) - 1, lt = q; ; lt = q) {
          var Yt = (rn = Ce[j(se, q) & xt]) >>> 4;
          if ((q += 15 & rn) > Pe) {
            we && ee(0);
            break;
          }
          if (rn || ee(2), Yt < 256)
            he[ue++] = Yt;
          else {
            if (Yt == 256) {
              lt = q, Ce = null;
              break;
            }
            var Nt = Yt - 254;
            if (Yt > 264) {
              var xe = i[Ye = Yt - 257];
              Nt = B(se, q, (1 << xe) - 1) + p[Ye], q += xe;
            }
            var We = Ae[j(se, q) & ut], ft = We >>> 4;
            if (We || ee(3), q += 15 & We, ze = _[ft], ft > 3 && (xe = o[ft], ze += j(se, q) & (1 << xe) - 1, q += xe), q > Pe) {
              we && ee(0);
              break;
            }
            be && ye(ue + 131072);
            for (var Et = ue + Nt; ue < Et; ue += 4)
              he[ue] = he[ue - ze], he[ue + 1] = he[ue + 1 - ze], he[ue + 2] = he[ue + 2 - ze], he[ue + 3] = he[ue + 3 - ze];
            ue = Et;
          }
        }
        me.l = Ce, me.p = lt, me.b = ue, Ce && (X = 1, me.m = De, me.d = Ae, me.n = Ne);
      } while (!X);
      return ue == he.length ? he : function(Ze, Te, tt) {
        (Te == null || Te < 0) && (Te = 0), (tt == null || tt > Ze.length) && (tt = Ze.length);
        var pt = new (Ze instanceof t ? t : Ze instanceof r ? r : e)(tt - Te);
        return pt.set(Ze.subarray(Te, tt)), pt;
      }(he, 0, ue);
    }, K = new e(0), fe = typeof TextDecoder < "u" && new TextDecoder();
    try {
      fe.decode(K, { stream: !0 });
    } catch {
    }
    return n.convert_streams = function(se) {
      var he = new DataView(se), me = 0;
      function Ee() {
        var st = he.getUint16(me);
        return me += 2, st;
      }
      function be() {
        var st = he.getUint32(me);
        return me += 4, st;
      }
      function we(st) {
        it.setUint16(Ot, st), Ot += 2;
      }
      function de(st) {
        it.setUint32(Ot, st), Ot += 4;
      }
      for (var ye = { signature: be(), flavor: be(), length: be(), numTables: Ee(), reserved: Ee(), totalSfntSize: be(), majorVersion: Ee(), minorVersion: Ee(), metaOffset: be(), metaLength: be(), metaOrigLength: be(), privOffset: be(), privLength: be() }, X = 0; Math.pow(2, X) <= ye.numTables; )
        X++;
      X--;
      for (var q = 16 * Math.pow(2, X), ue = 16 * ye.numTables - q, Ce = 12, Ae = [], De = 0; De < ye.numTables; De++)
        Ae.push({ tag: be(), offset: be(), compLength: be(), origLength: be(), origChecksum: be() }), Ce += 16;
      var Ne, Pe = new Uint8Array(12 + 16 * Ae.length + Ae.reduce(function(st, oe) {
        return st + oe.origLength + 4;
      }, 0)), Fe = Pe.buffer, it = new DataView(Fe), Ot = 0;
      return de(ye.flavor), we(ye.numTables), we(q), we(X), we(ue), Ae.forEach(function(st) {
        de(st.tag), de(st.origChecksum), de(Ce), de(st.origLength), st.outOffset = Ce, (Ce += st.origLength) % 4 != 0 && (Ce += 4 - Ce % 4);
      }), Ae.forEach(function(st) {
        var oe, rt = se.slice(st.offset, st.offset + st.compLength);
        if (st.compLength != st.origLength) {
          var qe = new Uint8Array(st.origLength);
          oe = new Uint8Array(rt, 2), Z(oe, qe);
        } else
          qe = new Uint8Array(rt);
        Pe.set(qe, st.outOffset);
        var $e = 0;
        (Ce = st.outOffset + st.origLength) % 4 != 0 && ($e = 4 - Ce % 4), Pe.set(new Uint8Array($e).buffer, st.outOffset + st.origLength), Ne = Ce + $e;
      }), Fe.slice(0, Ne);
    }, Object.defineProperty(n, "__esModule", { value: !0 }), n;
  }({}).convert_streams;
}
function KK(n, e) {
  const t = {
    M: 2,
    L: 2,
    Q: 4,
    C: 6,
    Z: 0
  }, r = { C: "18g,ca,368,1kz", D: "17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v", R: "17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6", L: "x9u,jff,a,fd,jv", T: "4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n" }, i = 1, o = 2, l = 4, u = 8, h = 16, p = 32;
  let y;
  function _(B) {
    if (!y) {
      const j = {
        R: o,
        L: i,
        D: l,
        C: h,
        U: p,
        T: u
      };
      y = /* @__PURE__ */ new Map();
      for (let Y in r) {
        let ee = 0;
        r[Y].split(",").forEach((Z) => {
          let [K, fe] = Z.split("+");
          K = parseInt(K, 36), fe = fe ? parseInt(fe, 36) : 0, y.set(ee += K, j[Y]);
          for (let se = fe; se--; )
            y.set(++ee, j[Y]);
        });
      }
    }
    return y.get(B) || p;
  }
  const E = 1, w = 2, R = 3, U = 4, L = [null, "isol", "init", "fina", "medi"];
  function A(B) {
    const j = new Uint8Array(B.length);
    let Y = p, ee = E, Z = -1;
    for (let K = 0; K < B.length; K++) {
      const fe = B.codePointAt(K);
      let se = _(fe) | 0, he = E;
      se & u || (Y & (i | l | h) ? se & (o | l | h) ? (he = R, (ee === E || ee === R) && j[Z]++) : se & (i | p) && (ee === w || ee === U) && j[Z]-- : Y & (o | p) && (ee === w || ee === U) && j[Z]--, ee = j[K] = he, Y = se, Z = K, fe > 65535 && K++);
    }
    return j;
  }
  function k(B, j) {
    const Y = [];
    for (let Z = 0; Z < j.length; Z++) {
      const K = j.codePointAt(Z);
      K > 65535 && Z++, Y.push(n.U.codeToGlyph(B, K));
    }
    const ee = B.GSUB;
    if (ee) {
      const { lookupList: Z, featureList: K } = ee;
      let fe;
      const se = /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/, he = [];
      K.forEach((me) => {
        if (se.test(me.tag))
          for (let Ee = 0; Ee < me.tab.length; Ee++) {
            if (he[me.tab[Ee]])
              continue;
            he[me.tab[Ee]] = !0;
            const be = Z[me.tab[Ee]], we = /^(isol|init|fina|medi)$/.test(me.tag);
            we && !fe && (fe = A(j));
            for (let de = 0; de < Y.length; de++)
              (!fe || !we || L[fe[de]] === me.tag) && n.U._applySubs(Y, de, be, Z);
          }
      });
    }
    return Y;
  }
  function F(...B) {
    for (let j = 0; j < B.length; j++)
      if (typeof B[j] == "number")
        return B[j];
  }
  function H(B) {
    const j = /* @__PURE__ */ Object.create(null), Y = B["OS/2"], ee = B.hhea, Z = B.head.unitsPerEm, K = F(Y && Y.sTypoAscender, ee && ee.ascender, Z), fe = {
      unitsPerEm: Z,
      ascender: K,
      descender: F(Y && Y.sTypoDescender, ee && ee.descender, 0),
      capHeight: F(Y && Y.sCapHeight, K),
      xHeight: F(Y && Y.sxHeight, K),
      lineGap: F(Y && Y.sTypoLineGap, ee && ee.lineGap),
      forEachGlyph(se, he, me, Ee) {
        let be = 0;
        const we = 1 / fe.unitsPerEm * he, de = k(B, se);
        let ye = 0, X = -1;
        return de.forEach((q, ue) => {
          if (q !== -1) {
            let Ce = j[q];
            if (!Ce) {
              const { cmds: Ae, crds: De } = n.U.glyphToPath(B, q);
              let Ne = "", Pe = 0;
              for (let oe = 0, rt = Ae.length; oe < rt; oe++) {
                const qe = t[Ae[oe]];
                Ne += Ae[oe];
                for (let $e = 1; $e <= qe; $e++)
                  Ne += ($e > 1 ? "," : "") + De[Pe++];
              }
              let Fe, it, Ot, st;
              if (De.length) {
                Fe = it = 1 / 0, Ot = st = -1 / 0;
                for (let oe = 0, rt = De.length; oe < rt; oe += 2) {
                  let qe = De[oe], $e = De[oe + 1];
                  qe < Fe && (Fe = qe), $e < it && (it = $e), qe > Ot && (Ot = qe), $e > st && (st = $e);
                }
              } else
                Fe = Ot = it = st = 0;
              Ce = j[q] = {
                index: q,
                advanceWidth: B.hmtx.aWidth[q],
                xMin: Fe,
                yMin: it,
                xMax: Ot,
                yMax: st,
                path: Ne,
                pathCommandCount: Ae.length
                // forEachPathCommand(callback) {
                //   let argsIndex = 0
                //   const argsArray = []
                //   for (let i = 0, len = cmds.length; i < len; i++) {
                //     const numArgs = cmdArgLengths[cmds[i]]
                //     argsArray.length = 1 + numArgs
                //     argsArray[0] = cmds[i]
                //     for (let j = 1; j <= numArgs; j++) {
                //       argsArray[j] = crds[argsIndex++]
                //     }
                //     callback.apply(null, argsArray)
                //   }
                // }
              };
            }
            X !== -1 && (be += n.U.getPairAdjustment(B, X, q) * we), Ee.call(null, Ce, be, ye), Ce.advanceWidth && (be += Ce.advanceWidth * we), me && (be += me * he), X = q;
          }
          ye += se.codePointAt(ye) > 65535 ? 2 : 1;
        }), be;
      }
    };
    return fe;
  }
  return function(j) {
    const Y = new Uint8Array(j, 0, 4), ee = n._bin.readASCII(Y, 0, 4);
    if (ee === "wOFF")
      j = e(j);
    else if (ee === "wOF2")
      throw new Error("woff2 fonts not supported");
    return H(n.parse(j)[0]);
  };
}
const QK = /* @__PURE__ */ lw({
  name: "Typr Font Parser",
  dependencies: [XK, qK, KK],
  init(n, e, t) {
    const r = n(), i = e();
    return t(r, i);
  }
}), O1 = {
  defaultFontURL: "https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff",
  //Roboto Regular
  sdfGlyphSize: 64,
  sdfMargin: 1 / 16,
  sdfExponent: 9,
  textureWidth: 2048
}, ZK = /* @__PURE__ */ new Pn();
function E1() {
  return (self.performance || Date).now();
}
const OF = /* @__PURE__ */ Object.create(null);
function WB(n, e) {
  n = tQ({}, n);
  const t = E1();
  if (n.font = nQ(n.font || O1.defaultFontURL), n.text = "" + n.text, n.sdfGlyphSize = n.sdfGlyphSize || O1.sdfGlyphSize, n.colorRanges != null) {
    let _ = {};
    for (let E in n.colorRanges)
      if (n.colorRanges.hasOwnProperty(E)) {
        let w = n.colorRanges[E];
        typeof w != "number" && (w = ZK.set(w).getHex()), _[E] = w;
      }
    n.colorRanges = _;
  }
  Object.freeze(n);
  const { textureWidth: r, sdfExponent: i } = O1, { sdfGlyphSize: o } = n, l = r / o * 4;
  let u = OF[o];
  if (!u) {
    const _ = document.createElement("canvas");
    _.width = r, _.height = o * 256 / l, u = OF[o] = {
      glyphCount: 0,
      sdfGlyphSize: o,
      sdfCanvas: _,
      sdfTexture: new Es(
        _,
        void 0,
        void 0,
        void 0,
        Ss,
        Ss
      ),
      contextLost: !1,
      glyphsByFont: /* @__PURE__ */ new Map()
    }, u.sdfTexture.generateMipmaps = !1, JK(u);
  }
  const { sdfTexture: h, sdfCanvas: p } = u;
  let y = u.glyphsByFont.get(n.font);
  y || u.glyphsByFont.set(n.font, y = /* @__PURE__ */ new Map()), iQ(n).then((_) => {
    const { glyphIds: E, glyphPositions: w, fontSize: R, unitsPerEm: U, timings: L } = _, A = [], k = new Float32Array(E.length * 4), F = R / U;
    let H = 0, B = 0;
    const j = E1();
    E.forEach((fe, se) => {
      let he = y.get(fe);
      if (!he) {
        const { path: we, pathBounds: de } = _.glyphData[fe], ye = Math.max(de[2] - de[0], de[3] - de[1]) / o * (O1.sdfMargin * o + 0.5), X = u.glyphCount++, q = [
          de[0] - ye,
          de[1] - ye,
          de[2] + ye,
          de[3] + ye
        ];
        y.set(fe, he = { path: we, atlasIndex: X, sdfViewBox: q }), A.push(he);
      }
      const { sdfViewBox: me } = he, Ee = w[B++], be = w[B++];
      k[H++] = Ee + me[0] * F, k[H++] = be + me[1] * F, k[H++] = Ee + me[2] * F, k[H++] = be + me[3] * F, E[se] = he.atlasIndex;
    }), L.quads = (L.quads || 0) + (E1() - j);
    const Y = E1();
    L.sdf = {};
    const ee = p.height, Z = Math.ceil(u.glyphCount / l), K = Math.pow(2, Math.ceil(Math.log2(Z * o)));
    K > ee && (console.info(`Increasing SDF texture size ${ee}->${K}`), YK(p, r, K), h.dispose()), Promise.all(A.map(
      (fe) => jB(fe, u, n.gpuAccelerateSDF).then(({ timing: se }) => {
        L.sdf[fe.atlasIndex] = se;
      })
    )).then(() => {
      A.length && !u.contextLost && ($B(u), h.needsUpdate = !0), L.sdfTotal = E1() - Y, L.total = E1() - t, e(Object.freeze({
        parameters: n,
        sdfTexture: h,
        sdfGlyphSize: o,
        sdfExponent: i,
        glyphBounds: k,
        glyphAtlasIndices: E,
        glyphColors: _.glyphColors,
        caretPositions: _.caretPositions,
        caretHeight: _.caretHeight,
        chunkedBounds: _.chunkedBounds,
        ascender: _.ascender,
        descender: _.descender,
        lineHeight: _.lineHeight,
        capHeight: _.capHeight,
        xHeight: _.xHeight,
        topBaseline: _.topBaseline,
        blockBounds: _.blockBounds,
        visibleBounds: _.visibleBounds,
        timings: _.timings
      }));
    });
  }), Promise.resolve().then(() => {
    u.contextLost || $K(p);
  });
}
function jB({ path: n, atlasIndex: e, sdfViewBox: t }, { sdfGlyphSize: r, sdfCanvas: i, contextLost: o }, l) {
  if (o)
    return Promise.resolve({ timing: -1 });
  const { textureWidth: u, sdfExponent: h } = O1, p = Math.max(t[2] - t[0], t[3] - t[1]), y = Math.floor(e / 4), _ = y % (u / r) * r, E = Math.floor(y / (u / r)) * r, w = e % 4;
  return BK(r, r, n, t, p, h, i, _, E, w, l);
}
function JK(n) {
  const e = n.sdfCanvas;
  e.addEventListener("webglcontextlost", (t) => {
    console.log("Context Lost", t), t.preventDefault(), n.contextLost = !0;
  }), e.addEventListener("webglcontextrestored", (t) => {
    console.log("Context Restored", t), n.contextLost = !1;
    const r = [];
    n.glyphsByFont.forEach((i) => {
      i.forEach((o) => {
        r.push(jB(o, n, !0));
      });
    }), Promise.all(r).then(() => {
      $B(n), n.sdfTexture.needsUpdate = !0;
    });
  });
}
function eQ({ font: n, characters: e, sdfGlyphSize: t }, r) {
  let i = Array.isArray(e) ? e.join(`
`) : "" + e;
  WB({ font: n, sdfGlyphSize: t, text: i }, r);
}
function tQ(n, e) {
  for (let t in e)
    e.hasOwnProperty(t) && (n[t] = e[t]);
  return n;
}
let jC;
function nQ(n) {
  return jC || (jC = typeof document > "u" ? {} : document.createElement("a")), jC.href = n, jC.href;
}
function $B(n) {
  if (typeof createImageBitmap != "function") {
    console.info("Safari<15: applying SDF canvas workaround");
    const { sdfCanvas: e, sdfTexture: t } = n, { width: r, height: i } = e, o = n.sdfCanvas.getContext("webgl");
    let l = t.image.data;
    (!l || l.length !== r * i * 4) && (l = new Uint8Array(r * i * 4), t.image = { width: r, height: i, data: l }, t.flipY = !1, t.isDataTexture = !0), o.readPixels(0, 0, r, i, o.RGBA, o.UNSIGNED_BYTE, l);
  }
}
const rQ = /* @__PURE__ */ lw({
  name: "Typesetter",
  dependencies: [
    O1,
    QK,
    IK,
    LK
  ],
  init(n, e, t, r) {
    const { defaultFontURL: i } = n;
    return t(e, r(), { defaultFontURL: i });
  }
}), iQ = /* @__PURE__ */ lw({
  name: "Typesetter",
  dependencies: [
    rQ
  ],
  init(n) {
    return function(e) {
      return new Promise((t) => {
        n.typeset(e, t);
      });
    };
  },
  getTransferables(n) {
    const e = [
      n.glyphPositions.buffer,
      n.glyphIds.buffer
    ];
    return n.caretPositions && e.push(n.caretPositions.buffer), n.glyphColors && e.push(n.glyphColors.buffer), e;
  }
}), PF = {};
function aQ(n) {
  let e = PF[n];
  if (!e) {
    const t = new x0(1, 1, n, n), r = t.clone(), i = t.attributes, o = r.attributes, l = new Ei(), u = i.uv.count;
    for (let h = 0; h < u; h++)
      o.position.array[h * 3] *= -1, o.normal.array[h * 3 + 2] *= -1;
    ["position", "normal", "uv"].forEach((h) => {
      l.setAttribute(
        h,
        new nr(
          [...i[h].array, ...o[h].array],
          i[h].itemSize
        )
      );
    }), l.setIndex([...t.index.array, ...r.index.array.map((h) => h + u)]), l.translate(0.5, 0.5, 0), e = PF[n] = l;
  }
  return e;
}
const oQ = "aTroikaGlyphBounds", UF = "aTroikaGlyphIndex", sQ = "aTroikaGlyphColor";
class lQ extends BP {
  constructor() {
    super(), this.detail = 1, this.curveRadius = 0, this.groups = [
      { start: 0, count: 1 / 0, materialIndex: 0 },
      { start: 0, count: 1 / 0, materialIndex: 1 }
    ], this.boundingSphere = new pp(), this.boundingBox = new dm();
  }
  computeBoundingSphere() {
  }
  computeBoundingBox() {
  }
  // Since our base geometry contains triangles for both front and back sides, we can emulate
  // the "side" by restricting the draw range.
  setSide(e) {
    const t = this.getIndex().count;
    this.setDrawRange(e === Wc ? t / 2 : 0, e === cp ? t : t / 2);
  }
  set detail(e) {
    if (e !== this._detail) {
      this._detail = e, (typeof e != "number" || e < 1) && (e = 1);
      let t = aQ(e);
      ["position", "normal", "uv"].forEach((r) => {
        this.attributes[r] = t.attributes[r].clone();
      }), this.setIndex(t.getIndex().clone());
    }
  }
  get detail() {
    return this._detail;
  }
  set curveRadius(e) {
    e !== this._curveRadius && (this._curveRadius = e, this._updateBounds());
  }
  get curveRadius() {
    return this._curveRadius;
  }
  /**
   * Update the geometry for a new set of glyphs.
   * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs
   *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1
   * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within
   *        the SDF atlas texture.
   * @param {Array} blockBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs
   * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N
   *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be
   *        used with `applyClipRect` to choose an optimized `instanceCount`.
   * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.
   */
  updateGlyphs(e, t, r, i, o) {
    dL(this, oQ, e, 4), dL(this, UF, t, 1), dL(this, sQ, o, 3), this._blockBounds = r, this._chunkedBounds = i, this.instanceCount = t.length, this._updateBounds();
  }
  _updateBounds() {
    const e = this._blockBounds;
    if (e) {
      const { curveRadius: t, boundingBox: r } = this;
      if (t) {
        const { PI: i, floor: o, min: l, max: u, sin: h, cos: p } = Math, y = i / 2, _ = i * 2, E = Math.abs(t), w = e[0] / E, R = e[2] / E, U = o((w + y) / _) !== o((R + y) / _) ? -E : l(h(w) * E, h(R) * E), L = o((w - y) / _) !== o((R - y) / _) ? E : u(h(w) * E, h(R) * E), A = o((w + i) / _) !== o((R + i) / _) ? E * 2 : u(E - p(w) * E, E - p(R) * E);
        r.min.set(U, e[1], t < 0 ? -A : 0), r.max.set(L, e[3], t < 0 ? 0 : A);
      } else
        r.min.set(e[0], e[1], 0), r.max.set(e[2], e[3], 0);
      r.getBoundingSphere(this.boundingSphere);
    }
  }
  /**
   * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest
   * `instanceCount` that will show all glyphs within the clipped view. This is an optimization
   * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would
   * be clipped anyway.
   *
   * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting
   * offset, this optimization becomes less effective as the clipRect moves closer to the end of the
   * text block. We could fix that by switching from instancing to a full geometry with a drawRange,
   * but at the expense of much larger attribute buffers (see classdoc above.)
   *
   * @param {Vector4} clipRect
   */
  applyClipRect(e) {
    let t = this.getAttribute(UF).count, r = this._chunkedBounds;
    if (r)
      for (let i = r.length; i--; ) {
        t = r[i].end;
        let o = r[i].rect;
        if (o[1] < e.w && o[3] > e.y && o[0] < e.z && o[2] > e.x)
          break;
      }
    this.instanceCount = t;
  }
}
function dL(n, e, t, r) {
  const i = n.getAttribute(e);
  t ? i && i.array.length === t.length ? (i.array.set(t), i.needsUpdate = !0) : (n.setAttribute(e, new f_(t, r)), delete n._maxInstanceCount, n.dispose()) : i && n.deleteAttribute(e);
}
const uQ = `
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaDistanceOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`, cQ = `
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`, fQ = `
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaDistanceOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaOutlineOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`, dQ = `
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;
function hQ(n) {
  const e = LO(n, {
    chained: !0,
    extensions: {
      derivatives: !0
    },
    uniforms: {
      uTroikaSDFTexture: { value: null },
      uTroikaSDFTextureSize: { value: new $t() },
      uTroikaSDFGlyphSize: { value: 0 },
      uTroikaSDFExponent: { value: 0 },
      uTroikaTotalBounds: { value: new Ma(0, 0, 0, 0) },
      uTroikaClipRect: { value: new Ma(0, 0, 0, 0) },
      uTroikaDistanceOffset: { value: 0 },
      uTroikaOutlineOpacity: { value: 0 },
      uTroikaFillOpacity: { value: 1 },
      uTroikaPositionOffset: { value: new $t() },
      uTroikaCurveRadius: { value: 0 },
      uTroikaBlurRadius: { value: 0 },
      uTroikaStrokeWidth: { value: 0 },
      uTroikaStrokeColor: { value: new Pn() },
      uTroikaStrokeOpacity: { value: 1 },
      uTroikaOrient: { value: new _i() },
      uTroikaUseGlyphColors: { value: !0 },
      uTroikaSDFDebug: { value: !1 }
    },
    vertexDefs: uQ,
    vertexTransform: cQ,
    fragmentDefs: fQ,
    fragmentColorTransform: dQ,
    customRewriter({ vertexShader: t, fragmentShader: r }) {
      let i = /\buniform\s+vec3\s+diffuse\b/;
      return i.test(r) && (r = r.replace(i, "varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g, "vTroikaGlyphColor"), i.test(t) || (t = t.replace(
        VB,
        `uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`
      ))), { vertexShader: t, fragmentShader: r };
    }
  });
  return e.transparent = !0, Object.defineProperties(e, {
    isTroikaTextMaterial: { value: !0 },
    // WebGLShadowMap reverses the side of the shadow material by default, which fails
    // for planes, so here we force the `shadowSide` to always match the main side.
    shadowSide: {
      get() {
        return this.side;
      },
      set() {
      }
    }
  }), e;
}
const KP = /* @__PURE__ */ new $g({
  color: 16777215,
  side: cp,
  transparent: !0
}), NF = 8421504, kF = /* @__PURE__ */ new ri(), $C = /* @__PURE__ */ new Re(), hL = /* @__PURE__ */ new Re(), oT = [], pQ = /* @__PURE__ */ new Re(), pL = "+x+y";
function FF(n) {
  return Array.isArray(n) ? n[0] : n;
}
let YB = () => {
  const n = new Nl(
    new x0(1, 1),
    KP
  );
  return YB = () => n, n;
}, XB = () => {
  const n = new Nl(
    new x0(1, 1, 32, 1),
    KP
  );
  return XB = () => n, n;
};
const mQ = { type: "syncstart" }, vQ = { type: "synccomplete" }, qB = [
  "font",
  "fontSize",
  "letterSpacing",
  "lineHeight",
  "maxWidth",
  "overflowWrap",
  "text",
  "direction",
  "textAlign",
  "textIndent",
  "whiteSpace",
  "anchorX",
  "anchorY",
  "colorRanges",
  "sdfGlyphSize"
], gQ = qB.concat(
  "material",
  "color",
  "depthOffset",
  "clipRect",
  "curveRadius",
  "orientation",
  "glyphGeometryDetail"
);
let KB = class extends Nl {
  constructor() {
    const e = new lQ();
    super(e, null), this.text = "", this.anchorX = 0, this.anchorY = 0, this.curveRadius = 0, this.direction = "auto", this.font = null, this.fontSize = 0.1, this.letterSpacing = 0, this.lineHeight = "normal", this.maxWidth = 1 / 0, this.overflowWrap = "normal", this.textAlign = "left", this.textIndent = 0, this.whiteSpace = "normal", this.material = null, this.color = null, this.colorRanges = null, this.outlineWidth = 0, this.outlineColor = 0, this.outlineOpacity = 1, this.outlineBlur = 0, this.outlineOffsetX = 0, this.outlineOffsetY = 0, this.strokeWidth = 0, this.strokeColor = NF, this.strokeOpacity = 1, this.fillOpacity = 1, this.depthOffset = 0, this.clipRect = null, this.orientation = pL, this.glyphGeometryDetail = 1, this.sdfGlyphSize = null, this.gpuAccelerateSDF = !0, this.debugSDF = !1;
  }
  /**
   * Updates the text rendering according to the current text-related configuration properties.
   * This is an async process, so you can pass in a callback function to be executed when it
   * finishes.
   * @param {function} [callback]
   */
  sync(e) {
    this._needsSync && (this._needsSync = !1, this._isSyncing ? (this._queuedSyncs || (this._queuedSyncs = [])).push(e) : (this._isSyncing = !0, this.dispatchEvent(mQ), WB({
      text: this.text,
      font: this.font,
      fontSize: this.fontSize || 0.1,
      letterSpacing: this.letterSpacing || 0,
      lineHeight: this.lineHeight || "normal",
      maxWidth: this.maxWidth,
      direction: this.direction || "auto",
      textAlign: this.textAlign,
      textIndent: this.textIndent,
      whiteSpace: this.whiteSpace,
      overflowWrap: this.overflowWrap,
      anchorX: this.anchorX,
      anchorY: this.anchorY,
      colorRanges: this.colorRanges,
      includeCaretPositions: !0,
      //TODO parameterize
      sdfGlyphSize: this.sdfGlyphSize,
      gpuAccelerateSDF: this.gpuAccelerateSDF
    }, (t) => {
      this._isSyncing = !1, this._textRenderInfo = t, this.geometry.updateGlyphs(
        t.glyphBounds,
        t.glyphAtlasIndices,
        t.blockBounds,
        t.chunkedBounds,
        t.glyphColors
      );
      const r = this._queuedSyncs;
      r && (this._queuedSyncs = null, this._needsSync = !0, this.sync(() => {
        r.forEach((i) => i && i());
      })), this.dispatchEvent(vQ), e && e();
    })));
  }
  /**
   * Initiate a sync if needed - note it won't complete until next frame at the
   * earliest so if possible it's a good idea to call sync() manually as soon as
   * all the properties have been set.
   * @override
   */
  onBeforeRender(e, t, r, i, o, l) {
    this.sync(), o.isTroikaTextMaterial && this._prepareForRender(o), o._hadOwnSide = o.hasOwnProperty("side"), this.geometry.setSide(o._actualSide = o.side), o.side = xv;
  }
  onAfterRender(e, t, r, i, o, l) {
    o._hadOwnSide ? o.side = o._actualSide : delete o.side;
  }
  /**
   * Shortcut to dispose the geometry specific to this instance.
   * Note: we don't also dispose the derived material here because if anything else is
   * sharing the same base material it will result in a pause next frame as the program
   * is recompiled. Instead users can dispose the base material manually, like normal,
   * and we'll also dispose the derived material at that time.
   */
  dispose() {
    this.geometry.dispose();
  }
  /**
   * @property {TroikaTextRenderInfo|null} textRenderInfo
   * @readonly
   * The current processed rendering data for this TextMesh, returned by the TextBuilder after
   * a `sync()` call. This will be `null` initially, and may be stale for a short period until
   * the asynchrous `sync()` process completes.
   */
  get textRenderInfo() {
    return this._textRenderInfo || null;
  }
  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping
  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.
  get material() {
    let e = this._derivedMaterial;
    const t = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = KP.clone());
    if ((!e || e.baseMaterial !== t) && (e = this._derivedMaterial = hQ(t), t.addEventListener("dispose", function r() {
      t.removeEventListener("dispose", r), e.dispose();
    })), this.outlineWidth || this.outlineBlur || this.outlineOffsetX || this.outlineOffsetY) {
      let r = e._outlineMtl;
      return r || (r = e._outlineMtl = Object.create(e, {
        id: { value: e.id + 0.1 }
      }), r.isTextOutlineMaterial = !0, r.depthWrite = !1, r.map = null, e.addEventListener("dispose", function i() {
        e.removeEventListener("dispose", i), r.dispose();
      })), [
        r,
        e
      ];
    } else
      return e;
  }
  set material(e) {
    e && e.isTroikaTextMaterial ? (this._derivedMaterial = e, this._baseMaterial = e.baseMaterial) : this._baseMaterial = e;
  }
  get glyphGeometryDetail() {
    return this.geometry.detail;
  }
  set glyphGeometryDetail(e) {
    this.geometry.detail = e;
  }
  get curveRadius() {
    return this.geometry.curveRadius;
  }
  set curveRadius(e) {
    this.geometry.curveRadius = e;
  }
  // Create and update material for shadows upon request:
  get customDepthMaterial() {
    return FF(this.material).getDepthMaterial();
  }
  get customDistanceMaterial() {
    return FF(this.material).getDistanceMaterial();
  }
  _prepareForRender(e) {
    const t = e.isTextOutlineMaterial, r = e.uniforms, i = this.textRenderInfo;
    if (i) {
      const { sdfTexture: u, blockBounds: h } = i;
      r.uTroikaSDFTexture.value = u, r.uTroikaSDFTextureSize.value.set(u.image.width, u.image.height), r.uTroikaSDFGlyphSize.value = i.sdfGlyphSize, r.uTroikaSDFExponent.value = i.sdfExponent, r.uTroikaTotalBounds.value.fromArray(h), r.uTroikaUseGlyphColors.value = !t && !!i.glyphColors;
      let p = 0, y = 0, _ = 0, E, w, R, U = 0, L = 0;
      if (t) {
        let { outlineWidth: k, outlineOffsetX: F, outlineOffsetY: H, outlineBlur: B, outlineOpacity: j } = this;
        p = this._parsePercent(k) || 0, y = Math.max(0, this._parsePercent(B) || 0), E = j, U = this._parsePercent(F) || 0, L = this._parsePercent(H) || 0;
      } else
        _ = Math.max(0, this._parsePercent(this.strokeWidth) || 0), _ && (R = this.strokeColor, r.uTroikaStrokeColor.value.set(R ?? NF), w = this.strokeOpacity, w == null && (w = 1)), E = this.fillOpacity;
      r.uTroikaDistanceOffset.value = p, r.uTroikaPositionOffset.value.set(U, L), r.uTroikaBlurRadius.value = y, r.uTroikaStrokeWidth.value = _, r.uTroikaStrokeOpacity.value = w, r.uTroikaFillOpacity.value = E ?? 1, r.uTroikaCurveRadius.value = this.curveRadius || 0;
      let A = this.clipRect;
      if (A && Array.isArray(A) && A.length === 4)
        r.uTroikaClipRect.value.fromArray(A);
      else {
        const k = (this.fontSize || 0.1) * 100;
        r.uTroikaClipRect.value.set(
          h[0] - k,
          h[1] - k,
          h[2] + k,
          h[3] + k
        );
      }
      this.geometry.applyClipRect(r.uTroikaClipRect.value);
    }
    r.uTroikaSDFDebug.value = !!this.debugSDF, e.polygonOffset = !!this.depthOffset, e.polygonOffsetFactor = e.polygonOffsetUnits = this.depthOffset || 0;
    const o = t ? this.outlineColor || 0 : this.color;
    if (o == null)
      delete e.color;
    else {
      const u = e.hasOwnProperty("color") ? e.color : e.color = new Pn();
      (o !== u._input || typeof o == "object") && u.set(u._input = o);
    }
    let l = this.orientation || pL;
    if (l !== e._orientation) {
      let u = r.uTroikaOrient.value;
      l = l.replace(/[^-+xyz]/g, "");
      let h = l !== pL && l.match(/^([-+])([xyz])([-+])([xyz])$/);
      if (h) {
        let [, p, y, _, E] = h;
        $C.set(0, 0, 0)[y] = p === "-" ? 1 : -1, hL.set(0, 0, 0)[E] = _ === "-" ? -1 : 1, kF.lookAt(pQ, $C.cross(hL), hL), u.setFromMatrix4(kF);
      } else
        u.identity();
      e._orientation = l;
    }
  }
  _parsePercent(e) {
    if (typeof e == "string") {
      let t = e.match(/^(-?[\d.]+)%$/), r = t ? parseFloat(t[1]) : NaN;
      e = (isNaN(r) ? 0 : r / 100) * this.fontSize;
    }
    return e;
  }
  /**
   * Translate a point in local space to an x/y in the text plane.
   */
  localPositionToTextCoords(e, t = new $t()) {
    t.copy(e);
    const r = this.curveRadius;
    return r && (t.x = Math.atan2(e.x, Math.abs(r) - Math.abs(e.z)) * Math.abs(r)), t;
  }
  /**
   * Translate a point in world space to an x/y in the text plane.
   */
  worldPositionToTextCoords(e, t = new $t()) {
    return $C.copy(e), this.localPositionToTextCoords(this.worldToLocal($C), t);
  }
  /**
   * @override Custom raycasting to test against the whole text block's max rectangular bounds
   * TODO is there any reason to make this more granular, like within individual line or glyph rects?
   */
  raycast(e, t) {
    const { textRenderInfo: r, curveRadius: i } = this;
    if (r) {
      const o = r.blockBounds, l = i ? XB() : YB(), u = l.geometry, { position: h, uv: p } = u.attributes;
      for (let y = 0; y < p.count; y++) {
        let _ = o[0] + p.getX(y) * (o[2] - o[0]);
        const E = o[1] + p.getY(y) * (o[3] - o[1]);
        let w = 0;
        i && (w = i - Math.cos(_ / i) * i, _ = Math.sin(_ / i) * i), h.setXYZ(y, _, E, w);
      }
      u.boundingSphere = this.geometry.boundingSphere, u.boundingBox = this.geometry.boundingBox, l.matrixWorld = this.matrixWorld, l.material.side = this.material.side, oT.length = 0, l.raycast(e, oT);
      for (let y = 0; y < oT.length; y++)
        oT[y].object = this, t.push(oT[y]);
    }
  }
  copy(e) {
    const t = this.geometry;
    return super.copy(e), this.geometry = t, gQ.forEach((r) => {
      this[r] = e[r];
    }), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
};
qB.forEach((n) => {
  const e = "_private_" + n;
  Object.defineProperty(KB.prototype, n, {
    get() {
      return this[e];
    },
    set(t) {
      t !== this[e] && (this[e] = t, this._needsSync = !0);
    }
  });
});
const mL = /* @__PURE__ */ le.forwardRef(({
  sdfGlyphSize: n = 64,
  anchorX: e = "center",
  anchorY: t = "middle",
  font: r,
  fontSize: i = 1,
  children: o,
  characters: l,
  onSync: u,
  ...h
}, p) => {
  const y = sm(({
    invalidate: R
  }) => R), [_] = le.useState(() => new KB()), [E, w] = le.useMemo(() => {
    const R = [];
    let U = "";
    return le.Children.forEach(o, (L) => {
      typeof L == "string" || typeof L == "number" ? U += L : R.push(L);
    }), [R, U];
  }, [o]);
  return FX(() => new Promise((R) => eQ({
    font: r,
    characters: l
  }, R)), ["troika-text", r, l]), le.useLayoutEffect(() => void _.sync(() => {
    y(), u && u(_);
  })), le.useEffect(() => () => _.dispose(), [_]), /* @__PURE__ */ le.createElement("primitive", bs({
    object: _,
    ref: p,
    font: r,
    text: w,
    anchorX: e,
    anchorY: t,
    fontSize: i,
    sdfGlyphSize: n
  }, h), E);
}), yQ = /* @__PURE__ */ le.forwardRef(({
  makeDefault: n,
  camera: e,
  regress: t,
  domElement: r,
  enableDamping: i = !0,
  keyEvents: o = !1,
  onChange: l,
  onStart: u,
  onEnd: h,
  ...p
}, y) => {
  const _ = sm((j) => j.invalidate), E = sm((j) => j.camera), w = sm((j) => j.gl), R = sm((j) => j.events), U = sm((j) => j.setEvents), L = sm((j) => j.set), A = sm((j) => j.get), k = sm((j) => j.performance), F = e || E, H = r || R.connected || w.domElement, B = le.useMemo(() => new TK(F), [F]);
  return YP(() => {
    B.enabled && B.update();
  }, -1), le.useEffect(() => (o && B.connect(o === !0 ? H : o), B.connect(H), () => void B.dispose()), [o, H, t, B, _]), le.useEffect(() => {
    const j = (Z) => {
      _(), t && k.regress(), l && l(Z);
    }, Y = (Z) => {
      u && u(Z);
    }, ee = (Z) => {
      h && h(Z);
    };
    return B.addEventListener("change", j), B.addEventListener("start", Y), B.addEventListener("end", ee), () => {
      B.removeEventListener("start", Y), B.removeEventListener("end", ee), B.removeEventListener("change", j);
    };
  }, [l, u, h, B, _, U]), le.useEffect(() => {
    if (n) {
      const j = A().controls;
      return L({
        controls: B
      }), () => L({
        controls: j
      });
    }
  }, [n, B]), /* @__PURE__ */ le.createElement("primitive", bs({
    ref: y,
    object: B,
    enableDamping: i
  }, p));
});
var PO = { exports: {} }, YC = { exports: {} }, Na = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var zF;
function SQ() {
  if (zF)
    return Na;
  zF = 1;
  var n = typeof Symbol == "function" && Symbol.for, e = n ? Symbol.for("react.element") : 60103, t = n ? Symbol.for("react.portal") : 60106, r = n ? Symbol.for("react.fragment") : 60107, i = n ? Symbol.for("react.strict_mode") : 60108, o = n ? Symbol.for("react.profiler") : 60114, l = n ? Symbol.for("react.provider") : 60109, u = n ? Symbol.for("react.context") : 60110, h = n ? Symbol.for("react.async_mode") : 60111, p = n ? Symbol.for("react.concurrent_mode") : 60111, y = n ? Symbol.for("react.forward_ref") : 60112, _ = n ? Symbol.for("react.suspense") : 60113, E = n ? Symbol.for("react.suspense_list") : 60120, w = n ? Symbol.for("react.memo") : 60115, R = n ? Symbol.for("react.lazy") : 60116, U = n ? Symbol.for("react.block") : 60121, L = n ? Symbol.for("react.fundamental") : 60117, A = n ? Symbol.for("react.responder") : 60118, k = n ? Symbol.for("react.scope") : 60119;
  function F(B) {
    if (typeof B == "object" && B !== null) {
      var j = B.$$typeof;
      switch (j) {
        case e:
          switch (B = B.type, B) {
            case h:
            case p:
            case r:
            case o:
            case i:
            case _:
              return B;
            default:
              switch (B = B && B.$$typeof, B) {
                case u:
                case y:
                case R:
                case w:
                case l:
                  return B;
                default:
                  return j;
              }
          }
        case t:
          return j;
      }
    }
  }
  function H(B) {
    return F(B) === p;
  }
  return Na.AsyncMode = h, Na.ConcurrentMode = p, Na.ContextConsumer = u, Na.ContextProvider = l, Na.Element = e, Na.ForwardRef = y, Na.Fragment = r, Na.Lazy = R, Na.Memo = w, Na.Portal = t, Na.Profiler = o, Na.StrictMode = i, Na.Suspense = _, Na.isAsyncMode = function(B) {
    return H(B) || F(B) === h;
  }, Na.isConcurrentMode = H, Na.isContextConsumer = function(B) {
    return F(B) === u;
  }, Na.isContextProvider = function(B) {
    return F(B) === l;
  }, Na.isElement = function(B) {
    return typeof B == "object" && B !== null && B.$$typeof === e;
  }, Na.isForwardRef = function(B) {
    return F(B) === y;
  }, Na.isFragment = function(B) {
    return F(B) === r;
  }, Na.isLazy = function(B) {
    return F(B) === R;
  }, Na.isMemo = function(B) {
    return F(B) === w;
  }, Na.isPortal = function(B) {
    return F(B) === t;
  }, Na.isProfiler = function(B) {
    return F(B) === o;
  }, Na.isStrictMode = function(B) {
    return F(B) === i;
  }, Na.isSuspense = function(B) {
    return F(B) === _;
  }, Na.isValidElementType = function(B) {
    return typeof B == "string" || typeof B == "function" || B === r || B === p || B === o || B === i || B === _ || B === E || typeof B == "object" && B !== null && (B.$$typeof === R || B.$$typeof === w || B.$$typeof === l || B.$$typeof === u || B.$$typeof === y || B.$$typeof === L || B.$$typeof === A || B.$$typeof === k || B.$$typeof === U);
  }, Na.typeOf = F, Na;
}
var ka = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var IF;
function _Q() {
  return IF || (IF = 1, process.env.NODE_ENV !== "production" && function() {
    var n = typeof Symbol == "function" && Symbol.for, e = n ? Symbol.for("react.element") : 60103, t = n ? Symbol.for("react.portal") : 60106, r = n ? Symbol.for("react.fragment") : 60107, i = n ? Symbol.for("react.strict_mode") : 60108, o = n ? Symbol.for("react.profiler") : 60114, l = n ? Symbol.for("react.provider") : 60109, u = n ? Symbol.for("react.context") : 60110, h = n ? Symbol.for("react.async_mode") : 60111, p = n ? Symbol.for("react.concurrent_mode") : 60111, y = n ? Symbol.for("react.forward_ref") : 60112, _ = n ? Symbol.for("react.suspense") : 60113, E = n ? Symbol.for("react.suspense_list") : 60120, w = n ? Symbol.for("react.memo") : 60115, R = n ? Symbol.for("react.lazy") : 60116, U = n ? Symbol.for("react.block") : 60121, L = n ? Symbol.for("react.fundamental") : 60117, A = n ? Symbol.for("react.responder") : 60118, k = n ? Symbol.for("react.scope") : 60119;
    function F(oe) {
      return typeof oe == "string" || typeof oe == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      oe === r || oe === p || oe === o || oe === i || oe === _ || oe === E || typeof oe == "object" && oe !== null && (oe.$$typeof === R || oe.$$typeof === w || oe.$$typeof === l || oe.$$typeof === u || oe.$$typeof === y || oe.$$typeof === L || oe.$$typeof === A || oe.$$typeof === k || oe.$$typeof === U);
    }
    function H(oe) {
      if (typeof oe == "object" && oe !== null) {
        var rt = oe.$$typeof;
        switch (rt) {
          case e:
            var qe = oe.type;
            switch (qe) {
              case h:
              case p:
              case r:
              case o:
              case i:
              case _:
                return qe;
              default:
                var $e = qe && qe.$$typeof;
                switch ($e) {
                  case u:
                  case y:
                  case R:
                  case w:
                  case l:
                    return $e;
                  default:
                    return rt;
                }
            }
          case t:
            return rt;
        }
      }
    }
    var B = h, j = p, Y = u, ee = l, Z = e, K = y, fe = r, se = R, he = w, me = t, Ee = o, be = i, we = _, de = !1;
    function ye(oe) {
      return de || (de = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), X(oe) || H(oe) === h;
    }
    function X(oe) {
      return H(oe) === p;
    }
    function q(oe) {
      return H(oe) === u;
    }
    function ue(oe) {
      return H(oe) === l;
    }
    function Ce(oe) {
      return typeof oe == "object" && oe !== null && oe.$$typeof === e;
    }
    function Ae(oe) {
      return H(oe) === y;
    }
    function De(oe) {
      return H(oe) === r;
    }
    function Ne(oe) {
      return H(oe) === R;
    }
    function Pe(oe) {
      return H(oe) === w;
    }
    function Fe(oe) {
      return H(oe) === t;
    }
    function it(oe) {
      return H(oe) === o;
    }
    function Ot(oe) {
      return H(oe) === i;
    }
    function st(oe) {
      return H(oe) === _;
    }
    ka.AsyncMode = B, ka.ConcurrentMode = j, ka.ContextConsumer = Y, ka.ContextProvider = ee, ka.Element = Z, ka.ForwardRef = K, ka.Fragment = fe, ka.Lazy = se, ka.Memo = he, ka.Portal = me, ka.Profiler = Ee, ka.StrictMode = be, ka.Suspense = we, ka.isAsyncMode = ye, ka.isConcurrentMode = X, ka.isContextConsumer = q, ka.isContextProvider = ue, ka.isElement = Ce, ka.isForwardRef = Ae, ka.isFragment = De, ka.isLazy = Ne, ka.isMemo = Pe, ka.isPortal = Fe, ka.isProfiler = it, ka.isStrictMode = Ot, ka.isSuspense = st, ka.isValidElementType = F, ka.typeOf = H;
  }()), ka;
}
var BF;
function QB() {
  return BF || (BF = 1, process.env.NODE_ENV === "production" ? YC.exports = SQ() : YC.exports = _Q()), YC.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var vL, HF;
function xQ() {
  if (HF)
    return vL;
  HF = 1;
  var n = Object.getOwnPropertySymbols, e = Object.prototype.hasOwnProperty, t = Object.prototype.propertyIsEnumerable;
  function r(o) {
    if (o == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(o);
  }
  function i() {
    try {
      if (!Object.assign)
        return !1;
      var o = new String("abc");
      if (o[5] = "de", Object.getOwnPropertyNames(o)[0] === "5")
        return !1;
      for (var l = {}, u = 0; u < 10; u++)
        l["_" + String.fromCharCode(u)] = u;
      var h = Object.getOwnPropertyNames(l).map(function(y) {
        return l[y];
      });
      if (h.join("") !== "0123456789")
        return !1;
      var p = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(y) {
        p[y] = y;
      }), Object.keys(Object.assign({}, p)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return vL = i() ? Object.assign : function(o, l) {
    for (var u, h = r(o), p, y = 1; y < arguments.length; y++) {
      u = Object(arguments[y]);
      for (var _ in u)
        e.call(u, _) && (h[_] = u[_]);
      if (n) {
        p = n(u);
        for (var E = 0; E < p.length; E++)
          t.call(u, p[E]) && (h[p[E]] = u[p[E]]);
      }
    }
    return h;
  }, vL;
}
var gL, VF;
function QP() {
  if (VF)
    return gL;
  VF = 1;
  var n = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return gL = n, gL;
}
var yL, GF;
function ZB() {
  return GF || (GF = 1, yL = Function.call.bind(Object.prototype.hasOwnProperty)), yL;
}
var SL, WF;
function EQ() {
  if (WF)
    return SL;
  WF = 1;
  var n = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var e = QP(), t = {}, r = ZB();
    n = function(o) {
      var l = "Warning: " + o;
      typeof console < "u" && console.error(l);
      try {
        throw new Error(l);
      } catch {
      }
    };
  }
  function i(o, l, u, h, p) {
    if (process.env.NODE_ENV !== "production") {
      for (var y in o)
        if (r(o, y)) {
          var _;
          try {
            if (typeof o[y] != "function") {
              var E = Error(
                (h || "React class") + ": " + u + " type `" + y + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof o[y] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw E.name = "Invariant Violation", E;
            }
            _ = o[y](l, y, h, u, null, e);
          } catch (R) {
            _ = R;
          }
          if (_ && !(_ instanceof Error) && n(
            (h || "React class") + ": type specification of " + u + " `" + y + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof _ + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), _ instanceof Error && !(_.message in t)) {
            t[_.message] = !0;
            var w = p ? p() : "";
            n(
              "Failed " + u + " type: " + _.message + (w ?? "")
            );
          }
        }
    }
  }
  return i.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (t = {});
  }, SL = i, SL;
}
var _L, jF;
function bQ() {
  if (jF)
    return _L;
  jF = 1;
  var n = QB(), e = xQ(), t = QP(), r = ZB(), i = EQ(), o = function() {
  };
  process.env.NODE_ENV !== "production" && (o = function(u) {
    var h = "Warning: " + u;
    typeof console < "u" && console.error(h);
    try {
      throw new Error(h);
    } catch {
    }
  });
  function l() {
    return null;
  }
  return _L = function(u, h) {
    var p = typeof Symbol == "function" && Symbol.iterator, y = "@@iterator";
    function _(X) {
      var q = X && (p && X[p] || X[y]);
      if (typeof q == "function")
        return q;
    }
    var E = "<<anonymous>>", w = {
      array: A("array"),
      bigint: A("bigint"),
      bool: A("boolean"),
      func: A("function"),
      number: A("number"),
      object: A("object"),
      string: A("string"),
      symbol: A("symbol"),
      any: k(),
      arrayOf: F,
      element: H(),
      elementType: B(),
      instanceOf: j,
      node: K(),
      objectOf: ee,
      oneOf: Y,
      oneOfType: Z,
      shape: se,
      exact: he
    };
    function R(X, q) {
      return X === q ? X !== 0 || 1 / X === 1 / q : X !== X && q !== q;
    }
    function U(X, q) {
      this.message = X, this.data = q && typeof q == "object" ? q : {}, this.stack = "";
    }
    U.prototype = Error.prototype;
    function L(X) {
      if (process.env.NODE_ENV !== "production")
        var q = {}, ue = 0;
      function Ce(De, Ne, Pe, Fe, it, Ot, st) {
        if (Fe = Fe || E, Ot = Ot || Pe, st !== t) {
          if (h) {
            var oe = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw oe.name = "Invariant Violation", oe;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var rt = Fe + ":" + Pe;
            !q[rt] && // Avoid spamming the console because they are often not actionable except for lib authors
            ue < 3 && (o(
              "You are manually calling a React.PropTypes validation function for the `" + Ot + "` prop on `" + Fe + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), q[rt] = !0, ue++);
          }
        }
        return Ne[Pe] == null ? De ? Ne[Pe] === null ? new U("The " + it + " `" + Ot + "` is marked as required " + ("in `" + Fe + "`, but its value is `null`.")) : new U("The " + it + " `" + Ot + "` is marked as required in " + ("`" + Fe + "`, but its value is `undefined`.")) : null : X(Ne, Pe, Fe, it, Ot);
      }
      var Ae = Ce.bind(null, !1);
      return Ae.isRequired = Ce.bind(null, !0), Ae;
    }
    function A(X) {
      function q(ue, Ce, Ae, De, Ne, Pe) {
        var Fe = ue[Ce], it = be(Fe);
        if (it !== X) {
          var Ot = we(Fe);
          return new U(
            "Invalid " + De + " `" + Ne + "` of type " + ("`" + Ot + "` supplied to `" + Ae + "`, expected ") + ("`" + X + "`."),
            { expectedType: X }
          );
        }
        return null;
      }
      return L(q);
    }
    function k() {
      return L(l);
    }
    function F(X) {
      function q(ue, Ce, Ae, De, Ne) {
        if (typeof X != "function")
          return new U("Property `" + Ne + "` of component `" + Ae + "` has invalid PropType notation inside arrayOf.");
        var Pe = ue[Ce];
        if (!Array.isArray(Pe)) {
          var Fe = be(Pe);
          return new U("Invalid " + De + " `" + Ne + "` of type " + ("`" + Fe + "` supplied to `" + Ae + "`, expected an array."));
        }
        for (var it = 0; it < Pe.length; it++) {
          var Ot = X(Pe, it, Ae, De, Ne + "[" + it + "]", t);
          if (Ot instanceof Error)
            return Ot;
        }
        return null;
      }
      return L(q);
    }
    function H() {
      function X(q, ue, Ce, Ae, De) {
        var Ne = q[ue];
        if (!u(Ne)) {
          var Pe = be(Ne);
          return new U("Invalid " + Ae + " `" + De + "` of type " + ("`" + Pe + "` supplied to `" + Ce + "`, expected a single ReactElement."));
        }
        return null;
      }
      return L(X);
    }
    function B() {
      function X(q, ue, Ce, Ae, De) {
        var Ne = q[ue];
        if (!n.isValidElementType(Ne)) {
          var Pe = be(Ne);
          return new U("Invalid " + Ae + " `" + De + "` of type " + ("`" + Pe + "` supplied to `" + Ce + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return L(X);
    }
    function j(X) {
      function q(ue, Ce, Ae, De, Ne) {
        if (!(ue[Ce] instanceof X)) {
          var Pe = X.name || E, Fe = ye(ue[Ce]);
          return new U("Invalid " + De + " `" + Ne + "` of type " + ("`" + Fe + "` supplied to `" + Ae + "`, expected ") + ("instance of `" + Pe + "`."));
        }
        return null;
      }
      return L(q);
    }
    function Y(X) {
      if (!Array.isArray(X))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? o(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : o("Invalid argument supplied to oneOf, expected an array.")), l;
      function q(ue, Ce, Ae, De, Ne) {
        for (var Pe = ue[Ce], Fe = 0; Fe < X.length; Fe++)
          if (R(Pe, X[Fe]))
            return null;
        var it = JSON.stringify(X, function(st, oe) {
          var rt = we(oe);
          return rt === "symbol" ? String(oe) : oe;
        });
        return new U("Invalid " + De + " `" + Ne + "` of value `" + String(Pe) + "` " + ("supplied to `" + Ae + "`, expected one of " + it + "."));
      }
      return L(q);
    }
    function ee(X) {
      function q(ue, Ce, Ae, De, Ne) {
        if (typeof X != "function")
          return new U("Property `" + Ne + "` of component `" + Ae + "` has invalid PropType notation inside objectOf.");
        var Pe = ue[Ce], Fe = be(Pe);
        if (Fe !== "object")
          return new U("Invalid " + De + " `" + Ne + "` of type " + ("`" + Fe + "` supplied to `" + Ae + "`, expected an object."));
        for (var it in Pe)
          if (r(Pe, it)) {
            var Ot = X(Pe, it, Ae, De, Ne + "." + it, t);
            if (Ot instanceof Error)
              return Ot;
          }
        return null;
      }
      return L(q);
    }
    function Z(X) {
      if (!Array.isArray(X))
        return process.env.NODE_ENV !== "production" && o("Invalid argument supplied to oneOfType, expected an instance of array."), l;
      for (var q = 0; q < X.length; q++) {
        var ue = X[q];
        if (typeof ue != "function")
          return o(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + de(ue) + " at index " + q + "."
          ), l;
      }
      function Ce(Ae, De, Ne, Pe, Fe) {
        for (var it = [], Ot = 0; Ot < X.length; Ot++) {
          var st = X[Ot], oe = st(Ae, De, Ne, Pe, Fe, t);
          if (oe == null)
            return null;
          oe.data && r(oe.data, "expectedType") && it.push(oe.data.expectedType);
        }
        var rt = it.length > 0 ? ", expected one of type [" + it.join(", ") + "]" : "";
        return new U("Invalid " + Pe + " `" + Fe + "` supplied to " + ("`" + Ne + "`" + rt + "."));
      }
      return L(Ce);
    }
    function K() {
      function X(q, ue, Ce, Ae, De) {
        return me(q[ue]) ? null : new U("Invalid " + Ae + " `" + De + "` supplied to " + ("`" + Ce + "`, expected a ReactNode."));
      }
      return L(X);
    }
    function fe(X, q, ue, Ce, Ae) {
      return new U(
        (X || "React class") + ": " + q + " type `" + ue + "." + Ce + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + Ae + "`."
      );
    }
    function se(X) {
      function q(ue, Ce, Ae, De, Ne) {
        var Pe = ue[Ce], Fe = be(Pe);
        if (Fe !== "object")
          return new U("Invalid " + De + " `" + Ne + "` of type `" + Fe + "` " + ("supplied to `" + Ae + "`, expected `object`."));
        for (var it in X) {
          var Ot = X[it];
          if (typeof Ot != "function")
            return fe(Ae, De, Ne, it, we(Ot));
          var st = Ot(Pe, it, Ae, De, Ne + "." + it, t);
          if (st)
            return st;
        }
        return null;
      }
      return L(q);
    }
    function he(X) {
      function q(ue, Ce, Ae, De, Ne) {
        var Pe = ue[Ce], Fe = be(Pe);
        if (Fe !== "object")
          return new U("Invalid " + De + " `" + Ne + "` of type `" + Fe + "` " + ("supplied to `" + Ae + "`, expected `object`."));
        var it = e({}, ue[Ce], X);
        for (var Ot in it) {
          var st = X[Ot];
          if (r(X, Ot) && typeof st != "function")
            return fe(Ae, De, Ne, Ot, we(st));
          if (!st)
            return new U(
              "Invalid " + De + " `" + Ne + "` key `" + Ot + "` supplied to `" + Ae + "`.\nBad object: " + JSON.stringify(ue[Ce], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(X), null, "  ")
            );
          var oe = st(Pe, Ot, Ae, De, Ne + "." + Ot, t);
          if (oe)
            return oe;
        }
        return null;
      }
      return L(q);
    }
    function me(X) {
      switch (typeof X) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !X;
        case "object":
          if (Array.isArray(X))
            return X.every(me);
          if (X === null || u(X))
            return !0;
          var q = _(X);
          if (q) {
            var ue = q.call(X), Ce;
            if (q !== X.entries) {
              for (; !(Ce = ue.next()).done; )
                if (!me(Ce.value))
                  return !1;
            } else
              for (; !(Ce = ue.next()).done; ) {
                var Ae = Ce.value;
                if (Ae && !me(Ae[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function Ee(X, q) {
      return X === "symbol" ? !0 : q ? q["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && q instanceof Symbol : !1;
    }
    function be(X) {
      var q = typeof X;
      return Array.isArray(X) ? "array" : X instanceof RegExp ? "object" : Ee(q, X) ? "symbol" : q;
    }
    function we(X) {
      if (typeof X > "u" || X === null)
        return "" + X;
      var q = be(X);
      if (q === "object") {
        if (X instanceof Date)
          return "date";
        if (X instanceof RegExp)
          return "regexp";
      }
      return q;
    }
    function de(X) {
      var q = we(X);
      switch (q) {
        case "array":
        case "object":
          return "an " + q;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + q;
        default:
          return q;
      }
    }
    function ye(X) {
      return !X.constructor || !X.constructor.name ? E : X.constructor.name;
    }
    return w.checkPropTypes = i, w.resetWarningCache = i.resetWarningCache, w.PropTypes = w, w;
  }, _L;
}
var xL, $F;
function TQ() {
  if ($F)
    return xL;
  $F = 1;
  var n = QP();
  function e() {
  }
  function t() {
  }
  return t.resetWarningCache = e, xL = function() {
    function r(l, u, h, p, y, _) {
      if (_ !== n) {
        var E = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw E.name = "Invariant Violation", E;
      }
    }
    r.isRequired = r;
    function i() {
      return r;
    }
    var o = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: i,
      element: r,
      elementType: r,
      instanceOf: i,
      node: r,
      objectOf: i,
      oneOf: i,
      oneOfType: i,
      shape: i,
      exact: i,
      checkPropTypes: t,
      resetWarningCache: e
    };
    return o.PropTypes = o, o;
  }, xL;
}
if (process.env.NODE_ENV !== "production") {
  var wQ = QB(), MQ = !0;
  PO.exports = bQ()(wQ.isElement, MQ);
} else
  PO.exports = TQ()();
var CQ = PO.exports;
const wo = /* @__PURE__ */ j1(CQ);
function RQ(n, e) {
  typeof n == "function" ? n(e) : n != null && (n.current = e);
}
function JB(...n) {
  return (e) => n.forEach(
    (t) => RQ(t, e)
  );
}
function K1(...n) {
  return le.useCallback(JB(...n), n);
}
const e5 = /* @__PURE__ */ le.forwardRef((n, e) => {
  const { children: t, ...r } = n, i = le.Children.toArray(t), o = i.find(AQ);
  if (o) {
    const l = o.props.children, u = i.map((h) => h === o ? le.Children.count(l) > 1 ? le.Children.only(null) : /* @__PURE__ */ le.isValidElement(l) ? l.props.children : null : h);
    return /* @__PURE__ */ le.createElement(UO, bs({}, r, {
      ref: e
    }), /* @__PURE__ */ le.isValidElement(l) ? /* @__PURE__ */ le.cloneElement(l, void 0, u) : null);
  }
  return /* @__PURE__ */ le.createElement(UO, bs({}, r, {
    ref: e
  }), t);
});
e5.displayName = "Slot";
const UO = /* @__PURE__ */ le.forwardRef((n, e) => {
  const { children: t, ...r } = n;
  return /* @__PURE__ */ le.isValidElement(t) ? /* @__PURE__ */ le.cloneElement(t, {
    ...DQ(r, t.props),
    ref: e ? JB(e, t.ref) : t.ref
  }) : le.Children.count(t) > 1 ? le.Children.only(null) : null;
});
UO.displayName = "SlotClone";
const t5 = ({ children: n }) => /* @__PURE__ */ le.createElement(le.Fragment, null, n);
function AQ(n) {
  return /* @__PURE__ */ le.isValidElement(n) && n.type === t5;
}
function DQ(n, e) {
  const t = {
    ...e
  };
  for (const r in e) {
    const i = n[r], o = e[r];
    /^on[A-Z]/.test(r) ? i && o ? t[r] = (...u) => {
      o(...u), i(...u);
    } : i && (t[r] = i) : r === "style" ? t[r] = {
      ...i,
      ...o
    } : r === "className" && (t[r] = [
      i,
      o
    ].filter(Boolean).join(" "));
  }
  return {
    ...n,
    ...t
  };
}
const LQ = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
], __ = LQ.reduce((n, e) => {
  const t = /* @__PURE__ */ le.forwardRef((r, i) => {
    const { asChild: o, ...l } = r, u = o ? e5 : e;
    return le.useEffect(() => {
      window[Symbol.for("radix-ui")] = !0;
    }, []), /* @__PURE__ */ le.createElement(u, bs({}, l, {
      ref: i
    }));
  });
  return t.displayName = `Primitive.${e}`, {
    ...n,
    [e]: t
  };
}, {});
function OQ(n, e) {
  n && h2.flushSync(
    () => n.dispatchEvent(e)
  );
}
const PQ = /* @__PURE__ */ le.forwardRef((n, e) => {
  var t;
  const { container: r = globalThis == null || (t = globalThis.document) === null || t === void 0 ? void 0 : t.body, ...i } = n;
  return r ? /* @__PURE__ */ OB.createPortal(/* @__PURE__ */ le.createElement(__.div, bs({}, i, {
    ref: e
  })), r) : null;
}), UQ = PQ;
var YF = Object.prototype.hasOwnProperty;
function WT(n, e) {
  var t, r;
  if (n === e)
    return !0;
  if (n && e && (t = n.constructor) === e.constructor) {
    if (t === Date)
      return n.getTime() === e.getTime();
    if (t === RegExp)
      return n.toString() === e.toString();
    if (t === Array) {
      if ((r = n.length) === e.length)
        for (; r-- && WT(n[r], e[r]); )
          ;
      return r === -1;
    }
    if (!t || typeof n == "object") {
      r = 0;
      for (t in n)
        if (YF.call(n, t) && ++r && !YF.call(e, t) || !(t in e) || !WT(n[t], e[t]))
          return !1;
      return Object.keys(e).length === r;
    }
  }
  return n !== n && e !== e;
}
var v2 = function(e, t, r, i) {
  this.name = e, this.fn = t, this.args = r, this.modifiers = i;
};
v2.prototype._test = function(e) {
  var t = this.fn;
  try {
    k1(this.modifiers.slice(), t, this)(e);
  } catch {
    t = function() {
      return !1;
    };
  }
  try {
    return k1(this.modifiers.slice(), t, this)(e);
  } catch {
    return !1;
  }
};
v2.prototype._check = function(e) {
  try {
    k1(this.modifiers.slice(), this.fn, this)(e);
  } catch {
    if (k1(this.modifiers.slice(), function(r) {
      return r;
    }, this)(!1))
      return;
  }
  if (!k1(this.modifiers.slice(), this.fn, this)(e))
    throw null;
};
v2.prototype._testAsync = function(e) {
  var t = this;
  return new Promise(function(r, i) {
    r5(
      t.modifiers.slice(),
      t.fn,
      t
    )(e).then(function(o) {
      o ? r(e) : i(null);
    }).catch(function(o) {
      return i(o);
    });
  });
};
function n5(n, e) {
  return e === void 0 && (e = "simple"), typeof n == "object" ? n[e] : n;
}
function k1(n, e, t) {
  if (n.length) {
    var r = n.shift(), i = k1(n, e, t);
    return r.perform(i, t);
  } else
    return n5(e);
}
function r5(n, e, t) {
  if (n.length) {
    var r = n.shift(), i = r5(n, e, t);
    return r.performAsync(i, t);
  } else
    return function(o) {
      return Promise.resolve(n5(e, "async")(o));
    };
}
var NQ = function(e, t, r) {
  this.name = e, this.perform = t, this.performAsync = r;
}, ZP = /* @__PURE__ */ function(n) {
  function e(t, r, i, o) {
    for (var l = [], u = arguments.length - 4; u-- > 0; )
      l[u] = arguments[u + 4];
    n.call(this, l), n.captureStackTrace && n.captureStackTrace(this, e), this.rule = t, this.value = r, this.cause = i, this.target = o;
  }
  return n && (e.__proto__ = n), e.prototype = Object.create(n && n.prototype), e.prototype.constructor = e, e;
}(Error), bv = function(e, t) {
  e === void 0 && (e = []), t === void 0 && (t = []), this.chain = e, this.nextRuleModifiers = t;
};
bv.prototype._applyRule = function(e, t) {
  var r = this;
  return function() {
    for (var i = [], o = arguments.length; o--; )
      i[o] = arguments[o];
    return r.chain.push(
      new v2(t, e.apply(r, i), i, r.nextRuleModifiers)
    ), r.nextRuleModifiers = [], r;
  };
};
bv.prototype._applyModifier = function(e, t) {
  return this.nextRuleModifiers.push(
    new NQ(t, e.simple, e.async)
  ), this;
};
bv.prototype._clone = function() {
  return new bv(this.chain.slice(), this.nextRuleModifiers.slice());
};
bv.prototype.test = function(e) {
  return this.chain.every(function(t) {
    return t._test(e);
  });
};
bv.prototype.testAll = function(e) {
  var t = [];
  return this.chain.forEach(function(r) {
    try {
      r._check(e);
    } catch (i) {
      t.push(new ZP(r, e, i));
    }
  }), t;
};
bv.prototype.check = function(e) {
  this.chain.forEach(function(t) {
    try {
      t._check(e);
    } catch (r) {
      throw new ZP(t, e, r);
    }
  });
};
bv.prototype.testAsync = function(e) {
  var t = this;
  return new Promise(function(r, i) {
    i5(e, t.chain.slice(), r, i);
  });
};
function i5(n, e, t, r) {
  if (e.length) {
    var i = e.shift();
    i._testAsync(n).then(
      function() {
        i5(n, e, t, r);
      },
      function(o) {
        r(new ZP(i, n, o));
      }
    );
  } else
    t(n);
}
var XF = function(n, e) {
  return e && typeof n == "string" && n.trim().length === 0 ? !0 : n == null;
};
function kQ(n, e) {
  return e === void 0 && (e = !1), {
    simple: function(t) {
      return XF(t, e) || n.check(t) === void 0;
    },
    async: function(t) {
      return XF(t, e) || n.testAsync(t);
    }
  };
}
function xd() {
  return typeof Proxy < "u" ? a5(new bv()) : NO(new bv());
}
var jT = {};
xd.extend = function(n) {
  Object.assign(jT, n);
};
xd.clearCustomRules = function() {
  jT = {};
};
function a5(n) {
  return new Proxy(n, {
    get: function(t, r) {
      if (r in t)
        return t[r];
      var i = a5(n._clone());
      if (r in xR)
        return i._applyModifier(xR[r], r);
      if (r in jT)
        return i._applyRule(jT[r], r);
      if (r in kO)
        return i._applyRule(kO[r], r);
    }
  });
}
function NO(n) {
  var e = function(i, o) {
    return Object.keys(i).forEach(function(l) {
      o[l] = function() {
        for (var u = [], h = arguments.length; h--; )
          u[h] = arguments[h];
        var p = NO(o._clone()), y = p._applyRule(
          i[l],
          l
        ).apply(void 0, u);
        return y;
      };
    }), o;
  }, t = e(kO, n), r = e(
    jT,
    t
  );
  return Object.keys(xR).forEach(function(i) {
    Object.defineProperty(r, i, {
      get: function() {
        var o = NO(r._clone());
        return o._applyModifier(xR[i], i);
      }
    });
  }), r;
}
var xR = {
  not: {
    simple: function(n) {
      return function(e) {
        return !n(e);
      };
    },
    async: function(n) {
      return function(e) {
        return Promise.resolve(n(e)).then(function(t) {
          return !t;
        }).catch(function() {
          return !0;
        });
      };
    }
  },
  some: {
    simple: function(n) {
      return function(e) {
        return XC(e).some(function(t) {
          try {
            return n(t);
          } catch {
            return !1;
          }
        });
      };
    },
    async: function(n) {
      return function(e) {
        return Promise.all(
          XC(e).map(function(t) {
            try {
              return n(t).catch(function() {
                return !1;
              });
            } catch {
              return !1;
            }
          })
        ).then(function(t) {
          return t.some(Boolean);
        });
      };
    }
  },
  every: {
    simple: function(n) {
      return function(e) {
        return e !== !1 && XC(e).every(n);
      };
    },
    async: function(n) {
      return function(e) {
        return Promise.all(XC(e).map(n)).then(function(t) {
          return t.every(Boolean);
        });
      };
    }
  },
  strict: {
    simple: function(n, e) {
      return function(t) {
        return qF(e) && t && typeof t == "object" ? Object.keys(e.args[0]).length === Object.keys(t).length && n(t) : n(t);
      };
    },
    async: function(n, e) {
      return function(t) {
        return Promise.resolve(n(t)).then(function(r) {
          return qF(e) && t && typeof t == "object" ? Object.keys(e.args[0]).length === Object.keys(t).length && r : r;
        }).catch(function() {
          return !1;
        });
      };
    }
  }
};
function qF(n) {
  return n && n.name === "schema" && n.args.length > 0 && typeof n.args[0] == "object";
}
function XC(n) {
  return typeof n == "string" ? n.split("") : n;
}
var kO = {
  // Value
  equal: function(n) {
    return function(e) {
      return e == n;
    };
  },
  exact: function(n) {
    return function(e) {
      return e === n;
    };
  },
  // Types
  number: function(n) {
    return n === void 0 && (n = !0), function(e) {
      return typeof e == "number" && (n || isFinite(e));
    };
  },
  integer: function() {
    return function(n) {
      var e = Number.isInteger || FQ;
      return e(n);
    };
  },
  numeric: function() {
    return function(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    };
  },
  string: function() {
    return b1("string");
  },
  boolean: function() {
    return b1("boolean");
  },
  undefined: function() {
    return b1("undefined");
  },
  null: function() {
    return b1("null");
  },
  array: function() {
    return b1("array");
  },
  object: function() {
    return b1("object");
  },
  instanceOf: function(n) {
    return function(e) {
      return e instanceof n;
    };
  },
  // Pattern
  pattern: function(n) {
    return function(e) {
      return n.test(e);
    };
  },
  lowercase: function() {
    return function(n) {
      return typeof n == "boolean" || n === n.toLowerCase() && n.trim() !== "";
    };
  },
  uppercase: function() {
    return function(n) {
      return n === n.toUpperCase() && n.trim() !== "";
    };
  },
  vowel: function() {
    return function(n) {
      return /^[aeiou]+$/i.test(n);
    };
  },
  consonant: function() {
    return function(n) {
      return /^(?=[^aeiou])([a-z]+)$/i.test(n);
    };
  },
  // Value at
  first: function(n) {
    return function(e) {
      return e[0] == n;
    };
  },
  last: function(n) {
    return function(e) {
      return e[e.length - 1] == n;
    };
  },
  // Length
  empty: function() {
    return function(n) {
      return n.length === 0;
    };
  },
  length: function(n, e) {
    return function(t) {
      return t.length >= n && t.length <= (e || n);
    };
  },
  minLength: function(n) {
    return function(e) {
      return e.length >= n;
    };
  },
  maxLength: function(n) {
    return function(e) {
      return e.length <= n;
    };
  },
  // Range
  negative: function() {
    return function(n) {
      return n < 0;
    };
  },
  positive: function() {
    return function(n) {
      return n >= 0;
    };
  },
  between: function(n, e) {
    return function(t) {
      return t >= n && t <= e;
    };
  },
  range: function(n, e) {
    return function(t) {
      return t >= n && t <= e;
    };
  },
  lessThan: function(n) {
    return function(e) {
      return e < n;
    };
  },
  lessThanOrEqual: function(n) {
    return function(e) {
      return e <= n;
    };
  },
  greaterThan: function(n) {
    return function(e) {
      return e > n;
    };
  },
  greaterThanOrEqual: function(n) {
    return function(e) {
      return e >= n;
    };
  },
  // Divisible
  even: function() {
    return function(n) {
      return n % 2 === 0;
    };
  },
  odd: function() {
    return function(n) {
      return n % 2 !== 0;
    };
  },
  includes: function(n) {
    return function(e) {
      return ~e.indexOf(n);
    };
  },
  schema: function(n) {
    return zQ(n);
  },
  // branching
  passesAnyOf: function() {
    for (var n = [], e = arguments.length; e--; )
      n[e] = arguments[e];
    return function(t) {
      return n.some(function(r) {
        return r.test(t);
      });
    };
  },
  optional: kQ
};
function b1(n) {
  return function(e) {
    return Array.isArray(e) && n === "array" || e === null && n === "null" || typeof e === n;
  };
}
function FQ(n) {
  return typeof n == "number" && isFinite(n) && Math.floor(n) === n;
}
function zQ(n) {
  return {
    simple: function(e) {
      var t = [];
      if (Object.keys(n).forEach(function(r) {
        var i = n[r];
        try {
          i.check((e || {})[r]);
        } catch (o) {
          o.target = r, t.push(o);
        }
      }), t.length > 0)
        throw t;
      return !0;
    },
    async: function(e) {
      var t = [], r = Object.keys(n).map(function(i) {
        var o = n[i];
        return o.testAsync((e || {})[i]).catch(function(l) {
          l.target = i, t.push(l);
        });
      });
      return Promise.all(r).then(function() {
        if (t.length > 0)
          throw t;
        return !0;
      });
    }
  };
}
var io = "colors", Df = "sizes", Qn = "space", IQ = { gap: Qn, gridGap: Qn, columnGap: Qn, gridColumnGap: Qn, rowGap: Qn, gridRowGap: Qn, inset: Qn, insetBlock: Qn, insetBlockEnd: Qn, insetBlockStart: Qn, insetInline: Qn, insetInlineEnd: Qn, insetInlineStart: Qn, margin: Qn, marginTop: Qn, marginRight: Qn, marginBottom: Qn, marginLeft: Qn, marginBlock: Qn, marginBlockEnd: Qn, marginBlockStart: Qn, marginInline: Qn, marginInlineEnd: Qn, marginInlineStart: Qn, padding: Qn, paddingTop: Qn, paddingRight: Qn, paddingBottom: Qn, paddingLeft: Qn, paddingBlock: Qn, paddingBlockEnd: Qn, paddingBlockStart: Qn, paddingInline: Qn, paddingInlineEnd: Qn, paddingInlineStart: Qn, top: Qn, right: Qn, bottom: Qn, left: Qn, scrollMargin: Qn, scrollMarginTop: Qn, scrollMarginRight: Qn, scrollMarginBottom: Qn, scrollMarginLeft: Qn, scrollMarginX: Qn, scrollMarginY: Qn, scrollMarginBlock: Qn, scrollMarginBlockEnd: Qn, scrollMarginBlockStart: Qn, scrollMarginInline: Qn, scrollMarginInlineEnd: Qn, scrollMarginInlineStart: Qn, scrollPadding: Qn, scrollPaddingTop: Qn, scrollPaddingRight: Qn, scrollPaddingBottom: Qn, scrollPaddingLeft: Qn, scrollPaddingX: Qn, scrollPaddingY: Qn, scrollPaddingBlock: Qn, scrollPaddingBlockEnd: Qn, scrollPaddingBlockStart: Qn, scrollPaddingInline: Qn, scrollPaddingInlineEnd: Qn, scrollPaddingInlineStart: Qn, fontSize: "fontSizes", background: io, backgroundColor: io, backgroundImage: io, borderImage: io, border: io, borderBlock: io, borderBlockEnd: io, borderBlockStart: io, borderBottom: io, borderBottomColor: io, borderColor: io, borderInline: io, borderInlineEnd: io, borderInlineStart: io, borderLeft: io, borderLeftColor: io, borderRight: io, borderRightColor: io, borderTop: io, borderTopColor: io, caretColor: io, color: io, columnRuleColor: io, fill: io, outline: io, outlineColor: io, stroke: io, textDecorationColor: io, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: Df, minBlockSize: Df, maxBlockSize: Df, inlineSize: Df, minInlineSize: Df, maxInlineSize: Df, width: Df, minWidth: Df, maxWidth: Df, height: Df, minHeight: Df, maxHeight: Df, flexBasis: Df, gridTemplateColumns: Df, gridTemplateRows: Df, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" }, BQ = (n, e) => typeof e == "function" ? { "()": Function.prototype.toString.call(e) } : e, Q1 = () => {
  const n = /* @__PURE__ */ Object.create(null);
  return (e, t, ...r) => {
    const i = ((o) => JSON.stringify(o, BQ))(e);
    return i in n ? n[i] : n[i] = t(e, ...r);
  };
}, s_ = Symbol.for("sxs.internal"), JP = (n, e) => Object.defineProperties(n, Object.getOwnPropertyDescriptors(e)), KF = (n) => {
  for (const e in n)
    return !0;
  return !1;
}, { hasOwnProperty: HQ } = Object.prototype, FO = (n) => n.includes("-") ? n : n.replace(/[A-Z]/g, (e) => "-" + e.toLowerCase()), VQ = /\s+(?![^()]*\))/, T1 = (n) => (e) => n(...typeof e == "string" ? String(e).split(VQ) : [e]), QF = { appearance: (n) => ({ WebkitAppearance: n, appearance: n }), backfaceVisibility: (n) => ({ WebkitBackfaceVisibility: n, backfaceVisibility: n }), backdropFilter: (n) => ({ WebkitBackdropFilter: n, backdropFilter: n }), backgroundClip: (n) => ({ WebkitBackgroundClip: n, backgroundClip: n }), boxDecorationBreak: (n) => ({ WebkitBoxDecorationBreak: n, boxDecorationBreak: n }), clipPath: (n) => ({ WebkitClipPath: n, clipPath: n }), content: (n) => ({ content: n.includes('"') || n.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(n) ? n : `"${n}"` }), hyphens: (n) => ({ WebkitHyphens: n, hyphens: n }), maskImage: (n) => ({ WebkitMaskImage: n, maskImage: n }), maskSize: (n) => ({ WebkitMaskSize: n, maskSize: n }), tabSize: (n) => ({ MozTabSize: n, tabSize: n }), textSizeAdjust: (n) => ({ WebkitTextSizeAdjust: n, textSizeAdjust: n }), userSelect: (n) => ({ WebkitUserSelect: n, userSelect: n }), marginBlock: T1((n, e) => ({ marginBlockStart: n, marginBlockEnd: e || n })), marginInline: T1((n, e) => ({ marginInlineStart: n, marginInlineEnd: e || n })), maxSize: T1((n, e) => ({ maxBlockSize: n, maxInlineSize: e || n })), minSize: T1((n, e) => ({ minBlockSize: n, minInlineSize: e || n })), paddingBlock: T1((n, e) => ({ paddingBlockStart: n, paddingBlockEnd: e || n })), paddingInline: T1((n, e) => ({ paddingInlineStart: n, paddingInlineEnd: e || n })) }, EL = /([\d.]+)([^]*)/, GQ = (n, e) => n.length ? n.reduce((t, r) => (t.push(...e.map((i) => i.includes("&") ? i.replace(/&/g, /[ +>|~]/.test(r) && /&.*&/.test(i) ? `:is(${r})` : r) : r + " " + i)), t), []) : e, WQ = (n, e) => n in jQ && typeof e == "string" ? e.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t, r, i, o) => r + (i === "stretch" ? `-moz-available${o};${FO(n)}:${r}-webkit-fill-available` : `-moz-fit-content${o};${FO(n)}:${r}fit-content`) + o) : String(e), jQ = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 }, Vg = (n) => n ? n + "-" : "", o5 = (n, e, t) => n.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (r, i, o, l, u) => l == "$" == !!o ? r : (i || l == "--" ? "calc(" : "") + "var(--" + (l === "$" ? Vg(e) + (u.includes("$") ? "" : Vg(t)) + u.replace(/\$/g, "-") : u) + ")" + (i || l == "--" ? "*" + (i || "") + (o || "1") + ")" : "")), $Q = /\s*,\s*(?![^()]*\))/, YQ = Object.prototype.toString, P1 = (n, e, t, r, i) => {
  let o, l, u;
  const h = (p, y, _) => {
    let E, w;
    const R = (U) => {
      for (E in U) {
        const k = E.charCodeAt(0) === 64, F = k && Array.isArray(U[E]) ? U[E] : [U[E]];
        for (w of F) {
          const H = /[A-Z]/.test(A = E) ? A : A.replace(/-[^]/g, (j) => j[1].toUpperCase()), B = typeof w == "object" && w && w.toString === YQ && (!r.utils[H] || !y.length);
          if (H in r.utils && !B) {
            const j = r.utils[H];
            if (j !== l) {
              l = j, R(j(w)), l = null;
              continue;
            }
          } else if (H in QF) {
            const j = QF[H];
            if (j !== u) {
              u = j, R(j(w)), u = null;
              continue;
            }
          }
          if (k && (L = E.slice(1) in r.media ? "@media " + r.media[E.slice(1)] : E, E = L.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (j, Y, ee, Z, K, fe) => {
            const se = EL.test(Y), he = 0.0625 * (se ? -1 : 1), [me, Ee] = se ? [Z, Y] : [Y, Z];
            return "(" + (ee[0] === "=" ? "" : ee[0] === ">" === se ? "max-" : "min-") + me + ":" + (ee[0] !== "=" && ee.length === 1 ? Ee.replace(EL, (be, we, de) => Number(we) + he * (ee === ">" ? 1 : -1) + de) : Ee) + (K ? ") and (" + (K[0] === ">" ? "min-" : "max-") + me + ":" + (K.length === 1 ? fe.replace(EL, (be, we, de) => Number(we) + he * (K === ">" ? -1 : 1) + de) : fe) : "") + ")";
          })), B) {
            const j = k ? _.concat(E) : [..._], Y = k ? [...y] : GQ(y, E.split($Q));
            o !== void 0 && i(ZF(...o)), o = void 0, h(w, Y, j);
          } else
            o === void 0 && (o = [[], y, _]), E = k || E.charCodeAt(0) !== 36 ? E : `--${Vg(r.prefix)}${E.slice(1).replace(/\$/g, "-")}`, w = B ? w : typeof w == "number" ? w && H in XQ ? String(w) + "px" : String(w) : o5(WQ(H, w ?? ""), r.prefix, r.themeMap[H]), o[0].push(`${k ? `${E} ` : `${FO(E)}:`}${w}`);
        }
      }
      var L, A;
    };
    R(p), o !== void 0 && i(ZF(...o)), o = void 0;
  };
  h(n, e, t);
}, ZF = (n, e, t) => `${t.map((r) => `${r}{`).join("")}${e.length ? `${e.join(",")}{` : ""}${n.join(";")}${e.length ? "}" : ""}${Array(t.length ? t.length + 1 : 0).join("}")}`, XQ = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 }, JF = (n) => String.fromCharCode(n + (n > 25 ? 39 : 97)), l_ = (n) => ((e) => {
  let t, r = "";
  for (t = Math.abs(e); t > 52; t = t / 52 | 0)
    r = JF(t % 52) + r;
  return JF(t % 52) + r;
})(((e, t) => {
  let r = t.length;
  for (; r; )
    e = 33 * e ^ t.charCodeAt(--r);
  return e;
})(5381, JSON.stringify(n)) >>> 0), hT = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"], qQ = (n) => {
  if (n.href && !n.href.startsWith(location.origin))
    return !1;
  try {
    return !!n.cssRules;
  } catch {
    return !1;
  }
}, KQ = (n) => {
  let e;
  const t = () => {
    const { cssRules: i } = e.sheet;
    return [].map.call(i, (o, l) => {
      const { cssText: u } = o;
      let h = "";
      if (u.startsWith("--sxs"))
        return "";
      if (i[l - 1] && (h = i[l - 1].cssText).startsWith("--sxs")) {
        if (!o.cssRules.length)
          return "";
        for (const p in e.rules)
          if (e.rules[p].group === o)
            return `--sxs{--sxs:${[...e.rules[p].cache].join(" ")}}${u}`;
        return o.cssRules.length ? `${h}${u}` : "";
      }
      return u;
    }).join("");
  }, r = () => {
    if (e) {
      const { rules: u, sheet: h } = e;
      if (!h.deleteRule) {
        for (; Object(Object(h.cssRules)[0]).type === 3; )
          h.cssRules.splice(0, 1);
        h.cssRules = [];
      }
      for (const p in u)
        delete u[p];
    }
    const i = Object(n).styleSheets || [];
    for (const u of i)
      if (qQ(u)) {
        for (let h = 0, p = u.cssRules; p[h]; ++h) {
          const y = Object(p[h]);
          if (y.type !== 1)
            continue;
          const _ = Object(p[h + 1]);
          if (_.type !== 4)
            continue;
          ++h;
          const { cssText: E } = y;
          if (!E.startsWith("--sxs"))
            continue;
          const w = E.slice(14, -3).trim().split(/\s+/), R = hT[w[0]];
          R && (e || (e = { sheet: u, reset: r, rules: {}, toString: t }), e.rules[R] = { group: _, index: h, cache: new Set(w) });
        }
        if (e)
          break;
      }
    if (!e) {
      const u = (h, p) => ({ type: p, cssRules: [], insertRule(y, _) {
        this.cssRules.splice(_, 0, u(y, { import: 3, undefined: 1 }[(y.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return h === "@media{}" ? `@media{${[].map.call(this.cssRules, (y) => y.cssText).join("")}}` : h;
      } });
      e = { sheet: n ? (n.head || n).appendChild(document.createElement("style")).sheet : u("", "text/css"), rules: {}, reset: r, toString: t };
    }
    const { sheet: o, rules: l } = e;
    for (let u = hT.length - 1; u >= 0; --u) {
      const h = hT[u];
      if (!l[h]) {
        const p = hT[u + 1], y = l[p] ? l[p].index : o.cssRules.length;
        o.insertRule("@media{}", y), o.insertRule(`--sxs{--sxs:${u}}`, y), l[h] = { group: o.cssRules[y + 1], index: y, cache: /* @__PURE__ */ new Set([u]) };
      }
      QQ(l[h]);
    }
  };
  return r(), e;
}, QQ = (n) => {
  const e = n.group;
  let t = e.cssRules.length;
  n.apply = (r) => {
    try {
      e.insertRule(r, t), ++t;
    } catch {
    }
  };
}, sT = Symbol(), ZQ = Q1(), ez = (n, e) => ZQ(n, () => (...t) => {
  let r = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const i of t)
    if (i != null)
      if (i[s_]) {
        r.type == null && (r.type = i[s_].type);
        for (const o of i[s_].composers)
          r.composers.add(o);
      } else
        i.constructor !== Object || i.$$typeof ? r.type == null && (r.type = i) : r.composers.add(JQ(i, n));
  return r.type == null && (r.type = "span"), r.composers.size || r.composers.add(["PJLV", {}, [], [], {}, []]), eZ(n, r, e);
}), JQ = ({ variants: n, compoundVariants: e, defaultVariants: t, ...r }, i) => {
  const o = `${Vg(i.prefix)}c-${l_(r)}`, l = [], u = [], h = /* @__PURE__ */ Object.create(null), p = [];
  for (const E in t)
    h[E] = String(t[E]);
  if (typeof n == "object" && n)
    for (const E in n) {
      y = h, _ = E, HQ.call(y, _) || (h[E] = "undefined");
      const w = n[E];
      for (const R in w) {
        const U = { [E]: String(R) };
        String(R) === "undefined" && p.push(E);
        const L = w[R], A = [U, L, !KF(L)];
        l.push(A);
      }
    }
  var y, _;
  if (typeof e == "object" && e)
    for (const E of e) {
      let { css: w, ...R } = E;
      w = typeof w == "object" && w || {};
      for (const L in R)
        R[L] = String(R[L]);
      const U = [R, w, !KF(w)];
      u.push(U);
    }
  return [o, r, l, u, h, p];
}, eZ = (n, e, t) => {
  const [r, i, o, l] = tZ(e.composers), u = typeof e.type == "function" || e.type.$$typeof ? ((_) => {
    function E() {
      for (let w = 0; w < E[sT].length; w++) {
        const [R, U] = E[sT][w];
        _.rules[R].apply(U);
      }
      return E[sT] = [], null;
    }
    return E[sT] = [], E.rules = {}, hT.forEach((w) => E.rules[w] = { apply: (R) => E[sT].push([w, R]) }), E;
  })(t) : null, h = (u || t).rules, p = `.${r}${i.length > 1 ? `:where(.${i.slice(1).join(".")})` : ""}`, y = (_) => {
    _ = typeof _ == "object" && _ || nZ;
    const { css: E, ...w } = _, R = {};
    for (const A in o)
      if (delete w[A], A in _) {
        let k = _[A];
        typeof k == "object" && k ? R[A] = { "@initial": o[A], ...k } : (k = String(k), R[A] = k !== "undefined" || l.has(A) ? k : o[A]);
      } else
        R[A] = o[A];
    const U = /* @__PURE__ */ new Set([...i]);
    for (const [A, k, F, H] of e.composers) {
      t.rules.styled.cache.has(A) || (t.rules.styled.cache.add(A), P1(k, [`.${A}`], [], n, (Y) => {
        h.styled.apply(Y);
      }));
      const B = tz(F, R, n.media), j = tz(H, R, n.media, !0);
      for (const Y of B)
        if (Y !== void 0)
          for (const [ee, Z, K] of Y) {
            const fe = `${A}-${l_(Z)}-${ee}`;
            U.add(fe);
            const se = (K ? t.rules.resonevar : t.rules.onevar).cache, he = K ? h.resonevar : h.onevar;
            se.has(fe) || (se.add(fe), P1(Z, [`.${fe}`], [], n, (me) => {
              he.apply(me);
            }));
          }
      for (const Y of j)
        if (Y !== void 0)
          for (const [ee, Z] of Y) {
            const K = `${A}-${l_(Z)}-${ee}`;
            U.add(K), t.rules.allvar.cache.has(K) || (t.rules.allvar.cache.add(K), P1(Z, [`.${K}`], [], n, (fe) => {
              h.allvar.apply(fe);
            }));
          }
    }
    if (typeof E == "object" && E) {
      const A = `${r}-i${l_(E)}-css`;
      U.add(A), t.rules.inline.cache.has(A) || (t.rules.inline.cache.add(A), P1(E, [`.${A}`], [], n, (k) => {
        h.inline.apply(k);
      }));
    }
    for (const A of String(_.className || "").trim().split(/\s+/))
      A && U.add(A);
    const L = w.className = [...U].join(" ");
    return { type: e.type, className: L, selector: p, props: w, toString: () => L, deferredInjector: u };
  };
  return JP(y, { className: r, selector: p, [s_]: e, toString: () => (t.rules.styled.cache.has(r) || y(), r) });
}, tZ = (n) => {
  let e = "";
  const t = [], r = {}, i = [];
  for (const [o, , , , l, u] of n) {
    e === "" && (e = o), t.push(o), i.push(...u);
    for (const h in l) {
      const p = l[h];
      (r[h] === void 0 || p !== "undefined" || u.includes(p)) && (r[h] = p);
    }
  }
  return [e, t, r, new Set(i)];
}, tz = (n, e, t, r) => {
  const i = [];
  e:
    for (let [o, l, u] of n) {
      if (u)
        continue;
      let h, p = 0, y = !1;
      for (h in o) {
        const _ = o[h];
        let E = e[h];
        if (E !== _) {
          if (typeof E != "object" || !E)
            continue e;
          {
            let w, R, U = 0;
            for (const L in E) {
              if (_ === String(E[L])) {
                if (L !== "@initial") {
                  const A = L.slice(1);
                  (R = R || []).push(A in t ? t[A] : L.replace(/^@media ?/, "")), y = !0;
                }
                p += U, w = !0;
              }
              ++U;
            }
            if (R && R.length && (l = { ["@media " + R.join(", ")]: l }), !w)
              continue e;
          }
        }
      }
      (i[p] = i[p] || []).push([r ? "cv" : `${h}-${o[h]}`, l, y]);
    }
  return i;
}, nZ = {}, rZ = Q1(), iZ = (n, e) => rZ(n, () => (...t) => {
  const r = () => {
    for (let i of t) {
      i = typeof i == "object" && i || {};
      let o = l_(i);
      if (!e.rules.global.cache.has(o)) {
        if (e.rules.global.cache.add(o), "@import" in i) {
          let l = [].indexOf.call(e.sheet.cssRules, e.rules.themed.group) - 1;
          for (let u of [].concat(i["@import"]))
            u = u.includes('"') || u.includes("'") ? u : `"${u}"`, e.sheet.insertRule(`@import ${u};`, l++);
          delete i["@import"];
        }
        P1(i, [], [], n, (l) => {
          e.rules.global.apply(l);
        });
      }
    }
    return "";
  };
  return JP(r, { toString: r });
}), aZ = Q1(), oZ = (n, e) => aZ(n, () => (t) => {
  const r = `${Vg(n.prefix)}k-${l_(t)}`, i = () => {
    if (!e.rules.global.cache.has(r)) {
      e.rules.global.cache.add(r);
      const o = [];
      P1(t, [], [], n, (u) => o.push(u));
      const l = `@keyframes ${r}{${o.join("")}}`;
      e.rules.global.apply(l);
    }
    return r;
  };
  return JP(i, { get name() {
    return i();
  }, toString: i });
}), sZ = class {
  constructor(n, e, t, r) {
    this.token = n == null ? "" : String(n), this.value = e == null ? "" : String(e), this.scale = t == null ? "" : String(t), this.prefix = r == null ? "" : String(r);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + Vg(this.prefix) + Vg(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
}, lZ = Q1(), uZ = (n, e) => lZ(n, () => (t, r) => {
  r = typeof t == "object" && t || Object(r);
  const i = `.${t = (t = typeof t == "string" ? t : "") || `${Vg(n.prefix)}t-${l_(r)}`}`, o = {}, l = [];
  for (const h in r) {
    o[h] = {};
    for (const p in r[h]) {
      const y = `--${Vg(n.prefix)}${h}-${p}`, _ = o5(String(r[h][p]), n.prefix, h);
      o[h][p] = new sZ(p, _, h, n.prefix), l.push(`${y}:${_}`);
    }
  }
  const u = () => {
    if (l.length && !e.rules.themed.cache.has(t)) {
      e.rules.themed.cache.add(t);
      const h = `${r === n.theme ? ":root," : ""}.${t}{${l.join(";")}}`;
      e.rules.themed.apply(h);
    }
    return t;
  };
  return { ...o, get className() {
    return u();
  }, selector: i, toString: u };
}), cZ = Q1(), fZ = Q1(), dZ = (n) => {
  const e = ((t) => {
    let r = !1;
    const i = cZ(t, (o) => {
      r = !0;
      const l = "prefix" in (o = typeof o == "object" && o || {}) ? String(o.prefix) : "", u = typeof o.media == "object" && o.media || {}, h = typeof o.root == "object" ? o.root || null : globalThis.document || null, p = typeof o.theme == "object" && o.theme || {}, y = { prefix: l, media: u, theme: p, themeMap: typeof o.themeMap == "object" && o.themeMap || { ...IQ }, utils: typeof o.utils == "object" && o.utils || {} }, _ = KQ(h), E = { css: ez(y, _), globalCss: iZ(y, _), keyframes: oZ(y, _), createTheme: uZ(y, _), reset() {
        _.reset(), E.theme.toString();
      }, theme: {}, sheet: _, config: y, prefix: l, getCssText: _.toString, toString: _.toString };
      return String(E.theme = E.createTheme(p)), E;
    });
    return r || i.reset(), i;
  })(n);
  return e.styled = (({ config: t, sheet: r }) => fZ(t, () => {
    const i = ez(t, r);
    return (...o) => {
      const l = i(...o), u = l[s_].type, h = Be.forwardRef((p, y) => {
        const _ = p && p.as || u, { props: E, deferredInjector: w } = l(p);
        return delete E.as, E.ref = y, w ? Be.createElement(Be.Fragment, null, Be.createElement(_, E), Be.createElement(w, null)) : Be.createElement(_, E);
      });
      return h.className = l.className, h.displayName = `Styled.${u.displayName || u.name || u}`, h.selector = l.selector, h.toString = () => l.selector, h[s_] = l[s_], h;
    };
  }))(e), e;
};
function Pg(n, e, { checkForDefaultPrevented: t = !0 } = {}) {
  return function(i) {
    if (n == null || n(i), t === !1 || !i.defaultPrevented)
      return e == null ? void 0 : e(i);
  };
}
function s5(n, e = []) {
  let t = [];
  function r(o, l) {
    const u = /* @__PURE__ */ le.createContext(l), h = t.length;
    t = [
      ...t,
      l
    ];
    function p(_) {
      const { scope: E, children: w, ...R } = _, U = (E == null ? void 0 : E[n][h]) || u, L = le.useMemo(
        () => R,
        Object.values(R)
      );
      return /* @__PURE__ */ le.createElement(U.Provider, {
        value: L
      }, w);
    }
    function y(_, E) {
      const w = (E == null ? void 0 : E[n][h]) || u, R = le.useContext(w);
      if (R)
        return R;
      if (l !== void 0)
        return l;
      throw new Error(`\`${_}\` must be used within \`${o}\``);
    }
    return p.displayName = o + "Provider", [
      p,
      y
    ];
  }
  const i = () => {
    const o = t.map((l) => /* @__PURE__ */ le.createContext(l));
    return function(u) {
      const h = (u == null ? void 0 : u[n]) || o;
      return le.useMemo(
        () => ({
          [`__scope${n}`]: {
            ...u,
            [n]: h
          }
        }),
        [
          u,
          h
        ]
      );
    };
  };
  return i.scopeName = n, [
    r,
    hZ(i, ...e)
  ];
}
function hZ(...n) {
  const e = n[0];
  if (n.length === 1)
    return e;
  const t = () => {
    const r = n.map(
      (i) => ({
        useScope: i(),
        scopeName: i.scopeName
      })
    );
    return function(o) {
      const l = r.reduce((u, { useScope: h, scopeName: p }) => {
        const _ = h(o)[`__scope${p}`];
        return {
          ...u,
          ..._
        };
      }, {});
      return le.useMemo(
        () => ({
          [`__scope${e.scopeName}`]: l
        }),
        [
          l
        ]
      );
    };
  };
  return t.scopeName = e.scopeName, t;
}
function Z1(n) {
  const e = le.useRef(n);
  return le.useEffect(() => {
    e.current = n;
  }), le.useMemo(
    () => (...t) => {
      var r;
      return (r = e.current) === null || r === void 0 ? void 0 : r.call(e, ...t);
    },
    []
  );
}
function pZ(n, e = globalThis == null ? void 0 : globalThis.document) {
  const t = Z1(n);
  le.useEffect(() => {
    const r = (i) => {
      i.key === "Escape" && t(i);
    };
    return e.addEventListener("keydown", r), () => e.removeEventListener("keydown", r);
  }, [
    t,
    e
  ]);
}
const zO = "dismissableLayer.update", mZ = "dismissableLayer.pointerDownOutside", vZ = "dismissableLayer.focusOutside";
let nz;
const gZ = /* @__PURE__ */ le.createContext({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
}), yZ = /* @__PURE__ */ le.forwardRef((n, e) => {
  var t;
  const { disableOutsidePointerEvents: r = !1, onEscapeKeyDown: i, onPointerDownOutside: o, onFocusOutside: l, onInteractOutside: u, onDismiss: h, ...p } = n, y = le.useContext(gZ), [_, E] = le.useState(null), w = (t = _ == null ? void 0 : _.ownerDocument) !== null && t !== void 0 ? t : globalThis == null ? void 0 : globalThis.document, [, R] = le.useState({}), U = K1(
    e,
    (ee) => E(ee)
  ), L = Array.from(y.layers), [A] = [
    ...y.layersWithOutsidePointerEventsDisabled
  ].slice(-1), k = L.indexOf(A), F = _ ? L.indexOf(_) : -1, H = y.layersWithOutsidePointerEventsDisabled.size > 0, B = F >= k, j = SZ((ee) => {
    const Z = ee.target, K = [
      ...y.branches
    ].some(
      (fe) => fe.contains(Z)
    );
    !B || K || (o == null || o(ee), u == null || u(ee), ee.defaultPrevented || h == null || h());
  }, w), Y = _Z((ee) => {
    const Z = ee.target;
    [
      ...y.branches
    ].some(
      (fe) => fe.contains(Z)
    ) || (l == null || l(ee), u == null || u(ee), ee.defaultPrevented || h == null || h());
  }, w);
  return pZ((ee) => {
    F === y.layers.size - 1 && (i == null || i(ee), !ee.defaultPrevented && h && (ee.preventDefault(), h()));
  }, w), le.useEffect(() => {
    if (_)
      return r && (y.layersWithOutsidePointerEventsDisabled.size === 0 && (nz = w.body.style.pointerEvents, w.body.style.pointerEvents = "none"), y.layersWithOutsidePointerEventsDisabled.add(_)), y.layers.add(_), rz(), () => {
        r && y.layersWithOutsidePointerEventsDisabled.size === 1 && (w.body.style.pointerEvents = nz);
      };
  }, [
    _,
    w,
    r,
    y
  ]), le.useEffect(() => () => {
    _ && (y.layers.delete(_), y.layersWithOutsidePointerEventsDisabled.delete(_), rz());
  }, [
    _,
    y
  ]), le.useEffect(() => {
    const ee = () => R({});
    return document.addEventListener(zO, ee), () => document.removeEventListener(zO, ee);
  }, []), /* @__PURE__ */ le.createElement(__.div, bs({}, p, {
    ref: U,
    style: {
      pointerEvents: H ? B ? "auto" : "none" : void 0,
      ...n.style
    },
    onFocusCapture: Pg(n.onFocusCapture, Y.onFocusCapture),
    onBlurCapture: Pg(n.onBlurCapture, Y.onBlurCapture),
    onPointerDownCapture: Pg(n.onPointerDownCapture, j.onPointerDownCapture)
  }));
});
function SZ(n, e = globalThis == null ? void 0 : globalThis.document) {
  const t = Z1(n), r = le.useRef(!1), i = le.useRef(() => {
  });
  return le.useEffect(() => {
    const o = (u) => {
      if (u.target && !r.current) {
        let p = function() {
          l5(mZ, t, h, {
            discrete: !0
          });
        };
        const h = {
          originalEvent: u
        };
        u.pointerType === "touch" ? (e.removeEventListener("click", i.current), i.current = p, e.addEventListener("click", i.current, {
          once: !0
        })) : p();
      } else
        e.removeEventListener("click", i.current);
      r.current = !1;
    }, l = window.setTimeout(() => {
      e.addEventListener("pointerdown", o);
    }, 0);
    return () => {
      window.clearTimeout(l), e.removeEventListener("pointerdown", o), e.removeEventListener("click", i.current);
    };
  }, [
    e,
    t
  ]), {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => r.current = !0
  };
}
function _Z(n, e = globalThis == null ? void 0 : globalThis.document) {
  const t = Z1(n), r = le.useRef(!1);
  return le.useEffect(() => {
    const i = (o) => {
      o.target && !r.current && l5(vZ, t, {
        originalEvent: o
      }, {
        discrete: !1
      });
    };
    return e.addEventListener("focusin", i), () => e.removeEventListener("focusin", i);
  }, [
    e,
    t
  ]), {
    onFocusCapture: () => r.current = !0,
    onBlurCapture: () => r.current = !1
  };
}
function rz() {
  const n = new CustomEvent(zO);
  document.dispatchEvent(n);
}
function l5(n, e, t, { discrete: r }) {
  const i = t.originalEvent.target, o = new CustomEvent(n, {
    bubbles: !1,
    cancelable: !0,
    detail: t
  });
  e && i.addEventListener(n, e, {
    once: !0
  }), r ? OQ(i, o) : i.dispatchEvent(o);
}
const V1 = globalThis != null && globalThis.document ? le.useLayoutEffect : () => {
}, xZ = L8["useId".toString()] || (() => {
});
let EZ = 0;
function bZ(n) {
  const [e, t] = le.useState(xZ());
  return V1(() => {
    n || t(
      (r) => r ?? String(EZ++)
    );
  }, [
    n
  ]), n || (e ? `radix-${e}` : "");
}
const TZ = ["top", "right", "bottom", "left"], v0 = Math.min, ph = Math.max, ER = Math.round, qC = Math.floor, g0 = (n) => ({
  x: n,
  y: n
}), wZ = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, MZ = {
  start: "end",
  end: "start"
};
function IO(n, e, t) {
  return ph(n, v0(e, t));
}
function Gg(n, e) {
  return typeof n == "function" ? n(e) : n;
}
function Wg(n) {
  return n.split("-")[0];
}
function J1(n) {
  return n.split("-")[1];
}
function e3(n) {
  return n === "x" ? "y" : "x";
}
function t3(n) {
  return n === "y" ? "height" : "width";
}
function eE(n) {
  return ["top", "bottom"].includes(Wg(n)) ? "y" : "x";
}
function n3(n) {
  return e3(eE(n));
}
function CZ(n, e, t) {
  t === void 0 && (t = !1);
  const r = J1(n), i = n3(n), o = t3(i);
  let l = i === "x" ? r === (t ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return e.reference[o] > e.floating[o] && (l = bR(l)), [l, bR(l)];
}
function RZ(n) {
  const e = bR(n);
  return [BO(n), e, BO(e)];
}
function BO(n) {
  return n.replace(/start|end/g, (e) => MZ[e]);
}
function AZ(n, e, t) {
  const r = ["left", "right"], i = ["right", "left"], o = ["top", "bottom"], l = ["bottom", "top"];
  switch (n) {
    case "top":
    case "bottom":
      return t ? e ? i : r : e ? r : i;
    case "left":
    case "right":
      return e ? o : l;
    default:
      return [];
  }
}
function DZ(n, e, t, r) {
  const i = J1(n);
  let o = AZ(Wg(n), t === "start", r);
  return i && (o = o.map((l) => l + "-" + i), e && (o = o.concat(o.map(BO)))), o;
}
function bR(n) {
  return n.replace(/left|right|bottom|top/g, (e) => wZ[e]);
}
function LZ(n) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...n
  };
}
function u5(n) {
  return typeof n != "number" ? LZ(n) : {
    top: n,
    right: n,
    bottom: n,
    left: n
  };
}
function TR(n) {
  return {
    ...n,
    top: n.y,
    left: n.x,
    right: n.x + n.width,
    bottom: n.y + n.height
  };
}
function iz(n, e, t) {
  let {
    reference: r,
    floating: i
  } = n;
  const o = eE(e), l = n3(e), u = t3(l), h = Wg(e), p = o === "y", y = r.x + r.width / 2 - i.width / 2, _ = r.y + r.height / 2 - i.height / 2, E = r[u] / 2 - i[u] / 2;
  let w;
  switch (h) {
    case "top":
      w = {
        x: y,
        y: r.y - i.height
      };
      break;
    case "bottom":
      w = {
        x: y,
        y: r.y + r.height
      };
      break;
    case "right":
      w = {
        x: r.x + r.width,
        y: _
      };
      break;
    case "left":
      w = {
        x: r.x - i.width,
        y: _
      };
      break;
    default:
      w = {
        x: r.x,
        y: r.y
      };
  }
  switch (J1(e)) {
    case "start":
      w[l] -= E * (t && p ? -1 : 1);
      break;
    case "end":
      w[l] += E * (t && p ? -1 : 1);
      break;
  }
  return w;
}
const OZ = async (n, e, t) => {
  const {
    placement: r = "bottom",
    strategy: i = "absolute",
    middleware: o = [],
    platform: l
  } = t, u = o.filter(Boolean), h = await (l.isRTL == null ? void 0 : l.isRTL(e));
  let p = await l.getElementRects({
    reference: n,
    floating: e,
    strategy: i
  }), {
    x: y,
    y: _
  } = iz(p, r, h), E = r, w = {}, R = 0;
  for (let U = 0; U < u.length; U++) {
    const {
      name: L,
      fn: A
    } = u[U], {
      x: k,
      y: F,
      data: H,
      reset: B
    } = await A({
      x: y,
      y: _,
      initialPlacement: r,
      placement: E,
      strategy: i,
      middlewareData: w,
      rects: p,
      platform: l,
      elements: {
        reference: n,
        floating: e
      }
    });
    if (y = k ?? y, _ = F ?? _, w = {
      ...w,
      [L]: {
        ...w[L],
        ...H
      }
    }, B && R <= 50) {
      R++, typeof B == "object" && (B.placement && (E = B.placement), B.rects && (p = B.rects === !0 ? await l.getElementRects({
        reference: n,
        floating: e,
        strategy: i
      }) : B.rects), {
        x: y,
        y: _
      } = iz(p, E, h)), U = -1;
      continue;
    }
  }
  return {
    x: y,
    y: _,
    placement: E,
    strategy: i,
    middlewareData: w
  };
};
async function $T(n, e) {
  var t;
  e === void 0 && (e = {});
  const {
    x: r,
    y: i,
    platform: o,
    rects: l,
    elements: u,
    strategy: h
  } = n, {
    boundary: p = "clippingAncestors",
    rootBoundary: y = "viewport",
    elementContext: _ = "floating",
    altBoundary: E = !1,
    padding: w = 0
  } = Gg(e, n), R = u5(w), L = u[E ? _ === "floating" ? "reference" : "floating" : _], A = TR(await o.getClippingRect({
    element: (t = await (o.isElement == null ? void 0 : o.isElement(L))) == null || t ? L : L.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(u.floating)),
    boundary: p,
    rootBoundary: y,
    strategy: h
  })), k = _ === "floating" ? {
    ...l.floating,
    x: r,
    y: i
  } : l.reference, F = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(u.floating)), H = await (o.isElement == null ? void 0 : o.isElement(F)) ? await (o.getScale == null ? void 0 : o.getScale(F)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, B = TR(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect: k,
    offsetParent: F,
    strategy: h
  }) : k);
  return {
    top: (A.top - B.top + R.top) / H.y,
    bottom: (B.bottom - A.bottom + R.bottom) / H.y,
    left: (A.left - B.left + R.left) / H.x,
    right: (B.right - A.right + R.right) / H.x
  };
}
const az = (n) => ({
  name: "arrow",
  options: n,
  async fn(e) {
    const {
      x: t,
      y: r,
      placement: i,
      rects: o,
      platform: l,
      elements: u,
      middlewareData: h
    } = e, {
      element: p,
      padding: y = 0
    } = Gg(n, e) || {};
    if (p == null)
      return {};
    const _ = u5(y), E = {
      x: t,
      y: r
    }, w = n3(i), R = t3(w), U = await l.getDimensions(p), L = w === "y", A = L ? "top" : "left", k = L ? "bottom" : "right", F = L ? "clientHeight" : "clientWidth", H = o.reference[R] + o.reference[w] - E[w] - o.floating[R], B = E[w] - o.reference[w], j = await (l.getOffsetParent == null ? void 0 : l.getOffsetParent(p));
    let Y = j ? j[F] : 0;
    (!Y || !await (l.isElement == null ? void 0 : l.isElement(j))) && (Y = u.floating[F] || o.floating[R]);
    const ee = H / 2 - B / 2, Z = Y / 2 - U[R] / 2 - 1, K = v0(_[A], Z), fe = v0(_[k], Z), se = K, he = Y - U[R] - fe, me = Y / 2 - U[R] / 2 + ee, Ee = IO(se, me, he), be = !h.arrow && J1(i) != null && me != Ee && o.reference[R] / 2 - (me < se ? K : fe) - U[R] / 2 < 0, we = be ? me < se ? me - se : me - he : 0;
    return {
      [w]: E[w] + we,
      data: {
        [w]: Ee,
        centerOffset: me - Ee - we,
        ...be && {
          alignmentOffset: we
        }
      },
      reset: be
    };
  }
}), PZ = function(n) {
  return n === void 0 && (n = {}), {
    name: "flip",
    options: n,
    async fn(e) {
      var t, r;
      const {
        placement: i,
        middlewareData: o,
        rects: l,
        initialPlacement: u,
        platform: h,
        elements: p
      } = e, {
        mainAxis: y = !0,
        crossAxis: _ = !0,
        fallbackPlacements: E,
        fallbackStrategy: w = "bestFit",
        fallbackAxisSideDirection: R = "none",
        flipAlignment: U = !0,
        ...L
      } = Gg(n, e);
      if ((t = o.arrow) != null && t.alignmentOffset)
        return {};
      const A = Wg(i), k = Wg(u) === u, F = await (h.isRTL == null ? void 0 : h.isRTL(p.floating)), H = E || (k || !U ? [bR(u)] : RZ(u));
      !E && R !== "none" && H.push(...DZ(u, U, R, F));
      const B = [u, ...H], j = await $T(e, L), Y = [];
      let ee = ((r = o.flip) == null ? void 0 : r.overflows) || [];
      if (y && Y.push(j[A]), _) {
        const se = CZ(i, l, F);
        Y.push(j[se[0]], j[se[1]]);
      }
      if (ee = [...ee, {
        placement: i,
        overflows: Y
      }], !Y.every((se) => se <= 0)) {
        var Z, K;
        const se = (((Z = o.flip) == null ? void 0 : Z.index) || 0) + 1, he = B[se];
        if (he)
          return {
            data: {
              index: se,
              overflows: ee
            },
            reset: {
              placement: he
            }
          };
        let me = (K = ee.filter((Ee) => Ee.overflows[0] <= 0).sort((Ee, be) => Ee.overflows[1] - be.overflows[1])[0]) == null ? void 0 : K.placement;
        if (!me)
          switch (w) {
            case "bestFit": {
              var fe;
              const Ee = (fe = ee.map((be) => [be.placement, be.overflows.filter((we) => we > 0).reduce((we, de) => we + de, 0)]).sort((be, we) => be[1] - we[1])[0]) == null ? void 0 : fe[0];
              Ee && (me = Ee);
              break;
            }
            case "initialPlacement":
              me = u;
              break;
          }
        if (i !== me)
          return {
            reset: {
              placement: me
            }
          };
      }
      return {};
    }
  };
};
function oz(n, e) {
  return {
    top: n.top - e.height,
    right: n.right - e.width,
    bottom: n.bottom - e.height,
    left: n.left - e.width
  };
}
function sz(n) {
  return TZ.some((e) => n[e] >= 0);
}
const UZ = function(n) {
  return n === void 0 && (n = {}), {
    name: "hide",
    options: n,
    async fn(e) {
      const {
        rects: t
      } = e, {
        strategy: r = "referenceHidden",
        ...i
      } = Gg(n, e);
      switch (r) {
        case "referenceHidden": {
          const o = await $T(e, {
            ...i,
            elementContext: "reference"
          }), l = oz(o, t.reference);
          return {
            data: {
              referenceHiddenOffsets: l,
              referenceHidden: sz(l)
            }
          };
        }
        case "escaped": {
          const o = await $T(e, {
            ...i,
            altBoundary: !0
          }), l = oz(o, t.floating);
          return {
            data: {
              escapedOffsets: l,
              escaped: sz(l)
            }
          };
        }
        default:
          return {};
      }
    }
  };
};
async function NZ(n, e) {
  const {
    placement: t,
    platform: r,
    elements: i
  } = n, o = await (r.isRTL == null ? void 0 : r.isRTL(i.floating)), l = Wg(t), u = J1(t), h = eE(t) === "y", p = ["left", "top"].includes(l) ? -1 : 1, y = o && h ? -1 : 1, _ = Gg(e, n);
  let {
    mainAxis: E,
    crossAxis: w,
    alignmentAxis: R
  } = typeof _ == "number" ? {
    mainAxis: _,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ..._
  };
  return u && typeof R == "number" && (w = u === "end" ? R * -1 : R), h ? {
    x: w * y,
    y: E * p
  } : {
    x: E * p,
    y: w * y
  };
}
const kZ = function(n) {
  return n === void 0 && (n = 0), {
    name: "offset",
    options: n,
    async fn(e) {
      const {
        x: t,
        y: r
      } = e, i = await NZ(e, n);
      return {
        x: t + i.x,
        y: r + i.y,
        data: i
      };
    }
  };
}, FZ = function(n) {
  return n === void 0 && (n = {}), {
    name: "shift",
    options: n,
    async fn(e) {
      const {
        x: t,
        y: r,
        placement: i
      } = e, {
        mainAxis: o = !0,
        crossAxis: l = !1,
        limiter: u = {
          fn: (L) => {
            let {
              x: A,
              y: k
            } = L;
            return {
              x: A,
              y: k
            };
          }
        },
        ...h
      } = Gg(n, e), p = {
        x: t,
        y: r
      }, y = await $T(e, h), _ = eE(Wg(i)), E = e3(_);
      let w = p[E], R = p[_];
      if (o) {
        const L = E === "y" ? "top" : "left", A = E === "y" ? "bottom" : "right", k = w + y[L], F = w - y[A];
        w = IO(k, w, F);
      }
      if (l) {
        const L = _ === "y" ? "top" : "left", A = _ === "y" ? "bottom" : "right", k = R + y[L], F = R - y[A];
        R = IO(k, R, F);
      }
      const U = u.fn({
        ...e,
        [E]: w,
        [_]: R
      });
      return {
        ...U,
        data: {
          x: U.x - t,
          y: U.y - r
        }
      };
    }
  };
}, zZ = function(n) {
  return n === void 0 && (n = {}), {
    options: n,
    fn(e) {
      const {
        x: t,
        y: r,
        placement: i,
        rects: o,
        middlewareData: l
      } = e, {
        offset: u = 0,
        mainAxis: h = !0,
        crossAxis: p = !0
      } = Gg(n, e), y = {
        x: t,
        y: r
      }, _ = eE(i), E = e3(_);
      let w = y[E], R = y[_];
      const U = Gg(u, e), L = typeof U == "number" ? {
        mainAxis: U,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...U
      };
      if (h) {
        const F = E === "y" ? "height" : "width", H = o.reference[E] - o.floating[F] + L.mainAxis, B = o.reference[E] + o.reference[F] - L.mainAxis;
        w < H ? w = H : w > B && (w = B);
      }
      if (p) {
        var A, k;
        const F = E === "y" ? "width" : "height", H = ["top", "left"].includes(Wg(i)), B = o.reference[_] - o.floating[F] + (H && ((A = l.offset) == null ? void 0 : A[_]) || 0) + (H ? 0 : L.crossAxis), j = o.reference[_] + o.reference[F] + (H ? 0 : ((k = l.offset) == null ? void 0 : k[_]) || 0) - (H ? L.crossAxis : 0);
        R < B ? R = B : R > j && (R = j);
      }
      return {
        [E]: w,
        [_]: R
      };
    }
  };
}, IZ = function(n) {
  return n === void 0 && (n = {}), {
    name: "size",
    options: n,
    async fn(e) {
      const {
        placement: t,
        rects: r,
        platform: i,
        elements: o
      } = e, {
        apply: l = () => {
        },
        ...u
      } = Gg(n, e), h = await $T(e, u), p = Wg(t), y = J1(t), _ = eE(t) === "y", {
        width: E,
        height: w
      } = r.floating;
      let R, U;
      p === "top" || p === "bottom" ? (R = p, U = y === (await (i.isRTL == null ? void 0 : i.isRTL(o.floating)) ? "start" : "end") ? "left" : "right") : (U = p, R = y === "end" ? "top" : "bottom");
      const L = w - h[R], A = E - h[U], k = !e.middlewareData.shift;
      let F = L, H = A;
      if (_) {
        const j = E - h.left - h.right;
        H = y || k ? v0(A, j) : j;
      } else {
        const j = w - h.top - h.bottom;
        F = y || k ? v0(L, j) : j;
      }
      if (k && !y) {
        const j = ph(h.left, 0), Y = ph(h.right, 0), ee = ph(h.top, 0), Z = ph(h.bottom, 0);
        _ ? H = E - 2 * (j !== 0 || Y !== 0 ? j + Y : ph(h.left, h.right)) : F = w - 2 * (ee !== 0 || Z !== 0 ? ee + Z : ph(h.top, h.bottom));
      }
      await l({
        ...e,
        availableWidth: H,
        availableHeight: F
      });
      const B = await i.getDimensions(o.floating);
      return E !== B.width || w !== B.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};
function y0(n) {
  return c5(n) ? (n.nodeName || "").toLowerCase() : "#document";
}
function vh(n) {
  var e;
  return (n == null || (e = n.ownerDocument) == null ? void 0 : e.defaultView) || window;
}
function Yg(n) {
  var e;
  return (e = (c5(n) ? n.ownerDocument : n.document) || window.document) == null ? void 0 : e.documentElement;
}
function c5(n) {
  return n instanceof Node || n instanceof vh(n).Node;
}
function jg(n) {
  return n instanceof Element || n instanceof vh(n).Element;
}
function Tv(n) {
  return n instanceof HTMLElement || n instanceof vh(n).HTMLElement;
}
function lz(n) {
  return typeof ShadowRoot > "u" ? !1 : n instanceof ShadowRoot || n instanceof vh(n).ShadowRoot;
}
function uw(n) {
  const {
    overflow: e,
    overflowX: t,
    overflowY: r,
    display: i
  } = hp(n);
  return /auto|scroll|overlay|hidden|clip/.test(e + r + t) && !["inline", "contents"].includes(i);
}
function BZ(n) {
  return ["table", "td", "th"].includes(y0(n));
}
function r3(n) {
  const e = i3(), t = hp(n);
  return t.transform !== "none" || t.perspective !== "none" || (t.containerType ? t.containerType !== "normal" : !1) || !e && (t.backdropFilter ? t.backdropFilter !== "none" : !1) || !e && (t.filter ? t.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((r) => (t.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (t.contain || "").includes(r));
}
function HZ(n) {
  let e = G1(n);
  for (; Tv(e) && !g2(e); ) {
    if (r3(e))
      return e;
    e = G1(e);
  }
  return null;
}
function i3() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function g2(n) {
  return ["html", "body", "#document"].includes(y0(n));
}
function hp(n) {
  return vh(n).getComputedStyle(n);
}
function y2(n) {
  return jg(n) ? {
    scrollLeft: n.scrollLeft,
    scrollTop: n.scrollTop
  } : {
    scrollLeft: n.pageXOffset,
    scrollTop: n.pageYOffset
  };
}
function G1(n) {
  if (y0(n) === "html")
    return n;
  const e = (
    // Step into the shadow DOM of the parent of a slotted node.
    n.assignedSlot || // DOM Element detected.
    n.parentNode || // ShadowRoot detected.
    lz(n) && n.host || // Fallback.
    Yg(n)
  );
  return lz(e) ? e.host : e;
}
function f5(n) {
  const e = G1(n);
  return g2(e) ? n.ownerDocument ? n.ownerDocument.body : n.body : Tv(e) && uw(e) ? e : f5(e);
}
function YT(n, e, t) {
  var r;
  e === void 0 && (e = []), t === void 0 && (t = !0);
  const i = f5(n), o = i === ((r = n.ownerDocument) == null ? void 0 : r.body), l = vh(i);
  return o ? e.concat(l, l.visualViewport || [], uw(i) ? i : [], l.frameElement && t ? YT(l.frameElement) : []) : e.concat(i, YT(i, [], t));
}
function d5(n) {
  const e = hp(n);
  let t = parseFloat(e.width) || 0, r = parseFloat(e.height) || 0;
  const i = Tv(n), o = i ? n.offsetWidth : t, l = i ? n.offsetHeight : r, u = ER(t) !== o || ER(r) !== l;
  return u && (t = o, r = l), {
    width: t,
    height: r,
    $: u
  };
}
function a3(n) {
  return jg(n) ? n : n.contextElement;
}
function F1(n) {
  const e = a3(n);
  if (!Tv(e))
    return g0(1);
  const t = e.getBoundingClientRect(), {
    width: r,
    height: i,
    $: o
  } = d5(e);
  let l = (o ? ER(t.width) : t.width) / r, u = (o ? ER(t.height) : t.height) / i;
  return (!l || !Number.isFinite(l)) && (l = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: l,
    y: u
  };
}
const VZ = /* @__PURE__ */ g0(0);
function h5(n) {
  const e = vh(n);
  return !i3() || !e.visualViewport ? VZ : {
    x: e.visualViewport.offsetLeft,
    y: e.visualViewport.offsetTop
  };
}
function GZ(n, e, t) {
  return e === void 0 && (e = !1), !t || e && t !== vh(n) ? !1 : e;
}
function p_(n, e, t, r) {
  e === void 0 && (e = !1), t === void 0 && (t = !1);
  const i = n.getBoundingClientRect(), o = a3(n);
  let l = g0(1);
  e && (r ? jg(r) && (l = F1(r)) : l = F1(n));
  const u = GZ(o, t, r) ? h5(o) : g0(0);
  let h = (i.left + u.x) / l.x, p = (i.top + u.y) / l.y, y = i.width / l.x, _ = i.height / l.y;
  if (o) {
    const E = vh(o), w = r && jg(r) ? vh(r) : r;
    let R = E.frameElement;
    for (; R && r && w !== E; ) {
      const U = F1(R), L = R.getBoundingClientRect(), A = hp(R), k = L.left + (R.clientLeft + parseFloat(A.paddingLeft)) * U.x, F = L.top + (R.clientTop + parseFloat(A.paddingTop)) * U.y;
      h *= U.x, p *= U.y, y *= U.x, _ *= U.y, h += k, p += F, R = vh(R).frameElement;
    }
  }
  return TR({
    width: y,
    height: _,
    x: h,
    y: p
  });
}
function WZ(n) {
  let {
    rect: e,
    offsetParent: t,
    strategy: r
  } = n;
  const i = Tv(t), o = Yg(t);
  if (t === o)
    return e;
  let l = {
    scrollLeft: 0,
    scrollTop: 0
  }, u = g0(1);
  const h = g0(0);
  if ((i || !i && r !== "fixed") && ((y0(t) !== "body" || uw(o)) && (l = y2(t)), Tv(t))) {
    const p = p_(t);
    u = F1(t), h.x = p.x + t.clientLeft, h.y = p.y + t.clientTop;
  }
  return {
    width: e.width * u.x,
    height: e.height * u.y,
    x: e.x * u.x - l.scrollLeft * u.x + h.x,
    y: e.y * u.y - l.scrollTop * u.y + h.y
  };
}
function jZ(n) {
  return Array.from(n.getClientRects());
}
function p5(n) {
  return p_(Yg(n)).left + y2(n).scrollLeft;
}
function $Z(n) {
  const e = Yg(n), t = y2(n), r = n.ownerDocument.body, i = ph(e.scrollWidth, e.clientWidth, r.scrollWidth, r.clientWidth), o = ph(e.scrollHeight, e.clientHeight, r.scrollHeight, r.clientHeight);
  let l = -t.scrollLeft + p5(n);
  const u = -t.scrollTop;
  return hp(r).direction === "rtl" && (l += ph(e.clientWidth, r.clientWidth) - i), {
    width: i,
    height: o,
    x: l,
    y: u
  };
}
function YZ(n, e) {
  const t = vh(n), r = Yg(n), i = t.visualViewport;
  let o = r.clientWidth, l = r.clientHeight, u = 0, h = 0;
  if (i) {
    o = i.width, l = i.height;
    const p = i3();
    (!p || p && e === "fixed") && (u = i.offsetLeft, h = i.offsetTop);
  }
  return {
    width: o,
    height: l,
    x: u,
    y: h
  };
}
function XZ(n, e) {
  const t = p_(n, !0, e === "fixed"), r = t.top + n.clientTop, i = t.left + n.clientLeft, o = Tv(n) ? F1(n) : g0(1), l = n.clientWidth * o.x, u = n.clientHeight * o.y, h = i * o.x, p = r * o.y;
  return {
    width: l,
    height: u,
    x: h,
    y: p
  };
}
function uz(n, e, t) {
  let r;
  if (e === "viewport")
    r = YZ(n, t);
  else if (e === "document")
    r = $Z(Yg(n));
  else if (jg(e))
    r = XZ(e, t);
  else {
    const i = h5(n);
    r = {
      ...e,
      x: e.x - i.x,
      y: e.y - i.y
    };
  }
  return TR(r);
}
function m5(n, e) {
  const t = G1(n);
  return t === e || !jg(t) || g2(t) ? !1 : hp(t).position === "fixed" || m5(t, e);
}
function qZ(n, e) {
  const t = e.get(n);
  if (t)
    return t;
  let r = YT(n, [], !1).filter((u) => jg(u) && y0(u) !== "body"), i = null;
  const o = hp(n).position === "fixed";
  let l = o ? G1(n) : n;
  for (; jg(l) && !g2(l); ) {
    const u = hp(l), h = r3(l);
    !h && u.position === "fixed" && (i = null), (o ? !h && !i : !h && u.position === "static" && !!i && ["absolute", "fixed"].includes(i.position) || uw(l) && !h && m5(n, l)) ? r = r.filter((y) => y !== l) : i = u, l = G1(l);
  }
  return e.set(n, r), r;
}
function KZ(n) {
  let {
    element: e,
    boundary: t,
    rootBoundary: r,
    strategy: i
  } = n;
  const l = [...t === "clippingAncestors" ? qZ(e, this._c) : [].concat(t), r], u = l[0], h = l.reduce((p, y) => {
    const _ = uz(e, y, i);
    return p.top = ph(_.top, p.top), p.right = v0(_.right, p.right), p.bottom = v0(_.bottom, p.bottom), p.left = ph(_.left, p.left), p;
  }, uz(e, u, i));
  return {
    width: h.right - h.left,
    height: h.bottom - h.top,
    x: h.left,
    y: h.top
  };
}
function QZ(n) {
  return d5(n);
}
function ZZ(n, e, t) {
  const r = Tv(e), i = Yg(e), o = t === "fixed", l = p_(n, !0, o, e);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const h = g0(0);
  if (r || !r && !o)
    if ((y0(e) !== "body" || uw(i)) && (u = y2(e)), r) {
      const p = p_(e, !0, o, e);
      h.x = p.x + e.clientLeft, h.y = p.y + e.clientTop;
    } else
      i && (h.x = p5(i));
  return {
    x: l.left + u.scrollLeft - h.x,
    y: l.top + u.scrollTop - h.y,
    width: l.width,
    height: l.height
  };
}
function cz(n, e) {
  return !Tv(n) || hp(n).position === "fixed" ? null : e ? e(n) : n.offsetParent;
}
function v5(n, e) {
  const t = vh(n);
  if (!Tv(n))
    return t;
  let r = cz(n, e);
  for (; r && BZ(r) && hp(r).position === "static"; )
    r = cz(r, e);
  return r && (y0(r) === "html" || y0(r) === "body" && hp(r).position === "static" && !r3(r)) ? t : r || HZ(n) || t;
}
const JZ = async function(n) {
  let {
    reference: e,
    floating: t,
    strategy: r
  } = n;
  const i = this.getOffsetParent || v5, o = this.getDimensions;
  return {
    reference: ZZ(e, await i(t), r),
    floating: {
      x: 0,
      y: 0,
      ...await o(t)
    }
  };
};
function eJ(n) {
  return hp(n).direction === "rtl";
}
const tJ = {
  convertOffsetParentRelativeRectToViewportRelativeRect: WZ,
  getDocumentElement: Yg,
  getClippingRect: KZ,
  getOffsetParent: v5,
  getElementRects: JZ,
  getClientRects: jZ,
  getDimensions: QZ,
  getScale: F1,
  isElement: jg,
  isRTL: eJ
};
function nJ(n, e) {
  let t = null, r;
  const i = Yg(n);
  function o() {
    clearTimeout(r), t && t.disconnect(), t = null;
  }
  function l(u, h) {
    u === void 0 && (u = !1), h === void 0 && (h = 1), o();
    const {
      left: p,
      top: y,
      width: _,
      height: E
    } = n.getBoundingClientRect();
    if (u || e(), !_ || !E)
      return;
    const w = qC(y), R = qC(i.clientWidth - (p + _)), U = qC(i.clientHeight - (y + E)), L = qC(p), k = {
      rootMargin: -w + "px " + -R + "px " + -U + "px " + -L + "px",
      threshold: ph(0, v0(1, h)) || 1
    };
    let F = !0;
    function H(B) {
      const j = B[0].intersectionRatio;
      if (j !== h) {
        if (!F)
          return l();
        j ? l(!1, j) : r = setTimeout(() => {
          l(!1, 1e-7);
        }, 100);
      }
      F = !1;
    }
    try {
      t = new IntersectionObserver(H, {
        ...k,
        // Handle <iframe>s
        root: i.ownerDocument
      });
    } catch {
      t = new IntersectionObserver(H, k);
    }
    t.observe(n);
  }
  return l(!0), o;
}
function rJ(n, e, t, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: i = !0,
    ancestorResize: o = !0,
    elementResize: l = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: h = !1
  } = r, p = a3(n), y = i || o ? [...p ? YT(p) : [], ...YT(e)] : [];
  y.forEach((A) => {
    i && A.addEventListener("scroll", t, {
      passive: !0
    }), o && A.addEventListener("resize", t);
  });
  const _ = p && u ? nJ(p, t) : null;
  let E = -1, w = null;
  l && (w = new ResizeObserver((A) => {
    let [k] = A;
    k && k.target === p && w && (w.unobserve(e), cancelAnimationFrame(E), E = requestAnimationFrame(() => {
      w && w.observe(e);
    })), t();
  }), p && !h && w.observe(p), w.observe(e));
  let R, U = h ? p_(n) : null;
  h && L();
  function L() {
    const A = p_(n);
    U && (A.x !== U.x || A.y !== U.y || A.width !== U.width || A.height !== U.height) && t(), U = A, R = requestAnimationFrame(L);
  }
  return t(), () => {
    y.forEach((A) => {
      i && A.removeEventListener("scroll", t), o && A.removeEventListener("resize", t);
    }), _ && _(), w && w.disconnect(), w = null, h && cancelAnimationFrame(R);
  };
}
const iJ = (n, e, t) => {
  const r = /* @__PURE__ */ new Map(), i = {
    platform: tJ,
    ...t
  }, o = {
    ...i.platform,
    _c: r
  };
  return OZ(n, e, {
    ...i,
    platform: o
  });
}, aJ = (n) => {
  function e(t) {
    return {}.hasOwnProperty.call(t, "current");
  }
  return {
    name: "arrow",
    options: n,
    fn(t) {
      const {
        element: r,
        padding: i
      } = typeof n == "function" ? n(t) : n;
      return r && e(r) ? r.current != null ? az({
        element: r.current,
        padding: i
      }).fn(t) : {} : r ? az({
        element: r,
        padding: i
      }).fn(t) : {};
    }
  };
};
var dR = typeof document < "u" ? le.useLayoutEffect : le.useEffect;
function wR(n, e) {
  if (n === e)
    return !0;
  if (typeof n != typeof e)
    return !1;
  if (typeof n == "function" && n.toString() === e.toString())
    return !0;
  let t, r, i;
  if (n && e && typeof n == "object") {
    if (Array.isArray(n)) {
      if (t = n.length, t != e.length)
        return !1;
      for (r = t; r-- !== 0; )
        if (!wR(n[r], e[r]))
          return !1;
      return !0;
    }
    if (i = Object.keys(n), t = i.length, t !== Object.keys(e).length)
      return !1;
    for (r = t; r-- !== 0; )
      if (!{}.hasOwnProperty.call(e, i[r]))
        return !1;
    for (r = t; r-- !== 0; ) {
      const o = i[r];
      if (!(o === "_owner" && n.$$typeof) && !wR(n[o], e[o]))
        return !1;
    }
    return !0;
  }
  return n !== n && e !== e;
}
function g5(n) {
  return typeof window > "u" ? 1 : (n.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function fz(n, e) {
  const t = g5(n);
  return Math.round(e * t) / t;
}
function dz(n) {
  const e = le.useRef(n);
  return dR(() => {
    e.current = n;
  }), e;
}
function oJ(n) {
  n === void 0 && (n = {});
  const {
    placement: e = "bottom",
    strategy: t = "absolute",
    middleware: r = [],
    platform: i,
    elements: {
      reference: o,
      floating: l
    } = {},
    transform: u = !0,
    whileElementsMounted: h,
    open: p
  } = n, [y, _] = le.useState({
    x: 0,
    y: 0,
    strategy: t,
    placement: e,
    middlewareData: {},
    isPositioned: !1
  }), [E, w] = le.useState(r);
  wR(E, r) || w(r);
  const [R, U] = le.useState(null), [L, A] = le.useState(null), k = le.useCallback((be) => {
    be != j.current && (j.current = be, U(be));
  }, [U]), F = le.useCallback((be) => {
    be !== Y.current && (Y.current = be, A(be));
  }, [A]), H = o || R, B = l || L, j = le.useRef(null), Y = le.useRef(null), ee = le.useRef(y), Z = dz(h), K = dz(i), fe = le.useCallback(() => {
    if (!j.current || !Y.current)
      return;
    const be = {
      placement: e,
      strategy: t,
      middleware: E
    };
    K.current && (be.platform = K.current), iJ(j.current, Y.current, be).then((we) => {
      const de = {
        ...we,
        isPositioned: !0
      };
      se.current && !wR(ee.current, de) && (ee.current = de, h2.flushSync(() => {
        _(de);
      }));
    });
  }, [E, e, t, K]);
  dR(() => {
    p === !1 && ee.current.isPositioned && (ee.current.isPositioned = !1, _((be) => ({
      ...be,
      isPositioned: !1
    })));
  }, [p]);
  const se = le.useRef(!1);
  dR(() => (se.current = !0, () => {
    se.current = !1;
  }), []), dR(() => {
    if (H && (j.current = H), B && (Y.current = B), H && B) {
      if (Z.current)
        return Z.current(H, B, fe);
      fe();
    }
  }, [H, B, fe, Z]);
  const he = le.useMemo(() => ({
    reference: j,
    floating: Y,
    setReference: k,
    setFloating: F
  }), [k, F]), me = le.useMemo(() => ({
    reference: H,
    floating: B
  }), [H, B]), Ee = le.useMemo(() => {
    const be = {
      position: t,
      left: 0,
      top: 0
    };
    if (!me.floating)
      return be;
    const we = fz(me.floating, y.x), de = fz(me.floating, y.y);
    return u ? {
      ...be,
      transform: "translate(" + we + "px, " + de + "px)",
      ...g5(me.floating) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: t,
      left: we,
      top: de
    };
  }, [t, u, me.floating, y.x, y.y]);
  return le.useMemo(() => ({
    ...y,
    update: fe,
    refs: he,
    elements: me,
    floatingStyles: Ee
  }), [y, fe, he, me, Ee]);
}
const sJ = /* @__PURE__ */ le.forwardRef((n, e) => {
  const { children: t, width: r = 10, height: i = 5, ...o } = n;
  return /* @__PURE__ */ le.createElement(__.svg, bs({}, o, {
    ref: e,
    width: r,
    height: i,
    viewBox: "0 0 30 10",
    preserveAspectRatio: "none"
  }), n.asChild ? t : /* @__PURE__ */ le.createElement("polygon", {
    points: "0,0 30,0 15,10"
  }));
}), lJ = sJ;
function uJ(n) {
  const [e, t] = le.useState(void 0);
  return V1(() => {
    if (n) {
      t({
        width: n.offsetWidth,
        height: n.offsetHeight
      });
      const r = new ResizeObserver((i) => {
        if (!Array.isArray(i) || !i.length)
          return;
        const o = i[0];
        let l, u;
        if ("borderBoxSize" in o) {
          const h = o.borderBoxSize, p = Array.isArray(h) ? h[0] : h;
          l = p.inlineSize, u = p.blockSize;
        } else
          l = n.offsetWidth, u = n.offsetHeight;
        t({
          width: l,
          height: u
        });
      });
      return r.observe(n, {
        box: "border-box"
      }), () => r.unobserve(n);
    } else
      t(void 0);
  }, [
    n
  ]), e;
}
const y5 = "Popper", [S5, _5] = s5(y5), [cJ, x5] = S5(y5), fJ = (n) => {
  const { __scopePopper: e, children: t } = n, [r, i] = le.useState(null);
  return /* @__PURE__ */ le.createElement(cJ, {
    scope: e,
    anchor: r,
    onAnchorChange: i
  }, t);
}, dJ = "PopperAnchor", hJ = /* @__PURE__ */ le.forwardRef((n, e) => {
  const { __scopePopper: t, virtualRef: r, ...i } = n, o = x5(dJ, t), l = le.useRef(null), u = K1(e, l);
  return le.useEffect(() => {
    o.onAnchorChange((r == null ? void 0 : r.current) || l.current);
  }), r ? null : /* @__PURE__ */ le.createElement(__.div, bs({}, i, {
    ref: u
  }));
}), E5 = "PopperContent", [pJ, mJ] = S5(E5), vJ = /* @__PURE__ */ le.forwardRef((n, e) => {
  var t, r, i, o, l, u, h, p;
  const { __scopePopper: y, side: _ = "bottom", sideOffset: E = 0, align: w = "center", alignOffset: R = 0, arrowPadding: U = 0, avoidCollisions: L = !0, collisionBoundary: A = [], collisionPadding: k = 0, sticky: F = "partial", hideWhenDetached: H = !1, updatePositionStrategy: B = "optimized", onPlaced: j, ...Y } = n, ee = x5(E5, y), [Z, K] = le.useState(null), fe = K1(
    e,
    ($e) => K($e)
  ), [se, he] = le.useState(null), me = uJ(se), Ee = (t = me == null ? void 0 : me.width) !== null && t !== void 0 ? t : 0, be = (r = me == null ? void 0 : me.height) !== null && r !== void 0 ? r : 0, we = _ + (w !== "center" ? "-" + w : ""), de = typeof k == "number" ? k : {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...k
  }, ye = Array.isArray(A) ? A : [
    A
  ], X = ye.length > 0, q = {
    padding: de,
    boundary: ye.filter(_J),
    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
    altBoundary: X
  }, { refs: ue, floatingStyles: Ce, placement: Ae, isPositioned: De, middlewareData: Ne } = oJ({
    // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
    strategy: "fixed",
    placement: we,
    whileElementsMounted: (...$e) => rJ(...$e, {
      animationFrame: B === "always"
    }),
    elements: {
      reference: ee.anchor
    },
    middleware: [
      kZ({
        mainAxis: E + be,
        alignmentAxis: R
      }),
      L && FZ({
        mainAxis: !0,
        crossAxis: !1,
        limiter: F === "partial" ? zZ() : void 0,
        ...q
      }),
      L && PZ({
        ...q
      }),
      IZ({
        ...q,
        apply: ({ elements: $e, rects: Ye, availableWidth: zt, availableHeight: ot }) => {
          const { width: Dt, height: kt } = Ye.reference, mt = $e.floating.style;
          mt.setProperty("--radix-popper-available-width", `${zt}px`), mt.setProperty("--radix-popper-available-height", `${ot}px`), mt.setProperty("--radix-popper-anchor-width", `${Dt}px`), mt.setProperty("--radix-popper-anchor-height", `${kt}px`);
        }
      }),
      se && aJ({
        element: se,
        padding: U
      }),
      xJ({
        arrowWidth: Ee,
        arrowHeight: be
      }),
      H && UZ({
        strategy: "referenceHidden",
        ...q
      })
    ]
  }), [Pe, Fe] = b5(Ae), it = Z1(j);
  V1(() => {
    De && (it == null || it());
  }, [
    De,
    it
  ]);
  const Ot = (i = Ne.arrow) === null || i === void 0 ? void 0 : i.x, st = (o = Ne.arrow) === null || o === void 0 ? void 0 : o.y, oe = ((l = Ne.arrow) === null || l === void 0 ? void 0 : l.centerOffset) !== 0, [rt, qe] = le.useState();
  return V1(() => {
    Z && qe(window.getComputedStyle(Z).zIndex);
  }, [
    Z
  ]), /* @__PURE__ */ le.createElement("div", {
    ref: ue.setFloating,
    "data-radix-popper-content-wrapper": "",
    style: {
      ...Ce,
      transform: De ? Ce.transform : "translate(0, -200%)",
      // keep off the page when measuring
      minWidth: "max-content",
      zIndex: rt,
      "--radix-popper-transform-origin": [
        (u = Ne.transformOrigin) === null || u === void 0 ? void 0 : u.x,
        (h = Ne.transformOrigin) === null || h === void 0 ? void 0 : h.y
      ].join(" ")
    },
    dir: n.dir
  }, /* @__PURE__ */ le.createElement(pJ, {
    scope: y,
    placedSide: Pe,
    onArrowChange: he,
    arrowX: Ot,
    arrowY: st,
    shouldHideArrow: oe
  }, /* @__PURE__ */ le.createElement(__.div, bs({
    "data-side": Pe,
    "data-align": Fe
  }, Y, {
    ref: fe,
    style: {
      ...Y.style,
      // if the PopperContent hasn't been placed yet (not all measurements done)
      // we prevent animations so that users's animation don't kick in too early referring wrong sides
      animation: De ? void 0 : "none",
      // hide the content if using the hide middleware and should be hidden
      opacity: (p = Ne.hide) !== null && p !== void 0 && p.referenceHidden ? 0 : void 0
    }
  }))));
}), gJ = "PopperArrow", yJ = {
  top: "bottom",
  right: "left",
  bottom: "top",
  left: "right"
}, SJ = /* @__PURE__ */ le.forwardRef(function(e, t) {
  const { __scopePopper: r, ...i } = e, o = mJ(gJ, r), l = yJ[o.placedSide];
  return (
    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)
    // doesn't report size as we'd expect on SVG elements.
    // it reports their bounding box which is effectively the largest path inside the SVG.
    /* @__PURE__ */ le.createElement("span", {
      ref: o.onArrowChange,
      style: {
        position: "absolute",
        left: o.arrowX,
        top: o.arrowY,
        [l]: 0,
        transformOrigin: {
          top: "",
          right: "0 0",
          bottom: "center 0",
          left: "100% 0"
        }[o.placedSide],
        transform: {
          top: "translateY(100%)",
          right: "translateY(50%) rotate(90deg) translateX(-50%)",
          bottom: "rotate(180deg)",
          left: "translateY(50%) rotate(-90deg) translateX(50%)"
        }[o.placedSide],
        visibility: o.shouldHideArrow ? "hidden" : void 0
      }
    }, /* @__PURE__ */ le.createElement(lJ, bs({}, i, {
      ref: t,
      style: {
        ...i.style,
        // ensures the element can be measured correctly (mostly for if SVG)
        display: "block"
      }
    })))
  );
});
function _J(n) {
  return n !== null;
}
const xJ = (n) => ({
  name: "transformOrigin",
  options: n,
  fn(e) {
    var t, r, i, o, l;
    const { placement: u, rects: h, middlewareData: p } = e, _ = ((t = p.arrow) === null || t === void 0 ? void 0 : t.centerOffset) !== 0, E = _ ? 0 : n.arrowWidth, w = _ ? 0 : n.arrowHeight, [R, U] = b5(u), L = {
      start: "0%",
      center: "50%",
      end: "100%"
    }[U], A = ((r = (i = p.arrow) === null || i === void 0 ? void 0 : i.x) !== null && r !== void 0 ? r : 0) + E / 2, k = ((o = (l = p.arrow) === null || l === void 0 ? void 0 : l.y) !== null && o !== void 0 ? o : 0) + w / 2;
    let F = "", H = "";
    return R === "bottom" ? (F = _ ? L : `${A}px`, H = `${-w}px`) : R === "top" ? (F = _ ? L : `${A}px`, H = `${h.floating.height + w}px`) : R === "right" ? (F = `${-w}px`, H = _ ? L : `${k}px`) : R === "left" && (F = `${h.floating.width + w}px`, H = _ ? L : `${k}px`), {
      data: {
        x: F,
        y: H
      }
    };
  }
});
function b5(n) {
  const [e, t = "center"] = n.split("-");
  return [
    e,
    t
  ];
}
const EJ = fJ, bJ = hJ, TJ = vJ, wJ = SJ;
function MJ(n, e) {
  return le.useReducer((t, r) => {
    const i = e[t][r];
    return i ?? t;
  }, n);
}
const T5 = (n) => {
  const { present: e, children: t } = n, r = CJ(e), i = typeof t == "function" ? t({
    present: r.isPresent
  }) : le.Children.only(t), o = K1(r.ref, i.ref);
  return typeof t == "function" || r.isPresent ? /* @__PURE__ */ le.cloneElement(i, {
    ref: o
  }) : null;
};
T5.displayName = "Presence";
function CJ(n) {
  const [e, t] = le.useState(), r = le.useRef({}), i = le.useRef(n), o = le.useRef("none"), l = n ? "mounted" : "unmounted", [u, h] = MJ(l, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  return le.useEffect(() => {
    const p = KC(r.current);
    o.current = u === "mounted" ? p : "none";
  }, [
    u
  ]), V1(() => {
    const p = r.current, y = i.current;
    if (y !== n) {
      const E = o.current, w = KC(p);
      n ? h("MOUNT") : w === "none" || (p == null ? void 0 : p.display) === "none" ? h("UNMOUNT") : h(y && E !== w ? "ANIMATION_OUT" : "UNMOUNT"), i.current = n;
    }
  }, [
    n,
    h
  ]), V1(() => {
    if (e) {
      const p = (_) => {
        const w = KC(r.current).includes(_.animationName);
        _.target === e && w && h2.flushSync(
          () => h("ANIMATION_END")
        );
      }, y = (_) => {
        _.target === e && (o.current = KC(r.current));
      };
      return e.addEventListener("animationstart", y), e.addEventListener("animationcancel", p), e.addEventListener("animationend", p), () => {
        e.removeEventListener("animationstart", y), e.removeEventListener("animationcancel", p), e.removeEventListener("animationend", p);
      };
    } else
      h("ANIMATION_END");
  }, [
    e,
    h
  ]), {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(u),
    ref: le.useCallback((p) => {
      p && (r.current = getComputedStyle(p)), t(p);
    }, [])
  };
}
function KC(n) {
  return (n == null ? void 0 : n.animationName) || "none";
}
function RJ({ prop: n, defaultProp: e, onChange: t = () => {
} }) {
  const [r, i] = AJ({
    defaultProp: e,
    onChange: t
  }), o = n !== void 0, l = o ? n : r, u = Z1(t), h = le.useCallback((p) => {
    if (o) {
      const _ = typeof p == "function" ? p(n) : p;
      _ !== n && u(_);
    } else
      i(p);
  }, [
    o,
    n,
    i,
    u
  ]);
  return [
    l,
    h
  ];
}
function AJ({ defaultProp: n, onChange: e }) {
  const t = le.useState(n), [r] = t, i = le.useRef(r), o = Z1(e);
  return le.useEffect(() => {
    i.current !== r && (o(r), i.current = r);
  }, [
    r,
    i,
    o
  ]), t;
}
const DJ = /* @__PURE__ */ le.forwardRef((n, e) => /* @__PURE__ */ le.createElement(__.span, bs({}, n, {
  ref: e,
  style: {
    // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
    position: "absolute",
    border: 0,
    width: 1,
    height: 1,
    padding: 0,
    margin: -1,
    overflow: "hidden",
    clip: "rect(0, 0, 0, 0)",
    whiteSpace: "nowrap",
    wordWrap: "normal",
    ...n.style
  }
}))), LJ = DJ, [S2, Pae] = s5("Tooltip", [
  _5
]), _2 = _5(), OJ = "TooltipProvider", HO = "tooltip.open", [Uae, o3] = S2(OJ), s3 = "Tooltip", [PJ, x2] = S2(s3), UJ = (n) => {
  const { __scopeTooltip: e, children: t, open: r, defaultOpen: i = !1, onOpenChange: o, disableHoverableContent: l, delayDuration: u } = n, h = o3(s3, n.__scopeTooltip), p = _2(e), [y, _] = le.useState(null), E = bZ(), w = le.useRef(0), R = l ?? h.disableHoverableContent, U = u ?? h.delayDuration, L = le.useRef(!1), [A = !1, k] = RJ({
    prop: r,
    defaultProp: i,
    onChange: (Y) => {
      Y ? (h.onOpen(), document.dispatchEvent(new CustomEvent(HO))) : h.onClose(), o == null || o(Y);
    }
  }), F = le.useMemo(() => A ? L.current ? "delayed-open" : "instant-open" : "closed", [
    A
  ]), H = le.useCallback(() => {
    window.clearTimeout(w.current), L.current = !1, k(!0);
  }, [
    k
  ]), B = le.useCallback(() => {
    window.clearTimeout(w.current), k(!1);
  }, [
    k
  ]), j = le.useCallback(() => {
    window.clearTimeout(w.current), w.current = window.setTimeout(() => {
      L.current = !0, k(!0);
    }, U);
  }, [
    U,
    k
  ]);
  return le.useEffect(() => () => window.clearTimeout(w.current), []), /* @__PURE__ */ le.createElement(EJ, p, /* @__PURE__ */ le.createElement(PJ, {
    scope: e,
    contentId: E,
    open: A,
    stateAttribute: F,
    trigger: y,
    onTriggerChange: _,
    onTriggerEnter: le.useCallback(() => {
      h.isOpenDelayed ? j() : H();
    }, [
      h.isOpenDelayed,
      j,
      H
    ]),
    onTriggerLeave: le.useCallback(() => {
      R ? B() : window.clearTimeout(w.current);
    }, [
      B,
      R
    ]),
    onOpen: H,
    onClose: B,
    disableHoverableContent: R
  }, t));
}, hz = "TooltipTrigger", NJ = /* @__PURE__ */ le.forwardRef((n, e) => {
  const { __scopeTooltip: t, ...r } = n, i = x2(hz, t), o = o3(hz, t), l = _2(t), u = le.useRef(null), h = K1(e, u, i.onTriggerChange), p = le.useRef(!1), y = le.useRef(!1), _ = le.useCallback(
    () => p.current = !1,
    []
  );
  return le.useEffect(() => () => document.removeEventListener("pointerup", _), [
    _
  ]), /* @__PURE__ */ le.createElement(bJ, bs({
    asChild: !0
  }, l), /* @__PURE__ */ le.createElement(__.button, bs({
    // We purposefully avoid adding `type=button` here because tooltip triggers are also
    // commonly anchors and the anchor `type` attribute signifies MIME type.
    "aria-describedby": i.open ? i.contentId : void 0,
    "data-state": i.stateAttribute
  }, r, {
    ref: h,
    onPointerMove: Pg(n.onPointerMove, (E) => {
      E.pointerType !== "touch" && !y.current && !o.isPointerInTransitRef.current && (i.onTriggerEnter(), y.current = !0);
    }),
    onPointerLeave: Pg(n.onPointerLeave, () => {
      i.onTriggerLeave(), y.current = !1;
    }),
    onPointerDown: Pg(n.onPointerDown, () => {
      p.current = !0, document.addEventListener("pointerup", _, {
        once: !0
      });
    }),
    onFocus: Pg(n.onFocus, () => {
      p.current || i.onOpen();
    }),
    onBlur: Pg(n.onBlur, i.onClose),
    onClick: Pg(n.onClick, i.onClose)
  })));
}), kJ = "TooltipPortal", [Nae, FJ] = S2(kJ, {
  forceMount: void 0
}), XT = "TooltipContent", zJ = /* @__PURE__ */ le.forwardRef((n, e) => {
  const t = FJ(XT, n.__scopeTooltip), { forceMount: r = t.forceMount, side: i = "top", ...o } = n, l = x2(XT, n.__scopeTooltip);
  return /* @__PURE__ */ le.createElement(T5, {
    present: r || l.open
  }, l.disableHoverableContent ? /* @__PURE__ */ le.createElement(w5, bs({
    side: i
  }, o, {
    ref: e
  })) : /* @__PURE__ */ le.createElement(IJ, bs({
    side: i
  }, o, {
    ref: e
  })));
}), IJ = /* @__PURE__ */ le.forwardRef((n, e) => {
  const t = x2(XT, n.__scopeTooltip), r = o3(XT, n.__scopeTooltip), i = le.useRef(null), o = K1(e, i), [l, u] = le.useState(null), { trigger: h, onClose: p } = t, y = i.current, { onPointerInTransitChange: _ } = r, E = le.useCallback(() => {
    u(null), _(!1);
  }, [
    _
  ]), w = le.useCallback((R, U) => {
    const L = R.currentTarget, A = {
      x: R.clientX,
      y: R.clientY
    }, k = WJ(A, L.getBoundingClientRect()), F = jJ(A, k), H = $J(U.getBoundingClientRect()), B = XJ([
      ...F,
      ...H
    ]);
    u(B), _(!0);
  }, [
    _
  ]);
  return le.useEffect(() => () => E(), [
    E
  ]), le.useEffect(() => {
    if (h && y) {
      const R = (L) => w(L, y), U = (L) => w(L, h);
      return h.addEventListener("pointerleave", R), y.addEventListener("pointerleave", U), () => {
        h.removeEventListener("pointerleave", R), y.removeEventListener("pointerleave", U);
      };
    }
  }, [
    h,
    y,
    w,
    E
  ]), le.useEffect(() => {
    if (l) {
      const R = (U) => {
        const L = U.target, A = {
          x: U.clientX,
          y: U.clientY
        }, k = (h == null ? void 0 : h.contains(L)) || (y == null ? void 0 : y.contains(L)), F = !YJ(A, l);
        k ? E() : F && (E(), p());
      };
      return document.addEventListener("pointermove", R), () => document.removeEventListener("pointermove", R);
    }
  }, [
    h,
    y,
    l,
    p,
    E
  ]), /* @__PURE__ */ le.createElement(w5, bs({}, n, {
    ref: o
  }));
}), [BJ, HJ] = S2(s3, {
  isInside: !1
}), w5 = /* @__PURE__ */ le.forwardRef((n, e) => {
  const { __scopeTooltip: t, children: r, "aria-label": i, onEscapeKeyDown: o, onPointerDownOutside: l, ...u } = n, h = x2(XT, t), p = _2(t), { onClose: y } = h;
  return le.useEffect(() => (document.addEventListener(HO, y), () => document.removeEventListener(HO, y)), [
    y
  ]), le.useEffect(() => {
    if (h.trigger) {
      const _ = (E) => {
        const w = E.target;
        w != null && w.contains(h.trigger) && y();
      };
      return window.addEventListener("scroll", _, {
        capture: !0
      }), () => window.removeEventListener("scroll", _, {
        capture: !0
      });
    }
  }, [
    h.trigger,
    y
  ]), /* @__PURE__ */ le.createElement(yZ, {
    asChild: !0,
    disableOutsidePointerEvents: !1,
    onEscapeKeyDown: o,
    onPointerDownOutside: l,
    onFocusOutside: (_) => _.preventDefault(),
    onDismiss: y
  }, /* @__PURE__ */ le.createElement(TJ, bs({
    "data-state": h.stateAttribute
  }, p, u, {
    ref: e,
    style: {
      ...u.style,
      "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
      "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
      "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }), /* @__PURE__ */ le.createElement(t5, null, r), /* @__PURE__ */ le.createElement(BJ, {
    scope: t,
    isInside: !0
  }, /* @__PURE__ */ le.createElement(LJ, {
    id: h.contentId,
    role: "tooltip"
  }, i || r))));
}), VJ = "TooltipArrow", GJ = /* @__PURE__ */ le.forwardRef((n, e) => {
  const { __scopeTooltip: t, ...r } = n, i = _2(t);
  return HJ(VJ, t).isInside ? null : /* @__PURE__ */ le.createElement(wJ, bs({}, i, r, {
    ref: e
  }));
});
function WJ(n, e) {
  const t = Math.abs(e.top - n.y), r = Math.abs(e.bottom - n.y), i = Math.abs(e.right - n.x), o = Math.abs(e.left - n.x);
  switch (Math.min(t, r, i, o)) {
    case o:
      return "left";
    case i:
      return "right";
    case t:
      return "top";
    case r:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function jJ(n, e, t = 5) {
  const r = [];
  switch (e) {
    case "top":
      r.push({
        x: n.x - t,
        y: n.y + t
      }, {
        x: n.x + t,
        y: n.y + t
      });
      break;
    case "bottom":
      r.push({
        x: n.x - t,
        y: n.y - t
      }, {
        x: n.x + t,
        y: n.y - t
      });
      break;
    case "left":
      r.push({
        x: n.x + t,
        y: n.y - t
      }, {
        x: n.x + t,
        y: n.y + t
      });
      break;
    case "right":
      r.push({
        x: n.x - t,
        y: n.y - t
      }, {
        x: n.x - t,
        y: n.y + t
      });
      break;
  }
  return r;
}
function $J(n) {
  const { top: e, right: t, bottom: r, left: i } = n;
  return [
    {
      x: i,
      y: e
    },
    {
      x: t,
      y: e
    },
    {
      x: t,
      y: r
    },
    {
      x: i,
      y: r
    }
  ];
}
function YJ(n, e) {
  const { x: t, y: r } = n;
  let i = !1;
  for (let o = 0, l = e.length - 1; o < e.length; l = o++) {
    const u = e[o].x, h = e[o].y, p = e[l].x, y = e[l].y;
    h > r != y > r && t < (p - u) * (r - h) / (y - h) + u && (i = !i);
  }
  return i;
}
function XJ(n) {
  const e = n.slice();
  return e.sort((t, r) => t.x < r.x ? -1 : t.x > r.x ? 1 : t.y < r.y ? -1 : t.y > r.y ? 1 : 0), qJ(e);
}
function qJ(n) {
  if (n.length <= 1)
    return n.slice();
  const e = [];
  for (let r = 0; r < n.length; r++) {
    const i = n[r];
    for (; e.length >= 2; ) {
      const o = e[e.length - 1], l = e[e.length - 2];
      if ((o.x - l.x) * (i.y - l.y) >= (o.y - l.y) * (i.x - l.x))
        e.pop();
      else
        break;
    }
    e.push(i);
  }
  e.pop();
  const t = [];
  for (let r = n.length - 1; r >= 0; r--) {
    const i = n[r];
    for (; t.length >= 2; ) {
      const o = t[t.length - 1], l = t[t.length - 2];
      if ((o.x - l.x) * (i.y - l.y) >= (o.y - l.y) * (i.x - l.x))
        t.pop();
      else
        break;
    }
    t.push(i);
  }
  return t.pop(), e.length === 1 && t.length === 1 && e[0].x === t[0].x && e[0].y === t[0].y ? e : e.concat(t);
}
const KJ = UJ, QJ = NJ, ZJ = zJ, JJ = GJ;
function eee(n, e) {
  if (n == null)
    return {};
  var t = {}, r = Object.keys(n), i, o;
  for (o = 0; o < r.length; o++)
    i = r[o], !(e.indexOf(i) >= 0) && (t[i] = n[i]);
  return t;
}
function ao(n, e) {
  if (n == null)
    return {};
  var t = eee(n, e), r, i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(n);
    for (i = 0; i < o.length; i++)
      r = o[i], !(e.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(n, r) && (t[r] = n[r]);
  }
  return t;
}
let ys;
(function(n) {
  n[n.UNSUPPORTED_INPUT = 0] = "UNSUPPORTED_INPUT", n[n.NO_COMPONENT_FOR_TYPE = 1] = "NO_COMPONENT_FOR_TYPE", n[n.UNKNOWN_INPUT = 2] = "UNKNOWN_INPUT", n[n.DUPLICATE_KEYS = 3] = "DUPLICATE_KEYS", n[n.ALREADY_REGISTERED_TYPE = 4] = "ALREADY_REGISTERED_TYPE", n[n.CLIPBOARD_ERROR = 5] = "CLIPBOARD_ERROR", n[n.THEME_ERROR = 6] = "THEME_ERROR", n[n.PATH_DOESNT_EXIST = 7] = "PATH_DOESNT_EXIST", n[n.INPUT_TYPE_OVERRIDE = 8] = "INPUT_TYPE_OVERRIDE", n[n.EMPTY_KEY = 9] = "EMPTY_KEY";
})(ys || (ys = {}));
const tee = {
  [ys.UNSUPPORTED_INPUT]: (n, e) => [`An input with type \`${n}\` input was found at path \`${e}\` but it's not supported yet.`],
  [ys.NO_COMPONENT_FOR_TYPE]: (n, e) => [`Type \`${n}\` found at path \`${e}\` can't be displayed in panel because no component supports it yet.`],
  [ys.UNKNOWN_INPUT]: (n, e) => [`input at path \`${n}\` is not recognized.`, e],
  [ys.DUPLICATE_KEYS]: (n, e, t) => [`Key \`${n}\` of path \`${e}\` already exists at path \`${t}\`. Even nested keys need to be unique. Rename one of the keys.`],
  [ys.ALREADY_REGISTERED_TYPE]: (n) => [`Type ${n} has already been registered. You can't register a component with the same type.`],
  [ys.CLIPBOARD_ERROR]: (n) => ["Error copying the value", n],
  [ys.THEME_ERROR]: (n, e) => [`Error accessing the theme \`${n}.${e}\` value.`],
  [ys.PATH_DOESNT_EXIST]: (n) => [`Error getting the value at path \`${n}\`. There is probably an error in your \`render\` function.`],
  [ys.PATH_DOESNT_EXIST]: (n) => [`Error accessing the value at path \`${n}\``],
  [ys.INPUT_TYPE_OVERRIDE]: (n, e, t) => [`Input at path \`${n}\` already exists with type: \`${e}\`. Its type cannot be overridden with type \`${t}\`.`],
  [ys.EMPTY_KEY]: () => ["Keys can not be empty, if you want to hide a label use whitespace."]
};
function M5(n, e, ...t) {
  const [r, ...i] = tee[e](...t);
  console[n]("LEVA: " + r, ...i);
}
const Ng = M5.bind(null, "warn"), nee = M5.bind(null, "log"), ree = ["value"], iee = ["schema"], aee = ["value"], C5 = [], m_ = {};
function pz(n) {
  let {
    value: e
  } = n, t = ao(n, ree);
  for (let r of C5) {
    const i = r(e, t);
    if (i)
      return i;
  }
}
function Xg(n, e) {
  let {
    schema: t
  } = e, r = ao(e, iee);
  if (n in m_) {
    Ng(ys.ALREADY_REGISTERED_TYPE, n);
    return;
  }
  C5.push((i, o) => t(i, o) && n), m_[n] = r;
}
function bL(n, e, t, r) {
  const {
    normalize: i
  } = m_[n];
  if (i)
    return i(e, t, r);
  if (typeof e != "object" || !("value" in e))
    return {
      value: e
    };
  const {
    value: o
  } = e, l = ao(e, aee);
  return {
    value: o,
    settings: l
  };
}
function oee(n, e, t, r, i, o) {
  const {
    sanitize: l
  } = m_[n];
  return l ? l(e, t, r, i, o) : e;
}
function mz(n, e, t) {
  const {
    format: r
  } = m_[n];
  return r ? r(e, t) : e;
}
function see(n, e, t) {
  return e in n ? Object.defineProperty(n, e, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : n[e] = t, n;
}
function vz(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(n);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(n, i).enumerable;
    })), t.push.apply(t, r);
  }
  return t;
}
function Nr(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2 ? vz(Object(t), !0).forEach(function(r) {
      see(n, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t)) : vz(Object(t)).forEach(function(r) {
      Object.defineProperty(n, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return n;
}
const S0 = (n, e, t) => n > t ? t : n < e ? e : n, lee = (n) => {
  if (n === "" || typeof n == "number")
    return n;
  try {
    const e = l0(n);
    if (!isNaN(e))
      return e;
  } catch {
  }
  return parseFloat(n);
}, uee = Math.log(10);
function gz(n) {
  let e = Math.abs(+String(n).replace(".", ""));
  if (e === 0)
    return 0.01;
  for (; e !== 0 && e % 10 === 0; )
    e /= 10;
  const t = Math.floor(Math.log(e) / uee) + 1, r = Math.floor(Math.log10(Math.abs(n))), i = Math.pow(10, r - t);
  return Math.max(i, 1e-3);
}
const MR = (n, e, t) => t === e ? 0 : (S0(n, e, t) - e) / (t - e), CR = (n, e, t) => n * (t - e) + e, cee = () => "_" + Math.random().toString(36).substr(2, 9), yz = /\(([0-9+\-*/^ .]+)\)/, Sz = /(\d+(?:\.\d+)?) ?\^ ?(\d+(?:\.\d+)?)/, _z = /(\d+(?:\.\d+)?) ?\* ?(\d+(?:\.\d+)?)/, xz = /(\d+(?:\.\d+)?) ?\/ ?(\d+(?:\.\d+)?)/, Ez = /(\d+(?:\.\d+)?) ?\+ ?(\d+(?:\.\d+)?)/, bz = /(\d+(?:\.\d+)?) ?- ?(\d+(?:\.\d+)?)/;
function l0(n) {
  if (isNaN(Number(n)))
    if (yz.test(n)) {
      const e = n.replace(yz, (t, r) => String(l0(r)));
      return l0(e);
    } else if (Sz.test(n)) {
      const e = n.replace(Sz, (t, r, i) => String(Math.pow(Number(r), Number(i))));
      return l0(e);
    } else if (_z.test(n)) {
      const e = n.replace(_z, (t, r, i) => String(Number(r) * Number(i)));
      return l0(e);
    } else if (xz.test(n)) {
      const e = n.replace(xz, (t, r, i) => {
        if (i != 0)
          return String(Number(r) / Number(i));
        throw new Error("Division by zero");
      });
      return l0(e);
    } else if (Ez.test(n)) {
      const e = n.replace(Ez, (t, r, i) => String(Number(r) + Number(i)));
      return l0(e);
    } else if (bz.test(n)) {
      const e = n.replace(bz, (t, r, i) => String(Number(r) - Number(i)));
      return l0(e);
    } else
      return Number(n);
  return Number(n);
}
function fee(n, e) {
  return e.reduce((t, r) => (n && n.hasOwnProperty(r) && (t[r] = n[r]), t), {});
}
function dee(n, e) {
  const t = Nr({}, n);
  return e.forEach((r) => r in n && delete t[r]), t;
}
function hee(n, e) {
  return n.reduce((t, r, i) => Object.assign(t, {
    [e[i]]: r
  }), {});
}
function R5(n) {
  return Object.prototype.toString.call(n) === "[object Object]";
}
const pee = (n) => R5(n) && Object.keys(n).length === 0;
let dp;
(function(n) {
  n.BUTTON = "BUTTON", n.BUTTON_GROUP = "BUTTON_GROUP", n.MONITOR = "MONITOR", n.FOLDER = "FOLDER";
})(dp || (dp = {}));
let fm;
(function(n) {
  n.SELECT = "SELECT", n.IMAGE = "IMAGE", n.NUMBER = "NUMBER", n.COLOR = "COLOR", n.STRING = "STRING", n.BOOLEAN = "BOOLEAN", n.INTERVAL = "INTERVAL", n.VECTOR3D = "VECTOR3D", n.VECTOR2D = "VECTOR2D";
})(fm || (fm = {}));
const mee = ["type", "__customInput"], vee = ["render", "label", "optional", "order", "disabled", "hint", "onChange", "onEditStart", "onEditEnd", "transient"], gee = ["type"];
function A5(n, e, t = {}, r) {
  var i, o;
  if (typeof n != "object" || Array.isArray(n))
    return {
      type: r,
      input: n,
      options: Nr({
        key: e,
        label: e,
        optional: !1,
        disabled: !1,
        order: 0
      }, t)
    };
  if ("__customInput" in n) {
    const {
      type: B,
      __customInput: j
    } = n, Y = ao(n, mee);
    return A5(j, e, Y, B);
  }
  const {
    render: l,
    label: u,
    optional: h,
    order: p = 0,
    disabled: y,
    hint: _,
    onChange: E,
    onEditStart: w,
    onEditEnd: R,
    transient: U
  } = n, L = ao(n, vee), A = Nr({
    render: l,
    key: e,
    label: u ?? e,
    hint: _,
    transient: U ?? !!E,
    onEditStart: w,
    onEditEnd: R,
    disabled: y,
    optional: h,
    order: p
  }, t);
  let {
    type: k
  } = L, F = ao(L, gee);
  if (k = r ?? k, k in dp)
    return {
      type: k,
      input: F,
      options: A
    };
  let H;
  return r && R5(F) && "value" in F ? H = F.value : H = pee(F) ? void 0 : F, {
    type: k,
    input: H,
    options: Nr(Nr({}, A), {}, {
      onChange: E,
      optional: (i = A.optional) !== null && i !== void 0 ? i : !1,
      disabled: (o = A.disabled) !== null && o !== void 0 ? o : !1
    })
  };
}
function yee(n, e, t, r) {
  const i = A5(n, e), {
    type: o,
    input: l,
    options: u
  } = i;
  if (o)
    return o in dp ? i : {
      type: o,
      input: bL(o, l, t, r),
      options: u
    };
  let h = pz(l);
  return h ? {
    type: h,
    input: bL(h, l, t, r),
    options: u
  } : (h = pz({
    value: l
  }), h ? {
    type: h,
    input: bL(h, {
      value: l
    }, t, r),
    options: u
  } : !1);
}
function Tz(n, e, t, r, i) {
  const {
    value: o,
    type: l,
    settings: u
  } = n;
  n.value = D5({
    type: l,
    value: o,
    settings: u
  }, e, t, r), n.fromPanel = i;
}
const See = function(e, t, r) {
  this.type = "LEVA_ERROR", this.message = "LEVA: " + e, this.previousValue = t, this.error = r;
};
function D5({
  type: n,
  value: e,
  settings: t
}, r, i, o) {
  const l = n !== "SELECT" && typeof r == "function" ? r(e) : r;
  let u;
  try {
    u = oee(n, l, t, e, i, o);
  } catch (h) {
    throw new See(`The value \`${r}\` did not result in a correct value.`, e, h);
  }
  return WT(u, e) ? e : u;
}
const L5 = (n, e, t = !1) => {
  let r = 0;
  return function() {
    const i = arguments, o = t && !r, l = () => n.apply(this, i);
    window.clearTimeout(r), r = window.setTimeout(l, e), o && l();
  };
}, O5 = (n) => n.shiftKey ? 5 : n.altKey ? 1 / 5 : 1;
function _ee(n, e) {
  const t = console.error;
  console.error = () => {
  }, OB.render(n, e), console.error = t;
}
const xee = ["value"], Eee = ["min", "max"], bee = (n) => {
  if (typeof n == "number")
    return !0;
  if (typeof n == "string") {
    const e = parseFloat(n);
    return isNaN(e) ? !1 : n.substring(("" + e).length).trim().length < 4;
  }
  return !1;
}, P5 = (n, {
  min: e = -1 / 0,
  max: t = 1 / 0,
  suffix: r
}) => {
  const i = parseFloat(n);
  if (n === "" || isNaN(i))
    throw Error("Invalid number");
  const o = S0(i, e, t);
  return r ? o + r : o;
}, Tee = (n, {
  pad: e = 0,
  suffix: t
}) => {
  const r = parseFloat(n).toFixed(e);
  return t ? r + t : r;
}, U5 = (n) => {
  let {
    value: e
  } = n, t = ao(n, xee);
  const {
    min: r = -1 / 0,
    max: i = 1 / 0
  } = t, o = ao(t, Eee);
  let l = parseFloat(e);
  const u = typeof e == "string" ? e.substring(("" + l).length) : void 0;
  l = S0(l, r, i);
  let h = t.step;
  h || (Number.isFinite(r) ? Number.isFinite(i) ? h = +(Math.abs(i - r) / 100).toPrecision(1) : h = +(Math.abs(l - r) / 100).toPrecision(1) : Number.isFinite(i) && (h = +(Math.abs(i - l) / 100).toPrecision(1)));
  const p = h ? gz(h) * 10 : gz(l);
  h = h || p / 10;
  const y = Math.round(S0(Math.log10(1 / p), 0, 2));
  return {
    value: u ? l + u : l,
    settings: Nr({
      initialValue: l,
      step: h,
      pad: y,
      min: r,
      max: i,
      suffix: u
    }, o)
  };
}, N5 = (n, {
  step: e,
  initialValue: t
}) => {
  const r = Math.round((n - t) / e);
  return t + r * e;
};
var k5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  schema: bee,
  sanitize: P5,
  format: Tee,
  normalize: U5,
  sanitizeStep: N5
});
function js() {
  return js = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, js.apply(this, arguments);
}
const F5 = le.createContext({});
function $c() {
  return le.useContext(F5);
}
const l3 = le.createContext(null), z5 = le.createContext(null), I5 = le.createContext(null);
function cw() {
  return le.useContext(z5);
}
function wee() {
  return le.useContext(I5);
}
const B5 = () => ({
  colors: {
    elevation1: "#292d39",
    elevation2: "#181c20",
    elevation3: "#373c4b",
    accent1: "#0066dc",
    accent2: "#007bff",
    accent3: "#3c93ff",
    highlight1: "#535760",
    highlight2: "#8c92a4",
    highlight3: "#fefefe",
    vivid1: "#ffcc00",
    folderWidgetColor: "$highlight2",
    folderTextColor: "$highlight3",
    toolTipBackground: "$highlight3",
    toolTipText: "$elevation2"
  },
  radii: {
    xs: "2px",
    sm: "3px",
    lg: "10px"
  },
  space: {
    xs: "3px",
    sm: "6px",
    md: "10px",
    rowGap: "7px",
    colGap: "7px"
  },
  fonts: {
    mono: "ui-monospace, SFMono-Regular, Menlo, 'Roboto Mono', monospace",
    sans: "system-ui, sans-serif"
  },
  fontSizes: {
    root: "11px",
    toolTip: "$root"
  },
  sizes: {
    rootWidth: "280px",
    controlWidth: "160px",
    numberInputMinWidth: "38px",
    scrubberWidth: "8px",
    scrubberHeight: "16px",
    rowHeight: "24px",
    folderTitleHeight: "20px",
    checkboxSize: "16px",
    joystickWidth: "100px",
    joystickHeight: "100px",
    colorPickerWidth: "$controlWidth",
    colorPickerHeight: "100px",
    imagePreviewWidth: "$controlWidth",
    imagePreviewHeight: "100px",
    monitorHeight: "60px",
    titleBarHeight: "39px"
  },
  shadows: {
    level1: "0 0 9px 0 #00000088",
    level2: "0 4px 14px #00000033"
  },
  borderWidths: {
    root: "0px",
    input: "1px",
    focus: "1px",
    hover: "1px",
    active: "1px",
    folder: "1px"
  },
  fontWeights: {
    label: "normal",
    folder: "normal",
    button: "normal"
  }
});
function QC(n, e) {
  const [t, r] = n.split(" "), i = {};
  return t !== "none" && (i.boxShadow = `${e.inset ? "inset " : ""}0 0 0 $borderWidths${[e.key]} $colors${t !== "default" && t || e.borderColor}`), r && (i.backgroundColor = r), i;
}
const lT = {
  $inputStyle: () => (n) => QC(n, {
    key: "$input",
    borderColor: "$highlight1",
    inset: !0
  }),
  $focusStyle: () => (n) => QC(n, {
    key: "$focus",
    borderColor: "$accent2"
  }),
  $hoverStyle: () => (n) => QC(n, {
    key: "$hover",
    borderColor: "$accent1",
    inset: !0
  }),
  $activeStyle: () => (n) => QC(n, {
    key: "$active",
    borderColor: "$accent1",
    inset: !0
  })
}, {
  styled: Lr,
  css: kae,
  createTheme: Mee,
  globalCss: Cee,
  keyframes: Fae
} = dZ({
  prefix: "leva",
  theme: B5(),
  utils: Nr(Nr({}, lT), {}, {
    $flex: () => ({
      display: "flex",
      alignItems: "center"
    }),
    $flexCenter: () => ({
      display: "flex",
      alignItems: "center",
      justifyContent: "center"
    }),
    $reset: () => ({
      outline: "none",
      fontSize: "inherit",
      fontWeight: "inherit",
      color: "inherit",
      fontFamily: "inherit",
      border: "none",
      backgroundColor: "transparent",
      appearance: "none"
    }),
    $draggable: () => ({
      touchAction: "none",
      WebkitUserDrag: "none",
      userSelect: "none"
    }),
    $focus: (n) => ({
      "&:focus": lT.$focusStyle()(n)
    }),
    $focusWithin: (n) => ({
      "&:focus-within": lT.$focusStyle()(n)
    }),
    $hover: (n) => ({
      "&:hover": lT.$hoverStyle()(n)
    }),
    $active: (n) => ({
      "&:active": lT.$activeStyle()(n)
    })
  })
}), Ree = Cee({
  ".leva__panel__dragged": {
    WebkitUserDrag: "none",
    userSelect: "none",
    input: {
      userSelect: "none"
    },
    "*": {
      cursor: "ew-resize !important"
    }
  }
});
function Aee(n) {
  const e = B5();
  if (!n)
    return {
      theme: e,
      className: ""
    };
  Object.keys(n).forEach((r) => {
    Object.assign(e[r], n[r]);
  });
  const t = Mee(e);
  return {
    theme: e,
    className: t.className
  };
}
function Ig(n, e) {
  const {
    theme: t
  } = le.useContext(l3);
  if (!(n in t) || !(e in t[n]))
    return Ng(ys.THEME_ERROR, n, e), "";
  let r = e;
  for (; ; ) {
    let i = t[n][r];
    if (typeof i == "string" && i.charAt(0) === "$")
      r = i.substr(1);
    else
      return i;
  }
}
const H5 = Lr("input", {
  $reset: "",
  padding: "0 $sm",
  width: 0,
  minWidth: 0,
  flex: 1,
  height: "100%",
  variants: {
    levaType: {
      number: {
        textAlign: "right"
      }
    },
    as: {
      textarea: {
        padding: "$sm"
      }
    }
  }
}), V5 = Lr("div", {
  $draggable: "",
  height: "100%",
  $flexCenter: "",
  position: "relative",
  padding: "0 $xs",
  fontSize: "0.8em",
  opacity: 0.8,
  cursor: "default",
  touchAction: "none",
  [`& + ${H5}`]: {
    paddingLeft: 0
  }
}), Dee = Lr(V5, {
  cursor: "ew-resize",
  marginRight: "-$xs",
  textTransform: "uppercase",
  opacity: 0.3,
  "&:hover": {
    opacity: 1
  },
  variants: {
    dragging: {
      true: {
        backgroundColor: "$accent2",
        opacity: 1
      }
    }
  }
}), Lee = Lr("div", {
  $flex: "",
  position: "relative",
  borderRadius: "$sm",
  overflow: "hidden",
  color: "inherit",
  height: "$rowHeight",
  backgroundColor: "$elevation3",
  $inputStyle: "$elevation1",
  $hover: "",
  $focusWithin: "",
  variants: {
    textArea: {
      true: {
        height: "auto"
      }
    }
  }
}), Oee = ["innerLabel", "value", "onUpdate", "onChange", "onKeyDown", "type", "id", "inputType", "rows"], Pee = ["onUpdate"];
function u3(n) {
  let {
    innerLabel: e,
    value: t,
    onUpdate: r,
    onChange: i,
    onKeyDown: o,
    type: l,
    id: u,
    inputType: h = "text",
    rows: p = 0
  } = n, y = ao(n, Oee);
  const {
    id: _,
    emitOnEditStart: E,
    emitOnEditEnd: w,
    disabled: R
  } = $c(), U = u || _, L = le.useRef(null), A = p > 0, k = A ? "textarea" : "input", F = le.useCallback((j) => (Y) => {
    const ee = Y.currentTarget.value;
    j(ee);
  }, []);
  Be.useEffect(() => {
    const j = L.current, Y = F((ee) => {
      r(ee), w();
    });
    return j == null || j.addEventListener("blur", Y), () => j == null ? void 0 : j.removeEventListener("blur", Y);
  }, [F, r, w]);
  const H = le.useCallback((j) => {
    j.key === "Enter" && F(r)(j);
  }, [F, r]), B = Object.assign({
    as: k
  }, A ? {
    rows: p
  } : {}, y);
  return Be.createElement(Lee, {
    textArea: A
  }, e && typeof e == "string" ? Be.createElement(V5, null, e) : e, Be.createElement(H5, js({
    levaType: l,
    ref: L,
    id: U,
    type: h,
    autoComplete: "off",
    spellCheck: "false",
    value: t,
    onChange: F(i),
    onFocus: () => E(),
    onKeyPress: H,
    onKeyDown: o,
    disabled: R
  }, B)));
}
function Uee(n) {
  let {
    onUpdate: e
  } = n, t = ao(n, Pee);
  const r = le.useCallback((o) => e(lee(o)), [e]), i = le.useCallback((o) => {
    const l = o.key === "ArrowUp" ? 1 : o.key === "ArrowDown" ? -1 : 0;
    if (l) {
      o.preventDefault();
      const u = o.altKey ? 0.1 : o.shiftKey ? 10 : 1;
      e((h) => parseFloat(h) + l * u);
    }
  }, [e]);
  return Be.createElement(u3, js({}, t, {
    onUpdate: r,
    onKeyDown: i,
    type: "number"
  }));
}
const RR = Lr("div", {}), VO = Lr("div", {
  position: "relative",
  background: "$elevation2",
  transition: "height 300ms ease",
  variants: {
    fill: {
      true: {},
      false: {}
    },
    flat: {
      false: {},
      true: {}
    },
    isRoot: {
      true: {},
      false: {
        paddingLeft: "$md",
        "&::after": {
          content: '""',
          position: "absolute",
          left: 0,
          top: 0,
          width: "$borderWidths$folder",
          height: "100%",
          backgroundColor: "$folderWidgetColor",
          opacity: 0.4,
          transform: "translateX(-50%)"
        }
      }
    }
  },
  compoundVariants: [{
    isRoot: !0,
    fill: !1,
    css: {
      overflowY: "auto",
      maxHeight: "calc(100vh - 20px - $$titleBarHeight)"
    }
  }, {
    isRoot: !0,
    flat: !1,
    css: {
      borderRadius: "$lg"
    }
  }]
}), Nee = Lr("div", {
  $flex: "",
  color: "$folderTextColor",
  userSelect: "none",
  cursor: "pointer",
  height: "$folderTitleHeight",
  fontWeight: "$folder",
  "> svg": {
    marginLeft: -4,
    marginRight: 4,
    cursor: "pointer",
    fill: "$folderWidgetColor",
    opacity: 0.6
  },
  "&:hover > svg": {
    fill: "$folderWidgetColor"
  },
  [`&:hover + ${VO}::after`]: {
    opacity: 0.6
  },
  [`${RR}:hover > & + ${VO}::after`]: {
    opacity: 0.6
  },
  [`${RR}:hover > & > svg`]: {
    opacity: 1
  }
}), G5 = Lr("div", {
  position: "relative",
  display: "grid",
  gridTemplateColumns: "100%",
  rowGap: "$rowGap",
  transition: "opacity 250ms ease",
  variants: {
    toggled: {
      true: {
        opacity: 1,
        transitionDelay: "250ms"
      },
      false: {
        opacity: 0,
        transitionDelay: "0ms",
        pointerEvents: "none"
      }
    },
    isRoot: {
      true: {
        "& > div": {
          paddingLeft: "$md",
          paddingRight: "$md"
        },
        "& > div:first-of-type": {
          paddingTop: "$sm"
        },
        "& > div:last-of-type": {
          paddingBottom: "$sm"
        },
        [`> ${RR}:not(:first-of-type)`]: {
          paddingTop: "$sm",
          marginTop: "$md",
          borderTop: "$borderWidths$folder solid $colors$elevation1"
        }
      }
    }
  }
}), W5 = Lr("div", {
  position: "relative",
  zIndex: 100,
  display: "grid",
  rowGap: "$rowGap",
  gridTemplateRows: "minmax($sizes$rowHeight, max-content)",
  alignItems: "center",
  color: "$highlight2",
  [`${G5} > &`]: {
    "&:first-of-type": {
      marginTop: "$rowGap"
    },
    "&:last-of-type": {
      marginBottom: "$rowGap"
    }
  },
  variants: {
    disabled: {
      true: {
        pointerEvents: "none"
      },
      false: {
        "&:hover,&:focus-within": {
          color: "$highlight3"
        }
      }
    }
  }
}), j5 = Lr(W5, {
  gridTemplateColumns: "auto $sizes$controlWidth",
  columnGap: "$colGap"
}), kee = Lr("div", {
  $flex: "",
  height: "100%",
  position: "relative",
  overflow: "hidden",
  "& > div": {
    marginLeft: "$colGap",
    padding: "0 $xs",
    opacity: 0.4
  },
  "& > div:hover": {
    opacity: 0.8
  },
  "& > div > svg": {
    display: "none",
    cursor: "pointer",
    width: 13,
    minWidth: 13,
    height: 13,
    backgroundColor: "$elevation2"
  },
  "&:hover > div > svg": {
    display: "block"
  },
  variants: {
    align: {
      top: {
        height: "100%",
        alignItems: "flex-start",
        paddingTop: "$sm"
      }
    }
  }
}), Fee = Lr("input", {
  $reset: "",
  height: 0,
  width: 0,
  opacity: 0,
  margin: 0,
  "& + label": {
    position: "relative",
    $flexCenter: "",
    height: "100%",
    userSelect: "none",
    cursor: "pointer",
    paddingLeft: 2,
    paddingRight: "$sm",
    pointerEvents: "auto"
  },
  "& + label:after": {
    content: '""',
    width: 6,
    height: 6,
    backgroundColor: "$elevation3",
    borderRadius: "50%",
    $activeStyle: ""
  },
  "&:focus + label:after": {
    $focusStyle: ""
  },
  "& + label:active:after": {
    backgroundColor: "$accent1",
    $focusStyle: ""
  },
  "&:checked + label:after": {
    backgroundColor: "$accent1"
  }
}), GO = Lr("label", {
  fontWeight: "$label",
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap",
  "& > svg": {
    display: "block"
  }
}), zee = Lr("div", {
  opacity: 1,
  variants: {
    disabled: {
      true: {
        opacity: 0.6,
        pointerEvents: "none",
        [`& ${GO}`]: {
          pointerEvents: "auto"
        }
      }
    }
  }
}), $5 = Lr("div", {
  position: "fixed",
  top: 0,
  bottom: 0,
  right: 0,
  left: 0,
  zIndex: 1e3,
  userSelect: "none"
}), Iee = Lr("div", {
  background: "$toolTipBackground",
  fontFamily: "$sans",
  fontSize: "$toolTip",
  padding: "$xs $sm",
  color: "$toolTipText",
  borderRadius: "$xs",
  boxShadow: "$level2",
  maxWidth: 260
}), Bee = Lr(JJ, {
  fill: "$toolTipBackground"
});
function c3({
  children: n
}) {
  const {
    className: e
  } = le.useContext(l3);
  return Be.createElement(UQ, {
    className: e
  }, n);
}
const Hee = ["align"];
function Vee() {
  const {
    id: n,
    disable: e,
    disabled: t
  } = $c();
  return Be.createElement(Be.Fragment, null, Be.createElement(Fee, {
    id: n + "__disable",
    type: "checkbox",
    checked: !t,
    onChange: () => e(!t)
  }), Be.createElement("label", {
    htmlFor: n + "__disable"
  }));
}
function Gee(n) {
  const {
    id: e,
    optional: t,
    hint: r
  } = $c(), i = n.htmlFor || (e ? {
    htmlFor: e
  } : null), o = !r && typeof n.children == "string" ? {
    title: n.children
  } : null;
  return Be.createElement(Be.Fragment, null, t && Be.createElement(Vee, null), r !== void 0 ? Be.createElement(KJ, null, Be.createElement(QJ, {
    asChild: !0
  }, Be.createElement(GO, js({}, i, n))), Be.createElement(ZJ, {
    side: "top",
    sideOffset: 2
  }, Be.createElement(Iee, null, r, Be.createElement(Bee, null)))) : Be.createElement(GO, js({}, i, o, n)));
}
function mm(n) {
  let {
    align: e
  } = n, t = ao(n, Hee);
  const {
    value: r,
    label: i,
    key: o,
    disabled: l
  } = $c(), {
    hideCopyButton: u
  } = wee(), h = !u && o !== void 0, [p, y] = le.useState(!1), _ = async () => {
    try {
      await navigator.clipboard.writeText(JSON.stringify({
        [o]: r ?? ""
      })), y(!0);
    } catch {
      Ng(ys.CLIPBOARD_ERROR, {
        [o]: r
      });
    }
  };
  return Be.createElement(kee, {
    align: e,
    onPointerLeave: () => y(!1)
  }, Be.createElement(Gee, t), h && !l && Be.createElement("div", {
    title: `Click to copy ${typeof i == "string" ? i : o} value`
  }, p ? Be.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor"
  }, Be.createElement("path", {
    d: "M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"
  }), Be.createElement("path", {
    fillRule: "evenodd",
    d: "M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm9.707 5.707a1 1 0 00-1.414-1.414L9 12.586l-1.293-1.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z",
    clipRule: "evenodd"
  })) : Be.createElement("svg", {
    onClick: _,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor"
  }, Be.createElement("path", {
    d: "M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"
  }), Be.createElement("path", {
    d: "M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"
  }))));
}
const Wee = ["toggled"], jee = Lr("svg", {
  fill: "currentColor",
  transition: "transform 350ms ease, fill 250ms ease"
});
function f3(n) {
  let {
    toggled: e
  } = n, t = ao(n, Wee);
  return Be.createElement(jee, js({
    width: "9",
    height: "5",
    viewBox: "0 0 9 5",
    xmlns: "http://www.w3.org/2000/svg",
    style: {
      transform: `rotate(${e ? 0 : -90}deg)`
    }
  }, t), Be.createElement("path", {
    d: "M3.8 4.4c.4.3 1 .3 1.4 0L8 1.7A1 1 0 007.4 0H1.6a1 1 0 00-.7 1.7l3 2.7z"
  }));
}
const $ee = ["input"];
function mp(n) {
  let {
    input: e
  } = n, t = ao(n, $ee);
  return e ? Be.createElement(j5, t) : Be.createElement(W5, t);
}
function Y5({
  value: n,
  type: e,
  settings: t,
  setValue: r
}) {
  const [i, o] = le.useState(mz(e, n, t)), l = le.useRef(n), u = le.useRef(t);
  u.current = t;
  const h = le.useCallback((y) => o(mz(e, y, u.current)), [e]), p = le.useCallback((y) => {
    try {
      r(y);
    } catch (_) {
      const {
        type: E,
        previousValue: w
      } = _;
      if (E !== "LEVA_ERROR")
        throw _;
      h(w);
    }
  }, [h, r]);
  return le.useEffect(() => {
    WT(n, l.current) || h(n), l.current = n;
  }, [n, h]), {
    displayValue: i,
    onChange: o,
    onUpdate: p
  };
}
function fw(n, e) {
  const {
    emitOnEditStart: t,
    emitOnEditEnd: r
  } = $c();
  return SK((i) => {
    i.first && (document.body.classList.add("leva__panel__dragged"), t == null || t());
    const o = n(i);
    return i.last && (document.body.classList.remove("leva__panel__dragged"), r == null || r()), o;
  }, e);
}
function Yee(n) {
  const e = le.useRef(null), t = le.useRef(null), r = le.useRef(!1);
  return le.useEffect(() => {
    const i = L5(() => {
      e.current.width = e.current.offsetWidth * window.devicePixelRatio, e.current.height = e.current.offsetHeight * window.devicePixelRatio, n(e.current, t.current);
    }, 250);
    return window.addEventListener("resize", i), r.current || (i(), r.current = !0), () => window.removeEventListener("resize", i);
  }, [n]), le.useEffect(() => {
    t.current = e.current.getContext("2d");
  }, []), [e, t];
}
function X5() {
  const n = le.useRef(null), e = le.useRef({
    x: 0,
    y: 0
  }), t = le.useCallback((r) => {
    Object.assign(e.current, r), n.current && (n.current.style.transform = `translate3d(${e.current.x}px, ${e.current.y}px, 0)`);
  }, []);
  return [n, t];
}
const Xee = ["__refCount"], TL = (n, e) => {
  if (!n[e])
    return null;
  const t = n[e];
  return ao(t, Xee);
};
function qee(n) {
  const e = cw(), [t, r] = le.useState(TL(e.getData(), n)), i = le.useCallback((p) => e.setValueAtPath(n, p, !0), [n, e]), o = le.useCallback((p) => e.setSettingsAtPath(n, p), [n, e]), l = le.useCallback((p) => e.disableInputAtPath(n, p), [n, e]), u = le.useCallback(() => e.emitOnEditStart(n), [n, e]), h = le.useCallback(() => e.emitOnEditEnd(n), [n, e]);
  return le.useEffect(() => {
    r(TL(e.getData(), n));
    const p = e.useStore.subscribe((y) => TL(y.data, n), r, {
      equalityFn: sw
    });
    return () => p();
  }, [e, n]), [t, {
    set: i,
    setSettings: o,
    disable: l,
    storeId: e.storeId,
    emitOnEditStart: u,
    emitOnEditEnd: h
  }];
}
const Kee = Lr("div", {
  variants: {
    hasRange: {
      true: {
        position: "relative",
        display: "grid",
        gridTemplateColumns: "auto $sizes$numberInputMinWidth",
        columnGap: "$colGap",
        alignItems: "center"
      }
    }
  }
}), q5 = Lr("div", {
  position: "relative",
  width: "100%",
  height: 2,
  borderRadius: "$xs",
  backgroundColor: "$elevation1"
}), WO = Lr("div", {
  position: "absolute",
  width: "$scrubberWidth",
  height: "$scrubberHeight",
  borderRadius: "$xs",
  boxShadow: "0 0 0 2px $colors$elevation2",
  backgroundColor: "$accent2",
  cursor: "pointer",
  $active: "none $accent1",
  $hover: "none $accent3",
  variants: {
    position: {
      left: {
        borderTopRightRadius: 0,
        borderBottomRightRadius: 0,
        transform: "translateX(calc(-0.5 * ($sizes$scrubberWidth + 4px)))"
      },
      right: {
        borderTopLeftRadius: 0,
        borderBottomLeftRadius: 0,
        transform: "translateX(calc(0.5 * ($sizes$scrubberWidth + 4px)))"
      }
    }
  }
}), K5 = Lr("div", {
  position: "relative",
  $flex: "",
  height: "100%",
  cursor: "pointer",
  touchAction: "none"
}), Q5 = Lr("div", {
  position: "absolute",
  height: "100%",
  backgroundColor: "$accent2"
});
function Qee({
  value: n,
  min: e,
  max: t,
  onDrag: r,
  step: i,
  initialValue: o
}) {
  const l = le.useRef(null), u = le.useRef(null), h = le.useRef(0), p = Ig("sizes", "scrubberWidth"), y = fw(({
    event: E,
    first: w,
    xy: [R],
    movement: [U],
    memo: L
  }) => {
    if (w) {
      const {
        width: k,
        left: F
      } = l.current.getBoundingClientRect();
      h.current = k - parseFloat(p), L = (E == null ? void 0 : E.target) === u.current ? n : CR((R - F) / k, e, t);
    }
    const A = L + CR(U / h.current, 0, t - e);
    return r(N5(A, {
      step: i,
      initialValue: o
    })), L;
  }), _ = MR(n, e, t);
  return Be.createElement(K5, js({
    ref: l
  }, y()), Be.createElement(q5, null, Be.createElement(Q5, {
    style: {
      left: 0,
      right: `${(1 - _) * 100}%`
    }
  })), Be.createElement(WO, {
    ref: u,
    style: {
      left: `calc(${_} * (100% - ${p}))`
    }
  }));
}
const Zee = Be.memo(({
  label: n,
  onUpdate: e,
  step: t,
  innerLabelTrim: r
}) => {
  const [i, o] = le.useState(!1), l = fw(({
    active: u,
    delta: [h],
    event: p,
    memo: y = 0
  }) => (o(u), y += h / 2, Math.abs(y) >= 1 && (e((_) => parseFloat(_) + Math.floor(y) * t * O5(p)), y = 0), y));
  return Be.createElement(Dee, js({
    dragging: i,
    title: n.length > 1 ? n : ""
  }, l()), n.slice(0, r));
});
function Z5({
  label: n,
  id: e,
  displayValue: t,
  onUpdate: r,
  onChange: i,
  settings: o,
  innerLabelTrim: l = 1
}) {
  const u = l > 0 && Be.createElement(Zee, {
    label: n,
    step: o.step,
    onUpdate: r,
    innerLabelTrim: l
  });
  return Be.createElement(Uee, {
    id: e,
    value: String(t),
    onUpdate: r,
    onChange: i,
    innerLabel: u
  });
}
function Jee() {
  const n = $c(), {
    label: e,
    value: t,
    onUpdate: r,
    settings: i,
    id: o
  } = n, {
    min: l,
    max: u
  } = i, h = u !== 1 / 0 && l !== -1 / 0;
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, e), Be.createElement(Kee, {
    hasRange: h
  }, h && Be.createElement(Qee, js({
    value: parseFloat(t),
    onDrag: r
  }, i)), Be.createElement(Z5, js({}, n, {
    id: o,
    label: "value",
    innerLabelTrim: h ? 0 : 1
  }))));
}
const {
  sanitizeStep: ete
} = k5, tte = ao(k5, ["sanitizeStep"]);
var nte = Nr({
  component: Jee
}, tte);
const rte = (n, e) => xd().schema({
  options: xd().passesAnyOf(xd().object(), xd().array())
}).test(e), ite = (n, {
  values: e
}) => {
  if (e.indexOf(n) < 0)
    throw Error("Selected value doesn't match Select options");
  return n;
}, ate = (n, {
  values: e
}) => e.indexOf(n), ote = (n) => {
  let {
    value: e,
    options: t
  } = n, r, i;
  return Array.isArray(t) ? (i = t, r = t.map((o) => String(o))) : (i = Object.values(t), r = Object.keys(t)), "value" in n ? i.includes(e) || (r.unshift(String(e)), i.unshift(e)) : e = i[0], Object.values(t).includes(e) || (t[String(e)] = e), {
    value: e,
    settings: {
      keys: r,
      values: i
    }
  };
};
var ste = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  schema: rte,
  sanitize: ite,
  format: ate,
  normalize: ote
});
const lte = Lr("div", {
  $flexCenter: "",
  position: "relative",
  "> svg": {
    pointerEvents: "none",
    position: "absolute",
    right: "$md"
  }
}), jO = Lr("select", {
  position: "absolute",
  top: 0,
  left: 0,
  width: "100%",
  height: "100%",
  opacity: 0
}), ute = Lr("div", {
  display: "flex",
  alignItems: "center",
  width: "100%",
  height: "$rowHeight",
  backgroundColor: "$elevation3",
  borderRadius: "$sm",
  padding: "0 $sm",
  cursor: "pointer",
  [`${jO}:focus + &`]: {
    $focusStyle: ""
  },
  [`${jO}:hover + &`]: {
    $hoverStyle: ""
  }
});
function cte({
  displayValue: n,
  value: e,
  onUpdate: t,
  id: r,
  settings: i,
  disabled: o
}) {
  const {
    keys: l,
    values: u
  } = i, h = le.useRef();
  return e === u[n] && (h.current = l[n]), Be.createElement(lte, null, Be.createElement(jO, {
    id: r,
    value: n,
    onChange: (p) => t(u[Number(p.currentTarget.value)]),
    disabled: o
  }, l.map((p, y) => Be.createElement("option", {
    key: p,
    value: y
  }, p))), Be.createElement(ute, null, h.current), Be.createElement(f3, {
    toggled: !0
  }));
}
function fte() {
  const {
    label: n,
    value: e,
    displayValue: t,
    onUpdate: r,
    id: i,
    disabled: o,
    settings: l
  } = $c();
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, n), Be.createElement(cte, {
    id: i,
    value: e,
    displayValue: t,
    onUpdate: r,
    settings: l,
    disabled: o
  }));
}
var dte = Nr({
  component: fte
}, ste);
const hte = (n) => xd().string().test(n), pte = (n) => {
  if (typeof n != "string")
    throw Error("Invalid string");
  return n;
}, mte = ({
  value: n,
  editable: e = !0,
  rows: t = !1
}) => ({
  value: n,
  settings: {
    editable: e,
    rows: typeof t == "number" ? t : t ? 5 : 0
  }
});
var vte = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  schema: hte,
  sanitize: pte,
  normalize: mte
});
const gte = ["displayValue", "onUpdate", "onChange", "editable"], yte = Lr("div", {
  whiteSpace: "pre-wrap"
});
function Ste(n) {
  let {
    displayValue: e,
    onUpdate: t,
    onChange: r,
    editable: i = !0
  } = n, o = ao(n, gte);
  return i ? Be.createElement(u3, js({
    value: e,
    onUpdate: t,
    onChange: r
  }, o)) : Be.createElement(yte, null, e);
}
function _te() {
  const {
    label: n,
    settings: e,
    displayValue: t,
    onUpdate: r,
    onChange: i
  } = $c();
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, n), Be.createElement(Ste, js({
    displayValue: t,
    onUpdate: r,
    onChange: i
  }, e)));
}
var xte = Nr({
  component: _te
}, vte);
const Ete = (n) => xd().boolean().test(n), bte = (n) => {
  if (typeof n != "boolean")
    throw Error("Invalid boolean");
  return n;
};
var Tte = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  schema: Ete,
  sanitize: bte
});
const wte = Lr("div", {
  position: "relative",
  $flex: "",
  height: "$rowHeight",
  input: {
    $reset: "",
    height: 0,
    width: 0,
    opacity: 0,
    margin: 0
  },
  label: {
    position: "relative",
    $flexCenter: "",
    userSelect: "none",
    cursor: "pointer",
    height: "$checkboxSize",
    width: "$checkboxSize",
    backgroundColor: "$elevation3",
    borderRadius: "$sm",
    $hover: ""
  },
  "input:focus + label": {
    $focusStyle: ""
  },
  "input:focus:checked + label, input:checked + label:hover": {
    $hoverStyle: "$accent3"
  },
  "input + label:active": {
    backgroundColor: "$accent1"
  },
  "input:checked + label:active": {
    backgroundColor: "$accent1"
  },
  "label > svg": {
    display: "none",
    width: "90%",
    height: "90%",
    stroke: "$highlight3"
  },
  "input:checked + label": {
    backgroundColor: "$accent2"
  },
  "input:checked + label > svg": {
    display: "block"
  }
});
function Mte({
  value: n,
  onUpdate: e,
  id: t,
  disabled: r
}) {
  return Be.createElement(wte, null, Be.createElement("input", {
    id: t,
    type: "checkbox",
    checked: n,
    onChange: (i) => e(i.currentTarget.checked),
    disabled: r
  }), Be.createElement("label", {
    htmlFor: t
  }, Be.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24"
  }, Be.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 2,
    d: "M5 13l4 4L19 7"
  }))));
}
function Cte() {
  const {
    label: n,
    value: e,
    onUpdate: t,
    disabled: r,
    id: i
  } = $c();
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, n), Be.createElement(Mte, {
    value: e,
    onUpdate: t,
    id: i,
    disabled: r
  }));
}
var Rte = Nr({
  component: Cte
}, Tte);
const Ate = ["locked"];
function Dte({
  value: n,
  id: e,
  valueKey: t,
  settings: r,
  onUpdate: i,
  innerLabelTrim: o
}) {
  const l = le.useRef(n[t]);
  l.current = n[t];
  const u = le.useCallback((p) => i({
    [t]: D5({
      type: "NUMBER",
      value: l.current,
      settings: r
    }, p)
  }), [i, r, t]), h = Y5({
    type: "NUMBER",
    value: n[t],
    settings: r,
    setValue: u
  });
  return Be.createElement(Z5, {
    id: e,
    label: t,
    value: n[t],
    displayValue: h.displayValue,
    onUpdate: h.onUpdate,
    onChange: h.onChange,
    settings: r,
    innerLabelTrim: o
  });
}
const Lte = Lr("div", {
  display: "grid",
  columnGap: "$colGap",
  gridAutoFlow: "column dense",
  alignItems: "center",
  variants: {
    withLock: {
      true: {
        gridTemplateColumns: "10px auto",
        "> svg": {
          cursor: "pointer"
        }
      }
    }
  }
});
function Ote(n) {
  let {
    locked: e
  } = n, t = ao(n, Ate);
  return Be.createElement("svg", js({
    width: "10",
    height: "10",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t), e ? Be.createElement("path", {
    d: "M5 4.63601C5 3.76031 5.24219 3.1054 5.64323 2.67357C6.03934 2.24705 6.64582 1.9783 7.5014 1.9783C8.35745 1.9783 8.96306 2.24652 9.35823 2.67208C9.75838 3.10299 10 3.75708 10 4.63325V5.99999H5V4.63601ZM4 5.99999V4.63601C4 3.58148 4.29339 2.65754 4.91049 1.99307C5.53252 1.32329 6.42675 0.978302 7.5014 0.978302C8.57583 0.978302 9.46952 1.32233 10.091 1.99162C10.7076 2.65557 11 3.57896 11 4.63325V5.99999H12C12.5523 5.99999 13 6.44771 13 6.99999V13C13 13.5523 12.5523 14 12 14H3C2.44772 14 2 13.5523 2 13V6.99999C2 6.44771 2.44772 5.99999 3 5.99999H4ZM3 6.99999H12V13H3V6.99999Z",
    fill: "currentColor",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }) : Be.createElement("path", {
    d: "M9 3.63601C9 2.76044 9.24207 2.11211 9.64154 1.68623C10.0366 1.26502 10.6432 1 11.5014 1C12.4485 1 13.0839 1.30552 13.4722 1.80636C13.8031 2.23312 14 2.84313 14 3.63325H15C15 2.68242 14.7626 1.83856 14.2625 1.19361C13.6389 0.38943 12.6743 0 11.5014 0C10.4294 0 9.53523 0.337871 8.91218 1.0021C8.29351 1.66167 8 2.58135 8 3.63601V6H1C0.447715 6 0 6.44772 0 7V13C0 13.5523 0.447715 14 1 14H10C10.5523 14 11 13.5523 11 13V7C11 6.44772 10.5523 6 10 6H9V3.63601ZM1 7H10V13H1V7Z",
    fill: "currentColor",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}
function d3({
  value: n,
  onUpdate: e,
  settings: t,
  innerLabelTrim: r
}) {
  const {
    id: i,
    setSettings: o
  } = $c(), {
    lock: l,
    locked: u
  } = t;
  return Be.createElement(Lte, {
    withLock: l
  }, l && Be.createElement(Ote, {
    locked: u,
    onClick: () => o({
      locked: !u
    })
  }), Object.keys(n).map((h, p) => Be.createElement(Dte, {
    id: p === 0 ? i : `${i}.${h}`,
    key: h,
    valueKey: h,
    value: n,
    settings: t[h],
    onUpdate: e,
    innerLabelTrim: r
  })));
}
const J5 = (n, e) => {
  const t = {};
  let r = 0, i = 1 / 0;
  Object.entries(n).forEach(([o, l]) => {
    t[o] = U5(Nr({
      value: l
    }, e[o])).settings, r = Math.max(r, t[o].step), i = Math.min(i, t[o].pad);
  });
  for (let o in t) {
    const {
      step: l,
      min: u,
      max: h
    } = e[o] || {};
    !isFinite(l) && (!isFinite(u) || !isFinite(h)) && (t[o].step = r, t[o].pad = i);
  }
  return t;
}, Pte = ["lock"], Ute = ["value"];
function Nte(n) {
  const e = xd().array().length(n).every.number(), t = (r) => {
    if (!r || typeof r != "object")
      return !1;
    const i = Object.values(r);
    return i.length === n && i.every((o) => isFinite(o));
  };
  return (r) => e.test(r) || t(r);
}
function kte(n) {
  return Array.isArray(n) ? "array" : "object";
}
function bT(n, e, t) {
  return kte(n) === e ? n : e === "array" ? Object.values(n) : hee(n, t);
}
const Fte = (n, e, t) => {
  const r = bT(n, "object", e.keys);
  for (let l in r)
    r[l] = P5(r[l], e[l]);
  const i = Object.keys(r);
  let o = {};
  if (i.length === e.keys.length)
    o = r;
  else {
    const l = bT(t, "object", e.keys);
    if (i.length === 1 && e.locked) {
      const u = i[0], h = r[u], p = l[u], y = p !== 0 ? h / p : 1;
      for (let _ in l)
        _ === u ? o[u] = h : o[_] = l[_] * y;
    } else
      o = Nr(Nr({}, l), r);
  }
  return bT(o, e.format, e.keys);
}, zte = (n, e) => bT(n, "object", e.keys), Ite = (n) => !!n && ("step" in n || "min" in n || "max" in n);
function Bte(n, e, t = []) {
  const {
    lock: r = !1
  } = e, i = ao(e, Pte), o = Array.isArray(n) ? "array" : "object", l = o === "object" ? Object.keys(n) : t, u = bT(n, "object", l), h = Ite(i) ? l.reduce((y, _) => Object.assign(y, {
    [_]: i
  }), {}) : i, p = J5(u, h);
  return {
    value: o === "array" ? n : u,
    settings: Nr(Nr({}, p), {}, {
      format: o,
      keys: l,
      lock: r,
      locked: !1
    })
  };
}
function eH(n) {
  return {
    schema: Nte(n.length),
    normalize: (e) => {
      let {
        value: t
      } = e, r = ao(e, Ute);
      return Bte(t, r, n);
    },
    format: (e, t) => zte(e, t),
    sanitize: (e, t, r) => Fte(e, t, r)
  };
}
var Hte = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) }, Lg = function(n) {
  return typeof n == "string" ? n.length > 0 : typeof n == "number";
}, Nu = function(n, e, t) {
  return e === void 0 && (e = 0), t === void 0 && (t = Math.pow(10, e)), Math.round(t * n) / t + 0;
}, fp = function(n, e, t) {
  return e === void 0 && (e = 0), t === void 0 && (t = 1), n > t ? t : n > e ? n : e;
}, tH = function(n) {
  return (n = isFinite(n) ? n % 360 : 0) > 0 ? n : n + 360;
}, wz = function(n) {
  return { r: fp(n.r, 0, 255), g: fp(n.g, 0, 255), b: fp(n.b, 0, 255), a: fp(n.a) };
}, wL = function(n) {
  return { r: Nu(n.r), g: Nu(n.g), b: Nu(n.b), a: Nu(n.a, 3) };
}, Vte = /^#([0-9a-f]{3,8})$/i, ZC = function(n) {
  var e = n.toString(16);
  return e.length < 2 ? "0" + e : e;
}, nH = function(n) {
  var e = n.r, t = n.g, r = n.b, i = n.a, o = Math.max(e, t, r), l = o - Math.min(e, t, r), u = l ? o === e ? (t - r) / l : o === t ? 2 + (r - e) / l : 4 + (e - t) / l : 0;
  return { h: 60 * (u < 0 ? u + 6 : u), s: o ? l / o * 100 : 0, v: o / 255 * 100, a: i };
}, rH = function(n) {
  var e = n.h, t = n.s, r = n.v, i = n.a;
  e = e / 360 * 6, t /= 100, r /= 100;
  var o = Math.floor(e), l = r * (1 - t), u = r * (1 - (e - o) * t), h = r * (1 - (1 - e + o) * t), p = o % 6;
  return { r: 255 * [r, u, l, l, h, r][p], g: 255 * [h, r, r, u, l, l][p], b: 255 * [l, l, h, r, r, u][p], a: i };
}, Mz = function(n) {
  return { h: tH(n.h), s: fp(n.s, 0, 100), l: fp(n.l, 0, 100), a: fp(n.a) };
}, Cz = function(n) {
  return { h: Nu(n.h), s: Nu(n.s), l: Nu(n.l), a: Nu(n.a, 3) };
}, Rz = function(n) {
  return rH((t = (e = n).s, { h: e.h, s: (t *= ((r = e.l) < 50 ? r : 100 - r) / 100) > 0 ? 2 * t / (r + t) * 100 : 0, v: r + t, a: e.a }));
  var e, t, r;
}, TT = function(n) {
  return { h: (e = nH(n)).h, s: (i = (200 - (t = e.s)) * (r = e.v) / 100) > 0 && i < 200 ? t * r / 100 / (i <= 100 ? i : 200 - i) * 100 : 0, l: i / 2, a: e.a };
  var e, t, r, i;
}, Gte = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s*,\s*([+-]?\d*\.?\d+)%\s*,\s*([+-]?\d*\.?\d+)%\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, Wte = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s+([+-]?\d*\.?\d+)%\s+([+-]?\d*\.?\d+)%\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, jte = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, $te = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, $O = { string: [[function(n) {
  var e = Vte.exec(n);
  return e ? (n = e[1]).length <= 4 ? { r: parseInt(n[0] + n[0], 16), g: parseInt(n[1] + n[1], 16), b: parseInt(n[2] + n[2], 16), a: n.length === 4 ? Nu(parseInt(n[3] + n[3], 16) / 255, 2) : 1 } : n.length === 6 || n.length === 8 ? { r: parseInt(n.substr(0, 2), 16), g: parseInt(n.substr(2, 2), 16), b: parseInt(n.substr(4, 2), 16), a: n.length === 8 ? Nu(parseInt(n.substr(6, 2), 16) / 255, 2) : 1 } : null : null;
}, "hex"], [function(n) {
  var e = jte.exec(n) || $te.exec(n);
  return e ? e[2] !== e[4] || e[4] !== e[6] ? null : wz({ r: Number(e[1]) / (e[2] ? 100 / 255 : 1), g: Number(e[3]) / (e[4] ? 100 / 255 : 1), b: Number(e[5]) / (e[6] ? 100 / 255 : 1), a: e[7] === void 0 ? 1 : Number(e[7]) / (e[8] ? 100 : 1) }) : null;
}, "rgb"], [function(n) {
  var e = Gte.exec(n) || Wte.exec(n);
  if (!e)
    return null;
  var t, r, i = Mz({ h: (t = e[1], r = e[2], r === void 0 && (r = "deg"), Number(t) * (Hte[r] || 1)), s: Number(e[3]), l: Number(e[4]), a: e[5] === void 0 ? 1 : Number(e[5]) / (e[6] ? 100 : 1) });
  return Rz(i);
}, "hsl"]], object: [[function(n) {
  var e = n.r, t = n.g, r = n.b, i = n.a, o = i === void 0 ? 1 : i;
  return Lg(e) && Lg(t) && Lg(r) ? wz({ r: Number(e), g: Number(t), b: Number(r), a: Number(o) }) : null;
}, "rgb"], [function(n) {
  var e = n.h, t = n.s, r = n.l, i = n.a, o = i === void 0 ? 1 : i;
  if (!Lg(e) || !Lg(t) || !Lg(r))
    return null;
  var l = Mz({ h: Number(e), s: Number(t), l: Number(r), a: Number(o) });
  return Rz(l);
}, "hsl"], [function(n) {
  var e = n.h, t = n.s, r = n.v, i = n.a, o = i === void 0 ? 1 : i;
  if (!Lg(e) || !Lg(t) || !Lg(r))
    return null;
  var l = function(u) {
    return { h: tH(u.h), s: fp(u.s, 0, 100), v: fp(u.v, 0, 100), a: fp(u.a) };
  }({ h: Number(e), s: Number(t), v: Number(r), a: Number(o) });
  return rH(l);
}, "hsv"]] }, Az = function(n, e) {
  for (var t = 0; t < e.length; t++) {
    var r = e[t][0](n);
    if (r)
      return [r, e[t][1]];
  }
  return [null, void 0];
}, iH = function(n) {
  return typeof n == "string" ? Az(n.trim(), $O.string) : typeof n == "object" && n !== null ? Az(n, $O.object) : [null, void 0];
}, Yte = function(n) {
  return iH(n)[1];
}, ML = function(n, e) {
  var t = TT(n);
  return { h: t.h, s: fp(t.s + 100 * e, 0, 100), l: t.l, a: t.a };
}, CL = function(n) {
  return (299 * n.r + 587 * n.g + 114 * n.b) / 1e3 / 255;
}, Dz = function(n, e) {
  var t = TT(n);
  return { h: t.h, s: t.s, l: fp(t.l + 100 * e, 0, 100), a: t.a };
}, YO = function() {
  function n(e) {
    this.parsed = iH(e)[0], this.rgba = this.parsed || { r: 0, g: 0, b: 0, a: 1 };
  }
  return n.prototype.isValid = function() {
    return this.parsed !== null;
  }, n.prototype.brightness = function() {
    return Nu(CL(this.rgba), 2);
  }, n.prototype.isDark = function() {
    return CL(this.rgba) < 0.5;
  }, n.prototype.isLight = function() {
    return CL(this.rgba) >= 0.5;
  }, n.prototype.toHex = function() {
    return e = wL(this.rgba), t = e.r, r = e.g, i = e.b, l = (o = e.a) < 1 ? ZC(Nu(255 * o)) : "", "#" + ZC(t) + ZC(r) + ZC(i) + l;
    var e, t, r, i, o, l;
  }, n.prototype.toRgb = function() {
    return wL(this.rgba);
  }, n.prototype.toRgbString = function() {
    return e = wL(this.rgba), t = e.r, r = e.g, i = e.b, (o = e.a) < 1 ? "rgba(" + t + ", " + r + ", " + i + ", " + o + ")" : "rgb(" + t + ", " + r + ", " + i + ")";
    var e, t, r, i, o;
  }, n.prototype.toHsl = function() {
    return Cz(TT(this.rgba));
  }, n.prototype.toHslString = function() {
    return e = Cz(TT(this.rgba)), t = e.h, r = e.s, i = e.l, (o = e.a) < 1 ? "hsla(" + t + ", " + r + "%, " + i + "%, " + o + ")" : "hsl(" + t + ", " + r + "%, " + i + "%)";
    var e, t, r, i, o;
  }, n.prototype.toHsv = function() {
    return e = nH(this.rgba), { h: Nu(e.h), s: Nu(e.s), v: Nu(e.v), a: Nu(e.a, 3) };
    var e;
  }, n.prototype.invert = function() {
    return Of({ r: 255 - (e = this.rgba).r, g: 255 - e.g, b: 255 - e.b, a: e.a });
    var e;
  }, n.prototype.saturate = function(e) {
    return e === void 0 && (e = 0.1), Of(ML(this.rgba, e));
  }, n.prototype.desaturate = function(e) {
    return e === void 0 && (e = 0.1), Of(ML(this.rgba, -e));
  }, n.prototype.grayscale = function() {
    return Of(ML(this.rgba, -1));
  }, n.prototype.lighten = function(e) {
    return e === void 0 && (e = 0.1), Of(Dz(this.rgba, e));
  }, n.prototype.darken = function(e) {
    return e === void 0 && (e = 0.1), Of(Dz(this.rgba, -e));
  }, n.prototype.rotate = function(e) {
    return e === void 0 && (e = 15), this.hue(this.hue() + e);
  }, n.prototype.alpha = function(e) {
    return typeof e == "number" ? Of({ r: (t = this.rgba).r, g: t.g, b: t.b, a: e }) : Nu(this.rgba.a, 3);
    var t;
  }, n.prototype.hue = function(e) {
    var t = TT(this.rgba);
    return typeof e == "number" ? Of({ h: e, s: t.s, l: t.l, a: t.a }) : Nu(t.h);
  }, n.prototype.isEqual = function(e) {
    return this.toHex() === Of(e).toHex();
  }, n;
}(), Of = function(n) {
  return n instanceof YO ? n : new YO(n);
}, Lz = [], Xte = function(n) {
  n.forEach(function(e) {
    Lz.indexOf(e) < 0 && (e(YO, $O), Lz.push(e));
  });
};
function qte(n, e) {
  var t = { white: "#ffffff", bisque: "#ffe4c4", blue: "#0000ff", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", antiquewhite: "#faebd7", aqua: "#00ffff", azure: "#f0ffff", whitesmoke: "#f5f5f5", papayawhip: "#ffefd5", plum: "#dda0dd", blanchedalmond: "#ffebcd", black: "#000000", gold: "#ffd700", goldenrod: "#daa520", gainsboro: "#dcdcdc", cornsilk: "#fff8dc", cornflowerblue: "#6495ed", burlywood: "#deb887", aquamarine: "#7fffd4", beige: "#f5f5dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkkhaki: "#bdb76b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", peachpuff: "#ffdab9", darkmagenta: "#8b008b", darkred: "#8b0000", darkorchid: "#9932cc", darkorange: "#ff8c00", darkslateblue: "#483d8b", gray: "#808080", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", deeppink: "#ff1493", deepskyblue: "#00bfff", wheat: "#f5deb3", firebrick: "#b22222", floralwhite: "#fffaf0", ghostwhite: "#f8f8ff", darkviolet: "#9400d3", magenta: "#ff00ff", green: "#008000", dodgerblue: "#1e90ff", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", blueviolet: "#8a2be2", forestgreen: "#228b22", lawngreen: "#7cfc00", indianred: "#cd5c5c", indigo: "#4b0082", fuchsia: "#ff00ff", brown: "#a52a2a", maroon: "#800000", mediumblue: "#0000cd", lightcoral: "#f08080", darkturquoise: "#00ced1", lightcyan: "#e0ffff", ivory: "#fffff0", lightyellow: "#ffffe0", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", linen: "#faf0e6", mediumaquamarine: "#66cdaa", lemonchiffon: "#fffacd", lime: "#00ff00", khaki: "#f0e68c", mediumseagreen: "#3cb371", limegreen: "#32cd32", mediumspringgreen: "#00fa9a", lightskyblue: "#87cefa", lightblue: "#add8e6", midnightblue: "#191970", lightpink: "#ffb6c1", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", mintcream: "#f5fffa", lightslategray: "#778899", lightslategrey: "#778899", navajowhite: "#ffdead", navy: "#000080", mediumvioletred: "#c71585", powderblue: "#b0e0e6", palegoldenrod: "#eee8aa", oldlace: "#fdf5e6", paleturquoise: "#afeeee", mediumturquoise: "#48d1cc", mediumorchid: "#ba55d3", rebeccapurple: "#663399", lightsteelblue: "#b0c4de", mediumslateblue: "#7b68ee", thistle: "#d8bfd8", tan: "#d2b48c", orchid: "#da70d6", mediumpurple: "#9370db", purple: "#800080", pink: "#ffc0cb", skyblue: "#87ceeb", springgreen: "#00ff7f", palegreen: "#98fb98", red: "#ff0000", yellow: "#ffff00", slateblue: "#6a5acd", lavenderblush: "#fff0f5", peru: "#cd853f", palevioletred: "#db7093", violet: "#ee82ee", teal: "#008080", slategray: "#708090", slategrey: "#708090", aliceblue: "#f0f8ff", darkseagreen: "#8fbc8f", darkolivegreen: "#556b2f", greenyellow: "#adff2f", seagreen: "#2e8b57", seashell: "#fff5ee", tomato: "#ff6347", silver: "#c0c0c0", sienna: "#a0522d", lavender: "#e6e6fa", lightgreen: "#90ee90", orange: "#ffa500", orangered: "#ff4500", steelblue: "#4682b4", royalblue: "#4169e1", turquoise: "#40e0d0", yellowgreen: "#9acd32", salmon: "#fa8072", saddlebrown: "#8b4513", sandybrown: "#f4a460", rosybrown: "#bc8f8f", darksalmon: "#e9967a", lightgoldenrodyellow: "#fafad2", snow: "#fffafa", lightgrey: "#d3d3d3", lightgray: "#d3d3d3", dimgray: "#696969", dimgrey: "#696969", olivedrab: "#6b8e23", olive: "#808000" }, r = {};
  for (var i in t)
    r[t[i]] = i;
  var o = {};
  n.prototype.toName = function(l) {
    if (!(this.rgba.a || this.rgba.r || this.rgba.g || this.rgba.b))
      return "transparent";
    var u, h, p = r[this.toHex()];
    if (p)
      return p;
    if (l != null && l.closest) {
      var y = this.toRgb(), _ = 1 / 0, E = "black";
      if (!o.length)
        for (var w in t)
          o[w] = new n(t[w]).toRgb();
      for (var R in t) {
        var U = (u = y, h = o[R], Math.pow(u.r - h.r, 2) + Math.pow(u.g - h.g, 2) + Math.pow(u.b - h.b, 2));
        U < _ && (_ = U, E = R);
      }
      return E;
    }
  }, e.string.push([function(l) {
    var u = l.toLowerCase(), h = u === "transparent" ? "#0000" : t[u];
    return h ? new n(h).toRgb() : null;
  }, "name"]);
}
function tE() {
  return (tE = Object.assign || function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }).apply(this, arguments);
}
function h3(n, e) {
  if (n == null)
    return {};
  var t, r, i = {}, o = Object.keys(n);
  for (r = 0; r < o.length; r++)
    e.indexOf(t = o[r]) >= 0 || (i[t] = n[t]);
  return i;
}
function XO(n) {
  var e = le.useRef(n), t = le.useRef(function(r) {
    e.current && e.current(r);
  });
  return e.current = n, t.current;
}
var W1 = function(n, e, t) {
  return e === void 0 && (e = 0), t === void 0 && (t = 1), n > t ? t : n < e ? e : n;
}, wT = function(n) {
  return "touches" in n;
}, qO = function(n) {
  return n && n.ownerDocument.defaultView || self;
}, Oz = function(n, e, t) {
  var r = n.getBoundingClientRect(), i = wT(e) ? function(o, l) {
    for (var u = 0; u < o.length; u++)
      if (o[u].identifier === l)
        return o[u];
    return o[0];
  }(e.touches, t) : e;
  return { left: W1((i.pageX - (r.left + qO(n).pageXOffset)) / r.width), top: W1((i.pageY - (r.top + qO(n).pageYOffset)) / r.height) };
}, Pz = function(n) {
  !wT(n) && n.preventDefault();
}, p3 = Be.memo(function(n) {
  var e = n.onMove, t = n.onKey, r = h3(n, ["onMove", "onKey"]), i = le.useRef(null), o = XO(e), l = XO(t), u = le.useRef(null), h = le.useRef(!1), p = le.useMemo(function() {
    var w = function(L) {
      Pz(L), (wT(L) ? L.touches.length > 0 : L.buttons > 0) && i.current ? o(Oz(i.current, L, u.current)) : U(!1);
    }, R = function() {
      return U(!1);
    };
    function U(L) {
      var A = h.current, k = qO(i.current), F = L ? k.addEventListener : k.removeEventListener;
      F(A ? "touchmove" : "mousemove", w), F(A ? "touchend" : "mouseup", R);
    }
    return [function(L) {
      var A = L.nativeEvent, k = i.current;
      if (k && (Pz(A), !function(H, B) {
        return B && !wT(H);
      }(A, h.current) && k)) {
        if (wT(A)) {
          h.current = !0;
          var F = A.changedTouches || [];
          F.length && (u.current = F[0].identifier);
        }
        k.focus(), o(Oz(k, A, u.current)), U(!0);
      }
    }, function(L) {
      var A = L.which || L.keyCode;
      A < 37 || A > 40 || (L.preventDefault(), l({ left: A === 39 ? 0.05 : A === 37 ? -0.05 : 0, top: A === 40 ? 0.05 : A === 38 ? -0.05 : 0 }));
    }, U];
  }, [l, o]), y = p[0], _ = p[1], E = p[2];
  return le.useEffect(function() {
    return E;
  }, [E]), Be.createElement("div", tE({}, r, { onTouchStart: y, onMouseDown: y, className: "react-colorful__interactive", ref: i, onKeyDown: _, tabIndex: 0, role: "slider" }));
}), dw = function(n) {
  return n.filter(Boolean).join(" ");
}, m3 = function(n) {
  var e = n.color, t = n.left, r = n.top, i = r === void 0 ? 0.5 : r, o = dw(["react-colorful__pointer", n.className]);
  return Be.createElement("div", { className: o, style: { top: 100 * i + "%", left: 100 * t + "%" } }, Be.createElement("div", { className: "react-colorful__pointer-fill", style: { backgroundColor: e } }));
}, Pf = function(n, e, t) {
  return e === void 0 && (e = 0), t === void 0 && (t = Math.pow(10, e)), Math.round(t * n) / t;
}, aH = function(n) {
  var e = n.s, t = n.v, r = n.a, i = (200 - e) * t / 100;
  return { h: Pf(n.h), s: Pf(i > 0 && i < 200 ? e * t / 100 / (i <= 100 ? i : 200 - i) * 100 : 0), l: Pf(i / 2), a: Pf(r, 2) };
}, KO = function(n) {
  var e = aH(n);
  return "hsl(" + e.h + ", " + e.s + "%, " + e.l + "%)";
}, RL = function(n) {
  var e = aH(n);
  return "hsla(" + e.h + ", " + e.s + "%, " + e.l + "%, " + e.a + ")";
}, oH = function(n) {
  var e = n.h, t = n.s, r = n.v, i = n.a;
  e = e / 360 * 6, t /= 100, r /= 100;
  var o = Math.floor(e), l = r * (1 - t), u = r * (1 - (e - o) * t), h = r * (1 - (1 - e + o) * t), p = o % 6;
  return { r: Pf(255 * [r, u, l, l, h, r][p]), g: Pf(255 * [h, r, r, u, l, l][p]), b: Pf(255 * [l, l, h, r, r, u][p]), a: Pf(i, 2) };
}, sH = function(n) {
  var e = n.r, t = n.g, r = n.b, i = n.a, o = Math.max(e, t, r), l = o - Math.min(e, t, r), u = l ? o === e ? (t - r) / l : o === t ? 2 + (r - e) / l : 4 + (e - t) / l : 0;
  return { h: Pf(60 * (u < 0 ? u + 6 : u)), s: Pf(o ? l / o * 100 : 0), v: Pf(o / 255 * 100), a: i };
}, lH = Be.memo(function(n) {
  var e = n.hue, t = n.onChange, r = dw(["react-colorful__hue", n.className]);
  return Be.createElement("div", { className: r }, Be.createElement(p3, { onMove: function(i) {
    t({ h: 360 * i.left });
  }, onKey: function(i) {
    t({ h: W1(e + 360 * i.left, 0, 360) });
  }, "aria-label": "Hue", "aria-valuenow": Pf(e), "aria-valuemax": "360", "aria-valuemin": "0" }, Be.createElement(m3, { className: "react-colorful__hue-pointer", left: e / 360, color: KO({ h: e, s: 100, v: 100, a: 1 }) })));
}), uH = Be.memo(function(n) {
  var e = n.hsva, t = n.onChange, r = { backgroundColor: KO({ h: e.h, s: 100, v: 100, a: 1 }) };
  return Be.createElement("div", { className: "react-colorful__saturation", style: r }, Be.createElement(p3, { onMove: function(i) {
    t({ s: 100 * i.left, v: 100 - 100 * i.top });
  }, onKey: function(i) {
    t({ s: W1(e.s + 100 * i.left, 0, 100), v: W1(e.v - 100 * i.top, 0, 100) });
  }, "aria-label": "Color", "aria-valuetext": "Saturation " + Pf(e.s) + "%, Brightness " + Pf(e.v) + "%" }, Be.createElement(m3, { className: "react-colorful__saturation-pointer", top: 1 - e.v / 100, left: e.s / 100, color: KO(e) })));
}), v3 = function(n, e) {
  if (n === e)
    return !0;
  for (var t in n)
    if (n[t] !== e[t])
      return !1;
  return !0;
};
function cH(n, e, t) {
  var r = XO(t), i = le.useState(function() {
    return n.toHsva(e);
  }), o = i[0], l = i[1], u = le.useRef({ color: e, hsva: o });
  le.useEffect(function() {
    if (!n.equal(e, u.current.color)) {
      var p = n.toHsva(e);
      u.current = { hsva: p, color: e }, l(p);
    }
  }, [e, n]), le.useEffect(function() {
    var p;
    v3(o, u.current.hsva) || n.equal(p = n.fromHsva(o), u.current.color) || (u.current = { hsva: o, color: p }, r(p));
  }, [o, n, r]);
  var h = le.useCallback(function(p) {
    l(function(y) {
      return Object.assign({}, y, p);
    });
  }, []);
  return [o, h];
}
var Kte = typeof window < "u" ? le.useLayoutEffect : le.useEffect, Qte = function() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : void 0;
}, Uz = /* @__PURE__ */ new Map(), fH = function(n) {
  Kte(function() {
    var e = n.current ? n.current.ownerDocument : document;
    if (e !== void 0 && !Uz.has(e)) {
      var t = e.createElement("style");
      t.innerHTML = `.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:"";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}`, Uz.set(e, t);
      var r = Qte();
      r && t.setAttribute("nonce", r), e.head.appendChild(t);
    }
  }, []);
}, Zte = function(n) {
  var e = n.className, t = n.colorModel, r = n.color, i = r === void 0 ? t.defaultColor : r, o = n.onChange, l = h3(n, ["className", "colorModel", "color", "onChange"]), u = le.useRef(null);
  fH(u);
  var h = cH(t, i, o), p = h[0], y = h[1], _ = dw(["react-colorful", e]);
  return Be.createElement("div", tE({}, l, { ref: u, className: _ }), Be.createElement(uH, { hsva: p, onChange: y }), Be.createElement(lH, { hue: p.h, onChange: y, className: "react-colorful__last-control" }));
}, Jte = function(n) {
  var e = n.className, t = n.hsva, r = n.onChange, i = { backgroundImage: "linear-gradient(90deg, " + RL(Object.assign({}, t, { a: 0 })) + ", " + RL(Object.assign({}, t, { a: 1 })) + ")" }, o = dw(["react-colorful__alpha", e]), l = Pf(100 * t.a);
  return Be.createElement("div", { className: o }, Be.createElement("div", { className: "react-colorful__alpha-gradient", style: i }), Be.createElement(p3, { onMove: function(u) {
    r({ a: u.left });
  }, onKey: function(u) {
    r({ a: W1(t.a + u.left) });
  }, "aria-label": "Alpha", "aria-valuetext": l + "%", "aria-valuenow": l, "aria-valuemin": "0", "aria-valuemax": "100" }, Be.createElement(m3, { className: "react-colorful__alpha-pointer", left: t.a, color: RL(t) })));
}, ene = function(n) {
  var e = n.className, t = n.colorModel, r = n.color, i = r === void 0 ? t.defaultColor : r, o = n.onChange, l = h3(n, ["className", "colorModel", "color", "onChange"]), u = le.useRef(null);
  fH(u);
  var h = cH(t, i, o), p = h[0], y = h[1], _ = dw(["react-colorful", e]);
  return Be.createElement("div", tE({}, l, { ref: u, className: _ }), Be.createElement(uH, { hsva: p, onChange: y }), Be.createElement(lH, { hue: p.h, onChange: y }), Be.createElement(Jte, { hsva: p, onChange: y, className: "react-colorful__last-control" }));
}, tne = { defaultColor: { r: 0, g: 0, b: 0, a: 1 }, toHsva: sH, fromHsva: oH, equal: v3 }, nne = function(n) {
  return Be.createElement(ene, tE({}, n, { colorModel: tne }));
}, rne = { defaultColor: { r: 0, g: 0, b: 0 }, toHsva: function(n) {
  return sH({ r: n.r, g: n.g, b: n.b, a: 1 });
}, fromHsva: function(n) {
  return { r: (e = oH(n)).r, g: e.g, b: e.b };
  var e;
}, equal: v3 }, ine = function(n) {
  return Be.createElement(Zte, tE({}, n, { colorModel: rne }));
};
function nE(n, e, t, r) {
  function i(o) {
    return o instanceof t ? o : new t(function(l) {
      l(o);
    });
  }
  return new (t || (t = Promise))(function(o, l) {
    function u(y) {
      try {
        p(r.next(y));
      } catch (_) {
        l(_);
      }
    }
    function h(y) {
      try {
        p(r.throw(y));
      } catch (_) {
        l(_);
      }
    }
    function p(y) {
      y.done ? o(y.value) : i(y.value).then(u, h);
    }
    p((r = r.apply(n, e || [])).next());
  });
}
function rE(n, e) {
  var t = { label: 0, sent: function() {
    if (o[0] & 1)
      throw o[1];
    return o[1];
  }, trys: [], ops: [] }, r, i, o, l;
  return l = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
    return this;
  }), l;
  function u(p) {
    return function(y) {
      return h([p, y]);
    };
  }
  function h(p) {
    if (r)
      throw new TypeError("Generator is already executing.");
    for (; l && (l = 0, p[0] && (t = 0)), t; )
      try {
        if (r = 1, i && (o = p[0] & 2 ? i.return : p[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, p[1])).done)
          return o;
        switch (i = 0, o && (p = [p[0] & 2, o.value]), p[0]) {
          case 0:
          case 1:
            o = p;
            break;
          case 4:
            return t.label++, { value: p[1], done: !1 };
          case 5:
            t.label++, i = p[1], p = [0];
            continue;
          case 7:
            p = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (o = t.trys, !(o = o.length > 0 && o[o.length - 1]) && (p[0] === 6 || p[0] === 2)) {
              t = 0;
              continue;
            }
            if (p[0] === 3 && (!o || p[1] > o[0] && p[1] < o[3])) {
              t.label = p[1];
              break;
            }
            if (p[0] === 6 && t.label < o[1]) {
              t.label = o[1], o = p;
              break;
            }
            if (o && t.label < o[2]) {
              t.label = o[2], t.ops.push(p);
              break;
            }
            o[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        p = e.call(n, t);
      } catch (y) {
        p = [6, y], i = 0;
      } finally {
        r = o = 0;
      }
    if (p[0] & 5)
      throw p[1];
    return { value: p[0] ? p[1] : void 0, done: !0 };
  }
}
function ane(n, e) {
  var t = typeof Symbol == "function" && n[Symbol.iterator];
  if (!t)
    return n;
  var r = t.call(n), i, o = [], l;
  try {
    for (; (e === void 0 || e-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (u) {
    l = { error: u };
  } finally {
    try {
      i && !i.done && (t = r.return) && t.call(r);
    } finally {
      if (l)
        throw l.error;
    }
  }
  return o;
}
function one() {
  for (var n = [], e = 0; e < arguments.length; e++)
    n = n.concat(ane(arguments[e]));
  return n;
}
var sne = /* @__PURE__ */ new Map([
  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  // Others
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function hw(n, e) {
  var t = lne(n);
  if (typeof t.path != "string") {
    var r = n.webkitRelativePath;
    Object.defineProperty(t, "path", {
      value: typeof e == "string" ? e : typeof r == "string" && r.length > 0 ? r : n.name,
      writable: !1,
      configurable: !1,
      enumerable: !0
    });
  }
  return t;
}
function lne(n) {
  var e = n.name, t = e && e.lastIndexOf(".") !== -1;
  if (t && !n.type) {
    var r = e.split(".").pop().toLowerCase(), i = sne.get(r);
    i && Object.defineProperty(n, "type", {
      value: i,
      writable: !1,
      configurable: !1,
      enumerable: !0
    });
  }
  return n;
}
var une = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  "Thumbs.db"
  // Windows
];
function cne(n) {
  return nE(this, void 0, void 0, function() {
    return rE(this, function(e) {
      return AR(n) && fne(n) ? [2, mne(n.dataTransfer, n.type)] : dne(n) ? [2, hne(n)] : Array.isArray(n) && n.every(function(t) {
        return "getFile" in t && typeof t.getFile == "function";
      }) ? [2, pne(n)] : [2, []];
    });
  });
}
function fne(n) {
  return AR(n.dataTransfer);
}
function dne(n) {
  return AR(n) && AR(n.target);
}
function AR(n) {
  return typeof n == "object" && n !== null;
}
function hne(n) {
  return QO(n.target.files).map(function(e) {
    return hw(e);
  });
}
function pne(n) {
  return nE(this, void 0, void 0, function() {
    var e;
    return rE(this, function(t) {
      switch (t.label) {
        case 0:
          return [4, Promise.all(n.map(function(r) {
            return r.getFile();
          }))];
        case 1:
          return e = t.sent(), [2, e.map(function(r) {
            return hw(r);
          })];
      }
    });
  });
}
function mne(n, e) {
  return nE(this, void 0, void 0, function() {
    var t, r;
    return rE(this, function(i) {
      switch (i.label) {
        case 0:
          return n === null ? [2, []] : n.items ? (t = QO(n.items).filter(function(o) {
            return o.kind === "file";
          }), e !== "drop" ? [2, t] : [4, Promise.all(t.map(vne))]) : [3, 2];
        case 1:
          return r = i.sent(), [2, Nz(dH(r))];
        case 2:
          return [2, Nz(QO(n.files).map(function(o) {
            return hw(o);
          }))];
      }
    });
  });
}
function Nz(n) {
  return n.filter(function(e) {
    return une.indexOf(e.name) === -1;
  });
}
function QO(n) {
  if (n === null)
    return [];
  for (var e = [], t = 0; t < n.length; t++) {
    var r = n[t];
    e.push(r);
  }
  return e;
}
function vne(n) {
  if (typeof n.webkitGetAsEntry != "function")
    return kz(n);
  var e = n.webkitGetAsEntry();
  return e && e.isDirectory ? hH(e) : kz(n);
}
function dH(n) {
  return n.reduce(function(e, t) {
    return one(e, Array.isArray(t) ? dH(t) : [t]);
  }, []);
}
function kz(n) {
  var e = n.getAsFile();
  if (!e)
    return Promise.reject(n + " is not a File");
  var t = hw(e);
  return Promise.resolve(t);
}
function gne(n) {
  return nE(this, void 0, void 0, function() {
    return rE(this, function(e) {
      return [2, n.isDirectory ? hH(n) : yne(n)];
    });
  });
}
function hH(n) {
  var e = n.createReader();
  return new Promise(function(t, r) {
    var i = [];
    function o() {
      var l = this;
      e.readEntries(function(u) {
        return nE(l, void 0, void 0, function() {
          var h, p, y;
          return rE(this, function(_) {
            switch (_.label) {
              case 0:
                if (u.length)
                  return [3, 5];
                _.label = 1;
              case 1:
                return _.trys.push([1, 3, , 4]), [4, Promise.all(i)];
              case 2:
                return h = _.sent(), t(h), [3, 4];
              case 3:
                return p = _.sent(), r(p), [3, 4];
              case 4:
                return [3, 6];
              case 5:
                y = Promise.all(u.map(gne)), i.push(y), o(), _.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(u) {
        r(u);
      });
    }
    o();
  });
}
function yne(n) {
  return nE(this, void 0, void 0, function() {
    return rE(this, function(e) {
      return [2, new Promise(function(t, r) {
        n.file(function(i) {
          var o = hw(i, n.fullPath);
          t(o);
        }, function(i) {
          r(i);
        });
      })];
    });
  });
}
var Sne = function(n, e) {
  if (n && e) {
    var t = Array.isArray(e) ? e : e.split(","), r = n.name || "", i = (n.type || "").toLowerCase(), o = i.replace(/\/.*$/, "");
    return t.some(function(l) {
      var u = l.trim().toLowerCase();
      return u.charAt(0) === "." ? r.toLowerCase().endsWith(u) : u.endsWith("/*") ? o === u.replace(/\/.*$/, "") : i === u;
    });
  }
  return !0;
};
function Fz(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(n);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(n, i).enumerable;
    })), t.push.apply(t, r);
  }
  return t;
}
function zz(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Fz(Object(t), !0).forEach(function(r) {
      pH(n, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t)) : Fz(Object(t)).forEach(function(r) {
      Object.defineProperty(n, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return n;
}
function pH(n, e, t) {
  return e in n ? Object.defineProperty(n, e, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : n[e] = t, n;
}
function Iz(n, e) {
  return bne(n) || Ene(n, e) || xne(n, e) || _ne();
}
function _ne() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function xne(n, e) {
  if (n) {
    if (typeof n == "string")
      return Bz(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (t === "Object" && n.constructor && (t = n.constructor.name), t === "Map" || t === "Set")
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return Bz(n, e);
  }
}
function Bz(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, r = new Array(e); t < e; t++)
    r[t] = n[t];
  return r;
}
function Ene(n, e) {
  var t = n == null ? null : typeof Symbol < "u" && n[Symbol.iterator] || n["@@iterator"];
  if (t != null) {
    var r = [], i = !0, o = !1, l, u;
    try {
      for (t = t.call(n); !(i = (l = t.next()).done) && (r.push(l.value), !(e && r.length === e)); i = !0)
        ;
    } catch (h) {
      o = !0, u = h;
    } finally {
      try {
        !i && t.return != null && t.return();
      } finally {
        if (o)
          throw u;
      }
    }
    return r;
  }
}
function bne(n) {
  if (Array.isArray(n))
    return n;
}
var Tne = "file-invalid-type", wne = "file-too-large", Mne = "file-too-small", Cne = "too-many-files", Rne = function(e) {
  e = Array.isArray(e) && e.length === 1 ? e[0] : e;
  var t = Array.isArray(e) ? "one of ".concat(e.join(", ")) : e;
  return {
    code: Tne,
    message: "File type must be ".concat(t)
  };
}, Hz = function(e) {
  return {
    code: wne,
    message: "File is larger than ".concat(e, " ").concat(e === 1 ? "byte" : "bytes")
  };
}, Vz = function(e) {
  return {
    code: Mne,
    message: "File is smaller than ".concat(e, " ").concat(e === 1 ? "byte" : "bytes")
  };
}, Ane = {
  code: Cne,
  message: "Too many files"
};
function mH(n, e) {
  var t = n.type === "application/x-moz-file" || Sne(n, e);
  return [t, t ? null : Rne(e)];
}
function vH(n, e, t) {
  if (uT(n.size))
    if (uT(e) && uT(t)) {
      if (n.size > t)
        return [!1, Hz(t)];
      if (n.size < e)
        return [!1, Vz(e)];
    } else {
      if (uT(e) && n.size < e)
        return [!1, Vz(e)];
      if (uT(t) && n.size > t)
        return [!1, Hz(t)];
    }
  return [!0, null];
}
function uT(n) {
  return n != null;
}
function Dne(n) {
  var e = n.files, t = n.accept, r = n.minSize, i = n.maxSize, o = n.multiple, l = n.maxFiles;
  return !o && e.length > 1 || o && l >= 1 && e.length > l ? !1 : e.every(function(u) {
    var h = mH(u, t), p = Iz(h, 1), y = p[0], _ = vH(u, r, i), E = Iz(_, 1), w = E[0];
    return y && w;
  });
}
function DR(n) {
  return typeof n.isPropagationStopped == "function" ? n.isPropagationStopped() : typeof n.cancelBubble < "u" ? n.cancelBubble : !1;
}
function JC(n) {
  return n.dataTransfer ? Array.prototype.some.call(n.dataTransfer.types, function(e) {
    return e === "Files" || e === "application/x-moz-file";
  }) : !!n.target && !!n.target.files;
}
function Gz(n) {
  n.preventDefault();
}
function Lne(n) {
  return n.indexOf("MSIE") !== -1 || n.indexOf("Trident/") !== -1;
}
function One(n) {
  return n.indexOf("Edge/") !== -1;
}
function Pne() {
  var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return Lne(n) || One(n);
}
function mv() {
  for (var n = arguments.length, e = new Array(n), t = 0; t < n; t++)
    e[t] = arguments[t];
  return function(r) {
    for (var i = arguments.length, o = new Array(i > 1 ? i - 1 : 0), l = 1; l < i; l++)
      o[l - 1] = arguments[l];
    return e.some(function(u) {
      return !DR(r) && u && u.apply(void 0, [r].concat(o)), DR(r);
    });
  };
}
function Une() {
  return "showOpenFilePicker" in window;
}
function Nne(n) {
  return n = typeof n == "string" ? n.split(",") : n, [{
    description: "everything",
    // TODO: Need to handle filtering more elegantly than this!
    accept: Array.isArray(n) ? (
      // Accept just MIME types as per spec
      // NOTE: accept can be https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers
      n.filter(function(e) {
        return e === "audio/*" || e === "video/*" || e === "image/*" || e === "text/*" || /\w+\/[-+.\w]+/g.test(e);
      }).reduce(function(e, t) {
        return zz(zz({}, e), {}, pH({}, t, []));
      }, {})
    ) : {}
  }];
}
function kne(n) {
  return n instanceof DOMException && (n.name === "AbortError" || n.code === n.ABORT_ERR);
}
function Fne(n) {
  return n instanceof DOMException && (n.name === "SecurityError" || n.code === n.SECURITY_ERR);
}
var zne = ["children"], Ine = ["open"], Bne = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"], Hne = ["refKey", "onChange", "onClick"];
function Vne(n) {
  return jne(n) || Wne(n) || gH(n) || Gne();
}
function Gne() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Wne(n) {
  if (typeof Symbol < "u" && n[Symbol.iterator] != null || n["@@iterator"] != null)
    return Array.from(n);
}
function jne(n) {
  if (Array.isArray(n))
    return ZO(n);
}
function AL(n, e) {
  return Xne(n) || Yne(n, e) || gH(n, e) || $ne();
}
function $ne() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function gH(n, e) {
  if (n) {
    if (typeof n == "string")
      return ZO(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (t === "Object" && n.constructor && (t = n.constructor.name), t === "Map" || t === "Set")
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return ZO(n, e);
  }
}
function ZO(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, r = new Array(e); t < e; t++)
    r[t] = n[t];
  return r;
}
function Yne(n, e) {
  var t = n == null ? null : typeof Symbol < "u" && n[Symbol.iterator] || n["@@iterator"];
  if (t != null) {
    var r = [], i = !0, o = !1, l, u;
    try {
      for (t = t.call(n); !(i = (l = t.next()).done) && (r.push(l.value), !(e && r.length === e)); i = !0)
        ;
    } catch (h) {
      o = !0, u = h;
    } finally {
      try {
        !i && t.return != null && t.return();
      } finally {
        if (o)
          throw u;
      }
    }
    return r;
  }
}
function Xne(n) {
  if (Array.isArray(n))
    return n;
}
function Wz(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(n);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(n, i).enumerable;
    })), t.push.apply(t, r);
  }
  return t;
}
function gs(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Wz(Object(t), !0).forEach(function(r) {
      JO(n, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t)) : Wz(Object(t)).forEach(function(r) {
      Object.defineProperty(n, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return n;
}
function JO(n, e, t) {
  return e in n ? Object.defineProperty(n, e, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : n[e] = t, n;
}
function LR(n, e) {
  if (n == null)
    return {};
  var t = qne(n, e), r, i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(n);
    for (i = 0; i < o.length; i++)
      r = o[i], !(e.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(n, r) && (t[r] = n[r]);
  }
  return t;
}
function qne(n, e) {
  if (n == null)
    return {};
  var t = {}, r = Object.keys(n), i, o;
  for (o = 0; o < r.length; o++)
    i = r[o], !(e.indexOf(i) >= 0) && (t[i] = n[i]);
  return t;
}
var g3 = /* @__PURE__ */ le.forwardRef(function(n, e) {
  var t = n.children, r = LR(n, zne), i = y3(r), o = i.open, l = LR(i, Ine);
  return le.useImperativeHandle(e, function() {
    return {
      open: o
    };
  }, [o]), /* @__PURE__ */ Be.createElement(le.Fragment, null, t(gs(gs({}, l), {}, {
    open: o
  })));
});
g3.displayName = "Dropzone";
var yH = {
  disabled: !1,
  getFilesFromEvent: cne,
  maxSize: 1 / 0,
  minSize: 0,
  multiple: !0,
  maxFiles: 0,
  preventDropOnDocument: !0,
  noClick: !1,
  noKeyboard: !1,
  noDrag: !1,
  noDragEventsBubbling: !1,
  validator: null,
  useFsAccessApi: !0
};
g3.defaultProps = yH;
g3.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.draggedFiles Files in active drag
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: wo.func,
  /**
   * Set accepted file types.
   * See https://github.com/okonet/attr-accept for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all.
   * See: https://github.com/react-dropzone/react-dropzone/issues/276
   */
  accept: wo.oneOfType([wo.string, wo.arrayOf(wo.string)]),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: wo.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: wo.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: wo.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: wo.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: wo.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: wo.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: wo.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: wo.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: wo.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: wo.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: wo.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: wo.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: wo.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: wo.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: wo.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: wo.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: wo.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: wo.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: wo.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: wo.func,
  /**
   * Custom validation function
   * @param {File} file
   * @returns {FileError|FileError[]}
   */
  validator: wo.func
};
var eP = {
  isFocused: !1,
  isFileDialogActive: !1,
  isDragActive: !1,
  isDragAccept: !1,
  isDragReject: !1,
  draggedFiles: [],
  acceptedFiles: [],
  fileRejections: []
};
function y3() {
  var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = gs(gs({}, yH), n), t = e.accept, r = e.disabled, i = e.getFilesFromEvent, o = e.maxSize, l = e.minSize, u = e.multiple, h = e.maxFiles, p = e.onDragEnter, y = e.onDragLeave, _ = e.onDragOver, E = e.onDrop, w = e.onDropAccepted, R = e.onDropRejected, U = e.onFileDialogCancel, L = e.onFileDialogOpen, A = e.useFsAccessApi, k = e.preventDropOnDocument, F = e.noClick, H = e.noKeyboard, B = e.noDrag, j = e.noDragEventsBubbling, Y = e.validator, ee = le.useMemo(function() {
    return typeof L == "function" ? L : jz;
  }, [L]), Z = le.useMemo(function() {
    return typeof U == "function" ? U : jz;
  }, [U]), K = le.useRef(null), fe = le.useRef(null), se = le.useReducer(Kne, eP), he = AL(se, 2), me = he[0], Ee = he[1], be = me.isFocused, we = me.isFileDialogActive, de = me.draggedFiles, ye = le.useRef(typeof window < "u" && window.isSecureContext && A && Une()), X = function() {
    !ye.current && we && setTimeout(function() {
      if (fe.current) {
        var re = fe.current.files;
        re.length || (Ee({
          type: "closeDialog"
        }), Z());
      }
    }, 300);
  };
  le.useEffect(function() {
    return window.addEventListener("focus", X, !1), function() {
      window.removeEventListener("focus", X, !1);
    };
  }, [fe, we, Z, ye]);
  var q = le.useRef([]), ue = function(re) {
    K.current && K.current.contains(re.target) || (re.preventDefault(), q.current = []);
  };
  le.useEffect(function() {
    return k && (document.addEventListener("dragover", Gz, !1), document.addEventListener("drop", ue, !1)), function() {
      k && (document.removeEventListener("dragover", Gz), document.removeEventListener("drop", ue));
    };
  }, [K, k]);
  var Ce = le.useCallback(function(ae) {
    ae.preventDefault(), ae.persist(), Ye(ae), q.current = [].concat(Vne(q.current), [ae.target]), JC(ae) && Promise.resolve(i(ae)).then(function(re) {
      DR(ae) && !j || (Ee({
        draggedFiles: re,
        isDragActive: !0,
        type: "setDraggedFiles"
      }), p && p(ae));
    });
  }, [i, p, j]), Ae = le.useCallback(function(ae) {
    ae.preventDefault(), ae.persist(), Ye(ae);
    var re = JC(ae);
    if (re && ae.dataTransfer)
      try {
        ae.dataTransfer.dropEffect = "copy";
      } catch {
      }
    return re && _ && _(ae), !1;
  }, [_, j]), De = le.useCallback(function(ae) {
    ae.preventDefault(), ae.persist(), Ye(ae);
    var re = q.current.filter(function(xt) {
      return K.current && K.current.contains(xt);
    }), ze = re.indexOf(ae.target);
    ze !== -1 && re.splice(ze, 1), q.current = re, !(re.length > 0) && (Ee({
      isDragActive: !1,
      type: "setDraggedFiles",
      draggedFiles: []
    }), JC(ae) && y && y(ae));
  }, [K, y, j]), Ne = le.useCallback(function(ae, re) {
    var ze = [], xt = [];
    ae.forEach(function(ut) {
      var lt = mH(ut, t), Yt = AL(lt, 2), Nt = Yt[0], xe = Yt[1], We = vH(ut, l, o), ft = AL(We, 2), Et = ft[0], Ze = ft[1], Te = Y ? Y(ut) : null;
      if (Nt && Et && !Te)
        ze.push(ut);
      else {
        var tt = [xe, Ze];
        Te && (tt = tt.concat(Te)), xt.push({
          file: ut,
          errors: tt.filter(function(pt) {
            return pt;
          })
        });
      }
    }), (!u && ze.length > 1 || u && h >= 1 && ze.length > h) && (ze.forEach(function(ut) {
      xt.push({
        file: ut,
        errors: [Ane]
      });
    }), ze.splice(0)), Ee({
      acceptedFiles: ze,
      fileRejections: xt,
      type: "setFiles"
    }), E && E(ze, xt, re), xt.length > 0 && R && R(xt, re), ze.length > 0 && w && w(ze, re);
  }, [Ee, u, t, l, o, h, E, w, R, Y]), Pe = le.useCallback(function(ae) {
    ae.preventDefault(), ae.persist(), Ye(ae), q.current = [], JC(ae) && Promise.resolve(i(ae)).then(function(re) {
      DR(ae) && !j || Ne(re, ae);
    }), Ee({
      type: "reset"
    });
  }, [i, Ne, j]), Fe = le.useCallback(function() {
    if (ye.current) {
      Ee({
        type: "openDialog"
      }), ee();
      var ae = {
        multiple: u,
        types: Nne(t)
      };
      window.showOpenFilePicker(ae).then(function(re) {
        return i(re);
      }).then(function(re) {
        Ne(re, null), Ee({
          type: "closeDialog"
        });
      }).catch(function(re) {
        kne(re) ? (Z(re), Ee({
          type: "closeDialog"
        })) : Fne(re) && (ye.current = !1, fe.current && (fe.current.value = null, fe.current.click()));
      });
      return;
    }
    fe.current && (Ee({
      type: "openDialog"
    }), ee(), fe.current.value = null, fe.current.click());
  }, [Ee, ee, Z, A, Ne, t, u]), it = le.useCallback(function(ae) {
    !K.current || !K.current.isEqualNode(ae.target) || (ae.key === " " || ae.key === "Enter" || ae.keyCode === 32 || ae.keyCode === 13) && (ae.preventDefault(), Fe());
  }, [K, Fe]), Ot = le.useCallback(function() {
    Ee({
      type: "focus"
    });
  }, []), st = le.useCallback(function() {
    Ee({
      type: "blur"
    });
  }, []), oe = le.useCallback(function() {
    F || (Pne() ? setTimeout(Fe, 0) : Fe());
  }, [F, Fe]), rt = function(re) {
    return r ? null : re;
  }, qe = function(re) {
    return H ? null : rt(re);
  }, $e = function(re) {
    return B ? null : rt(re);
  }, Ye = function(re) {
    j && re.stopPropagation();
  }, zt = le.useMemo(function() {
    return function() {
      var ae = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, re = ae.refKey, ze = re === void 0 ? "ref" : re, xt = ae.role, ut = ae.onKeyDown, lt = ae.onFocus, Yt = ae.onBlur, Nt = ae.onClick, xe = ae.onDragEnter, We = ae.onDragOver, ft = ae.onDragLeave, Et = ae.onDrop, Ze = LR(ae, Bne);
      return gs(gs(JO({
        onKeyDown: qe(mv(ut, it)),
        onFocus: qe(mv(lt, Ot)),
        onBlur: qe(mv(Yt, st)),
        onClick: rt(mv(Nt, oe)),
        onDragEnter: $e(mv(xe, Ce)),
        onDragOver: $e(mv(We, Ae)),
        onDragLeave: $e(mv(ft, De)),
        onDrop: $e(mv(Et, Pe)),
        role: typeof xt == "string" && xt !== "" ? xt : "button"
      }, ze, K), !r && !H ? {
        tabIndex: 0
      } : {}), Ze);
    };
  }, [K, it, Ot, st, oe, Ce, Ae, De, Pe, H, B, r]), ot = le.useCallback(function(ae) {
    ae.stopPropagation();
  }, []), Dt = le.useMemo(function() {
    return function() {
      var ae = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, re = ae.refKey, ze = re === void 0 ? "ref" : re, xt = ae.onChange, ut = ae.onClick, lt = LR(ae, Hne), Yt = JO({
        accept: t,
        multiple: u,
        type: "file",
        style: {
          display: "none"
        },
        onChange: rt(mv(xt, Pe)),
        onClick: rt(mv(ut, ot)),
        tabIndex: -1
      }, ze, fe);
      return gs(gs({}, Yt), lt);
    };
  }, [fe, t, u, Pe, r]), kt = de.length, mt = kt > 0 && Dne({
    files: de,
    accept: t,
    minSize: l,
    maxSize: o,
    multiple: u,
    maxFiles: h
  }), rn = kt > 0 && !mt;
  return gs(gs({}, me), {}, {
    isDragAccept: mt,
    isDragReject: rn,
    isFocused: be && !r,
    getRootProps: zt,
    getInputProps: Dt,
    rootRef: K,
    inputRef: fe,
    open: rt(Fe)
  });
}
function Kne(n, e) {
  switch (e.type) {
    case "focus":
      return gs(gs({}, n), {}, {
        isFocused: !0
      });
    case "blur":
      return gs(gs({}, n), {}, {
        isFocused: !1
      });
    case "openDialog":
      return gs(gs({}, eP), {}, {
        isFileDialogActive: !0
      });
    case "closeDialog":
      return gs(gs({}, n), {}, {
        isFileDialogActive: !1
      });
    case "setDraggedFiles":
      var t = e.isDragActive, r = e.draggedFiles;
      return gs(gs({}, n), {}, {
        draggedFiles: r,
        isDragActive: t
      });
    case "setFiles":
      return gs(gs({}, n), {}, {
        acceptedFiles: e.acceptedFiles,
        fileRejections: e.fileRejections
      });
    case "reset":
      return gs({}, eP);
    default:
      return n;
  }
}
function jz() {
}
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var Qne = function(e) {
  return e != null && typeof e == "object" && Array.isArray(e) === !1;
};
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var Zne = Qne;
function $z(n) {
  return Zne(n) === !0 && Object.prototype.toString.call(n) === "[object Object]";
}
var SH = function(e) {
  var t, r;
  return !($z(e) === !1 || (t = e.constructor, typeof t != "function") || (r = t.prototype, $z(r) === !1) || r.hasOwnProperty("isPrototypeOf") === !1);
};
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var Jne = SH, S3 = function(e) {
  return Jne(e) || typeof e == "function" || Array.isArray(e);
};
/*!
 * for-in <https://github.com/jonschlinkert/for-in>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var ere = function(e, t, r) {
  for (var i in e)
    if (t.call(r, e[i], i, e) === !1)
      break;
}, tre = S3, nre = ere;
function _H(n, e) {
  for (var t = arguments.length, r = 0; ++r < t; ) {
    var i = arguments[r];
    tP(i) && nre(i, rre, n);
  }
  return n;
}
function rre(n, e) {
  if (ire(e)) {
    var t = this[e];
    tP(n) && tP(t) ? _H(t, n) : this[e] = n;
  }
}
function tP(n) {
  return tre(n) && !Array.isArray(n);
}
function ire(n) {
  return n !== "__proto__" && n !== "constructor" && n !== "prototype";
}
var are = _H;
/*!
 * get-value <https://github.com/jonschlinkert/get-value>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
var ore = function(n, e, t, r, i) {
  if (!sre(n) || !e)
    return n;
  if (e = eR(e), t && (e += "." + eR(t)), r && (e += "." + eR(r)), i && (e += "." + eR(i)), e in n)
    return n[e];
  for (var o = e.split("."), l = o.length, u = -1; n && ++u < l; ) {
    for (var h = o[u]; h[h.length - 1] === "\\"; )
      h = h.slice(0, -1) + "." + o[++u];
    n = n[h];
  }
  return n;
};
function sre(n) {
  return n !== null && (typeof n == "object" || typeof n == "function");
}
function eR(n) {
  return n ? Array.isArray(n) ? n.join(".") : n : "";
}
/*!
 * assign-symbols <https://github.com/jonschlinkert/assign-symbols>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
var lre = function(n, e) {
  if (n === null || typeof n > "u")
    throw new TypeError("expected first argument to be an object.");
  if (typeof e > "u" || typeof Symbol > "u" || typeof Object.getOwnPropertySymbols != "function")
    return n;
  for (var t = Object.prototype.propertyIsEnumerable, r = Object(n), i = arguments.length, o = 0; ++o < i; )
    for (var l = Object(arguments[o]), u = Object.getOwnPropertySymbols(l), h = 0; h < u.length; h++) {
      var p = u[h];
      t.call(l, p) && (r[p] = l[p]);
    }
  return r;
}, ure = S3, cre = lre, fre = Object.assign || function(n) {
  if (n === null || typeof n > "u")
    throw new TypeError("Cannot convert undefined or null to object");
  Yz(n) || (n = {});
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    hre(t) && (t = pre(t)), Yz(t) && (dre(n, t), cre(n, t));
  }
  return n;
};
function dre(n, e) {
  for (var t in e)
    mre(e, t) && (n[t] = e[t]);
}
function hre(n) {
  return n && typeof n == "string";
}
function pre(n) {
  var e = {};
  for (var t in n)
    e[t] = n[t];
  return e;
}
function Yz(n) {
  return n && typeof n == "object" || ure(n);
}
function mre(n, e) {
  return Object.prototype.hasOwnProperty.call(n, e);
}
/*!
 * split-string <https://github.com/jonschlinkert/split-string>
 *
 * Copyright (c) 2015-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var vre = fre, gre = function(n, e, t) {
  if (typeof n != "string")
    throw new TypeError("expected a string");
  typeof e == "function" && (t = e, e = null), typeof e == "string" && (e = { sep: e });
  var r = vre({ sep: "." }, e), i = r.quotes || ['"', "'", "`"], o;
  r.brackets === !0 ? o = {
    "<": ">",
    "(": ")",
    "[": "]",
    "{": "}"
  } : r.brackets && (o = r.brackets);
  var l = [], u = [], h = [""], p = r.sep, y = n.length, _ = -1, E;
  function w() {
    if (o && u.length)
      return o[u[u.length - 1]];
  }
  for (; ++_ < y; ) {
    var R = n[_], U = n[_ + 1], L = { val: R, idx: _, arr: h, str: n };
    if (l.push(L), R === "\\") {
      L.val = Sre(r, n, _) === !0 ? R + U : U, L.escaped = !0, typeof t == "function" && t(L), h[h.length - 1] += L.val, _++;
      continue;
    }
    if (o && o[R]) {
      u.push(R);
      var A = w(), k = _ + 1;
      if (n.indexOf(A, k + 1) !== -1)
        for (; u.length && k < y; ) {
          var F = n[++k];
          if (F === "\\") {
            F++;
            continue;
          }
          if (i.indexOf(F) !== -1) {
            k = nP(n, F, k + 1);
            continue;
          }
          if (A = w(), u.length && n.indexOf(A, k + 1) === -1)
            break;
          if (o[F]) {
            u.push(F);
            continue;
          }
          A === F && u.pop();
        }
      if (E = k, E === -1) {
        h[h.length - 1] += R;
        continue;
      }
      R = n.slice(_, E + 1), L.val = R, L.idx = _ = E;
    }
    if (i.indexOf(R) !== -1) {
      if (E = nP(n, R, _ + 1), E === -1) {
        h[h.length - 1] += R;
        continue;
      }
      yre(R, r) === !0 ? R = n.slice(_, E + 1) : R = n.slice(_ + 1, E), L.val = R, L.idx = _ = E;
    }
    if (typeof t == "function" && (t(L, l), R = L.val, _ = L.idx), L.val === p && L.split !== !1) {
      h.push("");
      continue;
    }
    h[h.length - 1] += L.val;
  }
  return h;
};
function nP(n, e, t, r) {
  var i = n.indexOf(e, t);
  return n.charAt(i - 1) === "\\" ? nP(n, e, i + 1) : i;
}
function yre(n, e) {
  return e.keepDoubleQuotes === !0 && n === '"' || e.keepSingleQuotes === !0 && n === "'" ? !0 : e.keepQuotes;
}
function Sre(n, e, t) {
  return typeof n.keepEscaping == "function" ? n.keepEscaping(e, t) : n.keepEscaping === !0 || e[t + 1] === "\\";
}
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
var _re = function(e) {
  return typeof e < "u" && e !== null && (typeof e == "object" || typeof e == "function");
}, Xz = _re, xre = function(e) {
  Xz(e) || (e = {});
  for (var t = arguments.length, r = 1; r < t; r++) {
    var i = arguments[r];
    Xz(i) && Ere(e, i);
  }
  return e;
};
function Ere(n, e) {
  for (var t in e)
    bre(e, t) && (n[t] = e[t]);
}
function bre(n, e) {
  return Object.prototype.hasOwnProperty.call(n, e);
}
/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
var Tre = function(e) {
  return typeof e < "u" && e !== null && (typeof e == "object" || typeof e == "function");
};
/*!
 * set-value <https://github.com/jonschlinkert/set-value>
 *
 * Copyright (c) 2014-2015, 2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var wre = gre, Mre = xre, qz = SH, Kz = Tre, Cre = function(n, e, t) {
  if (!Kz(n) || (Array.isArray(e) && (e = [].concat.apply([], e).join(".")), typeof e != "string"))
    return n;
  for (var r = wre(e, { sep: ".", brackets: !0 }).filter(Rre), i = r.length, o = -1, l = n; ++o < i; ) {
    var u = r[o];
    if (o !== i - 1) {
      Kz(l[u]) || (l[u] = {}), l = l[u];
      continue;
    }
    qz(l[u]) && qz(t) ? l[u] = Mre({}, l[u], t) : l[u] = t;
  }
  return n;
};
function Rre(n) {
  return n !== "__proto__" && n !== "constructor" && n !== "prototype";
}
var DL = S3, Qz = are, Are = ore, Zz = Cre, Dre = function(e, t, r) {
  if (!DL(e))
    throw new TypeError("expected an object");
  if (typeof t != "string" || r == null)
    return Qz.apply(null, arguments);
  if (typeof r == "string")
    return Zz(e, t, r), e;
  var i = Are(e, t);
  return DL(r) && DL(i) && (r = Qz({}, i, r)), Zz(e, t, r), e;
};
const Lre = /* @__PURE__ */ j1(Dre), _3 = (...n) => n.filter(Boolean).join(".");
function Ore(n) {
  const e = n.split(".");
  return [e.pop(), e.join(".") || void 0];
}
function Pre(n, e) {
  return Object.entries(fee(n, e)).reduce(
    (t, [, {
      value: r,
      disabled: i,
      key: o
    }]) => (t[o] = i ? void 0 : r, t),
    {}
  );
}
function Ure(n, e) {
  const t = le.useRef();
  return (e ? WT : sw)(n, t.current) || (t.current = n), t.current;
}
function xH(n, e) {
  return le.useMemo(n, Ure(e, !0));
}
function Nre(n) {
  const e = le.useRef(null), t = le.useRef(null), r = le.useRef(!0);
  return le.useLayoutEffect(() => {
    n || (e.current.style.height = "0px", e.current.style.overflow = "hidden");
  }, []), le.useEffect(() => {
    if (r.current) {
      r.current = !1;
      return;
    }
    let i;
    const o = e.current, l = () => {
      n && (o.style.removeProperty("height"), o.style.removeProperty("overflow"), t.current.scrollIntoView({
        behavior: "smooth",
        block: "nearest"
      }));
    };
    o.addEventListener("transitionend", l, {
      once: !0
    });
    const {
      height: u
    } = t.current.getBoundingClientRect();
    return o.style.height = u + "px", n || (o.style.overflow = "hidden", i = window.setTimeout(() => o.style.height = "0px", 50)), () => {
      o.removeEventListener("transitionend", l), clearTimeout(i);
    };
  }, [n]), {
    wrapperRef: e,
    contentRef: t
  };
}
const kre = (n) => {
  const [e, t] = le.useState(n.getVisiblePaths());
  return le.useEffect(() => {
    t(n.getVisiblePaths());
    const r = n.useStore.subscribe(n.getVisiblePaths, t, {
      equalityFn: sw
    });
    return () => r();
  }, [n]), e;
};
function Fre(n, e, t) {
  return n.useStore((i) => {
    const o = Nr(Nr({}, t), i.data);
    return Pre(o, e);
  }, sw);
}
function EH(n = 3) {
  const e = le.useRef(null), t = le.useRef(null), [r, i] = le.useState(!1), o = le.useCallback(() => i(!0), []), l = le.useCallback(() => i(!1), []);
  return le.useLayoutEffect(() => {
    if (r) {
      const {
        bottom: u,
        top: h,
        left: p
      } = e.current.getBoundingClientRect(), {
        height: y
      } = t.current.getBoundingClientRect(), _ = u + y > window.innerHeight - 40 ? "up" : "down";
      t.current.style.position = "fixed", t.current.style.zIndex = "10000", t.current.style.left = p + "px", _ === "down" ? t.current.style.top = u + n + "px" : t.current.style.bottom = window.innerHeight - h + n + "px";
    }
  }, [n, r]), {
    popinRef: e,
    wrapperRef: t,
    shown: r,
    show: o,
    hide: l
  };
}
Xte([qte]);
const zre = {
  rgb: "toRgb",
  hsl: "toHsl",
  hsv: "toHsv",
  hex: "toHex"
};
xd.extend({
  color: () => (n) => Of(n).isValid()
});
const Ire = (n) => xd().color().test(n);
function bH(n, {
  format: e,
  hasAlpha: t,
  isString: r
}) {
  const i = zre[e] + (r && e !== "hex" ? "String" : ""), o = n[i]();
  return typeof o == "object" && !t ? dee(o, ["a"]) : o;
}
const TH = (n, e) => {
  const t = Of(n);
  if (!t.isValid())
    throw Error("Invalid color");
  return bH(t, e);
}, Bre = (n, e) => bH(Of(n), Nr(Nr({}, e), {}, {
  isString: !0,
  format: "hex"
})), Hre = ({
  value: n
}) => {
  const e = Yte(n), t = e === "name" ? "hex" : e, r = typeof n == "object" ? "a" in n : e === "hex" && n.length === 8 || /^(rgba)|(hsla)|(hsva)/.test(n), i = {
    format: t,
    hasAlpha: r,
    isString: typeof n == "string"
  };
  return {
    value: TH(n, i),
    settings: i
  };
};
var Vre = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  schema: Ire,
  sanitize: TH,
  format: Bre,
  normalize: Hre
});
const Gre = Lr("div", {
  position: "relative",
  boxSizing: "border-box",
  borderRadius: "$sm",
  overflow: "hidden",
  cursor: "pointer",
  height: "$rowHeight",
  width: "$rowHeight",
  backgroundColor: "#fff",
  backgroundImage: `url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')`,
  $inputStyle: "",
  $hover: "",
  zIndex: 1,
  variants: {
    active: {
      true: {
        $inputStyle: "$accent1"
      }
    }
  },
  "&::before": {
    content: '""',
    position: "absolute",
    top: 0,
    bottom: 0,
    right: 0,
    left: 0,
    backgroundColor: "currentColor",
    zIndex: 1
  }
}), Wre = Lr("div", {
  position: "relative",
  display: "grid",
  gridTemplateColumns: "$sizes$rowHeight auto",
  columnGap: "$colGap",
  alignItems: "center"
}), jre = Lr("div", {
  width: "$colorPickerWidth",
  height: "$colorPickerHeight",
  ".react-colorful": {
    width: "100%",
    height: "100%",
    boxShadow: "$level2",
    cursor: "crosshair"
  },
  ".react-colorful__saturation": {
    borderRadius: "$sm $sm 0 0"
  },
  ".react-colorful__alpha, .react-colorful__hue": {
    height: 10
  },
  ".react-colorful__last-control": {
    borderRadius: "0 0 $sm $sm"
  },
  ".react-colorful__pointer": {
    height: 12,
    width: 12
  }
});
function Jz(n, e) {
  return e !== "rgb" ? Of(n).toRgb() : n;
}
function $re({
  value: n,
  displayValue: e,
  settings: t,
  onUpdate: r
}) {
  const {
    emitOnEditStart: i,
    emitOnEditEnd: o
  } = $c(), {
    format: l,
    hasAlpha: u
  } = t, {
    popinRef: h,
    wrapperRef: p,
    shown: y,
    show: _,
    hide: E
  } = EH(), w = le.useRef(0), [R, U] = le.useState(() => Jz(n, l)), L = u ? nne : ine, A = () => {
    U(Jz(n, l)), _(), i();
  }, k = () => {
    E(), o(), window.clearTimeout(w.current);
  }, F = () => {
    w.current = window.setTimeout(k, 500);
  };
  return le.useEffect(() => () => window.clearTimeout(w.current), []), Be.createElement(Be.Fragment, null, Be.createElement(Gre, {
    ref: h,
    active: y,
    onClick: () => A(),
    style: {
      color: e
    }
  }), y && Be.createElement(c3, null, Be.createElement($5, {
    onPointerUp: k
  }), Be.createElement(jre, {
    ref: p,
    onMouseEnter: () => window.clearTimeout(w.current),
    onMouseLeave: (H) => H.buttons === 0 && F()
  }, Be.createElement(L, {
    color: R,
    onChange: r
  }))));
}
function Yre() {
  const {
    value: n,
    displayValue: e,
    label: t,
    onChange: r,
    onUpdate: i,
    settings: o
  } = $c();
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, t), Be.createElement(Wre, null, Be.createElement($re, {
    value: n,
    displayValue: e,
    onChange: r,
    onUpdate: i,
    settings: o
  }), Be.createElement(u3, {
    value: e,
    onChange: r,
    onUpdate: i
  })));
}
var Xre = Nr({
  component: Yre
}, Vre);
function qre() {
  const {
    label: n,
    displayValue: e,
    onUpdate: t,
    settings: r
  } = $c();
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, n), Be.createElement(d3, {
    value: e,
    settings: r,
    onUpdate: t
  }));
}
var Kre = Nr({
  component: qre
}, eH(["x", "y", "z"]));
const Qre = Lr("div", {
  $flexCenter: "",
  position: "relative",
  backgroundColor: "$elevation3",
  borderRadius: "$sm",
  cursor: "pointer",
  height: "$rowHeight",
  width: "$rowHeight",
  touchAction: "none",
  $draggable: "",
  $hover: "",
  "&:active": {
    cursor: "none"
  },
  "&::after": {
    content: '""',
    backgroundColor: "$accent2",
    height: 4,
    width: 4,
    borderRadius: 2
  }
}), Zre = Lr("div", {
  $flexCenter: "",
  width: "$joystickWidth",
  height: "$joystickHeight",
  borderRadius: "$sm",
  boxShadow: "$level2",
  position: "fixed",
  zIndex: 1e4,
  overflow: "hidden",
  $draggable: "",
  transform: "translate(-50%, -50%)",
  variants: {
    isOutOfBounds: {
      true: {
        backgroundColor: "$elevation1"
      },
      false: {
        backgroundColor: "$elevation3"
      }
    }
  },
  "> div": {
    position: "absolute",
    $flexCenter: "",
    borderStyle: "solid",
    borderWidth: 1,
    borderColor: "$highlight1",
    backgroundColor: "$elevation3",
    width: "80%",
    height: "80%",
    "&::after,&::before": {
      content: '""',
      position: "absolute",
      zindex: 10,
      backgroundColor: "$highlight1"
    },
    "&::before": {
      width: "100%",
      height: 1
    },
    "&::after": {
      height: "100%",
      width: 1
    }
  },
  "> span": {
    position: "relative",
    zindex: 100,
    width: 10,
    height: 10,
    backgroundColor: "$accent2",
    borderRadius: "50%"
  }
});
function Jre({
  value: n,
  settings: e,
  onUpdate: t
}) {
  const r = le.useRef(), i = le.useRef(0), o = le.useRef(0), l = le.useRef(1), [u, h] = le.useState(!1), [p, y] = le.useState(!1), [_, E] = X5(), w = le.useRef(null), R = le.useRef(null);
  le.useLayoutEffect(() => {
    if (u) {
      const {
        top: se,
        left: he,
        width: me,
        height: Ee
      } = w.current.getBoundingClientRect();
      R.current.style.left = he + me / 2 + "px", R.current.style.top = se + Ee / 2 + "px";
    }
  }, [u]);
  const {
    keys: [U, L],
    joystick: A
  } = e, k = A === "invertY" ? 1 : -1, {
    [U]: {
      step: F
    },
    [L]: {
      step: H
    }
  } = e, B = Ig("sizes", "joystickWidth"), j = Ig("sizes", "joystickHeight"), Y = parseFloat(B) * 0.8 / 2, ee = parseFloat(j) * 0.8 / 2, Z = le.useCallback(() => {
    r.current || (y(!0), i.current && E({
      x: i.current * Y
    }), o.current && E({
      y: o.current * -ee
    }), r.current = window.setInterval(() => {
      t((se) => {
        const he = F * i.current * l.current, me = k * H * o.current * l.current;
        return Array.isArray(se) ? {
          [U]: se[0] + he,
          [L]: se[1] + me
        } : {
          [U]: se[U] + he,
          [L]: se[L] + me
        };
      });
    }, 16));
  }, [Y, ee, t, E, F, H, U, L, k]), K = le.useCallback(() => {
    window.clearTimeout(r.current), r.current = void 0, y(!1);
  }, []);
  le.useEffect(() => {
    function se(he) {
      l.current = O5(he);
    }
    return window.addEventListener("keydown", se), window.addEventListener("keyup", se), () => {
      window.clearTimeout(r.current), window.removeEventListener("keydown", se), window.removeEventListener("keyup", se);
    };
  }, []);
  const fe = fw(({
    first: se,
    active: he,
    delta: [me, Ee],
    movement: [be, we]
  }) => {
    se && h(!0);
    const de = S0(be, -Y, Y), ye = S0(we, -ee, ee);
    i.current = Math.abs(be) > Math.abs(de) ? Math.sign(be - de) : 0, o.current = Math.abs(we) > Math.abs(ye) ? Math.sign(ye - we) : 0;
    let X = n[U], q = n[L];
    he ? (i.current || (X += me * F * l.current, E({
      x: de
    })), o.current || (q -= k * Ee * H * l.current, E({
      y: ye
    })), i.current || o.current ? Z() : K(), t({
      [U]: X,
      [L]: q
    })) : (h(!1), i.current = 0, o.current = 0, E({
      x: 0,
      y: 0
    }), K());
  });
  return Be.createElement(Qre, js({
    ref: w
  }, fe()), u && Be.createElement(c3, null, Be.createElement(Zre, {
    ref: R,
    isOutOfBounds: p
  }, Be.createElement("div", null), Be.createElement("span", {
    ref: _
  }))));
}
const eie = Lr("div", {
  display: "grid",
  columnGap: "$colGap",
  variants: {
    withJoystick: {
      true: {
        gridTemplateColumns: "$sizes$rowHeight auto"
      },
      false: {
        gridTemplateColumns: "auto"
      }
    }
  }
});
function tie() {
  const {
    label: n,
    displayValue: e,
    onUpdate: t,
    settings: r
  } = $c();
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, n), Be.createElement(eie, {
    withJoystick: !!r.joystick
  }, r.joystick && Be.createElement(Jre, {
    value: e,
    settings: r,
    onUpdate: t
  }), Be.createElement(d3, {
    value: e,
    settings: r,
    onUpdate: t
  })));
}
const nie = ["joystick"], wH = eH(["x", "y"]), rie = (n) => {
  let {
    joystick: e = !0
  } = n, t = ao(n, nie);
  const {
    value: r,
    settings: i
  } = wH.normalize(t);
  return {
    value: r,
    settings: Nr(Nr({}, i), {}, {
      joystick: e
    })
  };
};
var iie = Nr(Nr({
  component: tie
}, wH), {}, {
  normalize: rie
});
const aie = (n) => {
  if (n !== void 0) {
    if (n instanceof File)
      try {
        return URL.createObjectURL(n);
      } catch {
        return;
      }
    if (typeof n == "string" && n.indexOf("blob:") === 0)
      return n;
    throw Error("Invalid image format [undefined | blob | File].");
  }
}, oie = (n, e) => typeof e == "object" && "image" in e, sie = ({
  image: n
}) => ({
  value: n
});
var lie = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  sanitize: aie,
  schema: oie,
  normalize: sie
});
const uie = Lr("div", {
  position: "relative",
  display: "grid",
  gridTemplateColumns: "$sizes$rowHeight auto 20px",
  columnGap: "$colGap",
  alignItems: "center"
}), cie = Lr("div", {
  $flexCenter: "",
  overflow: "hidden",
  height: "$rowHeight",
  background: "$elevation3",
  textAlign: "center",
  color: "inherit",
  borderRadius: "$sm",
  outline: "none",
  userSelect: "none",
  cursor: "pointer",
  $inputStyle: "",
  $hover: "",
  $focusWithin: "",
  $active: "$accent1 $elevation1",
  variants: {
    isDragAccept: {
      true: {
        $inputStyle: "$accent1",
        backgroundColor: "$elevation1"
      }
    }
  }
}), fie = Lr("div", {
  boxSizing: "border-box",
  borderRadius: "$sm",
  height: "$rowHeight",
  width: "$rowHeight",
  $inputStyle: "",
  backgroundSize: "cover",
  backgroundPosition: "center",
  variants: {
    hasImage: {
      true: {
        cursor: "pointer",
        $hover: "",
        $active: ""
      }
    }
  }
}), die = Lr("div", {
  $flexCenter: "",
  width: "$imagePreviewWidth",
  height: "$imagePreviewHeight",
  borderRadius: "$sm",
  boxShadow: "$level2",
  pointerEvents: "none",
  $inputStyle: "",
  backgroundSize: "cover",
  backgroundPosition: "center"
}), hie = Lr("div", {
  fontSize: "0.8em",
  height: "100%",
  padding: "$rowGap $md"
}), pie = Lr("div", {
  $flexCenter: "",
  top: "0",
  right: "0",
  marginRight: "$sm",
  height: "100%",
  cursor: "pointer",
  variants: {
    disabled: {
      true: {
        color: "$elevation3",
        cursor: "default"
      }
    }
  },
  "&::after,&::before": {
    content: '""',
    position: "absolute",
    height: 2,
    width: 10,
    borderRadius: 1,
    backgroundColor: "currentColor"
  },
  "&::after": {
    transform: "rotate(45deg)"
  },
  "&::before": {
    transform: "rotate(-45deg)"
  }
});
function mie() {
  const {
    label: n,
    value: e,
    onUpdate: t,
    disabled: r
  } = $c(), {
    popinRef: i,
    wrapperRef: o,
    shown: l,
    show: u,
    hide: h
  } = EH(), p = le.useCallback((R) => {
    R.length && t(R[0]);
  }, [t]), y = le.useCallback((R) => {
    R.stopPropagation(), t(void 0);
  }, [t]), {
    getRootProps: _,
    getInputProps: E,
    isDragAccept: w
  } = y3({
    maxFiles: 1,
    accept: "image/*",
    onDrop: p,
    disabled: r
  });
  return Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, n), Be.createElement(uie, null, Be.createElement(fie, {
    ref: i,
    hasImage: !!e,
    onPointerDown: () => !!e && u(),
    onPointerUp: h,
    style: {
      backgroundImage: e ? `url(${e})` : "none"
    }
  }), l && !!e && Be.createElement(c3, null, Be.createElement($5, {
    onPointerUp: h,
    style: {
      cursor: "pointer"
    }
  }), Be.createElement(die, {
    ref: o,
    style: {
      backgroundImage: `url(${e})`
    }
  })), Be.createElement(cie, _({
    isDragAccept: w
  }), Be.createElement("input", E()), Be.createElement(hie, null, w ? "drop image" : "click or drop")), Be.createElement(pie, {
    onClick: y,
    disabled: !e
  })));
}
var vie = Nr({
  component: mie
}, lie);
const eI = xd().number(), gie = (n, e) => xd().array().length(2).every.number().test(n) && xd().schema({
  min: eI,
  max: eI
}).test(e), OR = (n) => ({
  min: n[0],
  max: n[1]
}), MH = (n, {
  bounds: [e, t]
}, r) => {
  const i = Array.isArray(n) ? OR(n) : n, o = {
    min: r[0],
    max: r[1]
  }, {
    min: l,
    max: u
  } = Nr(Nr({}, o), i);
  return [S0(Number(l), e, Math.max(e, u)), S0(Number(u), Math.min(t, l), t)];
}, yie = ({
  value: n,
  min: e,
  max: t
}) => {
  const r = {
    min: e,
    max: t
  }, i = J5(OR(n), {
    min: r,
    max: r
  }), o = [e, t], l = Nr(Nr({}, i), {}, {
    bounds: o
  });
  return {
    value: MH(OR(n), l, n),
    settings: l
  };
};
var Sie = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  schema: gie,
  format: OR,
  sanitize: MH,
  normalize: yie
});
const _ie = ["value", "bounds", "onDrag"], xie = ["bounds"], Eie = Lr("div", {
  display: "grid",
  columnGap: "$colGap",
  gridTemplateColumns: "auto calc($sizes$numberInputMinWidth * 2 + $space$rowGap)"
});
function bie(n) {
  let {
    value: e,
    bounds: [t, r],
    onDrag: i
  } = n, o = ao(n, _ie);
  const l = le.useRef(null), u = le.useRef(null), h = le.useRef(null), p = le.useRef(0), y = Ig("sizes", "scrubberWidth"), _ = fw(({
    event: R,
    first: U,
    xy: [L],
    movement: [A],
    memo: k = {}
  }) => {
    if (U) {
      const {
        width: H,
        left: B
      } = l.current.getBoundingClientRect();
      p.current = H - parseFloat(y);
      const j = (R == null ? void 0 : R.target) === u.current || (R == null ? void 0 : R.target) === h.current;
      k.pos = CR((L - B) / H, t, r);
      const Y = Math.abs(k.pos - e.min) - Math.abs(k.pos - e.max);
      k.key = Y < 0 || Y === 0 && k.pos <= e.min ? "min" : "max", j && (k.pos = e[k.key]);
    }
    const F = k.pos + CR(A / p.current, 0, r - t);
    return i({
      [k.key]: ete(F, o[k.key])
    }), k;
  }), E = `calc(${MR(e.min, t, r)} * (100% - ${y} - 8px) + 4px)`, w = `calc(${1 - MR(e.max, t, r)} * (100% - ${y} - 8px) + 4px)`;
  return Be.createElement(K5, js({
    ref: l
  }, _()), Be.createElement(q5, null, Be.createElement(Q5, {
    style: {
      left: E,
      right: w
    }
  })), Be.createElement(WO, {
    position: "left",
    ref: u,
    style: {
      left: E
    }
  }), Be.createElement(WO, {
    position: "right",
    ref: h,
    style: {
      right: w
    }
  }));
}
function Tie() {
  const {
    label: n,
    displayValue: e,
    onUpdate: t,
    settings: r
  } = $c(), i = ao(r, xie);
  return Be.createElement(Be.Fragment, null, Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, null, n), Be.createElement(Eie, null, Be.createElement(bie, js({
    value: e
  }, r, {
    onDrag: t
  })), Be.createElement(d3, {
    value: e,
    settings: i,
    onUpdate: t,
    innerLabelTrim: 0
  }))));
}
var wie = Nr({
  component: Tie
}, Sie);
const Mie = () => {
  const n = /* @__PURE__ */ new Map();
  return {
    on: (e, t) => {
      let r = n.get(e);
      r === void 0 && (r = /* @__PURE__ */ new Set(), n.set(e, r)), r.add(t);
    },
    off: (e, t) => {
      const r = n.get(e);
      r !== void 0 && (r.delete(t), r.size === 0 && n.delete(e));
    },
    emit: (e, ...t) => {
      const r = n.get(e);
      if (r !== void 0)
        for (const i of r)
          i(...t);
    }
  };
}, Cie = ["type", "value"], Rie = ["onChange", "transient", "onEditStart", "onEditEnd"], Aie = function() {
  const e = hB(_K(() => ({
    data: {}
  }))), t = Mie();
  this.storeId = cee(), this.useStore = e;
  const r = {}, i = /* @__PURE__ */ new Set();
  this.getVisiblePaths = () => {
    const l = this.getData(), u = Object.keys(l), h = [];
    Object.entries(r).forEach(([y, _]) => {
      _.render && u.some((E) => E.indexOf(y) === 0) && !_.render(this.get) && h.push(y + ".");
    });
    const p = [];
    return i.forEach((y) => {
      y in l && l[y].__refCount > 0 && h.every((_) => y.indexOf(_) === -1) && (!l[y].render || l[y].render(this.get)) && p.push(y);
    }), p;
  }, this.setOrderedPaths = (l) => {
    l.forEach((u) => i.add(u));
  }, this.orderPaths = (l) => (this.setOrderedPaths(l), l), this.disposePaths = (l) => {
    e.setState((u) => {
      const h = u.data;
      return l.forEach((p) => {
        if (p in h) {
          const y = h[p];
          y.__refCount--, y.__refCount === 0 && y.type in dp && delete h[p];
        }
      }), {
        data: h
      };
    });
  }, this.dispose = () => {
    e.setState(() => ({
      data: {}
    }));
  }, this.getFolderSettings = (l) => r[l] || {}, this.getData = () => e.getState().data, this.addData = (l, u) => {
    e.setState((h) => {
      const p = h.data;
      return Object.entries(l).forEach(([y, _]) => {
        let E = p[y];
        if (E) {
          const {
            type: w,
            value: R
          } = _, U = ao(_, Cie);
          w !== E.type ? Ng(ys.INPUT_TYPE_OVERRIDE, w) : ((E.__refCount === 0 || u) && Object.assign(E, U), E.__refCount++);
        } else
          p[y] = Nr(Nr({}, _), {}, {
            __refCount: 1
          });
      }), {
        data: p
      };
    });
  }, this.setValueAtPath = (l, u, h) => {
    e.setState((p) => {
      const y = p.data;
      return Tz(y[l], u, l, this, h), {
        data: y
      };
    });
  }, this.setSettingsAtPath = (l, u) => {
    e.setState((h) => {
      const p = h.data;
      return p[l].settings = Nr(Nr({}, p[l].settings), u), {
        data: p
      };
    });
  }, this.disableInputAtPath = (l, u) => {
    e.setState((h) => {
      const p = h.data;
      return p[l].disabled = u, {
        data: p
      };
    });
  }, this.set = (l, u) => {
    e.setState((h) => {
      const p = h.data;
      return Object.entries(l).forEach(([y, _]) => {
        try {
          Tz(p[y], _, void 0, void 0, u);
        } catch (E) {
          process.env.NODE_ENV === "development" && console.warn(`[This message will only show in development]: \`set\` for path ${y} has failed.`, E);
        }
      }), {
        data: p
      };
    });
  }, this.getInput = (l) => {
    try {
      return this.getData()[l];
    } catch {
      Ng(ys.PATH_DOESNT_EXIST, l);
    }
  }, this.get = (l) => {
    var u;
    return (u = this.getInput(l)) === null || u === void 0 ? void 0 : u.value;
  }, this.emitOnEditStart = (l) => {
    t.emit(`onEditStart:${l}`, this.get(l), l, Nr(Nr({}, this.getInput(l)), {}, {
      get: this.get
    }));
  }, this.emitOnEditEnd = (l) => {
    t.emit(`onEditEnd:${l}`, this.get(l), l, Nr(Nr({}, this.getInput(l)), {}, {
      get: this.get
    }));
  }, this.subscribeToEditStart = (l, u) => {
    const h = `onEditStart:${l}`;
    return t.on(h, u), () => t.off(h, u);
  }, this.subscribeToEditEnd = (l, u) => {
    const h = `onEditEnd:${l}`;
    return t.on(h, u), () => t.off(h, u);
  };
  const o = (l, u, h) => {
    const p = {};
    return Object.entries(l).forEach(([y, _]) => {
      if (y === "")
        return Ng(ys.EMPTY_KEY);
      let E = _3(u, y);
      if (_.type === dp.FOLDER) {
        const w = o(_.schema, E, h);
        Object.assign(p, w), E in r || (r[E] = _.settings);
      } else if (y in h)
        Ng(ys.DUPLICATE_KEYS, y, E, h[y].path);
      else {
        const w = yee(_, y, E, p);
        if (w) {
          const {
            type: R,
            options: U,
            input: L
          } = w, {
            onChange: A,
            transient: k,
            onEditStart: F,
            onEditEnd: H
          } = U, B = ao(U, Rie);
          p[E] = Nr(Nr(Nr({
            type: R
          }, B), L), {}, {
            fromPanel: !0
          }), h[y] = {
            path: E,
            onChange: A,
            transient: k,
            onEditStart: F,
            onEditEnd: H
          };
        } else
          Ng(ys.UNKNOWN_INPUT, E, _);
      }
    }), p;
  };
  this.getDataFromSchema = (l) => {
    const u = {};
    return [o(l, "", u), u];
  };
}, x3 = new Aie();
process.env.NODE_ENV === "development" && typeof window < "u" && (window.__STORE = x3);
const Die = {
  collapsed: !1
};
function pT(n, e) {
  return {
    type: dp.FOLDER,
    schema: n,
    settings: Nr(Nr({}, Die), e)
  };
}
const Lie = {
  disabled: !1
};
function Oie(n, e) {
  return {
    type: dp.BUTTON,
    onClick: n,
    settings: Nr(Nr({}, Lie), e)
  };
}
const tI = (n) => "__levaInput" in n, Pie = (n, e) => {
  const t = {}, r = e ? e.toLowerCase() : null;
  return n.forEach((i) => {
    const [o, l] = Ore(i);
    (!r || o.toLowerCase().indexOf(r) > -1) && Lre(t, l, {
      [o]: {
        __levaInput: !0,
        path: i
      }
    });
  }), t;
}, Uie = ["type", "label", "path", "valueKey", "value", "settings", "setValue", "disabled"];
function Nie(n) {
  let {
    type: e,
    label: t,
    path: r,
    valueKey: i,
    value: o,
    settings: l,
    setValue: u,
    disabled: h
  } = n, p = ao(n, Uie);
  const {
    displayValue: y,
    onChange: _,
    onUpdate: E
  } = Y5({
    type: e,
    value: o,
    settings: l,
    setValue: u
  }), w = m_[e].component;
  return w ? Be.createElement(F5.Provider, {
    value: Nr({
      key: i,
      path: r,
      id: "" + r,
      label: t,
      displayValue: y,
      value: o,
      onChange: _,
      onUpdate: E,
      settings: l,
      setValue: u,
      disabled: h
    }, p)
  }, Be.createElement(zee, {
    disabled: h
  }, Be.createElement(w, null))) : (Ng(ys.NO_COMPONENT_FOR_TYPE, e, r), null);
}
const kie = Lr("button", {
  display: "block",
  $reset: "",
  fontWeight: "$button",
  height: "$rowHeight",
  borderStyle: "none",
  borderRadius: "$sm",
  backgroundColor: "$elevation1",
  color: "$highlight1",
  "&:not(:disabled)": {
    color: "$highlight3",
    backgroundColor: "$accent2",
    cursor: "pointer",
    $hover: "$accent3",
    $active: "$accent3 $accent1",
    $focus: ""
  }
});
function Fie({
  onClick: n,
  settings: e,
  label: t
}) {
  const r = cw();
  return Be.createElement(mp, null, Be.createElement(kie, {
    disabled: e.disabled,
    onClick: () => n(r.get)
  }, t));
}
const zie = Lr("div", {
  $flex: "",
  justifyContent: "flex-end",
  gap: "$colGap"
}), Iie = Lr("button", {
  $reset: "",
  cursor: "pointer",
  borderRadius: "$xs",
  "&:hover": {
    backgroundColor: "$elevation3"
  }
}), Bie = ({
  label: n,
  opts: e
}) => {
  let t = typeof n == "string" && n.trim() === "" ? null : n, r = e;
  return typeof e.opts == "object" && (r.label !== void 0 && (t = e.label), r = e.opts), {
    label: t,
    opts: r
  };
};
function Hie(n) {
  const {
    label: e,
    opts: t
  } = Bie(n), r = cw();
  return Be.createElement(mp, {
    input: !!e
  }, e && Be.createElement(mm, null, e), Be.createElement(zie, null, Object.entries(t).map(([i, o]) => Be.createElement(Iie, {
    key: i,
    onClick: () => o(r.get)
  }, i))));
}
const Vie = Lr("canvas", {
  height: "$monitorHeight",
  width: "100%",
  display: "block",
  borderRadius: "$sm"
}), CH = 100;
function Gie(n, e) {
  n.push(e), n.length > CH && n.shift();
}
const Wie = le.forwardRef(function({
  initialValue: n
}, e) {
  const t = Ig("colors", "highlight3"), r = Ig("colors", "elevation2"), i = Ig("colors", "highlight1"), [o, l] = le.useMemo(() => [Of(i).alpha(0.4).toRgbString(), Of(i).alpha(0.1).toRgbString()], [i]), u = le.useRef([n]), h = le.useRef(n), p = le.useRef(n), y = le.useRef(), _ = le.useCallback((R, U) => {
    if (!R)
      return;
    const {
      width: L,
      height: A
    } = R, k = new Path2D(), F = L / CH, H = A * 0.05;
    for (let Y = 0; Y < u.current.length; Y++) {
      const ee = MR(u.current[Y], h.current, p.current), Z = F * Y, K = A - ee * (A - H * 2) - H;
      k.lineTo(Z, K);
    }
    U.clearRect(0, 0, L, A);
    const B = new Path2D(k);
    B.lineTo(F * (u.current.length + 1), A), B.lineTo(0, A), B.lineTo(0, 0);
    const j = U.createLinearGradient(0, 0, 0, A);
    j.addColorStop(0, o), j.addColorStop(1, l), U.fillStyle = j, U.fill(B), U.strokeStyle = r, U.lineJoin = "round", U.lineWidth = 14, U.stroke(k), U.strokeStyle = t, U.lineWidth = 2, U.stroke(k);
  }, [t, r, o, l]), [E, w] = Yee(_);
  return le.useImperativeHandle(e, () => ({
    frame: (R) => {
      (h.current === void 0 || R < h.current) && (h.current = R), (p.current === void 0 || R > p.current) && (p.current = R), Gie(u.current, R), y.current = requestAnimationFrame(() => _(E.current, w.current));
    }
  }), [E, w, _]), le.useEffect(() => () => cancelAnimationFrame(y.current), []), Be.createElement(Vie, {
    ref: E
  });
}), nI = (n) => Number.isFinite(n) ? n.toPrecision(2) : n.toString(), jie = le.forwardRef(function({
  initialValue: n
}, e) {
  const [t, r] = le.useState(nI(n));
  return le.useImperativeHandle(e, () => ({
    frame: (i) => r(nI(i))
  }), []), Be.createElement("div", null, t);
});
function rI(n) {
  return typeof n == "function" ? n() : n.current;
}
function $ie({
  label: n,
  objectOrFn: e,
  settings: t
}) {
  const r = le.useRef(), i = le.useRef(rI(e));
  return le.useEffect(() => {
    const o = window.setInterval(() => {
      var l;
      document.hidden || (l = r.current) === null || l === void 0 || l.frame(rI(e));
    }, t.interval);
    return () => window.clearInterval(o);
  }, [e, t.interval]), Be.createElement(mp, {
    input: !0
  }, Be.createElement(mm, {
    align: "top"
  }, n), t.graph ? Be.createElement(Wie, {
    ref: r,
    initialValue: i.current
  }) : Be.createElement(jie, {
    ref: r,
    initialValue: i.current
  }));
}
const Yie = ["type", "label", "key"], Xie = {
  [dp.BUTTON]: Fie,
  [dp.BUTTON_GROUP]: Hie,
  [dp.MONITOR]: $ie
}, qie = Be.memo(({
  path: n
}) => {
  const [e, {
    set: t,
    setSettings: r,
    disable: i,
    storeId: o,
    emitOnEditStart: l,
    emitOnEditEnd: u
  }] = qee(n);
  if (!e)
    return null;
  const {
    type: h,
    label: p,
    key: y
  } = e, _ = ao(e, Yie);
  if (h in dp) {
    const E = Xie[h];
    return Be.createElement(E, js({
      label: p,
      path: n
    }, _));
  }
  return h in m_ ? Be.createElement(Nie, js({
    key: o + n,
    type: h,
    label: p,
    storeId: o,
    path: n,
    valueKey: y,
    setValue: t,
    setSettings: r,
    disable: i,
    emitOnEditStart: l,
    emitOnEditEnd: u
  }, _)) : (nee(ys.UNSUPPORTED_INPUT, h, n), null);
});
function Kie({
  toggle: n,
  toggled: e,
  name: t
}) {
  return Be.createElement(Nee, {
    onClick: () => n()
  }, Be.createElement(f3, {
    toggled: e
  }), Be.createElement("div", null, t));
}
const Qie = ({
  name: n,
  path: e,
  tree: t
}) => {
  const r = cw(), i = _3(e, n), {
    collapsed: o,
    color: l
  } = r.getFolderSettings(i), [u, h] = le.useState(!o), p = le.useRef(null), y = Ig("colors", "folderWidgetColor"), _ = Ig("colors", "folderTextColor");
  return le.useLayoutEffect(() => {
    p.current.style.setProperty("--leva-colors-folderWidgetColor", l || y), p.current.style.setProperty("--leva-colors-folderTextColor", l || _);
  }, [l, y, _]), Be.createElement(RR, {
    ref: p
  }, Be.createElement(Kie, {
    name: n,
    toggled: u,
    toggle: () => h((E) => !E)
  }), Be.createElement(RH, {
    parent: i,
    tree: t,
    toggled: u
  }));
}, RH = Be.memo(({
  isRoot: n = !1,
  fill: e = !1,
  flat: t = !1,
  parent: r,
  tree: i,
  toggled: o
}) => {
  const {
    wrapperRef: l,
    contentRef: u
  } = Nre(o), h = cw(), p = ([_, E]) => {
    var w;
    return (tI(E) ? (w = h.getInput(E.path)) === null || w === void 0 ? void 0 : w.order : h.getFolderSettings(_3(r, _)).order) || 0;
  }, y = Object.entries(i).sort((_, E) => p(_) - p(E));
  return Be.createElement(VO, {
    ref: l,
    isRoot: n,
    fill: e,
    flat: t
  }, Be.createElement(G5, {
    ref: u,
    isRoot: n,
    toggled: o
  }, y.map(([_, E]) => tI(E) ? Be.createElement(qie, {
    key: E.path,
    valueKey: E.valueKey,
    path: E.path
  }) : Be.createElement(Qie, {
    key: _,
    name: _,
    path: r,
    tree: E
  }))));
}), Zie = Lr("div", {
  position: "relative",
  fontFamily: "$mono",
  fontSize: "$root",
  color: "$rootText",
  backgroundColor: "$elevation1",
  variants: {
    fill: {
      false: {
        position: "fixed",
        top: "10px",
        right: "10px",
        zIndex: 1e3,
        width: "$rootWidth"
      },
      true: {
        position: "relative",
        width: "100%"
      }
    },
    flat: {
      false: {
        borderRadius: "$lg",
        boxShadow: "$level1"
      }
    },
    oneLineLabels: {
      true: {
        [`${j5}`]: {
          gridTemplateColumns: "auto",
          gridAutoColumns: "minmax(max-content, 1fr)",
          gridAutoRows: "minmax($sizes$rowHeight), auto)",
          rowGap: 0,
          columnGap: 0,
          marginTop: "$rowGap"
        }
      }
    },
    hideTitleBar: {
      true: {
        $$titleBarHeight: "0px"
      },
      false: {
        $$titleBarHeight: "$sizes$titleBarHeight"
      }
    }
  },
  "&,*,*:after,*:before": {
    boxSizing: "border-box"
  },
  "*::selection": {
    backgroundColor: "$accent2"
  }
}), AH = 40, PR = Lr("i", {
  $flexCenter: "",
  width: AH,
  userSelect: "none",
  cursor: "pointer",
  "> svg": {
    fill: "$highlight1",
    transition: "transform 350ms ease, fill 250ms ease"
  },
  "&:hover > svg": {
    fill: "$highlight3"
  },
  variants: {
    active: {
      true: {
        "> svg": {
          fill: "$highlight2"
        }
      }
    }
  }
}), Jie = Lr("div", {
  display: "flex",
  alignItems: "stretch",
  justifyContent: "space-between",
  height: "$titleBarHeight",
  variants: {
    mode: {
      drag: {
        cursor: "grab"
      }
    }
  }
}), eae = Lr("div", {
  $flex: "",
  position: "relative",
  width: "100%",
  overflow: "hidden",
  transition: "height 250ms ease",
  color: "$highlight3",
  paddingLeft: "$md",
  [`> ${PR}`]: {
    height: 30
  },
  variants: {
    toggled: {
      true: {
        height: 30
      },
      false: {
        height: 0
      }
    }
  }
}), tae = Lr("input", {
  $reset: "",
  flex: 1,
  position: "relative",
  height: 30,
  width: "100%",
  backgroundColor: "transparent",
  fontSize: "10px",
  borderRadius: "$root",
  "&:focus": {},
  "&::placeholder": {
    color: "$highlight2"
  }
}), nae = Lr("div", {
  touchAction: "none",
  $flexCenter: "",
  flex: 1,
  "> svg": {
    fill: "$highlight1"
  },
  color: "$highlight1",
  variants: {
    drag: {
      true: {
        $draggable: "",
        "> svg": {
          transition: "fill 250ms ease"
        },
        "&:hover": {
          color: "$highlight3"
        },
        "&:hover > svg": {
          fill: "$highlight3"
        }
      }
    },
    filterEnabled: {
      false: {
        paddingRight: AH
      }
    }
  }
}), rae = Be.forwardRef(({
  setFilter: n,
  toggle: e
}, t) => {
  const [r, i] = le.useState(""), o = le.useMemo(() => L5(n, 250), [n]), l = () => {
    n(""), i("");
  }, u = (h) => {
    const p = h.currentTarget.value;
    e(!0), i(p);
  };
  return le.useEffect(() => {
    o(r);
  }, [r, o]), Be.createElement(Be.Fragment, null, Be.createElement(tae, {
    ref: t,
    value: r,
    placeholder: "[Open filter with CMD+SHIFT+L]",
    onPointerDown: (h) => h.stopPropagation(),
    onChange: u
  }), Be.createElement(PR, {
    onClick: () => l(),
    style: {
      visibility: r ? "visible" : "hidden"
    }
  }, Be.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "14",
    width: "14",
    viewBox: "0 0 20 20",
    fill: "currentColor"
  }, Be.createElement("path", {
    fillRule: "evenodd",
    d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z",
    clipRule: "evenodd"
  }))));
});
function iae({
  setFilter: n,
  onDrag: e,
  onDragStart: t,
  onDragEnd: r,
  toggle: i,
  toggled: o,
  title: l,
  drag: u,
  filterEnabled: h,
  from: p
}) {
  const [y, _] = le.useState(!1), E = le.useRef(null);
  le.useEffect(() => {
    var R, U;
    y ? (R = E.current) === null || R === void 0 || R.focus() : (U = E.current) === null || U === void 0 || U.blur();
  }, [y]);
  const w = fw(({
    offset: [R, U],
    first: L,
    last: A
  }) => {
    e({
      x: R,
      y: U
    }), L && t({
      x: R,
      y: U
    }), A && r({
      x: R,
      y: U
    });
  }, {
    filterTaps: !0,
    from: ({
      offset: [R, U]
    }) => [(p == null ? void 0 : p.x) || R, (p == null ? void 0 : p.y) || U]
  });
  return le.useEffect(() => {
    const R = (U) => {
      U.key === "L" && U.shiftKey && U.metaKey && _((L) => !L);
    };
    return window.addEventListener("keydown", R), () => window.removeEventListener("keydown", R);
  }, []), Be.createElement(Be.Fragment, null, Be.createElement(Jie, {
    mode: u ? "drag" : void 0
  }, Be.createElement(PR, {
    active: !o,
    onClick: () => i()
  }, Be.createElement(f3, {
    toggled: o,
    width: 12,
    height: 8
  })), Be.createElement(nae, js({}, u ? w() : {}, {
    drag: u,
    filterEnabled: h
  }), l === void 0 && u ? Be.createElement("svg", {
    width: "20",
    height: "10",
    viewBox: "0 0 28 14",
    xmlns: "http://www.w3.org/2000/svg"
  }, Be.createElement("circle", {
    cx: "2",
    cy: "2",
    r: "2"
  }), Be.createElement("circle", {
    cx: "14",
    cy: "2",
    r: "2"
  }), Be.createElement("circle", {
    cx: "26",
    cy: "2",
    r: "2"
  }), Be.createElement("circle", {
    cx: "2",
    cy: "12",
    r: "2"
  }), Be.createElement("circle", {
    cx: "14",
    cy: "12",
    r: "2"
  }), Be.createElement("circle", {
    cx: "26",
    cy: "12",
    r: "2"
  })) : l), h && Be.createElement(PR, {
    active: y,
    onClick: () => _((R) => !R)
  }, Be.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "20",
    viewBox: "0 0 20 20"
  }, Be.createElement("path", {
    d: "M9 9a2 2 0 114 0 2 2 0 01-4 0z"
  }), Be.createElement("path", {
    fillRule: "evenodd",
    d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a4 4 0 00-3.446 6.032l-2.261 2.26a1 1 0 101.414 1.415l2.261-2.261A4 4 0 1011 5z",
    clipRule: "evenodd"
  })))), Be.createElement(eae, {
    toggled: y
  }, Be.createElement(rae, {
    ref: E,
    setFilter: n,
    toggle: i
  })));
}
const aae = ["store", "hidden", "theme", "collapsed"];
function oae(n) {
  let {
    store: e,
    hidden: t = !1,
    theme: r,
    collapsed: i = !1
  } = n, o = ao(n, aae);
  const l = xH(() => Aee(r), [r]), [u, h] = le.useState(!i), p = typeof i == "object" ? !i.collapsed : u, y = le.useMemo(() => typeof i == "object" ? (_) => {
    typeof _ == "function" ? i.onChange(!_(!i.collapsed)) : i.onChange(!_);
  } : h, [i]);
  return !e || t ? null : Be.createElement(l3.Provider, {
    value: l
  }, Be.createElement(sae, js({
    store: e
  }, o, {
    toggled: p,
    setToggle: y,
    rootClass: l.className
  })));
}
const sae = Be.memo(({
  store: n,
  rootClass: e,
  fill: t = !1,
  flat: r = !1,
  neverHide: i = !1,
  oneLineLabels: o = !1,
  titleBar: l = {
    title: void 0,
    drag: !0,
    filter: !0,
    position: void 0,
    onDrag: void 0,
    onDragStart: void 0,
    onDragEnd: void 0
  },
  hideCopyButton: u = !1,
  toggled: h,
  setToggle: p
}) => {
  var y, _;
  const E = kre(n), [w, R] = le.useState(""), U = le.useMemo(() => Pie(E, w), [E, w]), [L, A] = X5(), k = i || E.length > 0, F = typeof l == "object" && l.title || void 0, H = typeof l == "object" && (y = l.drag) !== null && y !== void 0 ? y : !0, B = typeof l == "object" && (_ = l.filter) !== null && _ !== void 0 ? _ : !0, j = typeof l == "object" && l.position || void 0, Y = typeof l == "object" && l.onDrag || void 0, ee = typeof l == "object" && l.onDragStart || void 0, Z = typeof l == "object" && l.onDragEnd || void 0;
  return Be.useEffect(() => {
    A({
      x: j == null ? void 0 : j.x,
      y: j == null ? void 0 : j.y
    });
  }, [j, A]), Ree(), Be.createElement(I5.Provider, {
    value: {
      hideCopyButton: u
    }
  }, Be.createElement(Zie, {
    ref: L,
    className: e,
    fill: t,
    flat: r,
    oneLineLabels: o,
    hideTitleBar: !l,
    style: {
      display: k ? "block" : "none"
    }
  }, l && Be.createElement(iae, {
    onDrag: (K) => {
      A(K), Y == null || Y(K);
    },
    onDragStart: (K) => ee == null ? void 0 : ee(K),
    onDragEnd: (K) => Z == null ? void 0 : Z(K),
    setFilter: R,
    toggle: (K) => p((fe) => K ?? !fe),
    toggled: h,
    title: F,
    drag: H,
    filterEnabled: B,
    from: j
  }), k && Be.createElement(z5.Provider, {
    value: n
  }, Be.createElement(RH, {
    isRoot: !0,
    fill: t,
    flat: r,
    tree: U,
    toggled: h
  }))));
}), lae = ["isRoot"];
let UR = !1, t_ = null;
function DH(n) {
  let {
    isRoot: e = !1
  } = n, t = ao(n, lae);
  return le.useEffect(() => (UR = !0, !e && t_ && (t_.remove(), t_ = null), () => {
    e || (UR = !1);
  }), [e]), Be.createElement(oae, js({
    store: x3
  }, t));
}
function uae(n) {
  le.useEffect(() => {
    n && !UR && (t_ || (t_ = document.getElementById("leva__root") || Object.assign(document.createElement("div"), {
      id: "leva__root"
    }), document.body && (document.body.appendChild(t_), _ee(Be.createElement(DH, {
      isRoot: !0
    }), t_))), UR = !0);
  }, [n]);
}
function cae(n, e, t, r, i) {
  let o, l, u, h, p;
  return typeof n == "string" ? (l = n, o = e, Array.isArray(t) ? p = t : t && ("store" in t ? (h = t, p = r) : (u = t, Array.isArray(r) ? p = r : (h = r, p = i)))) : (o = n, Array.isArray(e) ? p = e : (h = e, p = t)), {
    schema: o,
    folderName: l,
    folderSettings: u,
    hookSettings: h,
    deps: p || []
  };
}
function fae(n, e, t, r, i) {
  const {
    folderName: o,
    schema: l,
    folderSettings: u,
    hookSettings: h,
    deps: p
  } = cae(n, e, t, r, i), y = typeof l == "function", _ = le.useRef(!1), E = le.useRef(!0), w = xH(() => {
    _.current = !0;
    const fe = typeof l == "function" ? l() : l;
    return o ? {
      [o]: pT(fe, u)
    } : fe;
  }, p), R = !(h != null && h.store);
  uae(R);
  const [U] = le.useState(() => (h == null ? void 0 : h.store) || x3), [L, A] = le.useMemo(() => U.getDataFromSchema(w), [U, w]), [k, F, H, B, j] = le.useMemo(() => {
    const fe = [], se = [], he = {}, me = {}, Ee = {};
    return Object.values(A).forEach(({
      path: be,
      onChange: we,
      onEditStart: de,
      onEditEnd: ye,
      transient: X
    }) => {
      fe.push(be), we ? (he[be] = we, X || se.push(be)) : se.push(be), de && (me[be] = de), ye && (Ee[be] = ye);
    }), [fe, se, he, me, Ee];
  }, [A]), Y = le.useMemo(() => U.orderPaths(k), [k, U]), ee = Fre(U, F, L), Z = le.useCallback((fe) => {
    const se = Object.entries(fe).reduce((he, [me, Ee]) => Object.assign(he, {
      [A[me].path]: Ee
    }), {});
    U.set(se, !1);
  }, [U, A]), K = le.useCallback((fe) => U.get(A[fe].path), [U, A]);
  return le.useEffect(() => {
    const fe = !E.current && _.current;
    return U.addData(L, fe), E.current = !1, _.current = !1, () => U.disposePaths(Y);
  }, [U, Y, L]), le.useEffect(() => {
    const fe = [];
    return Object.entries(H).forEach(([se, he]) => {
      he(U.get(se), se, Nr({
        initial: !0,
        get: U.get
      }, U.getInput(se)));
      const me = U.useStore.subscribe((Ee) => {
        const be = Ee.data[se];
        return [be.disabled ? void 0 : be.value, be];
      }, ([Ee, be]) => he(Ee, se, Nr({
        initial: !1,
        get: U.get
      }, be)), {
        equalityFn: sw
      });
      fe.push(me);
    }), () => fe.forEach((se) => se());
  }, [U, H]), le.useEffect(() => {
    const fe = [];
    return Object.entries(B).forEach(([se, he]) => fe.push(U.subscribeToEditStart(se, he))), Object.entries(j).forEach(([se, he]) => fe.push(U.subscribeToEditEnd(se, he))), () => fe.forEach((se) => se());
  }, [B, j, U]), y ? [ee, Z, K] : ee;
}
Xg(fm.SELECT, dte);
Xg(fm.IMAGE, vie);
Xg(fm.NUMBER, nte);
Xg(fm.COLOR, Xre);
Xg(fm.STRING, xte);
Xg(fm.BOOLEAN, Rte);
Xg(fm.INTERVAL, wie);
Xg(fm.VECTOR3D, Kre);
Xg(fm.VECTOR2D, iie);
const iI = (n, e, t, r, i) => {
  const o = o4.degToRad(t), l = 2 * Math.atan(Math.tan(o / 2) * r), u = i * e / (2 * Math.tan(o / 2)), h = i * n / (2 * Math.tan(l / 2));
  return new $t(h, u);
}, dae = ({ file: n }) => {
  const [
    {
      // resetPosition,
      maxSplats: e,
      rotationAxis: t,
      flipScene: r,
      xPos: i,
      yPos: o,
      zPos: l
      // xRot,
      // yRot,
      // zRot,
    },
    u
  ] = fae(() => ({
    quality: pT({
      maxSplats: { value: 1e6, min: 1e4, max: 1e9, step: 1e5 }
    }),
    position: pT({
      xPos: { value: 0, step: 1 },
      yPos: { value: 0, step: 1 },
      zPos: { value: 0, step: 1 }
    }),
    rotation: pT({
      xRot: { value: 0, min: -180, step: 0.1 },
      yRot: { value: 0, min: -180, step: 0.1 },
      zRot: { value: 0, min: -180, step: 0.1 }
    }),
    scene: pT({
      rotationAxis: { value: "Z", options: ["X", "Y", "Z"] },
      flipScene: !1
    }),
    // scene: folder({
    //   // ' ': {value: 'Choose vertical axis', editable: false},
    //   // vertical: 'x',
    // ' ': buttonGroup({
    //     '0.25x': () => set({ vertical: 0.25 }),
    //     '0.5x': () => set({ vertical: 0.5 }),
    //     '1x': () => set({ vertical: 1 }),
    //     '2x': () => set({ vertical: 2 }),
    //     '3x': () => set({ vertical: 3 }),
    //   }),
    //   // 'X axis': button(() => set({vertical: 'x'}), {disabled: vertical === 'x'}),
    //   // 'Y axis': button(() => set({vertical: 'y'}), {disabled: vertical === 'y'}),
    //   // 'Z axis': button(() => set({vertical: 'z'}), {disabled: vertical === 'z'}),
    // }),
    "Reset position": Oie(() => {
      E.position.set(0, 0, 100), E.rotation.set(0, 0, 1), E.lookAt(0, 0, 0);
    })
  })), h = le.useRef(null), [p] = le.useState(() => new Eq()), {
    size: { width: y, height: _ },
    camera: E,
    viewport: { dpr: w }
    // raycaster,
    // mouse,
  } = sm(), [R] = le.useState({
    viewport: {
      value: new $t(y * w, _ * w)
    },
    focal: {
      // @ts-expect-error properties do exist
      value: iI(y, _, E.fov, E.aspect, w)
    }
  });
  le.useEffect(() => {
    R.focal.value = iI(
      y,
      _,
      // @ts-expect-error properties do exist
      E.fov,
      // @ts-expect-error properties do exist
      E.aspect,
      w
    ), R.viewport.value = new $t(y * w, _ * w);
  }, [y, _, E.fov, E.aspect, w]);
  const [U, L] = le.useState({
    index: new Uint16Array([0, 1, 2, 2, 3, 0]),
    position: new Float32Array([1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0]),
    color: new Float32Array([1, 0, 1, 1, 1, 1, 0, 1]),
    quat: new Float32Array([0, 0, 0, 1, 0, 0, 0, 1]),
    scale: new Float32Array([1, 1, 1, 2, 0.5, 0.5]),
    center: new Float32Array([0, 0, 0, 2, 0, 0])
  });
  YP(
    (F) => {
      const H = h.current;
      if (H == null)
        return;
      const B = F.camera, { x: j, y: Y, z: ee } = B.position, { x: Z, y: K, z: fe } = B.rotation;
      u({ xPos: j }), u({ yPos: Y }), u({ zPos: ee }), u({ xRot: Z * 180 / Math.PI }), u({ yRot: K * 180 / Math.PI }), u({ zRot: fe * 180 / Math.PI });
      const se = new ri().multiply(B.projectionMatrix).multiply(B.matrixWorldInverse).multiply(H.matrixWorld);
      p.postMessage({ view: se.elements, maxSplats: e });
    }
  ), le.useEffect(() => (p.onmessage = (F) => {
    const {
      quat: H,
      scale: B,
      center: j,
      color: Y
      /*viewProj*/
    } = F.data;
    L((ee) => ({ ...ee, quat: H, scale: B, center: j, color: Y }));
  }, () => {
    p.onmessage = null;
  })), le.useEffect(() => {
    let B = -1, j = 0;
    j += (n == null ? void 0 : n.length) || 0, 0 > B && (p.postMessage({
      buffer: n == null ? void 0 : n.buffer,
      vertexCount: Math.floor(j / 32)
    }), B = 0);
  }, [n, p]), le.useEffect(() => {
    E.position.set(i, o, l);
  }, [i, o, l, E]);
  const A = le.useCallback(
    (F) => {
      F.needsUpdate = !0;
    },
    []
  );
  le.useEffect(() => {
    E.up.set(
      t === "X" ? 1 : 0,
      t === "Y" ? 1 : 0,
      t === "Z" ? 1 : 0
    ), u({ flipScene: !1 });
  }, [t]), le.useEffect(() => {
    E.position.set(
      t === "X" ? 100 : 0,
      t === "Y" ? 100 : 0,
      t === "Z" ? 100 : 0
    ), E.lookAt(0, 0, 0);
  }, [n]), le.useEffect(() => {
    r ? (E.up.set(
      t === "X" ? -1 : 0,
      t === "Y" ? -1 : 0,
      t === "Z" ? -1 : 0
    ), u({ flipScene: !0 })) : (E.up.set(
      t === "X" ? 1 : 0,
      t === "Y" ? 1 : 0,
      t === "Z" ? 1 : 0
    ), u({ flipScene: !1 }));
  }, [r, E, u]);
  const k = Math.min(U.quat.length / 4, e);
  return (
    // <mesh position={[0, 0, 0]} onPointerDown={(e) => console.log('onClick mesh: ', e)}>
    //     <boxGeometry attach="geometry" args={[10, 10, 10]} />
    //     <meshStandardMaterial attach="material" color="hotpink" wireframe />
    //   </mesh>
    /* @__PURE__ */ es.jsxs(
      "mesh",
      {
        ref: h,
        renderOrder: 10,
        children: [
          /* @__PURE__ */ es.jsxs("group", { children: [
            /* @__PURE__ */ es.jsx("axesHelper", { args: [5] }),
            /* @__PURE__ */ es.jsx(mL, { position: [2, 0, 0], fontSize: 0.4, color: "red", children: "X" }),
            /* @__PURE__ */ es.jsx(mL, { position: [0, 2, 0], fontSize: 0.4, color: "green", children: "Y" }),
            /* @__PURE__ */ es.jsx(mL, { position: [0, 0, 2], fontSize: 0.4, color: "blue", children: "Z" })
          ] }),
          /* @__PURE__ */ es.jsxs(
            "instancedBufferGeometry",
            {
              instanceCount: k,
              children: [
                /* @__PURE__ */ es.jsx(
                  "bufferAttribute",
                  {
                    attach: "index",
                    onUpdate: A,
                    array: U.index,
                    itemSize: 1,
                    count: 6
                  }
                ),
                /* @__PURE__ */ es.jsx(
                  "bufferAttribute",
                  {
                    attach: "attributes-position",
                    onUpdate: A,
                    array: U.position,
                    itemSize: 3,
                    count: 4
                  }
                ),
                /* @__PURE__ */ es.jsx(
                  "instancedBufferAttribute",
                  {
                    attach: "attributes-color",
                    onUpdate: A,
                    array: U.color,
                    itemSize: 4,
                    count: k
                  }
                ),
                /* @__PURE__ */ es.jsx(
                  "instancedBufferAttribute",
                  {
                    attach: "attributes-quat",
                    onUpdate: A,
                    array: U.quat,
                    itemSize: 4,
                    count: k
                  }
                ),
                /* @__PURE__ */ es.jsx(
                  "instancedBufferAttribute",
                  {
                    attach: "attributes-scale",
                    onUpdate: A,
                    array: U.scale,
                    itemSize: 3,
                    count: k
                  }
                ),
                /* @__PURE__ */ es.jsx(
                  "instancedBufferAttribute",
                  {
                    attach: "attributes-center",
                    onUpdate: A,
                    array: U.center,
                    itemSize: 3,
                    count: k
                  }
                )
              ]
            },
            k
          ),
          /* @__PURE__ */ es.jsx(
            "rawShaderMaterial",
            {
              uniforms: R,
              fragmentShader: Tq,
              vertexShader: bq,
              depthTest: !0,
              depthWrite: !1,
              transparent: !0
            }
          )
        ]
      }
    )
  );
};
var hae = function() {
};
function pae(n) {
  for (var e = [], t = 1; t < arguments.length; t++)
    e[t - 1] = arguments[t];
  n && n.addEventListener && n.addEventListener.apply(n, e);
}
function mae(n) {
  for (var e = [], t = 1; t < arguments.length; t++)
    e[t - 1] = arguments[t];
  n && n.removeEventListener && n.removeEventListener.apply(n, e);
}
var vae = typeof window < "u", gae = vae ? window : null, aI = function(n) {
  return !!n.addEventListener;
}, oI = function(n) {
  return !!n.on;
}, yae = function(n, e, t, r) {
  t === void 0 && (t = gae), le.useEffect(function() {
    if (e && t)
      return aI(t) ? pae(t, n, e, r) : oI(t) && t.on(n, e, r), function() {
        aI(t) ? mae(t, n, e, r) : oI(t) && t.off(n, e, r);
      };
  }, [n, e, t, JSON.stringify(r)]);
};
const Sae = yae;
var _ae = function(n) {
  return typeof n == "function" ? n : typeof n == "string" ? function(e) {
    return e.key === n;
  } : n ? function() {
    return !0;
  } : function() {
    return !1;
  };
}, xae = function(n, e, t, r) {
  e === void 0 && (e = hae), t === void 0 && (t = {}), r === void 0 && (r = [n]);
  var i = t.event, o = i === void 0 ? "keydown" : i, l = t.target, u = t.options, h = le.useMemo(function() {
    var p = _ae(n), y = function(_) {
      if (p(_))
        return e(_);
    };
    return y;
  }, r);
  Sae(o, h, l, u);
};
const sI = xae;
var Eae = function(n) {
  var e = le.useState([!1, null]), t = e[0], r = e[1];
  return sI(n, function(i) {
    return r([!0, i]);
  }, { event: "keydown" }, [t]), sI(n, function(i) {
    return r([!1, i]);
  }, { event: "keyup" }, [t]), t;
};
const bae = Eae, Tae = ({ movementSpeed: n = 0.3 }) => {
  const { camera: e } = sm(), t = le.useRef(new Re()), i = bae((u) => u.key === "Shift")[0] ? 4 * n : n;
  YP(() => {
    const u = t.current.clone().applyQuaternion(e.quaternion);
    e.position.add(u.multiplyScalar(i));
  });
  const o = (u) => {
    switch (u.code) {
      case "KeyW":
        t.current.z = -i;
        break;
      case "KeyS":
        t.current.z = i;
        break;
      case "KeyA":
        t.current.x = -i;
        break;
      case "KeyD":
        t.current.x = i;
        break;
      case "KeyR":
        t.current.y = i;
        break;
      case "KeyF":
        t.current.y = -i;
        break;
    }
  }, l = (u) => {
    switch (u.code) {
      case "KeyW":
      case "KeyS":
        t.current.z = 0;
        break;
      case "KeyA":
      case "KeyD":
        t.current.x = 0;
        break;
      case "KeyR":
      case "KeyF":
        t.current.y = 0;
        break;
    }
  };
  return le.useEffect(() => (window.addEventListener("keydown", o), window.addEventListener("keyup", l), () => {
    window.removeEventListener("keydown", o), window.removeEventListener("keyup", l);
  }), []), null;
}, wae = (n) => {
  var A;
  const e = new Uint8Array(n), t = new TextDecoder().decode(e.slice(0, 1024 * 10)), r = `end_header
`, i = t.indexOf(r);
  if (i < 0)
    throw new Error("Unable to read .ply file header");
  const o = parseInt(
    (A = /element vertex (\d+)\n/.exec(t)) == null ? void 0 : A[1]
  );
  console.log("Vertex Count", o);
  let l = 0;
  const u = {}, h = {}, p = {
    double: "getFloat64",
    int: "getInt32",
    uint: "getUint32",
    float: "getFloat32",
    short: "getInt16",
    ushort: "getUint16",
    uchar: "getUint8"
  };
  for (const k of t.slice(0, i).split(`
`).filter((F) => F.startsWith("property "))) {
    const [, F, H] = k.split(" "), B = p[F] || "getInt8";
    h[H] = B, u[H] = l, l += parseInt(B.replace(/[^\d]/g, "")) / 8;
  }
  console.log("Bytes per row", l, h, u);
  const y = new DataView(
    n,
    i + r.length
  );
  let _ = 0;
  const E = new Proxy(
    {},
    {
      get(k, F) {
        if (!h[F])
          throw new Error(F + " not found");
        return y[h[F]](_ * l + u[F], !0);
      }
    }
  );
  console.time("calculate importance");
  const w = new Float32Array(o), R = new Uint32Array(o);
  for (_ = 0; _ < o; _++) {
    if (R[_] = _, !h.scale_0)
      continue;
    const k = Math.exp(E.scale_0) * Math.exp(E.scale_1) * Math.exp(E.scale_2), F = 1 / (1 + Math.exp(-E.opacity));
    w[_] = k * F;
  }
  console.timeEnd("calculate importance"), console.time("sort"), R.sort((k, F) => w[F] - w[k]), console.timeEnd("sort");
  const U = 3 * 4 + 3 * 4 + 4 + 4, L = new ArrayBuffer(U * o);
  console.time("build buffer");
  for (let k = 0; k < o; k++) {
    _ = R[k];
    const F = new Float32Array(L, k * U, 3), H = new Float32Array(L, k * U + 4 * 3, 3), B = new Uint8ClampedArray(
      L,
      k * U + 4 * 3 + 4 * 3,
      4
    ), j = new Uint8ClampedArray(
      L,
      k * U + 4 * 3 + 4 * 3 + 4,
      4
    );
    if (h.scale_0) {
      const Y = Math.sqrt(
        E.rot_0 ** 2 + E.rot_1 ** 2 + E.rot_2 ** 2 + E.rot_3 ** 2
      );
      j[0] = E.rot_0 / Y * 128 + 128, j[1] = E.rot_1 / Y * 128 + 128, j[2] = E.rot_2 / Y * 128 + 128, j[3] = E.rot_3 / Y * 128 + 128, H[0] = Math.exp(E.scale_0), H[1] = Math.exp(E.scale_1), H[2] = Math.exp(E.scale_2);
    } else
      H[0] = 0.01, H[1] = 0.01, H[2] = 0.01, j[0] = 255, j[1] = 0, j[2] = 0, j[3] = 0;
    if (F[0] = E.x, F[1] = E.y, F[2] = E.z, h.f_dc_0) {
      const Y = 0.28209479177387814;
      B[0] = (0.5 + Y * E.f_dc_0) * 255, B[1] = (0.5 + Y * E.f_dc_1) * 255, B[2] = (0.5 + Y * E.f_dc_2) * 255;
    } else
      B[0] = E.red, B[1] = E.green, B[2] = E.blue;
    h.opacity ? B[3] = 1 / (1 + Math.exp(-E.opacity)) * 255 : B[3] = 255;
  }
  return console.timeEnd("build buffer"), L;
}, Mae = () => {
  const [n, e] = le.useState(!1);
  return {
    loading: n,
    readFile: async (r, i) => {
      let o = new FileReader();
      o.onload = () => {
        const l = r == null ? void 0 : r.name.split("."), h = (l == null ? void 0 : l[l.length - 1]) === "ply" ? wae(o == null ? void 0 : o.result) : o == null ? void 0 : o.result;
        i == null || i(h);
      }, o.onloadstart = () => {
        e(!0);
      }, o.onloadend = () => {
        e(!1), o = null;
      }, r && o.readAsArrayBuffer(r);
    }
  };
}, Cae = "https://main--majestic-pothos-b9b3cd.netlify.app/", Rae = Cae, zae = ({ file: n, fileUrl: e, isPremium: t = !0 }) => {
  const [r, i] = le.useState(), [o, l] = le.useState(), { loading: u, readFile: h } = Mae(), { getRootProps: p, getInputProps: y } = y3({
    onDrop: async (_) => {
      const E = _[0];
      await h(E, () => {
        l(E);
      });
    },
    noClick: !0
  });
  return le.useEffect(() => {
    (async () => h(o, (E) => {
      const w = new Uint8Array(E);
      i(w);
    }))();
  }, [o]), le.useEffect(() => {
    l(n);
  }, [n]), le.useEffect(() => {
    (async () => {
      if (e) {
        const E = await fetch(e, {
          mode: "cors",
          credentials: "omit"
        });
        if (E.status != 200 || E.body == null || E.headers == null || E.headers.get("content-length") == null)
          throw new Error(E.status + " Unable to load " + E.url);
        const w = await E.blob(), R = new File([w], "filename.ext", { type: w.type });
        l(R);
      }
    })();
  }, [e]), /* @__PURE__ */ es.jsxs(
    "div",
    {
      className: "bg-gray-200 h-100 p-0 relative flex h-screen",
      ...p(),
      children: [
        /* @__PURE__ */ es.jsx(
          DH,
          {
            titleBar: {
              drag: !0,
              position: { x: -430, y: 0 }
            },
            hidden: !t
          }
        ),
        u && /* @__PURE__ */ es.jsx("div", { className: "!absolute z-10 left-0 right-0 top-0 bottom-0 fade-in bg-gray-900 flex items-center justify-center opacity-80", children: /* @__PURE__ */ es.jsx(
          "div",
          {
            className: "inline-block !absolute h-24 w-24 animate-spin rounded-full border-8 border-current border-r-transparent align-[-0.125em] text-gray-400 motion-reduce:animate-[spin_1s_linear_infinite]",
            role: "status"
          }
        ) }),
        o ? /* @__PURE__ */ es.jsxs(xq, { className: "h-full w-full bg-black", gl: { antialias: !0 }, children: [
          /* @__PURE__ */ es.jsx(Tae, {}),
          /* @__PURE__ */ es.jsx(yQ, { enableDamping: !1 }),
          /* @__PURE__ */ es.jsx(dae, { file: r })
        ] }) : /* @__PURE__ */ es.jsx(
          "img",
          {
            src: `${Rae}death-star.jpg`,
            style: { height: "100%", width: "100%", objectFit: "cover" }
          }
        ),
        /* @__PURE__ */ es.jsx(
          "input",
          {
            id: "dropzone-file",
            type: "file",
            className: "hidden",
            ...y()
          }
        )
      ]
    }
  );
};
export {
  zae as GsplatViewer,
  Mae as useFileReader
};
